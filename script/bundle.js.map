{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/render/WebGLRenderer.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/render/CanvasRenderer.js","webpack:///./script/scenes/TitleScene.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/object/NOOP.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/render/Render.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/textstyle/MeasureText.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/const.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/textstyle/TextStyle.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/canvastext/DrawMethods.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/struct/Stack.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/pool.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/penmanger/Pen.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/object/Clear.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/object/Clone.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/penmanger/PenManager.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/hitareamanager/HitAreaManager.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/canvastext/SetInteractive.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/canvastext/WrapText.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/canvastext/CanvasText.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/imagemanager/ImageManager.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/imagemanager/GetGlobImageManager.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/Text.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/tagtext/Parser.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/tagtext/TagText.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/tagtext/Creator.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/tagtext.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/tagtext/Factory.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/eventemitter/EventEmitterMethods.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/system/IsSceneObject.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/system/GetSceneObject.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/behaviors/texttyping/TextTyping.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/texttyping.js","webpack:///./script/TileGenerationBehavior.js","webpack:///./script/TileState.js","webpack:///./script/LevelManifest.js","webpack:///./script/Utility.js","webpack:///./script/TileType.js","webpack:///./script/TileGrid.js","webpack:///./script/Tile.js","webpack:///./script/scenes/RoundScene.js","webpack:///./script/ActionQueue.js","webpack:///./script/ScoreDisplay.js","webpack:///./script/Timer.js","webpack:///./script/DialogManager.js","webpack:///./script/DialogScript.js","webpack:///./script/Guide.js","webpack:///./script/scenes/RoundTransitionScene.js","webpack:///./script/main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Utils","Phaser","Renderer","WebGL","renderer","src","interpolationPercentage","camera","parentMatrix","width","height","frame","getTint","getTintAppendFloatAlpha","this","pipeline","batchTexture","glTexture","x","y","style","resolution","scaleX","scaleY","rotation","flipX","flipY","scrollFactorX","scrollFactorY","displayOriginX","displayOriginY","_tintTL","alpha","_alphaTL","_tintTR","_alphaTR","_tintBL","_alphaBL","_tintBR","_alphaBR","_isTinted","tintFill","batchSprite","super","load","image","self","add","flashBackdropGraphics","graphics","fillStyle","color","setAlpha","flashBackdrop","Geom","Rectangle","fillRectShape","title","setScale","startBtn","setInteractive","cursor","startBtnOverlay","setTintFill","on","scene","start","level","introTimeline","tweens","createTimeline","delay","targets","duration","ease","play","renderWebGL","renderCanvas","CanvasPool","Display","Canvas","textStyle","canvas","context","getContext","syncFont","Math","ceil","measureText","testString","baselineX","baseline","baselineY","fillRect","font","_font","textBaseline","fillText","output","ascent","descent","fontSize","getImageData","remove","j","imagedata","data","pixels","length","line","idx","stop","NO_NEWLINE","RAW_NEWLINE","WRAPPED_NEWLINE","NO_WRAP","WORD_WRAP","CHAR_WRAP","SPLITREGEXP","GetAdvancedValue","Objects","GetValue","propertyMap","backgroundColor","fontFamily","fontStyle","stroke","strokeThickness","shadowOffsetX","shadowOffsetY","shadowColor","shadowBlur","shadowStroke","shadowFill","underlineColor","underlineThickness","underlineOffset","halign","valign","maxLines","fixedWidth","fixedHeight","lineSpacing","rtl","wrapMode","wrapWidth","WRAPMODE","none","word","char","character","text","parent","setStyle","metrics","updateText","undefined","wrap","toString","fill","update","strokeStyle","lineWidth","lineCap","lineJoin","enabled","recalculateMetrics","newFont","family","size","string","thickness","blur","offset","toLowerCase","max","getTextMetrics","startX","startY","boxWidth","boxHeight","penManager","hitAreaManager","clear","save","drawBackground","defatultStyle","startXOffset","startYOffset","drawLinesNum","drawLineStartIdx","drawLineEndIdx","offsetX","offsetY","lineHeight","lines","totalLinesNum","floor","lineIdx","getLineWidth","pens","penIdx","pensLen","drawPen","restore","pen","curStyle","parser","propToContextStyle","prop","buildFont","syncStyle","drawUnderline","isTextPen","drawText","isImagePen","drawImage","img","hasAreaMarker","area","clearRect","autoRound","round","savedLineCap","beginPath","moveTo","lineTo","syncShadow","strokeText","imgKey","imageManager","imgData","getFrame","left","source","cutX","cutY","cutWidth","cutHeight","items","pop","push","arr","apply","config","resetFromJSON","newLineMode","startIndex","txt","len","rawTextLength","obj","Array","isArray","out","objIsArray","GetFastValue","PensPool","LinesPool","maxLinesWidth","tagToText","tagToTextScope","freePens","pushMultiple","PEN_CONFIG","addPen","addTextPen","previousPen","lastPen","lastX","endIndex","lastLine","targetPenManager","li","llen","pi","plen","getLineEndIndex","hasLastPen","w","maxW","result","plainText","end","penTxt","penStartIdx","penEndIdx","currentProp","previousProp","wrapText","substring","RectanglePool","hitAreas","rectangle","setTo","hitArea","cnt","contains","scaleCanvas","rotateCanvas","translateCanvas","lineStyle","strokeRect","FireEvent","eventName","pointer","localX","localY","emit","event","splitRegExp","WRAP_RESULT","newline","getTextWidth","retLines","remainWidth","split","linesLen","tokenArray","token","textWidth","currLineWidth","curLineText","lineText","tokenLen","pensPool","newPenManager","_tmpPenManager","destroy","curProp","wrapLines","cursorX","cursorY","match","splitText","tagTextToProp","imgWidth","getOuterWidth","addNewLinePen","addImagePen","jLen","linesCount","getMaxLineWidth","desplayLinesCount","linesHeight","propToTagText","retPenManager","copyPenManager","updatePenManager","getSliceTagText","tmpPenManager","ret","copy","methods","assign","DrawMethods","globImageManager","textureManager","images","_add","textureKey","frameKey","frameWidth","frameHeight","right","exists","AddToDOM","DOM","GameObject","GameObjects","RemoveFromDOM","PensPools","type","sys","game","setPosition","setOrigin","initPipeline","align","_text","padding","top","bottom","dirty","_crop","resetCropObject","texture","textures","addCanvas","gl","deleteTexture","canvasText","setPadding","setText","events","dir","direction","display","originX","join","setFont","setFontFamily","setFontSize","setFontStyle","setFixedSize","setBackgroundColor","setFill","setColor","setStroke","setShadow","setShadowOffset","setShadowColor","setShadowBlur","setShadowStroke","setShadowFill","setWrapMode","setWrapWidth","setHAlign","setLineSpacing","setResolution","setMaxLines","runWrap","textHeight","linesWidth","h","updateDisplayOrigin","setSize","scale","draw","canvasToTexture","input","customHitArea","Components","ToJSON","toJSON","shape","callback","dropZone","getText","getPlainText","getPenManager","drawBounds","Class","mixin","Alpha","BlendMode","ComputedSize","Crop","Depth","Flip","GetBounds","Mask","Origin","Pipeline","ScrollFactor","Tint","Transform","Visible","Render","GETPROP_RESULT","prevProp","STYLE_RESULT","styleToProp","k","v","slen","isEmpty","thinkness","parseInt","replace","shadow","u","RE_SPACE","RE_SPLITTEXT","RE_CLASS_HEADER","RE_CLASS","RE_STYLE_HEADER","RE_STYLE","tags","innerMatch","charIdx","totalLen","matchStart","exec","lastIndex","test","propOut","_class","_style","defaultStyle","underline","isTextTag","tagName","tag","Parser","addTag","preDestroy","BuildGameObject","GameObjectFactory","register","gameObject","existing","GameObjectCreator","content","addToScene","eventEmitter","EventEmitterClass","Events","EventEmitter","_privateEE","_eventEmitter","shutdown","arguments","once","off","addListener","removeListener","removeAllListeners","listenerCount","listeners","SceneClass","Scene","setEventEmitter","timer","boot","setTypeMode","setTypeSpeed","setTextCallback","setTextCallbackScope","typingIdx","transferText","textLen","insertIdx","elapsed","getTimer","typeMode","speed","destroyEventEmitter","freeTimer","TYPEMODE","startIdx","timerStartAt","setTypingContent","startTimer","newText","concat","isTyping","showAllText","paused","getTextLength","getTypingString","isLastChar","typeIdx","endIdx","getSubString","midIdx","lowerResult","lowerLen","upperResult","upperLen","startAt","time","addEvent","loop","onTyping","callbackScope","slice","EventEmitterMethods","score","behavior","TileGenerationBehavior","handler","state","tileGrid","LevelManifest","tileGenerationBehavior","getRandomItem","random","imageKey","tileGridWidth","tileGridHeight","tileSize","onTileSelect","onTileMatch","queue","tileImageContainer","playAreaOffset","createTile","getTileType","container","forEachTile","tile","maskShape","make","mask","Masks","GeometryMask","matchedTiles","getMatches","destroys","forEach","Promise","all","TileState","drops","closestY","closestTile","getTileDrop","forEachPlayableTile","adjustedY","firstTile","secondTile","firstTileX","firstTileY","firstTileGridX","tileGridX","firstTileGridY","tileGridY","secondTileX","secondTileY","secondTileGridX","secondTileGridY","firstSwap","updatePosition","secondSwap","targetGridX","targetGridY","isPlayable","targetTileType","tileType","matchedXTiles","matchedYTiles","currX","currTile","currY","isActivated","isDestroying","clearTint","resolve","reject","onComplete","fadeOutCover","particleGraphics","explodeParticleGraphics","explodeParticle","Circle","Between","fillCircleShape","index","xSign","ySign","getTileX","getTileY","aboveTile","belowTile","leftTile","rightTile","TileType","filter","map","isAwaitingRoundTransition","selectedTiles","scoreDisplay","guide","comboCount","totalMatches","queuedActions","currentAction","shift","action","then","TileGrid","scoreText","comboText","updateScore","timerSeconds","seconds","isPaused","tick","minutes","script","introMessages","getDisplayTileMatchMessages","getGameOverMessages","getScript","queuedMessages","isBlockingGameplay","endDialogueMarkerGraphics","speechBubbleGraphics","fillRoundedRect","fillTriangle","hideEndDialogueMarker","endDialogueMarker","repeat","yoyo","speechBubbleTextStyle","exclamation","speechBubbleText","speechBubbleTextTyping","onMessageComplete","props","queueMessages","messages","progressDialogue","showEndDialogueMarker","message","convertDialogToTagText","setVisible","styles","className","currClass","currChar","isStyleToken","some","targetStyle","find","nextLevel","handleSpecialLevelBehavior","displayGameOverMessage","isLevelComplete","isActionRunning","hasActions","next","canSelect","deactivate","activate","selectedTile","xDiff","abs","yDiff","firstSelectedTile","secondSelectedTile","swapTiles","hasMatches","updateCombo","AUTO","TitleScene","RoundScene","RoundTransitionScene","Game"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Utils = Phaser.Renderer.WebGL.Utils;\r\n\r\n/**\r\n * Renders this Game Object with the WebGL Renderer to the given Camera.\r\n * The object will not render if any of its renderFlags are set or it is being actively filtered out by the Camera.\r\n * This method should not be called directly. It is a utility function of the Render module.\r\n *\r\n * @method Phaser.GameObjects.Text#renderWebGL\r\n * @since 3.0.0\r\n * @private\r\n *\r\n * @param {Phaser.Renderer.WebGL.WebGLRenderer} renderer - A reference to the current active WebGL renderer.\r\n * @param {Phaser.GameObjects.Text} src - The Game Object being rendered in this call.\r\n * @param {number} interpolationPercentage - Reserved for future use and custom pipelines.\r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The Camera that is rendering the Game Object.\r\n * @param {Phaser.GameObjects.Components.TransformMatrix} parentMatrix - This transform matrix is defined if the game object is nested\r\n */\r\nvar TextWebGLRenderer = function (renderer, src, interpolationPercentage, camera, parentMatrix) {\r\n    if ((src.width === 0) || (src.height === 0)) {\r\n        return;\r\n    }\r\n\r\n    var frame = src.frame;\r\n    var width = frame.width;\r\n    var height = frame.height;\r\n    var getTint = Utils.getTintAppendFloatAlpha;\r\n\r\n    this.pipeline.batchTexture(\r\n        src,\r\n        frame.glTexture,\r\n        width, height,\r\n        src.x, src.y,\r\n        width / src.style.resolution, height / src.style.resolution,\r\n        src.scaleX, src.scaleY,\r\n        src.rotation,\r\n        src.flipX, src.flipY,\r\n        src.scrollFactorX, src.scrollFactorY,\r\n        src.displayOriginX, src.displayOriginY,\r\n        0, 0, width, height,\r\n        getTint(src._tintTL, camera.alpha * src._alphaTL),\r\n        getTint(src._tintTR, camera.alpha * src._alphaTR),\r\n        getTint(src._tintBL, camera.alpha * src._alphaBL),\r\n        getTint(src._tintBR, camera.alpha * src._alphaBR),\r\n        (src._isTinted && src.tintFill),\r\n        0, 0,\r\n        camera,\r\n        parentMatrix\r\n    );\r\n};\r\n\r\nmodule.exports = TextWebGLRenderer;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Renders this Game Object with the Canvas Renderer to the given Camera.\r\n * The object will not render if any of its renderFlags are set or it is being actively filtered out by the Camera.\r\n * This method should not be called directly. It is a utility function of the Render module.\r\n *\r\n * @method Phaser.GameObjects.Text#renderCanvas\r\n * @since 3.0.0\r\n * @private\r\n *\r\n * @param {Phaser.Renderer.Canvas.CanvasRenderer} renderer - A reference to the current active Canvas renderer.\r\n * @param {Phaser.GameObjects.Text} src - The Game Object being rendered in this call.\r\n * @param {number} interpolationPercentage - Reserved for future use and custom pipelines.\r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The Camera that is rendering the Game Object.\r\n * @param {Phaser.GameObjects.Components.TransformMatrix} parentMatrix - This transform matrix is defined if the game object is nested\r\n */\r\nvar TextCanvasRenderer = function (renderer, src, interpolationPercentage, camera, parentMatrix) {\r\n    if ((src.width === 0) || (src.height === 0)) {\r\n        return;\r\n    }\r\n\r\n    renderer.batchSprite(src, src.frame, camera, parentMatrix);\r\n};\r\n\r\nmodule.exports = TextCanvasRenderer;\r\n","export default class extends Phaser.Scene {\r\n\r\n    constructor()\r\n    {\r\n        super('TitleScene');\r\n    }\r\n\r\n    preload()\r\n    {\r\n        this.load.image('background', 'assets/background.png');\r\n        this.load.image('title', 'assets/title.png');\r\n        this.load.image('start', 'assets/start.png');\r\n        this.load.image('start-glow', 'assets/start_glow.png');\r\n        this.load.image('start-active', 'assets/start_active.png');\r\n    }\r\n\r\n    create()\r\n    {\r\n        const self = this;\r\n\r\n        // Background\r\n        this.add.image(400, 400, 'background');\r\n\r\n        // Flash Backdrop\r\n        const flashBackdropGraphics = this.add.graphics({ fillStyle: { color: 0xffffff } });\r\n        flashBackdropGraphics.setAlpha(0);\r\n        const flashBackdrop = new Phaser.Geom.Rectangle(0, 0, 800, 700);\r\n        flashBackdropGraphics.fillRectShape(flashBackdrop);\r\n\r\n        // Title\r\n        const title = this.add.image(400, 200, 'title');\r\n        title.setAlpha(0);\r\n        title.setScale(2, 2);\r\n\r\n        // \"Start\" Button\r\n        //const startBtnGlow = this.add.image(400, 550, 'start-glow');\r\n        //startBtnGlow.setAlpha(0);\r\n\r\n        const startBtn = this.add.image(400, 550, 'start');\r\n        startBtn.setInteractive({ cursor: 'pointer' });\r\n        startBtn.setAlpha(0);\r\n\r\n        const startBtnOverlay = this.add.image(400, 550, 'start');\r\n        startBtnOverlay.setAlpha(0);\r\n        startBtnOverlay.setTintFill(0xffffff);\r\n\r\n        //const startBtnOverlay = this.add.image(400, 550, 'start-active');\r\n        //startBtnOverlay.setAlpha(0);\r\n\r\n        /*\r\n        startBtn.on('pointerover', () => {\r\n            self.tweens.add({\r\n                targets: startBtnOverlay,\r\n                alpha: 1,\r\n                duration: 100,\r\n                ease: 'Sine.easeInOut'\r\n            });\r\n        });\r\n\r\n        startBtn.on('pointerout', () => {\r\n            self.tweens.add({\r\n                targets: startBtnOverlay,\r\n                alpha: 0,\r\n                duration: 100,\r\n                ease: 'Sine.easeInOut'\r\n            });\r\n        });\r\n        */\r\n\r\n        startBtn.on('pointerdown', () => { self.scene.start('RoundScene', { level: 0 }); });\r\n\r\n        // Intro Timeline\r\n        const introTimeline = this.tweens.createTimeline();\r\n\r\n        introTimeline.add({\r\n            delay: 400,\r\n            targets: title,\r\n            alpha: 1,\r\n            scaleX: 1,\r\n            scaleY: 1,\r\n            duration: 500,\r\n            ease: 'Quad.easeIn'\r\n        });\r\n\r\n        introTimeline.add({\r\n            targets: flashBackdropGraphics,\r\n            alpha: 1,\r\n            duration: 30\r\n        });\r\n\r\n        introTimeline.add({\r\n            targets: flashBackdropGraphics,\r\n            alpha: 0,\r\n            duration: 700,\r\n            ease: 'Quad.easeIn'\r\n        });\r\n\r\n        introTimeline.add({\r\n            targets: [ startBtn, startBtnOverlay ],\r\n            alpha: 1,\r\n            duration: 100\r\n        });\r\n\r\n        introTimeline.add({\r\n            targets: startBtnOverlay,\r\n            alpha: 0,\r\n            duration: 300,\r\n            ease: 'Quad.easeOut'\r\n        });\r\n\r\n        /*\r\n        introTimeline.add({\r\n            targets: startBtnGlow,\r\n            alpha: 1,\r\n            duration: 1000,\r\n            repeat: -1,\r\n            yoyo: true,\r\n            ease: 'Sine.easeInOut'\r\n        });\r\n        */\r\n\r\n        introTimeline.play();\r\n    }\r\n    \r\n}","var NOOP = function () {\r\n    //  NOOP\r\n};\r\n\r\nexport default NOOP;","import WebGLRenderer from './WebGLRenderer.js';\r\nimport CanvasRenderer from './CanvasRenderer.js';\r\nimport NOOP from '../../../../utils/object/NOOP';\r\n\r\nvar renderWebGL = NOOP;\r\nvar renderCanvas = NOOP;\r\n\r\nif (WEBGL_RENDERER) {\r\n    renderWebGL = WebGLRenderer;\r\n}\r\n\r\nif (CANVAS_RENDERER) {\r\n    renderCanvas = CanvasRenderer;\r\n}\r\n\r\nexport default {\r\n    renderWebGL: renderWebGL,\r\n    renderCanvas: renderCanvas\r\n\r\n};","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nconst CanvasPool = Phaser.Display.Canvas.CanvasPool;\r\n\r\n/**\r\n * Calculates the ascent, descent and fontSize of a given font style.\r\n *\r\n * @function Phaser.GameObjects.Text.MeasureText\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.GameObjects.Text.TextStyle} textStyle - The TextStyle object to measure.\r\n *\r\n * @return {object} An object containing the ascent, descent and fontSize of the TextStyle.\r\n */\r\nvar MeasureText = function (textStyle) {\r\n    // @property {HTMLCanvasElement} canvas - The canvas element that the text is rendered.\r\n    var canvas = CanvasPool.create(this);\r\n\r\n    // @property {HTMLCanvasElement} context - The context of the canvas element that the text is rendered to.\r\n    var context = canvas.getContext('2d');\r\n\r\n    textStyle.syncFont(canvas, context);\r\n\r\n    var width = Math.ceil(context.measureText(textStyle.testString).width * textStyle.baselineX);\r\n    var baseline = width;\r\n    var height = 2 * baseline;\r\n\r\n    baseline = baseline * textStyle.baselineY | 0;\r\n\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n\r\n    context.fillStyle = '#f00';\r\n    context.fillRect(0, 0, width, height);\r\n\r\n    context.font = textStyle._font;\r\n\r\n    context.textBaseline = 'alphabetic';\r\n    context.fillStyle = '#000';\r\n    context.fillText(textStyle.testString, 0, baseline);\r\n\r\n    var output = {\r\n        ascent: 0,\r\n        descent: 0,\r\n        fontSize: 0\r\n    };\r\n\r\n    if (!context.getImageData(0, 0, width, height)) {\r\n        output.ascent = baseline;\r\n        output.descent = baseline + 6;\r\n        output.fontSize = output.ascent + output.descent;\r\n\r\n        CanvasPool.remove(canvas);\r\n\r\n        return output;\r\n    }\r\n\r\n    var imagedata = context.getImageData(0, 0, width, height).data;\r\n    var pixels = imagedata.length;\r\n    var line = width * 4;\r\n    var i;\r\n    var j;\r\n    var idx = 0;\r\n    var stop = false;\r\n\r\n    // ascent. scan from top to bottom until we find a non red pixel\r\n    for (i = 0; i < baseline; i++) {\r\n        for (j = 0; j < line; j += 4) {\r\n            if (imagedata[idx + j] !== 255) {\r\n                stop = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!stop) {\r\n            idx += line;\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n\r\n    output.ascent = baseline - i;\r\n\r\n    idx = pixels - line;\r\n    stop = false;\r\n\r\n    // descent. scan from bottom to top until we find a non red pixel\r\n    for (i = height; i > baseline; i--) {\r\n        for (j = 0; j < line; j += 4) {\r\n            if (imagedata[idx + j] !== 255) {\r\n                stop = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!stop) {\r\n            idx -= line;\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n\r\n    output.descent = (i - baseline);\r\n    output.fontSize = output.ascent + output.descent;\r\n\r\n    CanvasPool.remove(canvas);\r\n\r\n    return output;\r\n};\r\n\r\nexport default MeasureText;","var CONST = {\r\n    // new line mode\r\n    NO_NEWLINE: 0,\r\n    RAW_NEWLINE: 1,\r\n    WRAPPED_NEWLINE: 2,\r\n\r\n    // wrap mode\r\n    NO_WRAP: 0,\r\n    WORD_WRAP: 1,\r\n    CHAR_WRAP: 2,\r\n\r\n    // split lines\r\n    SPLITREGEXP: /(?:\\r\\n|\\r|\\n)/\r\n};\r\n\r\nexport default CONST;","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nimport MeasureText from './MeasureText.js';\r\nimport CONST from '../const.js';\r\n\r\nconst GetAdvancedValue = Phaser.Utils.Objects.GetAdvancedValue;\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\n\r\n//  Key: [ Object Key, Default Value ]\r\n\r\n/**\r\n * A custom function that will be responsible for wrapping the text.\r\n * @callback TextStyleWordWrapCallback\r\n *\r\n * @param {string} text - The string to wrap.\r\n * @param {Phaser.GameObjects.Text} textObject - The Text instance.\r\n *\r\n * @return {(string|string[])} Should return the wrapped lines either as an array of lines or as a string with\r\n * newline characters in place to indicate where breaks should happen.\r\n */\r\n\r\nvar propertyMap = {\r\n    // background\r\n    backgroundColor: ['backgroundColor', null],\r\n\r\n    // font\r\n    fontFamily: ['fontFamily', 'Courier'],\r\n    fontSize: ['fontSize', '16px'],\r\n    fontStyle: ['fontStyle', ''],\r\n    color: ['color', '#fff'],\r\n    stroke: ['stroke', '#fff'],\r\n    strokeThickness: ['strokeThickness', 0],\r\n    shadowOffsetX: ['shadow.offsetX', 0],\r\n    shadowOffsetY: ['shadow.offsetY', 0],\r\n    shadowColor: ['shadow.color', '#000'],\r\n    shadowBlur: ['shadow.blur', 0],\r\n    shadowStroke: ['shadow.stroke', false],\r\n    shadowFill: ['shadow.fill', false],\r\n\r\n    // underline\r\n    underlineColor: ['underline.color', '#000'],\r\n    underlineThickness: ['underline.thickness', 0],\r\n    underlineOffset: ['underline.offset', 0],\r\n\r\n    // align\r\n    halign: ['halign', 'left'],\r\n    valign: ['valign', 'top'],\r\n\r\n    // size\r\n    maxLines: ['maxLines', 0],\r\n    fixedWidth: ['fixedWidth', 0],\r\n    fixedHeight: ['fixedHeight', 0],\r\n    resolution: ['resolution', 0],\r\n    lineSpacing: ['lineSpacing', 0],\r\n\r\n    rtl: ['rtl', false],\r\n    testString: ['testString', '|MÃ‰qgy'],\r\n    baselineX: ['baselineX', 1.2],\r\n    baselineY: ['baselineY', 1.4],\r\n\r\n    // wrap\r\n    wrapMode: ['wrap.mode', 1],\r\n    wrapWidth: ['wrap.width', 0]\r\n    //wrapCallback: ['wrap.callback', null],\r\n    //wrapCallbackScope: ['wrap.callbackScope', null]\r\n};\r\n\r\nclass TextStyle {\r\n    constructor(text, style) {\r\n        this.parent = text;\r\n\r\n        this.backgroundColor;\r\n\r\n        this.fontFamily;\r\n        this.fontSize;\r\n        this.fontStyle;\r\n        this.color;\r\n        this.stroke;\r\n        this.strokeThickness;\r\n        this.shadowOffsetX;\r\n        this.shadowOffsetY;\r\n        this.shadowColor;\r\n        this.shadowBlur;\r\n        this.shadowStroke;\r\n        this.shadowFill;\r\n\r\n        this.underlineColor;\r\n        this.underlineThickness;\r\n        this.underlineOffset;\r\n\r\n        this.halign;\r\n        this.valign;\r\n\r\n        this.maxLines;\r\n        this.fixedWidth;\r\n        this.fixedHeight;\r\n        this.resolution;\r\n        this.lineSpacing;\r\n\r\n        this.rtl;\r\n        this.testString;\r\n\r\n\r\n        this.baselineX;\r\n        this.baselineY;\r\n\r\n        this._font;\r\n\r\n        //  Set to defaults + user style\r\n        this.setStyle(style, false);\r\n\r\n        var metrics = GetValue(style, 'metrics', false);\r\n\r\n        //  Provide optional TextMetrics in the style object to avoid the canvas look-up / scanning\r\n        //  Doing this is reset if you then change the font of this TextStyle after creation\r\n        if (metrics) {\r\n            this.metrics = {\r\n                ascent: GetValue(metrics, 'ascent', 0),\r\n                descent: GetValue(metrics, 'descent', 0),\r\n                fontSize: GetValue(metrics, 'fontSize', 0)\r\n            };\r\n        } else {\r\n            this.metrics = MeasureText(this);\r\n        }\r\n    }\r\n\r\n    setStyle(style, updateText) {\r\n        if (updateText === undefined) {\r\n            updateText = true;\r\n        }\r\n\r\n        if (style && style.hasOwnProperty('wrap')) {\r\n            var wrap = style.wrap;\r\n            if (wrap.hasOwnProperty('mode')) {\r\n                var mode = wrap.mode;\r\n                if (typeof mode === 'string') {\r\n                    wrap.mode = WRAPMODE[mode];\r\n                }\r\n            } else {\r\n                if (wrap.hasOwnProperty('width')) {\r\n                    wrap.mode = 1;\r\n                }\r\n            }\r\n        }\r\n\r\n        //  Avoid type mutation\r\n        if (style && style.hasOwnProperty('fontSize') && typeof style.fontSize === 'number') {\r\n            style.fontSize = style.fontSize.toString() + 'px';\r\n        }\r\n\r\n        for (var key in propertyMap) {\r\n            if (key === 'wrapCallback' || key === 'wrapCallbackScope') {\r\n                // Callback & scope should be set without processing the values\r\n                this[key] = GetValue(style, propertyMap[key][0], propertyMap[key][1]);\r\n            } else {\r\n                this[key] = GetAdvancedValue(style, propertyMap[key][0], propertyMap[key][1]);\r\n            }\r\n        }\r\n\r\n        //  Allow for 'font' override\r\n        var font = GetValue(style, 'font', null);\r\n\r\n        if (font === null) {\r\n            this._font = this.fontStyle + ' ' + this.fontSize + ' ' + this.fontFamily;\r\n        } else {\r\n            this._font = font;\r\n        }\r\n\r\n        //  Allow for 'fill' to be used in place of 'color'\r\n        var fill = GetValue(style, 'fill', null);\r\n\r\n        if (fill !== null) {\r\n            this.color = fill;\r\n        }\r\n\r\n        if (updateText) {\r\n            return this.update(true);\r\n        } else {\r\n            return this.parent;\r\n        }\r\n    }\r\n\r\n    syncFont(canvas, context) {\r\n        context.font = this._font;\r\n    }\r\n\r\n    syncStyle(canvas, context) {\r\n        context.textBaseline = 'alphabetic';\r\n\r\n        context.fillStyle = this.color;\r\n        context.strokeStyle = this.stroke;\r\n\r\n        context.lineWidth = this.strokeThickness;\r\n        context.lineCap = 'round';\r\n        context.lineJoin = 'round';\r\n    }\r\n\r\n    syncShadow(context, enabled) {\r\n        if (enabled) {\r\n            context.shadowOffsetX = this.shadowOffsetX;\r\n            context.shadowOffsetY = this.shadowOffsetY;\r\n            context.shadowColor = this.shadowColor;\r\n            context.shadowBlur = this.shadowBlur;\r\n        } else {\r\n            context.shadowOffsetX = 0;\r\n            context.shadowOffsetY = 0;\r\n            context.shadowColor = 0;\r\n            context.shadowBlur = 0;\r\n        }\r\n    }\r\n\r\n    update(recalculateMetrics) {\r\n        if (recalculateMetrics) {\r\n            this._font = this.fontStyle + ' ' + this.fontSize + ' ' + this.fontFamily;\r\n\r\n            this.metrics = MeasureText(this);\r\n        }\r\n\r\n        return this.parent.updateText(recalculateMetrics);\r\n    }\r\n\r\n    buildFont() {\r\n        var newFont = this.fontStyle + ' ' + this.fontSize + ' ' + this.fontFamily;\r\n        if (newFont !== this._font) {\r\n            this._font = newFont;\r\n            //this.metrics = MeasureText(this);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    setFont(font) {\r\n        if (typeof font === 'string') {\r\n            this.fontFamily = font;\r\n            this.fontSize = '';\r\n            this.fontStyle = '';\r\n        } else {\r\n            this.fontFamily = GetValue(font, 'fontFamily', 'Courier');\r\n            this.fontSize = GetValue(font, 'fontSize', '16px');\r\n            this.fontStyle = GetValue(font, 'fontStyle', '');\r\n        }\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setFontFamily(family) {\r\n        this.fontFamily = family;\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setFontStyle(style) {\r\n        this.fontStyle = style;\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setFontSize(size) {\r\n        if (typeof size === 'number') {\r\n            size = size.toString() + 'px';\r\n        }\r\n\r\n        this.fontSize = size;\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setTestString(string) {\r\n        this.testString = string;\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setFixedSize(width, height) {\r\n        this.fixedWidth = width;\r\n        this.fixedHeight = height;\r\n\r\n        if (width) {\r\n            this.parent.width = width;\r\n        }\r\n\r\n        if (height) {\r\n            this.parent.height = height;\r\n        }\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setResolution(value) {\r\n        this.resolution = value;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setLineSpacing(value) {\r\n        this.lineSpacing = value;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setBackgroundColor(color) {\r\n        this.backgroundColor = color;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setFill(color) {\r\n        this.color = color;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setColor(color) {\r\n        this.color = color;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setStroke(color, thickness) {\r\n        if (color === undefined) {\r\n            //  Reset the stroke to zero (disabling it)\r\n            this.strokeThickness = 0;\r\n        } else {\r\n            if (thickness === undefined) {\r\n                thickness = this.strokeThickness;\r\n            }\r\n\r\n            this.stroke = color;\r\n            this.strokeThickness = thickness;\r\n        }\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setShadow(x, y, color, blur, shadowStroke, shadowFill) {\r\n        if (x === undefined) {\r\n            x = 0;\r\n        }\r\n        if (y === undefined) {\r\n            y = 0;\r\n        }\r\n        if (color === undefined) {\r\n            color = '#000';\r\n        }\r\n        if (blur === undefined) {\r\n            blur = 0;\r\n        }\r\n        if (shadowStroke === undefined) {\r\n            shadowStroke = false;\r\n        }\r\n        if (shadowFill === undefined) {\r\n            shadowFill = true;\r\n        }\r\n\r\n        this.shadowOffsetX = x;\r\n        this.shadowOffsetY = y;\r\n        this.shadowColor = color;\r\n        this.shadowBlur = blur;\r\n        this.shadowStroke = shadowStroke;\r\n        this.shadowFill = shadowFill;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setShadowOffset(x, y) {\r\n        if (x === undefined) {\r\n            x = 0;\r\n        }\r\n        if (y === undefined) {\r\n            y = x;\r\n        }\r\n\r\n        this.shadowOffsetX = x;\r\n        this.shadowOffsetY = y;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setShadowColor(color) {\r\n        if (color === undefined) {\r\n            color = '#000';\r\n        }\r\n\r\n        this.shadowColor = color;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setShadowBlur(blur) {\r\n        if (blur === undefined) {\r\n            blur = 0;\r\n        }\r\n\r\n        this.shadowBlur = blur;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setShadowStroke(enabled) {\r\n        this.shadowStroke = enabled;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setShadowFill(enabled) {\r\n        this.shadowFill = enabled;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setUnderline(color, thickness, offset) {\r\n        if (color === undefined) {\r\n            color = '#000';\r\n        }\r\n        if (thickness === undefined) {\r\n            thickness = 0;\r\n        }\r\n        if (offset === undefined) {\r\n            offset = 0;\r\n        }\r\n\r\n        this.underlineColor = color;\r\n        this.underlineThickness = thickness;\r\n        this.underlineOffset = offset;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setUnderlineColor(color) {\r\n        if (color === undefined) {\r\n            color = '#000';\r\n        }\r\n\r\n        this.underlineColor = color;\r\n        return this.update(false);\r\n    }\r\n\r\n    setUnderlineThickness(thickness) {\r\n        if (thickness === undefined) {\r\n            thickness = 0;\r\n        }\r\n\r\n        this.underlineThickness = thickness;\r\n        return this.update(false);\r\n    }\r\n\r\n    setUnderlineOffset(offset) {\r\n        if (offset === undefined) {\r\n            offset = 0;\r\n        }\r\n\r\n        this.underlineOffset = offset;\r\n        return this.update(false);\r\n    }\r\n\r\n    setWrapMode(mode) {\r\n        if (typeof mode === 'string') {\r\n            mode = WRAPMODE[mode.toLowerCase()] || 0;\r\n        }\r\n        this.wrapMode = mode;\r\n        return this.update(true);\r\n    }\r\n\r\n    setWrapWidth(width) {\r\n        this.wrapWidth = width;\r\n        return this.update(false);\r\n    }\r\n\r\n    setAlign(halign, valign) {\r\n        if (halign === undefined) {\r\n            halign = 'left';\r\n        }\r\n        if (valign === undefined) {\r\n            valign = 'top';\r\n        }\r\n        this.halign = halign;\r\n        this.valign = valign;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setHAlign(halign) {\r\n        if (halign === undefined) {\r\n            halign = 'left';\r\n        }\r\n        this.halign = halign;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setVAlign(valign) {\r\n        if (valign === undefined) {\r\n            valign = 'top';\r\n        }\r\n        this.valign = valign;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setMaxLines(max) {\r\n        if (max === undefined) {\r\n            max = 0;\r\n        }\r\n\r\n        this.maxLines = max;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    getTextMetrics() {\r\n        var metrics = this.metrics;\r\n\r\n        return {\r\n            ascent: metrics.ascent,\r\n            descent: metrics.descent,\r\n            fontSize: metrics.fontSize\r\n        };\r\n    }\r\n\r\n    get lineHeight() {\r\n        return this.metrics.fontSize + this.strokeThickness + this.lineSpacing;\r\n    }\r\n\r\n    toJSON() {\r\n        var output = {};\r\n\r\n        for (var key in propertyMap) {\r\n            output[key] = this[key];\r\n        }\r\n\r\n        output.metrics = this.getTextMetrics();\r\n\r\n        return output;\r\n    }\r\n\r\n    destroy() {\r\n        this.parent = undefined;\r\n    }\r\n\r\n}\r\n\r\nconst HALIGNMODE = {\r\n    left: CONST.hleft,\r\n    center: CONST.hcenter,\r\n    right: CONST.hright,\r\n};\r\nconst VALIGNMODE = {\r\n    top: CONST.vtop,\r\n    center: CONST.vcenter,\r\n    bottom: CONST.vbottom,\r\n};\r\nconst WRAPMODE = {\r\n    none: CONST.NO_WRAP,\r\n    word: CONST.WORD_WRAP,\r\n    char: CONST.CHAR_WRAP,\r\n    character: CONST.CHAR_WRAP\r\n};\r\n\r\nexport default TextStyle;","import CONST from '../const.js';\r\n\r\nexport default {\r\n    draw(startX, startY, boxWidth, boxHeight) {\r\n        var penManager = this.penManager;\r\n        this.hitAreaManager.clear();\r\n\r\n        var context = this.context;\r\n        context.save();\r\n\r\n        // this.clear();\r\n        this.drawBackground(this.defatultStyle.backgroundColor);\r\n\r\n        // draw lines\r\n        var defatultStyle = this.defatultStyle;\r\n        startX += this.startXOffset;\r\n        startY += this.startYOffset;\r\n        var halign = defatultStyle.halign,\r\n            valign = defatultStyle.valign;\r\n\r\n        var lineWidth, lineHeight = defatultStyle.lineHeight;\r\n        var lines = penManager.lines;\r\n        var totalLinesNum = lines.length,\r\n            maxLines = defatultStyle.maxLines;\r\n        var drawLinesNum, drawLineStartIdx, drawLineEndIdx;\r\n        if ((maxLines > 0) && (totalLinesNum > maxLines)) {\r\n            drawLinesNum = maxLines;\r\n            if (valign === 'center') { // center\r\n                drawLineStartIdx = Math.floor((totalLinesNum - drawLinesNum) / 2);\r\n            } else if (valign === 'bottom') { // bottom\r\n                drawLineStartIdx = totalLinesNum - drawLinesNum;\r\n            } else {\r\n                drawLineStartIdx = 0;\r\n            }\r\n        } else {\r\n            drawLinesNum = totalLinesNum;\r\n            drawLineStartIdx = 0;\r\n        }\r\n        drawLineEndIdx = drawLineStartIdx + drawLinesNum;\r\n\r\n        var offsetX, offsetY;\r\n        if (valign === 'center') { // center\r\n            offsetY = Math.max((boxHeight - (drawLinesNum * lineHeight)) / 2, 0);\r\n        } else if (valign === 'bottom') { // bottom\r\n            offsetY = Math.max(boxHeight - (drawLinesNum * lineHeight) - 2, 0);\r\n        } else {\r\n            offsetY = 0;\r\n        }\r\n        offsetY += startY;\r\n        for (var lineIdx = drawLineStartIdx; lineIdx < drawLineEndIdx; lineIdx++) {\r\n            lineWidth = penManager.getLineWidth(lineIdx);\r\n            if (lineWidth === 0) {\r\n                continue;\r\n            }\r\n\r\n            if (halign === 'center') { // center\r\n                offsetX = (boxWidth - lineWidth) / 2;\r\n            } else if (halign === 'right') { // right\r\n                offsetX = boxWidth - lineWidth;\r\n            } else {\r\n                offsetX = 0;\r\n            }\r\n            offsetX += startX;\r\n\r\n            var pens = lines[lineIdx];\r\n            for (var penIdx = 0, pensLen = pens.length; penIdx < pensLen; penIdx++) {\r\n                this.drawPen(pens[penIdx], offsetX, offsetY);\r\n            }\r\n        }\r\n\r\n        context.restore();\r\n    },\r\n\r\n    drawPen(pen, offsetX, offsetY) {\r\n        offsetX += pen.x;\r\n        offsetY += pen.y;\r\n\r\n        var canvas = this.canvas;\r\n        var context = this.context;\r\n        context.save();\r\n\r\n        var curStyle = this.parser.propToContextStyle(\r\n            this.defatultStyle,\r\n            pen.prop\r\n        );\r\n        curStyle.buildFont();\r\n        curStyle.syncFont(canvas, context);\r\n        curStyle.syncStyle(canvas, context);\r\n\r\n        // Underline\r\n        if ((curStyle.underlineThickness > 0) && (pen.width > 0)) {\r\n            this.drawUnderline(offsetX, offsetY, pen.width, curStyle);\r\n        }\r\n\r\n        // Text\r\n        if (pen.isTextPen) {\r\n            this.drawText(offsetX, offsetY, pen.text, curStyle);\r\n        }\r\n\r\n        // Image\r\n        if (pen.isImagePen) {\r\n            this.drawImage(offsetX, offsetY, pen.prop.img, curStyle);\r\n        }\r\n\r\n        context.restore();\r\n\r\n        if (pen.hasAreaMarker && (pen.width > 0)) {\r\n            this.hitAreaManager.add(\r\n                pen.prop.area,\r\n                offsetX, (offsetY - this.startYOffset),\r\n                pen.width, this.defatultStyle.lineHeight);\r\n        }\r\n    },\r\n\r\n    clear() {\r\n        var canvas = this.canvas;\r\n        this.context.clearRect(0, 0, canvas.width, canvas.height);\r\n    },\r\n\r\n    drawBackground(color) {\r\n        if (color === null) {\r\n            return;\r\n        }\r\n        this.context.fillStyle = color;\r\n        this.context.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n    },\r\n\r\n    drawUnderline(x, y, width, style) {\r\n        y += style.underlineOffset - (style.underlineThickness / 2);\r\n        if (this.autoRound) {\r\n            x = Math.round(x);\r\n            y = Math.round(y);\r\n        }\r\n\r\n        var context = this.context;\r\n        var savedLineCap = context.lineCap;\r\n        context.lineCap = 'butt';\r\n        context.beginPath();\r\n        context.strokeStyle = style.underlineColor;\r\n        context.lineWidth = style.underlineThickness;\r\n        context.moveTo(x, y);\r\n        context.lineTo((x + width), y);\r\n        context.stroke();\r\n        context.lineCap = savedLineCap;\r\n    },\r\n\r\n    drawText(x, y, text, style) {\r\n        if (this.autoRound) {\r\n            x = Math.round(x);\r\n            y = Math.round(y);\r\n        }\r\n\r\n        var context = this.context;\r\n        if (style.strokeThickness) {\r\n            style.syncShadow(context, style.shadowStroke);\r\n            context.strokeText(text, x, y);\r\n        }\r\n\r\n        if (style.color && (style.color !== 'none')) {\r\n            style.syncShadow(context, style.shadowFill);\r\n            context.fillText(text, x, y);\r\n        }\r\n    },\r\n\r\n    drawImage(x, y, imgKey, style) {\r\n        var imageManager = this.parent.imageManager;\r\n        var imgData = imageManager.get(imgKey);\r\n        var frame = imageManager.getFrame(imgKey);\r\n\r\n        x += imgData.left;\r\n        y += - this.startYOffset + imgData.y;\r\n        if (this.autoRound) {\r\n            x = Math.round(x);\r\n            y = Math.round(y);\r\n        }\r\n\r\n        var context = this.context;\r\n        context.drawImage(\r\n            frame.source.image,\r\n            frame.cutX, frame.cutY, frame.cutWidth, frame.cutHeight,\r\n            x, y, imgData.width, imgData.height\r\n        );\r\n    }\r\n\r\n}","class Stack {\r\n    constructor() {\r\n        this.items = [];\r\n    }\r\n\r\n    destroy() {\r\n        this.items.length = 0;\r\n        this.items = undefined;\r\n    }\r\n\r\n    pop() {\r\n        return (this.items.length > 0) ? this.items.pop() : null;\r\n    }\r\n\r\n    push(l) {\r\n        this.items.push(l);\r\n        return this;\r\n    }\r\n\r\n    pushMultiple(arr) {\r\n        this.items.push.apply(this.items, arr);\r\n        arr.length = 0;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport default Stack;","import Pool from './utils/struct/Stack.js';\r\nexport default Pool;","import CONST from '../const.js';\r\n\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\nconst NO_NEWLINE = CONST.NO_NEWLINE;\r\nconst RAW_NEWLINE = CONST.RAW_NEWLINE;\r\n\r\nclass Pen {\r\n    constructor(config) {\r\n        this.prop = {};\r\n        this.resetFromJSON(config);\r\n    }\r\n\r\n    resetFromJSON(o) { // (txt, x, y, width, prop, newLineMode, startIndex)\r\n        this.text = GetValue(o, 'text', '');\r\n        this.x = GetValue(o, 'x', 0);\r\n        this.y = GetValue(o, 'y', 0);\r\n        this.width = GetValue(o, 'width', 0);\r\n\r\n        var prop = GetValue(o, 'prop', null);\r\n        if (prop === null) {\r\n            prop = {};\r\n        }\r\n        this.prop = prop;\r\n        this.newLineMode = GetValue(o, 'newLineMode', 0);\r\n        this.startIndex = GetValue(o, 'startIndex', 0);\r\n    }\r\n\r\n    get plainText() {\r\n        var txt = this.text\r\n        if (this.newLineMode === RAW_NEWLINE) {\r\n            txt += \"\\n\";\r\n        }\r\n\r\n        return txt;\r\n    }\r\n\r\n    get wrapText() {\r\n        var txt = this.text;\r\n        if (this.newLineMode !== NO_NEWLINE) {\r\n            txt += \"\\n\";\r\n        }\r\n\r\n        return txt;\r\n    }\r\n\r\n    get rawTextLength() {\r\n        var len = this.text.length;\r\n        if (this.newLineMode === RAW_NEWLINE) {\r\n            len += 1;\r\n        }\r\n        return len;\r\n    }\r\n\r\n    get endIndex() {\r\n        return this.startIndex + this.rawTextLength;\r\n    }\r\n\r\n    get lastX() {\r\n        return this.x + this.width;\r\n    }\r\n\r\n    get isTextPen() {\r\n        return (this.text !== '');\r\n    }\r\n\r\n    get isImagePen() {\r\n        return !!this.prop.img;\r\n    }\r\n\r\n    get hasAreaMarker() {\r\n        return !!this.prop.area;\r\n    }\r\n};\r\n\r\nexport default Pen;","var Clear = function (obj) {\r\n    if (Array.isArray(obj)) {\r\n        obj.length = 0;\r\n    } else {\r\n        for (var key in obj) {\r\n            delete obj[key];\r\n        }\r\n    }\r\n}\r\nexport default Clear;","import Clear from './Clear.js';\r\n\r\n/**\r\n * Shallow Object Clone. Will not out nested objects.\r\n * @param {object} obj JSON object\r\n * @param {object} ret JSON object to return, set null to return a new object\r\n * @returns {object} this object\r\n */\r\nvar Clone = function (obj, out) {\r\n    var objIsArray = Array.isArray(obj);\r\n\r\n    if (out === undefined) {\r\n        out = (objIsArray) ? [] : {};\r\n    } else {\r\n        Clear(out);\r\n    }\r\n\r\n    if (objIsArray) {\r\n        out.length = obj.length;\r\n    }\r\n    for (var key in obj) {\r\n        out[key] = obj[key];\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nexport default Clone;\r\n","import Pool from '../../../../pool.js';\r\nimport Pen from './Pen.js';\r\nimport CONST from '../const.js';\r\nimport Clone from '../../../../utils/object/Clone.js';\r\nimport NOOP from '../../../../utils/object/NOOP.js';\r\n\r\nconst GetFastValue = Phaser.Utils.Objects.GetFastValue;\r\nconst NO_NEWLINE = CONST.NO_NEWLINE;\r\nconst WRAPPED_NEWLINE = CONST.WRAPPED_NEWLINE;\r\n\r\nvar PensPool = new Pool(); // default pens pool\r\nvar LinesPool = new Pool(); // default lines pool\r\nclass PenManager {\r\n    constructor(config) {\r\n        this.pens = []; // all pens\r\n        this.lines = []; // pens in lines [ [],[],[],.. ]\r\n        this.maxLinesWidth = undefined;\r\n\r\n        this.PensPool = GetFastValue(config, 'pensPool', PensPool);\r\n        this.LinesPool = GetFastValue(config, 'linesPool', LinesPool);\r\n        this.tagToText = GetFastValue(config, 'tagToText', NOOP);\r\n        this.tagToTextScope = GetFastValue(config, 'tagToTextScope', undefined);\r\n    }\r\n\r\n    destroy() {\r\n        this.freePens();\r\n        this.tagToText = undefined;\r\n        this.tagToTextScope = undefined;\r\n    }\r\n\r\n    freePens() {\r\n        for (var i = 0, len = this.lines.length; i < len; i++)\r\n            this.lines[i].length = 0;\r\n\r\n        this.PensPool.pushMultiple(this.pens);\r\n        this.LinesPool.pushMultiple(this.lines);\r\n        this.maxLinesWidth = undefined;\r\n    }\r\n\r\n    addTextPen(text, x, y, width, prop, newLineMode) {\r\n        var pen = this.PensPool.pop();\r\n        if (pen == null) {\r\n            pen = new Pen();\r\n        }\r\n        PEN_CONFIG.text = text;\r\n        PEN_CONFIG.x = x;\r\n        PEN_CONFIG.y = y;\r\n        PEN_CONFIG.width = width;\r\n        PEN_CONFIG.prop = prop;\r\n        PEN_CONFIG.newLineMode = newLineMode;\r\n        pen.resetFromJSON(PEN_CONFIG);\r\n        this.addPen(pen);\r\n        return this;\r\n    }\r\n\r\n    addImagePen(x, y, width, prop) {\r\n        this.addTextPen('', x, y, width, prop, NO_NEWLINE);\r\n        return this;\r\n    }\r\n\r\n    addNewLinePen() {\r\n        var previousPen = this.lastPen;\r\n        var x = (previousPen) ? previousPen.lastX : 0;\r\n        var y = (previousPen) ? previousPen.y : 0;\r\n        var prop = (previousPen) ? Clone(previousPen.prop) : null;\r\n        this.addTextPen('', x, y, 0, prop, WRAPPED_NEWLINE);\r\n        return this;\r\n    }\r\n\r\n    addPen(pen) {\r\n        var previousPen = this.lastPen;\r\n        if (previousPen == null) {\r\n            pen.startIndex = 0;\r\n        } else {\r\n            pen.startIndex = previousPen.endIndex;\r\n        }\r\n        this.pens.push(pen);\r\n\r\n        // maintan lines\r\n        var line = this.lastLine;\r\n        if (line == null) {\r\n            line = this.LinesPool.pop() || [];\r\n            this.lines.push(line);\r\n        }\r\n        line.push(pen);\r\n\r\n        // new line, add an empty line\r\n        if (pen.newLineMode !== NO_NEWLINE) {\r\n            line = this.LinesPool.pop() || [];\r\n            this.lines.push(line);\r\n        }\r\n        this.maxLinesWidth = undefined;\r\n    }\r\n\r\n    clone(targetPenManager) {\r\n        if (targetPenManager == null)\r\n            targetPenManager = new PenManager();\r\n\r\n        targetPenManager.freePens();\r\n\r\n        for (var li = 0, llen = this.lines.length; li < llen; li++) {\r\n            var pens = this.lines[li];\r\n            for (var pi = 0, plen = pens.length; pi < plen; pi++) {\r\n                var pen = pens[pi];\r\n                targetPenManager.addPen(\r\n                    pen.text,\r\n                    pen.x,\r\n                    pen.y,\r\n                    pen.width,\r\n                    Clone(pen.prop),\r\n                    pen.newLineMode\r\n                );\r\n            }\r\n        }\r\n\r\n        return targetPenManager;\r\n    }\r\n\r\n    get lastPen() {\r\n        return this.pens[this.pens.length - 1];\r\n    }\r\n\r\n    get lastLine() {\r\n        return this.lines[this.lines.length - 1];\r\n    }\r\n\r\n    getLineStartIndex(i) {\r\n        if (i >= this.lines.length) {\r\n            return this.getLineEndIndex(i);\r\n        } else {\r\n            var line = this.lines[i];\r\n            return (line && line[0]) ? line[0].startIndex : 0;\r\n        }\r\n    }\r\n\r\n    getLineEndIndex(i) {\r\n        if (i >= this.lines.length) {\r\n            i = this.lines.length - 1;\r\n        }\r\n        var li, hasLastPen = false,\r\n            line;\r\n        for (li = i; li >= 0; li--) {\r\n            line = this.lines[li];\r\n            hasLastPen = (line != null) && (line.length > 0);\r\n            if (hasLastPen) {\r\n                break;\r\n            }\r\n        }\r\n        if (!hasLastPen) {\r\n            return 0;\r\n        }\r\n\r\n        var lastPen = line[line.length - 1];\r\n        return lastPen.endIndex;\r\n    }\r\n\r\n    getLineWidth(i) {\r\n        var line = this.lines[i];\r\n        if (!line) {\r\n            return 0;\r\n        }\r\n\r\n        var lastPen = line[line.length - 1];\r\n        if (lastPen == null) {\r\n            return 0;\r\n        }\r\n\r\n        var lineWidth = lastPen.lastX; // start from 0\r\n        return lineWidth;\r\n    }\r\n\r\n    getMaxLineWidth() {\r\n        if (this.maxLinesWidth !== undefined) {\r\n            return this.maxLinesWidth;\r\n        }\r\n        var w, maxW = 0;\r\n        for (var i = 0, len = this.lines.length; i < len; i++) {\r\n            w = this.getLineWidth(i);\r\n            if (w > maxW) {\r\n                maxW = w;\r\n            }\r\n        }\r\n        this.maxLinesWidth = maxW;\r\n        return maxW;\r\n    }\r\n\r\n    getLineWidths() {\r\n        var result = [];\r\n        for (var i = 0, len = this.lines.length; i < len; i++) {\r\n            result.push(this.getLineWidth(i));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    get linesCount() {\r\n        return this.lines.length;\r\n    }\r\n\r\n    get plainText() {\r\n        var txt = \"\",\r\n            pens = this.pens;\r\n        for (var i = 0, len = pens.length; i < len; i++) {\r\n            txt += pens[i].plainText;\r\n        }\r\n\r\n        return txt;\r\n    }\r\n\r\n    get rawTextLength() {\r\n        var l = 0,\r\n            pens = this.pens;\r\n        for (var i = 0, len = this.pens.length; i < len; i++) {\r\n            l += pens[i].rawTextLength;\r\n        }\r\n\r\n        return l;\r\n    }\r\n\r\n    getSliceTagText(start, end, wrap) {\r\n        if (start === undefined) {\r\n            start = 0;\r\n        }\r\n        if (end === undefined) {\r\n            var lastPen = this.lastPen;\r\n            if (lastPen == null) {\r\n                return \"\";\r\n            }\r\n\r\n            end = lastPen.endIndex;\r\n        }\r\n        if (wrap === undefined) {\r\n            wrap = false;\r\n        }\r\n\r\n        var txt = \"\",\r\n            formatTxt,\r\n            pen, penTxt, penStartIdx, penEndIdx, isInRange;\r\n        var currentProp, previousProp;\r\n        for (var i = 0, len = this.pens.length; i < len; i++) {\r\n            pen = this.pens[i];\r\n            penEndIdx = pen.endIndex;\r\n            if (penEndIdx <= start) {\r\n                continue;\r\n            }\r\n            pen = this.pens[i];\r\n            penTxt = (!wrap) ? pen.plainText : pen.wrapText;\r\n            currentProp = pen.prop;\r\n            penStartIdx = pen.startIndex;\r\n\r\n            isInRange = (penStartIdx >= start) && (penEndIdx <= end);\r\n            if (!isInRange) {\r\n                penTxt = penTxt.substring(start - penStartIdx, end - penStartIdx);\r\n            }\r\n\r\n            if (this.tagToTextScope) {\r\n                txt += this.tagToText.call(this.tagToTextScope, penTxt, currentProp, previousProp);\r\n            } else {\r\n                txt += this.tagToText(penTxt, currentProp, previousProp);\r\n            }\r\n\r\n            previousProp = currentProp;\r\n            if (penEndIdx >= end) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return txt;\r\n    }\r\n};\r\n\r\nvar PEN_CONFIG = {};\r\n\r\nexport default PenManager;","import Pool from '../../../../pool.js';\r\n\r\nconst Rectangle = Phaser.Geom.Rectangle;\r\n\r\nvar RectanglePool = new Pool();\r\nclass HitAreaManager {\r\n    constructor() {\r\n        this.hitAreas = [];\r\n    }\r\n\r\n    destroy() {\r\n        this.clear();\r\n    }\r\n\r\n    clear() {\r\n        RectanglePool.pushMultiple(this.hitAreas);\r\n        return this;\r\n    }\r\n\r\n    add(key, x, y, width, height) {\r\n        var rectangle = RectanglePool.pop();\r\n        if (rectangle === null) {\r\n            rectangle = new Rectangle(x, y, width, height);\r\n        } else {\r\n            rectangle.setTo(x, y, width, height);\r\n        }\r\n        rectangle.key = key;\r\n        this.hitAreas.push(rectangle);\r\n        return this;\r\n    }\r\n\r\n    contains(x, y) {\r\n        var hitAreas = this.hitAreas, hitArea;\r\n        for (var i = 0, cnt = hitAreas.length; i < cnt; i++) {\r\n            hitArea = hitAreas[i];\r\n            if (hitArea.contains(x, y)) {\r\n                return hitArea.key;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    drawBounds(graphics, color, parent) {\r\n        if (color === undefined) {\r\n            color = 0xffffff;\r\n        }\r\n\r\n        if (parent) {\r\n            graphics\r\n                .save()\r\n                .scaleCanvas(parent.scaleX, parent.scaleY)\r\n                .rotateCanvas(parent.rotation)\r\n                .translateCanvas(parent.x, parent.y)\r\n        }\r\n\r\n        var hitAreas = this.hitAreas, hitArea;\r\n        for (var i = 0, cnt = hitAreas.length; i < cnt; i++) {\r\n            hitArea = hitAreas[i];\r\n            graphics.lineStyle(1, color).strokeRect(hitArea.x, hitArea.y, hitArea.width, hitArea.height);\r\n        }\r\n\r\n        if (parent) {\r\n            graphics\r\n                .restore()\r\n        }\r\n        return this;\r\n    }\r\n}\r\nexport default HitAreaManager;","var SetInteractive = function () {\r\n    this.parent\r\n        .on('pointerdown', function (pointer, localX, localY, event) {\r\n            FireEvent.call(this, 'areadown', pointer, localX, localY);\r\n        }, this)\r\n        .on('pointerup', function (pointer, localX, localY, event) {\r\n            FireEvent.call(this, 'areaup', pointer, localX, localY);\r\n        }, this)\r\n}\r\n\r\nvar FireEvent = function (eventName, pointer, localX, localY) {\r\n    var key = this.hitAreaManager.contains(localX, localY);\r\n    if (key === false) {\r\n        return;\r\n    }\r\n    this.parent.emit(`${eventName}-${key}`, pointer, localX, localY)\r\n    this.parent.emit(eventName, key, pointer, localX, localY)\r\n}\r\nexport default SetInteractive;","import Pool from '../../../../pool.js';\r\nimport CONST from '../const.js';\r\n\r\nconst NO_NEWLINE = CONST.NO_NEWLINE;\r\nconst RAW_NEWLINE = CONST.RAW_NEWLINE;\r\nconst WRAPPED_NEWLINE = CONST.WRAPPED_NEWLINE;\r\nconst NO_WRAP = CONST.NO_WRAP;\r\nconst WORD_WRAP = CONST.WORD_WRAP;\r\nconst CHAR_WRAP = CONST.CHAR_WRAP;\r\nconst splitRegExp = CONST.SPLITREGEXP;\r\n\r\nvar WRAP_RESULT = [];\r\nvar WrapText = function (text, getTextWidth, wrapMode, wrapWidth, offset) {\r\n    if (wrapWidth <= 0) {\r\n        wrapMode = NO_WRAP;\r\n    }\r\n\r\n    var retLines = WRAP_RESULT;\r\n    LinesPool.pushMultiple(retLines);\r\n\r\n    if (!text || !text.length) {\r\n        return retLines;\r\n    }\r\n\r\n    var lines = text.split(splitRegExp),\r\n        line, remainWidth, isLaseLine, newLineMode;\r\n    for (var i = 0, linesLen = lines.length; i < linesLen; i++) {\r\n        line = lines[i];\r\n        newLineMode = (i === (linesLen - 1)) ? NO_NEWLINE : RAW_NEWLINE;\r\n\r\n        if (wrapMode === NO_WRAP) {\r\n            var textWidth = getTextWidth(line);\r\n            retLines.push(LinesPool.newline(line, textWidth, newLineMode));\r\n            continue;\r\n        } else {\r\n            if (i === 0) {\r\n                remainWidth = wrapWidth - offset;\r\n            } else {\r\n                remainWidth = wrapWidth;\r\n            }\r\n        }\r\n\r\n        // short string testing\r\n        if (line.length <= 100) {\r\n            var textWidth = getTextWidth(line);\r\n            if (textWidth <= remainWidth) {\r\n                retLines.push(LinesPool.newline(line, textWidth, newLineMode));\r\n                continue;\r\n            }\r\n        }\r\n\r\n        // character mode\r\n        var tokenArray;\r\n        if (wrapMode === WORD_WRAP) {\r\n            // word mode\r\n            tokenArray = line.split(' ');\r\n        } else {\r\n            tokenArray = line;\r\n        }\r\n        var token;\r\n        var curLineText = '',\r\n            lineText = '',\r\n            currLineWidth, lineWidth = 0;\r\n        for (var j = 0, tokenLen = tokenArray.length; j < tokenLen; j++) {\r\n            token = tokenArray[j];\r\n\r\n            if (wrapMode === WORD_WRAP) {\r\n                curLineText += token;\r\n\r\n                if (j < (tokenLen - 1)) {\r\n                    curLineText += ' ';\r\n                }\r\n            } else {\r\n                curLineText += token;\r\n            }\r\n\r\n            currLineWidth = getTextWidth(curLineText);\r\n            if (currLineWidth > remainWidth) {\r\n                // new line\r\n                if (j === 0) {\r\n                    retLines.push(LinesPool.newline('', 0, WRAPPED_NEWLINE));\r\n                } else {\r\n                    retLines.push(LinesPool.newline(lineText, lineWidth, WRAPPED_NEWLINE));\r\n                    curLineText = token;\r\n                    if (wrapMode === WORD_WRAP) {\r\n                        if (j < (tokenLen - 1)) {\r\n                            curLineText += ' ';\r\n                        }\r\n                    }\r\n                    currLineWidth = getTextWidth(curLineText);\r\n                }\r\n\r\n                remainWidth = wrapWidth;\r\n            }\r\n\r\n            lineText = curLineText;\r\n            lineWidth = currLineWidth;\r\n        } // for token in tokenArray\r\n\r\n        // flush remain text\r\n        retLines.push(LinesPool.newline(lineText, lineWidth, newLineMode));\r\n\r\n    } // for each line in lines\r\n\r\n    return retLines;\r\n};\r\n\r\nvar LinesPool = new Pool();\r\nLinesPool.newline = function (text, width, newLineMode) {\r\n    var l = this.pop();\r\n    if (l === null) {\r\n        l = {};\r\n    }\r\n    l.text = text;\r\n    l.width = width;\r\n    l.newLineMode = newLineMode;\r\n    return l;\r\n};\r\n\r\nexport default WrapText;","import DrawMethods from './DrawMethods.js';\r\nimport PenManager from '../penmanger/PenManager.js';\r\nimport HitAreaManager from '../hitareamanager/HitAreaManager.js';\r\nimport SetInteractive from './SetInteractive.js';\r\nimport CONST from '../const.js';\r\nimport WrapText from './WrapText.js';\r\nimport Clone from '../../../../utils/object/Clone.js';\r\n\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\nconst NO_WRAP = CONST.NO_WRAP;\r\nconst NO_NEWLINE = CONST.NO_NEWLINE;\r\n\r\nclass CanvasText {\r\n    constructor(config) {\r\n        this.parent = config.parent;\r\n        this.context = GetValue(config, 'context', null);\r\n        this.canvas = this.context.canvas;\r\n        this.parser = GetValue(config, 'parser', null);\r\n        this.defatultStyle = GetValue(config, 'style', null);\r\n        this.autoRound = true;\r\n\r\n        this.pensPool = GetValue(config, 'pensPool', null);\r\n        this.penManager = this.newPenManager();\r\n        this._tmpPenManager = null;\r\n\r\n        this.hitAreaManager = new HitAreaManager();\r\n\r\n        var context = this.context;\r\n        this.getTextWidth = function (text) {\r\n            return context.measureText(text).width;\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.context = undefined;\r\n        this.canvas = undefined;\r\n        this.parser = undefined;\r\n        this.defatultStyle = undefined;\r\n\r\n        if (this.penManager) {\r\n            this.penManager.destroy();\r\n            this.penManager = undefined;\r\n        }\r\n        if (this._tmpPenManager) {\r\n            this._tmpPenManager.destroy();\r\n            this._tmpPenManager = undefined;\r\n        }\r\n        if (this.hitAreaManager) {\r\n            this.hitAreaManager.destroy();\r\n            this.hitAreaManager = undefined;\r\n        }\r\n    }\r\n\r\n    updatePenManager(text, wrapMode, wrapWidth, lineHeight, penManager) {\r\n        if (penManager === undefined) {\r\n            penManager = this.penManager;\r\n        }\r\n        penManager.freePens();\r\n        if (text === \"\") {\r\n            return penManager;\r\n        }\r\n\r\n        var canvas = this.canvas;\r\n        var context = this.context;\r\n\r\n        var cursorX = 0,\r\n            cursorY = 0;\r\n\r\n        var plainText, curProp, curStyle;\r\n        var match = this.parser.splitText(text),\r\n            result, wrapLines;\r\n        for (var i = 0, len = match.length; i < len; i++) {\r\n            result = this.parser.tagTextToProp(match[i], curProp);\r\n            plainText = result.plainText;\r\n            curProp = result.prop;\r\n\r\n            if (curProp.img) { // Image tag                \r\n                var imgWidth = this.imageManager.getOuterWidth(curProp.img);\r\n                if ((wrapWidth > 0) && (wrapMode !== NO_WRAP)) {  // Wrap mode\r\n                    if (wrapWidth < (cursorX + imgWidth)) {\r\n                        penManager.addNewLinePen();\r\n                        cursorY += lineHeight;\r\n                        cursorX = 0;\r\n                    }\r\n                }\r\n                penManager.addImagePen(cursorX, cursorY, imgWidth, Clone(curProp));\r\n                cursorX += imgWidth;\r\n\r\n            } else if (plainText !== '') {\r\n                // wrap text to lines\r\n                // Save the current context.\r\n                this.context.save();\r\n                curStyle = this.parser.propToContextStyle(\r\n                    this.defatultStyle,\r\n                    curProp\r\n                );\r\n                curStyle.buildFont();\r\n                curStyle.syncFont(canvas, context);\r\n                curStyle.syncStyle(canvas, context);\r\n                wrapLines = WrapText(plainText, this.getTextWidth, wrapMode, wrapWidth, cursorX);\r\n\r\n                // add pens\r\n                var n;\r\n                for (var j = 0, jLen = wrapLines.length; j < jLen; j++) {\r\n                    n = wrapLines[j];\r\n                    penManager.addTextPen(n.text, cursorX, cursorY, n.width, Clone(curProp), n.newLineMode);\r\n\r\n                    if (n.newLineMode !== NO_NEWLINE) {\r\n                        cursorX = 0;\r\n                        cursorY += lineHeight;\r\n                    } else {\r\n                        cursorX += n.width;\r\n                    }\r\n\r\n                }\r\n                this.context.restore();\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return penManager;\r\n    }\r\n\r\n    get startXOffset() {\r\n        var defatultStyle = this.defatultStyle;\r\n        return (defatultStyle.strokeThickness / 2);\r\n    }\r\n\r\n    get startYOffset() {\r\n        var defatultStyle = this.defatultStyle;\r\n        return (defatultStyle.strokeThickness / 2) + defatultStyle.metrics.ascent;\r\n    }\r\n\r\n    get lines() {\r\n        return this.penManager.lines;\r\n    }\r\n\r\n    get desplayLinesCount() {\r\n        var linesCount = this.penManager.linesCount,\r\n            maxLines = this.defatultStyle.maxLines;\r\n        if ((maxLines > 0) && (linesCount > maxLines)) {\r\n            linesCount = maxLines;\r\n        }\r\n        return linesCount;\r\n    }\r\n\r\n    get linesWidth() {\r\n        return this.penManager.getMaxLineWidth();\r\n    }\r\n\r\n    get linesHeight() {\r\n        var linesCount = this.desplayLinesCount;\r\n        var linesHeight = (this.defatultStyle.lineHeight * linesCount);\r\n        if (linesCount > 0) {\r\n            linesHeight -= this.defatultStyle.lineSpacing;\r\n        }\r\n        return linesHeight;\r\n    }\r\n\r\n    get imageManager() {\r\n        return this.parent.imageManager;\r\n    }\r\n\r\n    newPenManager() {\r\n        return new PenManager({\r\n            pensPool: this.pensPool,\r\n            tagToText: this.parser.propToTagText,\r\n            tagToTextScope: this.parser\r\n        });\r\n    }\r\n\r\n    get tmpPenManager() {\r\n        if (this._tmpPenManager === null) {\r\n            this._tmpPenManager = this.newPenManager();\r\n        }\r\n        return this._tmpPenManager;\r\n    }\r\n\r\n    getPlainText(text, start, end) {\r\n        var plainText;\r\n        if (text == null) {\r\n            plainText = this.penManager.plainText;\r\n        } else {\r\n            var m, match = this.parser.splitText(text, 1); // PLAINTEXTONLY_MODE\r\n            plainText = \"\";\r\n            for (var i = 0, len = match.length; i < len; i++) {\r\n                plainText += match[i];\r\n            }\r\n        }\r\n\r\n        if ((start != null) || (end != null)) {\r\n            if (start == null) {\r\n                start = 0;\r\n            }\r\n            if (end == null) {\r\n                end = plainText.length;\r\n            }\r\n            plainText = plainText.substring(start, end);\r\n        }\r\n\r\n        return plainText;\r\n    }\r\n\r\n    getPenManager(text, retPenManager) {\r\n        if (text === undefined) {\r\n            return this.copyPenManager(retPenManager, this.penManager);\r\n        }\r\n\r\n        if (retPenManager === undefined) {\r\n            retPenManager = this.newPenManager();\r\n        }\r\n\r\n        var defatultStyle = this.defatultStyle;\r\n        this.updatePenManager(\r\n            text,\r\n            defatultStyle.wrapMode,\r\n            defatultStyle.wrapWidth,\r\n            defatultStyle.lineHeight,\r\n            retPenManager\r\n        );\r\n        return retPenManager;\r\n    }\r\n\r\n    getText(text, start, end, wrap) {\r\n        if (text == null) {\r\n            return this.penManager.getSliceTagText(start, end, wrap);\r\n        }\r\n\r\n        var penManager = this.tmpPenManager;\r\n        var defatultStyle = this.defatultStyle;\r\n        this.updatePenManager(\r\n            text,\r\n            defatultStyle.wrapMode,\r\n            defatultStyle.wrapWidth,\r\n            defatultStyle.lineHeight,\r\n            penManager\r\n        );\r\n\r\n        return penManager.getSliceTagText(start, end, wrap);\r\n    }\r\n\r\n    copyPenManager(ret, src) {\r\n        if (src === undefined) {\r\n            src = this.penManager;\r\n        }\r\n        return src.copy(ret);\r\n    }\r\n\r\n    getTextWidth(penManager) {\r\n        if (penManager === undefined) {\r\n            penManager = this.penManager;\r\n        }\r\n\r\n        return penManager.getMaxLineWidth();\r\n    }\r\n\r\n    getLastPen(penManager) {\r\n        if (penManager === undefined) {\r\n            penManager = this.penManager;\r\n        }\r\n\r\n        return penManager.lastPen;\r\n    }\r\n};\r\n\r\nvar methods = {\r\n    setInteractive: SetInteractive,\r\n}\r\n\r\nObject.assign(\r\n    CanvasText.prototype,\r\n    DrawMethods,\r\n    methods\r\n);\r\n\r\nexport default CanvasText;","const GetValue = Phaser.Utils.Objects.GetValue;\r\n\r\nclass ImageManager {\r\n    constructor(textureManager) {\r\n        this.textureManager = textureManager;\r\n        this.images = {};\r\n    }\r\n\r\n    add(key, config) {\r\n        if (typeof (key) === 'string') {\r\n            this._add(key, config);\r\n        } else if (Array.isArray(key)) {\r\n            var data = key;\r\n            for (var i = 0, cnt = data.length; i < cnt; i++) {\r\n                this._add(data[i]);\r\n            }\r\n        } else {\r\n            var data = key;\r\n            for (var key in data) {\r\n                this._add(key, data[key]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    _add(key, config) {\r\n        if (config === undefined) {\r\n            config = {\r\n                key: key\r\n            }\r\n        }\r\n\r\n        var textureKey = config.key, frameKey = config.frame;\r\n        var width = config.width, height = config.height;\r\n\r\n        if ((width === undefined) || (height === undefined)) {\r\n            var frame = this.textureManager.getFrame(textureKey, frameKey);\r\n            var frameWidth = (frame) ? frame.cutWidth : 0;\r\n            var frameHeight = (frame) ? frame.cutHeight : 0;\r\n            if ((width === undefined) && (height === undefined)) {\r\n                width = frameWidth;\r\n                height = frameHeight;\r\n            } else if (width === undefined) {\r\n                width = frameWidth * (height / frameHeight);\r\n            } else if (height === undefined) {\r\n                height = frameHeight * (width / frameWidth);\r\n            }\r\n        }\r\n\r\n        this.images[key] = {\r\n            key: textureKey,\r\n            frame: frameKey,\r\n            width: width,\r\n            height: height,\r\n            y: GetValue(config, 'y', 0),\r\n            left: GetValue(config, 'left', 0),\r\n            right: GetValue(config, 'right', 0)\r\n        }\r\n    }\r\n\r\n    remove(key) {\r\n        if (this.images.hasOwnProperty(key)) {\r\n            delete this.images[key];\r\n        }\r\n        return this;\r\n    }\r\n\r\n    get(key) {\r\n        if (!this.images.hasOwnProperty(key)) {\r\n            if (this.textureManager.exists(key)) {\r\n                this.add(key);\r\n            }\r\n        }\r\n        return this.images[key];\r\n    }\r\n\r\n    getOuterWidth(key) {\r\n        var data = this.get(key);\r\n        return (data) ? (data.width + data.left + data.right) : 0;\r\n    }\r\n\r\n    getFrame(key) {\r\n        var data = this.get(key);\r\n        return (data) ? this.textureManager.getFrame(data.key, data.frame) : undefined;\r\n    }\r\n\r\n    hasTexture(key) {\r\n        return !!this.getFrame(key);\r\n    }\r\n}\r\nexport default ImageManager;","import ImageManager from './ImageManager.js';\r\n\r\nvar globImageManager;\r\n\r\nexport default function(textureManager) {\r\n    if (globImageManager === undefined) {\r\n        globImageManager = new ImageManager(textureManager);\r\n    }\r\n    return globImageManager;\r\n}","import Render from './render/Render.js';\r\nimport TextStyle from './textstyle/TextStyle.js'; // extended\r\nimport CanvasTextKlass from './canvastext/CanvasText.js';\r\nimport Pool from '../../../pool.js';\r\nimport CONST from './const.js';\r\nimport GetGlobImageManager from './imagemanager/GetGlobImageManager.js';\r\n\r\nconst AddToDOM = Phaser.DOM.AddToDOM;\r\nconst CanvasPool = Phaser.Display.Canvas.CanvasPool;\r\nconst GameObject = Phaser.GameObjects.GameObject;\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\nconst RemoveFromDOM = Phaser.DOM.RemoveFromDOM;\r\nconst SPLITREGEXP = CONST.SPLITREGEXP;\r\n\r\nvar PensPools = {};\r\n\r\nclass Text extends GameObject {\r\n    constructor(scene, x, y, text, style, type, parser) {\r\n        if (x === undefined) {\r\n            x = 0;\r\n        }\r\n        if (y === undefined) {\r\n            y = 0;\r\n        }\r\n\r\n        super(scene, type);\r\n\r\n        this.renderer = scene.sys.game.renderer;\r\n\r\n        this.setPosition(x, y);\r\n        this.setOrigin(0, 0);\r\n        this.initPipeline();\r\n\r\n        this.canvas = CanvasPool.create(this);\r\n\r\n        this.context = this.canvas.getContext('2d');\r\n\r\n        if (style) {\r\n            // Override align\r\n            if (style.hasOwnProperty('align')) {\r\n                var halign = style.align;\r\n                delete style.align;\r\n                style.halign = halign;\r\n            }\r\n        }\r\n        this.style = new TextStyle(this, style);\r\n\r\n        this.autoRound = true;\r\n\r\n        this._text = undefined;\r\n\r\n        this.padding = {\r\n            left: 0,\r\n            right: 0,\r\n            top: 0,\r\n            bottom: 0\r\n        };\r\n\r\n        this.width = 1;\r\n\r\n        this.height = 1;\r\n\r\n        this.dirty = false;\r\n\r\n        //  If resolution wasn't set, then we get it from the game config\r\n        if (this.style.resolution === 0) {\r\n            this.style.resolution = scene.sys.game.config.resolution;\r\n        }\r\n\r\n        this._crop = this.resetCropObject();\r\n\r\n        //  Create a Texture for this Text object\r\n        this.texture = scene.sys.textures.addCanvas(null, this.canvas, true);\r\n\r\n        //  Get the frame\r\n        this.frame = this.texture.get();\r\n\r\n        //  Set the resolution\r\n        this.frame.source.resolution = this.style.resolution;\r\n\r\n        if (this.renderer && this.renderer.gl) {\r\n            //  Clear the default 1x1 glTexture, as we override it later\r\n\r\n            this.renderer.deleteTexture(this.frame.source.glTexture);\r\n\r\n            this.frame.source.glTexture = null;\r\n        }\r\n\r\n        if (!PensPools.hasOwnProperty(type)) {\r\n            PensPools[type] = new Pool();\r\n        }\r\n        this.canvasText = new CanvasTextKlass({\r\n            parent: this,\r\n            context: this.context,\r\n            parser: parser,\r\n            style: this.style,\r\n            pensPool: PensPools[type]\r\n        });\r\n\r\n        //this.initRTL();\r\n\r\n        if (style && style.padding) {\r\n            this.setPadding(style.padding);\r\n        }\r\n\r\n        this.setText(text);\r\n\r\n        scene.sys.game.events.on('contextrestored', function () {\r\n            this.dirty = true;\r\n        }, this);\r\n    }\r\n\r\n    set text(value) {\r\n        this.setText(value);\r\n    }\r\n    get text() {\r\n        return this._text;\r\n    }\r\n\r\n    initRTL() {\r\n        if (!this.style.rtl) {\r\n            return;\r\n        }\r\n\r\n        //  Here is where the crazy starts.\r\n        //\r\n        //  Due to browser implementation issues, you cannot fillText BiDi text to a canvas\r\n        //  that is not part of the DOM. It just completely ignores the direction property.\r\n\r\n        this.canvas.dir = 'rtl';\r\n\r\n        //  Experimental atm, but one day ...\r\n        this.context.direction = 'rtl';\r\n\r\n        //  Add it to the DOM, but hidden within the parent canvas.\r\n        this.canvas.style.display = 'none';\r\n\r\n        AddToDOM(this.canvas, this.scene.sys.canvas);\r\n\r\n        //  And finally we set the x origin\r\n        this.originX = 1;\r\n    }\r\n\r\n    setText(value) {\r\n        if (!value && value !== 0) {\r\n            value = '';\r\n        }\r\n\r\n        if (Array.isArray(value)) {\r\n            value = value.join('\\n');\r\n        }\r\n\r\n        if (value !== this._text) {\r\n            this._text = value.toString();\r\n\r\n            this.updateText();\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    setStyle(style) {\r\n        return this.style.setStyle(style);\r\n    }\r\n\r\n    setFont(font) {\r\n        return this.style.setFont(font);\r\n    }\r\n\r\n    setFontFamily(family) {\r\n        return this.style.setFontFamily(family);\r\n    }\r\n\r\n    setFontSize(size) {\r\n        return this.style.setFontSize(size);\r\n    }\r\n\r\n    setFontStyle(style) {\r\n        return this.style.setFontStyle(style);\r\n    }\r\n\r\n    setFixedSize(width, height) {\r\n        return this.style.setFixedSize(width, height);\r\n    }\r\n\r\n    setBackgroundColor(color) {\r\n        return this.style.setBackgroundColor(color);\r\n    }\r\n\r\n    setFill(color) {\r\n        return this.style.setFill(color);\r\n    }\r\n\r\n    setColor(color) {\r\n        return this.style.setColor(color);\r\n    }\r\n\r\n    setStroke(color, thickness) {\r\n        return this.style.setStroke(color, thickness);\r\n    }\r\n\r\n    setShadow(x, y, color, blur, shadowStroke, shadowFill) {\r\n        return this.style.setShadow(x, y, color, blur, shadowStroke, shadowFill);\r\n    }\r\n\r\n    setShadowOffset(x, y) {\r\n        return this.style.setShadowOffset(x, y);\r\n    }\r\n\r\n    setShadowColor(color) {\r\n        return this.style.setShadowColor(color);\r\n    }\r\n\r\n    setShadowBlur(blur) {\r\n        return this.style.setShadowBlur(blur);\r\n    }\r\n\r\n    setShadowStroke(enabled) {\r\n        return this.style.setShadowStroke(enabled);\r\n    }\r\n\r\n    setShadowFill(enabled) {\r\n        return this.style.setShadowFill(enabled);\r\n    }\r\n\r\n    setWrapMode(mode) {\r\n        return this.style.setWrapMode(mode);\r\n    }\r\n\r\n    setWrapWidth(width) {\r\n        return this.style.setWrapWidth(width);\r\n    }\r\n\r\n    setAlign(align) {\r\n        return this.style.setHAlign(align);\r\n    }\r\n\r\n    setLineSpacing(value) {\r\n        return this.style.setLineSpacing(value);\r\n    }\r\n\r\n    setPadding(left, top, right, bottom) {\r\n        if (typeof left === 'object') {\r\n            var config = left;\r\n\r\n            //  If they specify x and/or y this applies to all\r\n            var x = GetValue(config, 'x', null);\r\n\r\n            if (x !== null) {\r\n                left = x;\r\n                right = x;\r\n            } else {\r\n                left = GetValue(config, 'left', 0);\r\n                right = GetValue(config, 'right', left);\r\n            }\r\n\r\n            var y = GetValue(config, 'y', null);\r\n\r\n            if (y !== null) {\r\n                top = y;\r\n                bottom = y;\r\n            } else {\r\n                top = GetValue(config, 'top', 0);\r\n                bottom = GetValue(config, 'bottom', top);\r\n            }\r\n        } else {\r\n            if (left === undefined) {\r\n                left = 0;\r\n            }\r\n            if (top === undefined) {\r\n                top = left;\r\n            }\r\n            if (right === undefined) {\r\n                right = left;\r\n            }\r\n            if (bottom === undefined) {\r\n                bottom = top;\r\n            }\r\n        }\r\n\r\n        this.padding.left = left;\r\n        this.padding.top = top;\r\n        this.padding.right = right;\r\n        this.padding.bottom = bottom;\r\n\r\n        return this.updateText(false);\r\n    }\r\n\r\n    setResolution(value) {\r\n        return this.style.setResolution(value);\r\n    }\r\n\r\n    setMaxLines(max) {\r\n        return this.style.setMaxLines(max);\r\n    }\r\n\r\n    updateText(runWrap) {\r\n        if (runWrap === undefined) {\r\n            runWrap = true;\r\n        }\r\n        var canvasText = this.canvasText;\r\n\r\n        // wrap text to pens\r\n        var style = this.style;\r\n        if (runWrap) {\r\n            canvasText.updatePenManager(\r\n                this._text,\r\n                style.wrapMode,\r\n                style.wrapWidth,\r\n                style.lineHeight\r\n            );\r\n        }\r\n\r\n        // resize\r\n        var padding = this.padding;\r\n        var textWidth, textHeight;\r\n        if (style.fixedWidth === 0) {\r\n            this.width = canvasText.linesWidth + padding.left + padding.right;\r\n            textWidth = canvasText.linesWidth;\r\n        }\r\n        else {\r\n            this.width = style.fixedWidth;\r\n            textWidth = this.width - padding.left - padding.right;\r\n            if (textWidth < canvasText.linesWidth) {\r\n                textWidth = canvasText.linesWidth;\r\n            }\r\n        }\r\n        if (style.fixedHeight === 0) {\r\n            this.height = canvasText.linesHeight + padding.top + padding.bottom;\r\n            textHeight = canvasText.linesHeight;\r\n        }\r\n        else {\r\n            this.height = style.fixedHeight;\r\n            textHeight = this.height - padding.top - padding.bottom;\r\n            if (textHeight < canvasText.linesHeight) {\r\n                textHeight = canvasText.linesHeight;\r\n            }\r\n        }\r\n\r\n        var w = this.width;\r\n        var h = this.height;\r\n\r\n        this.updateDisplayOrigin();\r\n\r\n        var resolution = style.resolution;\r\n        w *= resolution;\r\n        h *= resolution;\r\n\r\n        w = Math.max(Math.ceil(w), 1);\r\n        h = Math.max(Math.ceil(h), 1);\r\n\r\n        var canvas = this.canvas;\r\n        var context = this.context;\r\n        if (canvas.width !== w || canvas.height !== h) {\r\n            canvas.width = w;\r\n            canvas.height = h;\r\n            this.frame.setSize(w, h);\r\n        } else {\r\n            context.clearRect(0, 0, w, h);\r\n        }\r\n\r\n        context.save();\r\n        context.scale(resolution, resolution);\r\n\r\n        // draw\r\n        canvasText.draw(\r\n            padding.left,\r\n            padding.top,\r\n            textWidth,\r\n            textHeight\r\n        );\r\n\r\n        context.restore();\r\n\r\n        if (this.renderer.gl) {\r\n            this.frame.source.glTexture = this.renderer.canvasToTexture(canvas, this.frame.source.glTexture, true);\r\n            this.frame.glTexture = this.frame.source.glTexture;\r\n        }\r\n\r\n        this.dirty = true;\r\n\r\n        var input = this.input;\r\n\r\n        if (input && !input.customHitArea) {\r\n            input.hitArea.width = this.width;\r\n            input.hitArea.height = this.height;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    getTextMetrics() {\r\n        return this.style.getTextMetrics();\r\n    }\r\n\r\n    toJSON() {\r\n        var out = Components.ToJSON(this);\r\n\r\n        //  Extra Text data is added here\r\n\r\n        var data = {\r\n            autoRound: this.autoRound,\r\n            text: this._text,\r\n            style: this.style.toJSON(),\r\n            resolution: this.resolution,\r\n            padding: {\r\n                left: this.padding.left,\r\n                right: this.padding.right,\r\n                top: this.padding.top,\r\n                bottom: this.padding.bottom\r\n            }\r\n        };\r\n\r\n        out.data = data;\r\n\r\n        return out;\r\n    }\r\n\r\n    preDestroy() {\r\n        if (this.style.rtl) {\r\n            RemoveFromDOM(this.canvas);\r\n        }\r\n\r\n        CanvasPool.remove(this.canvas);\r\n        this.canvasText.destroy();\r\n    }\r\n\r\n    setInteractive(shape, callback, dropZone) {\r\n        GameObject.prototype.setInteractive.call(this, shape, callback, dropZone);\r\n        this.canvasText.setInteractive();\r\n        return this;\r\n    }\r\n\r\n    getWrappedText(text, start, end) {\r\n        text = this.canvasText.getText(text, start, end, true);\r\n        return text.split(SPLITREGEXP);\r\n    }\r\n\r\n    getPlainText(text, start, end) {\r\n        return this.canvasText.getPlainText(text, start, end);\r\n    }\r\n\r\n    getText(text, start, end) {\r\n        return this.canvasText.getText(text, start, end, false);\r\n    }\r\n\r\n    getSubString(text, start, end) {\r\n        return this.getText(text, start, end);\r\n    }\r\n\r\n    copyPenManager(penManager) {\r\n        return this.canvasText.copyPenManager(penManager);\r\n    }\r\n\r\n    getPenManager(text, penManager) {\r\n        return this.canvasText.getPenManager(text, penManager);\r\n    }\r\n\r\n    setSize(width, height) {\r\n        return this.setFixedSize(width, height);\r\n    }\r\n\r\n    resize(width, height) {\r\n        return this.setFixedSize(width, height);\r\n    }\r\n\r\n    set lineSpacing(value) {\r\n        this.setLineSpacing(value);\r\n    }\r\n    get lineSpacing() {\r\n        return this.style.lineSpacing;\r\n    }\r\n\r\n    get imageManager() {\r\n        return GetGlobImageManager(this.scene.textures);\r\n    }\r\n\r\n    addImage(key, config) {\r\n        this.imageManager.add(key, config);\r\n        return this;\r\n    }\r\n\r\n    drawAreaBounds(graphics, color) {\r\n        this.canvasText.hitAreaManager.drawBounds(graphics, color, this);\r\n        return this;\r\n    }\r\n}\r\n\r\nconst Components = Phaser.GameObjects.Components;\r\nPhaser.Class.mixin(Text,\r\n    [\r\n        Components.Alpha,\r\n        Components.BlendMode,\r\n        Components.ComputedSize,\r\n        Components.Crop,\r\n        Components.Depth,\r\n        Components.Flip,\r\n        Components.GetBounds,\r\n        Components.Mask,\r\n        Components.Origin,\r\n        Components.Pipeline,\r\n        Components.ScrollFactor,\r\n        Components.Tint,\r\n        Components.Transform,\r\n        Components.Visible,\r\n        Render\r\n    ]\r\n);\r\n\r\nexport default Text;","import TextStyle from '../textbase/textstyle/TextStyle.js';\r\n\r\nvar GETPROP_RESULT = {\r\n    plainText: null,\r\n    prevProp: null\r\n};\r\n\r\nvar STYLE_RESULT = new TextStyle();\r\nvar PROPLIST = [];\r\n\r\nclass parser {\r\n    constructor(tags) {\r\n        if (tags === undefined) {\r\n            tags = {};\r\n        }\r\n        this.tags = tags;\r\n    }\r\n\r\n    addTag(name, prop) {\r\n        this.tags[name] = prop;\r\n    }\r\n\r\n    splitText(text, mode) {\r\n        var result = [];\r\n        var arr, m, charIdx = 0,\r\n            totalLen = text.length,\r\n            matchStart = totalLen;\r\n        var innerMatch;\r\n        while (true) {\r\n            arr = RE_SPLITTEXT.exec(text);\r\n            if (!arr) {\r\n                break;\r\n            }\r\n\r\n            m = arr[0];\r\n            matchStart = RE_SPLITTEXT.lastIndex - m.length;\r\n\r\n            if (charIdx < matchStart) {\r\n                result.push(text.substring(charIdx, matchStart));\r\n            }\r\n            if (mode === undefined) {\r\n                result.push(m);\r\n            } else if (mode === 1) { // RAWTEXTONLY_MODE\r\n                if (RE_CLASS_HEADER.test(m)) {\r\n                    innerMatch = m.match(RE_CLASS);\r\n                    result.push(innerMatch[2]);\r\n                } else if (RE_STYLE_HEADER.test(m)) {\r\n                    innerMatch = m.match(RE_STYLE);\r\n                    result.push(innerMatch[2]);\r\n                }\r\n            }\r\n\r\n            charIdx = RE_SPLITTEXT.lastIndex;\r\n        }\r\n\r\n\r\n        if (charIdx < totalLen) {\r\n            result.push(text.substring(charIdx, totalLen));\r\n        }\r\n        return result; // [text,...]\r\n    }\r\n\r\n    tagTextToProp(text, prevProp) {\r\n        var plainText, propOut;\r\n        if (RE_CLASS_HEADER.test(text)) {\r\n            var innerMatch = text.match(RE_CLASS);\r\n            if (innerMatch != null) {\r\n                var name = innerMatch[1];\r\n                var tags = this.tags;\r\n                if (tags.hasOwnProperty(name)) {\r\n                    propOut = tags[name];\r\n                } else {\r\n                    propOut = {};\r\n                }\r\n                propOut._class = name;\r\n                plainText = innerMatch[2];\r\n            }\r\n        } else if (RE_STYLE_HEADER.test(text)) {\r\n            var innerMatch = text.match(RE_STYLE);\r\n            if (innerMatch != null) {\r\n                var style = innerMatch[1];\r\n                propOut = styleToProp(style);\r\n                propOut._style = style;\r\n                plainText = innerMatch[2];\r\n            }\r\n        }\r\n\r\n        if (plainText == null) {\r\n            plainText = text;\r\n        }\r\n\r\n        if (propOut == null) {\r\n            propOut = {};\r\n        }\r\n\r\n        var result = GETPROP_RESULT;\r\n        result.plainText = plainText;\r\n        result.prop = propOut;\r\n        return result;\r\n    }\r\n\r\n    propToContextStyle(defaultStyle, prop) {\r\n        var result = STYLE_RESULT;\r\n        if (!prop.hasOwnProperty('img')) {\r\n            result.image = null;\r\n\r\n            if (prop.hasOwnProperty('family') || prop.hasOwnProperty('fontFamily') || prop.hasOwnProperty('font-family')) {\r\n                var family = (prop.hasOwnProperty('family')) ? prop.family :\r\n                    (prop.hasOwnProperty('fontFamily')) ? prop.fontFamily :\r\n                    prop['font-family'];\r\n                result.fontFamily = family;\r\n            } else {\r\n                result.fontFamily = defaultStyle.fontFamily;\r\n            }\r\n\r\n            if (prop.hasOwnProperty('size') || prop.hasOwnProperty('fontSize') || prop.hasOwnProperty('font-size')) {\r\n                var size = (prop.hasOwnProperty('size')) ? prop.size :\r\n                    (prop.hasOwnProperty('fontSize')) ? prop.fontSize :\r\n                    prop['font-size'];\r\n                if (typeof (size) === 'number') {\r\n                    size = size.toString() + 'px';\r\n                }\r\n                result.fontSize = size;\r\n            } else {\r\n                result.fontSize = defaultStyle.fontSize;\r\n            }\r\n\r\n            if (prop.hasOwnProperty('style') || prop.hasOwnProperty('fontStyle') || prop.hasOwnProperty('font-style')) {\r\n                var fontStyle = (prop.hasOwnProperty('style')) ? prop.style :\r\n                    (prop.hasOwnProperty('fontStyle')) ? prop.fontStyle :\r\n                    prop['font-style'];\r\n                result.fontStyle = fontStyle;\r\n            } else {\r\n                result.fontStyle = defaultStyle.fontStyle;\r\n            }\r\n\r\n            if (prop.hasOwnProperty('color') || prop.hasOwnProperty('font-color')) {\r\n                var color = (prop.hasOwnProperty('color')) ? prop.color : prop['font-color'];\r\n                result.color = prop.color;\r\n            } else {\r\n                result.color = defaultStyle.color;\r\n            }\r\n\r\n            if (prop.hasOwnProperty('stroke')) {\r\n                var stroke = prop.stroke; // {color, thinkness}\r\n                result.stroke = (stroke.hasOwnProperty('color')) ? stroke.color : defaultStyle.stroke;\r\n                result.strokeThickness = (stroke.hasOwnProperty('thinkness')) ? stroke.thinkness : defaultStyle.strokeThickness;\r\n            } else {\r\n                result.stroke = defaultStyle.stroke;\r\n                result.strokeThickness = defaultStyle.strokeThickness;\r\n            }\r\n        } else {\r\n            result.image = prop.img;\r\n        }\r\n\r\n        if (prop.hasOwnProperty('shadow')) {\r\n            var shadow = prop.shadow; // {color, offsetX, offsetY, blur}\r\n            result.shadowColor = (shadow.hasOwnProperty('color')) ? shadow.color : defaultStyle.shadowColor;\r\n            result.shadowOffsetX = (shadow.hasOwnProperty('offsetX')) ? shadow.offsetX : defaultStyle.shadowOffsetX;\r\n            result.shadowOffsetY = (shadow.hasOwnProperty('offsetY')) ? shadow.offsetY : defaultStyle.shadowOffsetY;\r\n            result.shadowBlur = (shadow.hasOwnProperty('blur')) ? shadow.blur : defaultStyle.shadowBlur;\r\n            result.shadowStroke = true;\r\n            result.shadowFill = true;\r\n        } else {\r\n            result.shadowColor = defaultStyle.shadowColor;\r\n            result.shadowOffsetX = defaultStyle.shadowOffsetX;\r\n            result.shadowOffsetY = defaultStyle.shadowOffsetY;\r\n            result.shadowBlur = defaultStyle.shadowBlur;\r\n            result.shadowStroke = defaultStyle.shadowStroke;\r\n            result.shadowFill = defaultStyle.shadowFill;\r\n        }\r\n\r\n        if (prop.hasOwnProperty('u') || prop.hasOwnProperty('underline')) {\r\n            var u = (prop.hasOwnProperty('u')) ? prop.u : prop.underline; // {color, thinkness, offset}\r\n            result.underlineColor = (u.hasOwnProperty('color')) ? u.color : defaultStyle.underlineColor;\r\n            result.underlineThickness = (u.hasOwnProperty('thinkness')) ? u.thinkness : defaultStyle.underlineThickness;\r\n            result.underlineOffset = (u.hasOwnProperty('offset')) ? u.offset : defaultStyle.underlineOffset;\r\n        } else {\r\n            result.underlineColor = defaultStyle.underlineColor;\r\n            result.underlineThickness = defaultStyle.underlineThickness;\r\n            result.underlineOffset = defaultStyle.underlineOffset;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    propToTagText(text, prop, prevProp) {\r\n        if (prop.hasOwnProperty('_class')) { // class mode\r\n            if (text === '') {\r\n                if (this.isTextTag(prop._class)) {\r\n                    return '';\r\n                }\r\n            }\r\n            return \"<class='\" + prop._class + \"'>\" + text + \"</class>\";\r\n        } else if (prop.hasOwnProperty('_style')) { // class mode\r\n            return \"<style='\" + prop._style + \"'>\" + text + \"</style>\";\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.tags = undefined;\r\n    }\r\n\r\n    isTextTag(tagName) {\r\n        var tag = this.tags[tagName];\r\n        if (tag) {\r\n            return (tag.img == null);\r\n        } else { // tag not found\r\n            return false;\r\n        }\r\n    }\r\n};\r\n\r\nvar styleToProp = function (s) {\r\n    s = s.split(\";\");\r\n\r\n    var result = {},\r\n        prop, k, v;\r\n    for (var i = 0, slen = s.length; i < slen; i++) {\r\n        prop = s[i].split(\":\");\r\n        k = prop[0], v = prop[1];\r\n        if (isEmpty(k) || isEmpty(v)) {\r\n            continue;\r\n        }\r\n\r\n        switch (k) {\r\n            case 'stroke':\r\n                var stroke = v.split(' '); // stroke:blue 1px\r\n                var len = stroke.length;\r\n                v = {};\r\n                if (len >= 1) {\r\n                    v.color = stroke[0];\r\n                }\r\n                if (len >= 2) {\r\n                    v.thinkness = parseInt(stroke[1].replace('px', ''));\r\n                }\r\n                break;\r\n            case 'shadow':\r\n                var shadow = v.split(' '); // shadow:blue 2px 2px 2px\r\n                var len = shadow.length;\r\n                v = {};\r\n                if (len >= 1) {\r\n                    v.color = shadow[0];\r\n                }\r\n                if (len >= 2) {\r\n                    v.offsetX = parseInt(shadow[1].replace('px', ''));\r\n                }\r\n                if (len >= 3) {\r\n                    v.offsetY = parseInt(shadow[2].replace('px', ''));\r\n                }\r\n                if (len >= 4) {\r\n                    v.blur = parseInt(shadow[3].replace('px', ''));\r\n                }\r\n                break;\r\n            case 'u':\r\n            case 'underline': // underline:blue 3px -1px\r\n                var u = v.split(' ');\r\n                var len = u.length;\r\n                v = {};\r\n                if (len >= 1) {\r\n                    v.color = u[0];\r\n                }\r\n                if (len >= 2) {\r\n                    v.thinkness = parseInt(u[1].replace('px', ''));\r\n                }\r\n                if (len >= 3) {\r\n                    v.offset = parseInt(u[2].replace('px', ''));\r\n                }\r\n                break;\r\n        }\r\n        result[k] = v;\r\n    }\r\n    return result;\r\n};\r\n\r\nvar isEmpty = function (s) {\r\n    // Remove white spaces.\r\n    s = s.replace(RE_SPACE, '');\r\n    return (s.length === 0);\r\n};\r\n\r\nvar RE_SPLITTEXT = /<\\s*class=[\"|']([^\"|']+)[\"|']\\s*\\>([\\s\\S]*?)<\\s*\\/class\\s*\\>|<\\s*style=[\"|']([^\"|']+)[\"|']\\s*\\>([\\s\\S]*?)<\\s*\\/style\\s*\\>/g;\r\nvar RE_CLASS_HEADER = /<\\s*class=/i;\r\nvar RE_CLASS = /<\\s*class=[\"|']([^\"|']+)[\"|']\\s*\\>([\\s\\S]*?)<\\s*\\/class\\s*\\>/;\r\nvar RE_STYLE_HEADER = /<\\s*style=/i;\r\nvar RE_STYLE = /<\\s*style=[\"|']([^\"|']+)[\"|']\\s*\\>([\\s\\S]*?)<\\s*\\/style\\s*\\>/;\r\nvar RE_SPACE = /^\\s+|\\s+$/;\r\n\r\nexport default parser;","import Text from '../textbase/Text.js';\r\nimport ParserKlass from './Parser.js';\r\n\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\n\r\nclass TagText extends Text {\r\n    constructor(scene, x, y, text, style) {\r\n        var tags = GetValue(style, 'tags', undefined);\r\n        var parser = new ParserKlass(tags);\r\n        super(scene, x, y, text, style, 'rexTagText', parser);\r\n        this.parser = parser;\r\n    }\r\n\r\n    addTag(name, prop) {\r\n        this.parser.addTag(name, prop);\r\n        return this.updateText(true);\r\n    }\r\n\r\n    addTags(tags) {\r\n        for(var name in tags){\r\n            this.parser.addTag(name, tags[name]);\r\n        }\r\n        return this.updateText(true);\r\n    }\r\n\r\n    preDestroy() {\r\n        super.preDestroy();\r\n        this.parser.destroy();\r\n        this.parser = undefined;\r\n    }\r\n}\r\n\r\nexport default TagText;","import TagText from './TagText.js';\r\n\r\nconst GetAdvancedValue = Phaser.Utils.Objects.GetAdvancedValue;\r\nconst BuildGameObject = Phaser.GameObjects.BuildGameObject;\r\n\r\nexport default function (config, addToScene) {\r\n    // style Object = {\r\n    //     font: [ 'font', '16px Courier' ],\r\n    //     backgroundColor: [ 'backgroundColor', null ],\r\n    //     fill: [ 'fill', '#fff' ],\r\n    //     stroke: [ 'stroke', '#fff' ],\r\n    //     strokeThickness: [ 'strokeThickness', 0 ],\r\n    //     shadowOffsetX: [ 'shadow.offsetX', 0 ],\r\n    //     shadowOffsetY: [ 'shadow.offsetY', 0 ],\r\n    //     shadowColor: [ 'shadow.color', '#000' ],\r\n    //     shadowBlur: [ 'shadow.blur', 0 ],\r\n    //     shadowStroke: [ 'shadow.stroke', false ],\r\n    //     shadowFill: [ 'shadow.fill', false ],\r\n    //     align: [ 'align', 'left' ],\r\n    //     maxLines: [ 'maxLines', 0 ],\r\n    //     fixedWidth: [ 'fixedWidth', false ],\r\n    //     fixedHeight: [ 'fixedHeight', false ]\r\n    // }\r\n\r\n    var content = GetAdvancedValue(config, 'text', '');\r\n    var style = GetAdvancedValue(config, 'style', null);\r\n\r\n    //  Padding\r\n    //      { padding: 2 }\r\n    //      { padding: { x: , y: }}\r\n    //      { padding: { left: , top: }}\r\n    //      { padding: { left: , right: , top: , bottom: }}  \r\n\r\n    var padding = GetAdvancedValue(config, 'padding', null);\r\n\r\n    if (padding !== null) {\r\n        style.padding = padding;\r\n    }\r\n\r\n    if (addToScene !== undefined) {\r\n        config.add = addToScene;\r\n    }\r\n\r\n    var gameObject = new TagText(this.scene, 0, 0, content, style);\r\n    BuildGameObject(this.scene, gameObject, config);\r\n\r\n    //  Text specific config options:\r\n\r\n    gameObject.autoRound = GetAdvancedValue(config, 'autoRound', true);\r\n    gameObject.resolution = GetAdvancedValue(config, 'resolution', 1);\r\n\r\n    return gameObject;\r\n};","import Factory from './gameobjects/text/tagtext/Factory.js';\r\nimport Creator from './gameobjects/text/tagtext/Creator.js';\r\nimport TagText from './gameobjects/text/tagtext/TagText.js';\r\n\r\nPhaser.GameObjects.GameObjectFactory.register('rexTagText', Factory);\r\nPhaser.GameObjects.GameObjectCreator.register('rexTagText', Creator);\r\n\r\nexport default TagText;","import TagText from './TagText.js';\r\n\r\nexport default function (x, y, text, style) {\r\n    var gameObject = new TagText(this.scene, x, y, text, style);\r\n    this.scene.add.existing(gameObject);\r\n    return gameObject;\r\n}","export default {\r\n    setEventEmitter(eventEmitter, EventEmitterClass) {\r\n        if (EventEmitterClass === undefined) {\r\n            EventEmitterClass = Phaser.Events.EventEmitter; // Use built-in EventEmitter class by default\r\n        }\r\n        this._privateEE = (eventEmitter === undefined);\r\n        this._eventEmitter = (this._privateEE) ? (new EventEmitterClass()) : eventEmitter;\r\n        return this;\r\n    },\r\n\r\n    destroyEventEmitter() {\r\n        if (this._eventEmitter && this._privateEE) {\r\n            this._eventEmitter.shutdown();\r\n        }\r\n        return this;\r\n    },\r\n\r\n    getEventEmitter() {\r\n        return this._eventEmitter;\r\n    },\r\n\r\n    on: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.on.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    once: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.once.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    off: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.off.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    emit: function (event) {\r\n        if (this._eventEmitter && event) {\r\n            this._eventEmitter.emit.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    addListener: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.addListener.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    removeListener: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.removeListener.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    removeAllListeners: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.removeAllListeners.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    listenerCount: function () {\r\n        if (this._eventEmitter) {\r\n            return this._eventEmitter.listenerCount.apply(this._eventEmitter, arguments);\r\n        }\r\n        return 0;\r\n    },\r\n\r\n    listeners: function () {\r\n        if (this._eventEmitter) {\r\n            return this._eventEmitter.listeners.apply(this._eventEmitter, arguments);\r\n        }\r\n        return [];\r\n    }\r\n};","const SceneClass = Phaser.Scene;\r\nvar IsSceneObject = function (object) {\r\n    return (object instanceof SceneClass);\r\n}\r\nexport default IsSceneObject;","import IsSceneObject from './IsSceneObject.js';\r\n\r\nvar GetSceneObject = function (object) {\r\n    if (IsSceneObject(object)) { // object = scene\r\n        return object;\r\n    } else if (object.scene && IsSceneObject(object.scene)) { // object = game object\r\n        return object.scene;\r\n    } else if (object.parent && object.parent.scene && IsSceneObject(object.parent.scene)) { // parent = bob object\r\n        return object.parent.scene;\r\n    }\r\n}\r\n\r\nexport default GetSceneObject;","import EventEmitterMethods from '../../utils/eventemitter/EventEmitterMethods.js';\r\nimport GetSceneObject from '../../utils/system/GetSceneObject.js';\r\n\r\nconst GetFastValue = Phaser.Utils.Objects.GetFastValue;\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\n\r\nclass TextTyping {\r\n    constructor(gameObject, config) {\r\n        this.gameObject = gameObject;\r\n        this.scene = GetSceneObject(gameObject);        \r\n        this.setEventEmitter(GetValue(config, 'eventEmitter', undefined));\r\n        \r\n        this.timer = null;\r\n        this.resetFromJSON(config);\r\n        this.boot();\r\n    }\r\n\r\n    /**\r\n     * Reset status by JSON object\r\n     * @param {object} o JSON object\r\n     * @returns {object} this object\r\n     */\r\n    resetFromJSON(o) {\r\n        this.setTypeMode(GetValue(o, 'typeMode', 0));\r\n        this.setTypeSpeed(GetValue(o, 'speed', 333));\r\n        this.setTextCallback = GetFastValue(o, 'setTextCallback', null);\r\n        this.setTextCallbackScope = GetFastValue(o, 'setTextCallbackScope', null);\r\n\r\n        this.typingIdx = GetFastValue(o, 'typingIdx', 0);\r\n        this.text = transferText(GetFastValue(o, 'text', ''));\r\n        this.textLen = GetFastValue(o, 'textLen', 0);\r\n        this.insertIdx = GetFastValue(o, 'insertIdx', null);\r\n\r\n        var elapsed = GetFastValue(o, 'elapsed', null);\r\n        if (elapsed !== null) {\r\n            this.start(undefined, undefined, this.typingIdx, elapsed);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Return status in JSON object\r\n     * @returns JSON object\r\n     */\r\n    toJSON() {\r\n        var elapsed;\r\n        var timer = this.getTimer();\r\n        if (timer) {\r\n            elapsed = timer.elapsed;\r\n        } else {\r\n            elapsed = null;\r\n        }\r\n\r\n        return {\r\n            typeMode: this.typeMode,\r\n            speed: this.speed,\r\n            setTextCallback: this.setTextCallback,\r\n            setTextCallbackScope: this.setTextCallbackScope,\r\n\r\n            typingIdx: this.typingIdx,\r\n            text: this.text,\r\n            textLen: this.textLen,\r\n            insertIdx: this.insertIdx,\r\n            elapsed: elapsed\r\n        };\r\n    }\r\n\r\n    boot() {\r\n        if (this.gameObject.once) { // oops, bob object does not have event emitter\r\n            this.gameObject.once('destroy', this.destroy, this);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    shutdown() {\r\n        this.destroyEventEmitter();\r\n        this.freeTimer();\r\n        this.gameObject = undefined;\r\n        this.scene = undefined;\r\n        return this;\r\n    }\r\n\r\n    destroy() {\r\n        this.shutdown();\r\n        return this;\r\n    }\r\n\r\n    setTypeMode(m) {\r\n        if (typeof (m) === 'string') {\r\n            m = TYPEMODE[m];\r\n        }\r\n        this.typeMode = m;\r\n        return this;\r\n    }\r\n\r\n    setTypeSpeed(speed) {\r\n        this.speed = speed;\r\n        return this;\r\n    }\r\n\r\n    get isTyping() {\r\n        return (this.getTimer() !== null);\r\n    }\r\n\r\n    get isLastChar() {\r\n        return (this.typingIdx === this.textLen);\r\n    }\r\n\r\n    start(text, speed, startIdx, timerStartAt) {\r\n        if (text !== undefined) {\r\n            this.setTypingContent(text);\r\n        }\r\n        if (speed !== undefined) {\r\n            this.speed = speed;\r\n        }\r\n        if (startIdx === undefined) {\r\n            startIdx = 0;\r\n        }\r\n\r\n        this.typingIdx = startIdx + 1;\r\n        if (this.speed === 0) {\r\n            this.stop(true);\r\n        } else {\r\n            this.startTimer(timerStartAt);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    appendText(text) {\r\n        var newText = this.text.concat(transferText(text));\r\n        if (this.isTyping) {\r\n            this.setTypingContent(newText);\r\n        } else {\r\n            this.start(newText, undefined, this.textLen);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    stop(showAllText) {\r\n        var timer = this.getTimer();\r\n        if (timer) {\r\n            this.freeTimer();\r\n        }\r\n        if (showAllText) {\r\n            this.typingIdx = this.textLen;\r\n            this.setText(this.text);\r\n            this.emit('type');\r\n            this.emit('complete', this, this.gameObject);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    pause() {\r\n        var timer = this.getTimer();\r\n        if (timer) {\r\n            timer.paused = true;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    resume() {\r\n        var timer = this.getTimer();\r\n        if (timer) {\r\n            timer.paused = false;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    setTypingContent(text) {\r\n        this.text = transferText(text);\r\n        this.textLen = this.getTextLength(this.text);\r\n        return this;\r\n    }\r\n\r\n    onTyping() {\r\n        var newText = this.getTypingString(this.text, this.typingIdx, this.textLen, this.typeMode);\r\n        this.setText(newText);\r\n        this.emit('type');\r\n\r\n        if (this.isLastChar) {\r\n            this.freeTimer();\r\n            this.emit('complete', this, this.gameObject);\r\n        } else {\r\n            this.timer.delay = this.speed; // delay of next typing            \r\n            this.typingIdx++;\r\n        }\r\n    }\r\n\r\n    getTypingString(text, typeIdx, textLen, typeMode) {\r\n        var result;\r\n        if (typeMode === 0) { //left-to-right\r\n            var startIdx = 0;\r\n            var endIdx = typeIdx;\r\n            this.insertIdx = endIdx;\r\n            result = this.getSubString(text, startIdx, endIdx);\r\n\r\n        } else if (typeMode === 1) { //right-to-left\r\n            var endIdx = textLen;\r\n            var startIdx = endIdx - typeIdx;\r\n            this.insertIdx = 0;\r\n            result = this.getSubString(text, startIdx, endIdx);\r\n\r\n        } else if (typeMode === 2) { //middle-to-sides\r\n            var midIdx = textLen / 2;\r\n            var startIdx = Math.floor(midIdx - (typeIdx / 2));\r\n            var endIdx = startIdx + typeIdx;\r\n            this.insertIdx = (typeIdx % 2) ? typeIdx : 0;\r\n            result = this.getSubString(text, startIdx, endIdx);\r\n\r\n        } else if (typeMode === 3) { //sides-to-middle\r\n            var lowerLen = Math.floor(typeIdx / 2);\r\n            var lowerResult;\r\n            if (lowerLen > 0) {\r\n                var endIdx = textLen;\r\n                var startIdx = endIdx - lowerLen;\r\n                lowerResult = this.getSubString(text, startIdx, endIdx);\r\n            } else {\r\n                lowerResult = \"\";\r\n            }\r\n\r\n            var upperLen = typeIdx - lowerLen;\r\n            var upperResult;\r\n            if (upperLen > 0) {\r\n                var startIdx = 0;\r\n                var endIdx = startIdx + upperLen;\r\n                this.insertIdx = endIdx;\r\n                upperResult = this.getSubString(text, startIdx, endIdx);\r\n            } else {\r\n                upperResult = \"\";\r\n                this.insertIdx = 0;\r\n            }\r\n            result = upperResult + lowerResult;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    startTimer(timerStartAt) {\r\n        if (this.timer) {\r\n            this.freeTimer();\r\n        }\r\n        var delay, startAt;\r\n        if (timerStartAt === undefined) {\r\n            delay = 0;\r\n            startAt = 0;\r\n        } else {\r\n            delay = this.speed;\r\n            startAt = timerStartAt;\r\n        }\r\n\r\n        this.timer = this.scene.time.addEvent({\r\n            delay: 0,\r\n            startAt: startAt,\r\n            loop: true,\r\n            callback: this.onTyping,\r\n            callbackScope: this\r\n        });\r\n        return this;\r\n    }\r\n\r\n    getTimer() {\r\n        return this.timer;\r\n    }\r\n\r\n    freeTimer() {\r\n        if (this.timer) {\r\n            this.timer.remove();\r\n            this.timer = null;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    setText(text) {\r\n        if (this.setTextCallback) {\r\n            if (this.setTextCallbackScope) {\r\n                text = this.setTextCallback.call(this.setTextCallbackScope, text, this.isLastChar, this.insertIdx);\r\n            } else {\r\n                text = this.setTextCallback(text, this.isLastChar, this.insertIdx);\r\n            }\r\n        }\r\n        this.gameObject.setText(text);\r\n    }\r\n\r\n    getTextLength(text) {\r\n        var gameObject = this.gameObject;\r\n        var len;\r\n        if (gameObject.getPlainText) {\r\n            len = gameObject.getPlainText(text).length;\r\n        } else {\r\n            len = text.length;\r\n        }\r\n\r\n        return len;\r\n    }\r\n\r\n    getSubString(text, startIdx, endIdx) {\r\n        var gameObject = this.gameObject;\r\n        var result;\r\n        if (gameObject.getSubString) {\r\n            result = gameObject.getSubString(text, startIdx, endIdx);\r\n        } else {\r\n            result = text.slice(startIdx, endIdx);\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nObject.assign(\r\n    TextTyping.prototype,\r\n    EventEmitterMethods\r\n);\r\n\r\nvar transferText = function (text) {\r\n    if (Array.isArray(text)) {\r\n        text = text.join('\\n');\r\n    } else if (typeof (text) === 'number') {\r\n        text = text.toString();\r\n    }\r\n    return text;\r\n}\r\n\r\n/** @private */\r\nconst TYPEMODE = {\r\n    'left-to-right': 0,\r\n    'right-to-left': 1,\r\n    'middle-to-sides': 2,\r\n    'sides-to-middle': 3\r\n};\r\n\r\n\r\nexport default TextTyping;","import TextTyping from './behaviors/texttyping/TextTyping.js';\r\nexport default TextTyping;","export default {\r\n    None: 0,\r\n    EasyWin: 1,\r\n    Hard: 2\r\n};","export default {\r\n    Active: 0,\r\n    Destroyed: 1\r\n};","import LevelManifest from \"./LevelManifest\";\r\nimport TileGenerationBehavior from \"./TileGenerationBehavior\";\r\nimport Tile from \"./Tile\";\r\n\r\nexport default [\r\n\r\n    // 0\r\n    {\r\n        score: 100,\r\n        timer: 0,\r\n        behavior: TileGenerationBehavior.None\r\n    },\r\n\r\n    // 1\r\n    {\r\n        score: 200,\r\n        timer: 120,\r\n        behavior: TileGenerationBehavior.None\r\n    },\r\n\r\n    // 2\r\n    {\r\n        score: 300,\r\n        timer: 30,\r\n        behavior: TileGenerationBehavior.Hard\r\n    },\r\n\r\n    // 3\r\n    {\r\n        score: 300,\r\n        timer: 120,\r\n        behavior: TileGenerationBehavior.EasyWin\r\n    },\r\n\r\n    // 4\r\n    {\r\n        score: 400,\r\n        timer: 300,\r\n        behavior: TileGenerationBehavior.EasyWin,\r\n        handler: (state) => {\r\n            if(state.tileGrid.TileGenerationBehavior !== TileGenerationBehavior.Hard && state.score > (LevelManifest[state.level]/2))\r\n            {\r\n                state.tileGrid.tileGenerationBehavior = TileGenerationBehavior.Hard;\r\n            }\r\n        }\r\n    },\r\n\r\n    // 5\r\n    {\r\n        score: 1000,\r\n        timer: 300,\r\n        behavior: TileGenerationBehavior.Hard\r\n    },\r\n\r\n    // 6\r\n    {\r\n        score: 1000,\r\n        timer: 300,\r\n        behavior: TileGenerationBehavior.Hard\r\n    },\r\n\r\n    // 7\r\n    {\r\n        score: 1000,\r\n        timer: 300,\r\n        behavior: TileGenerationBehavior.EasyWin\r\n    },\r\n\r\n    // 8\r\n    {\r\n        score: 1000,\r\n        timer: 300,\r\n        behavior: TileGenerationBehavior.None\r\n    }\r\n];","// Source: https://stackoverflow.com/questions/5915096/get-random-item-from-javascript-array\r\nconst getRandomItem = (items) => {\r\n    return items[Math.floor(Math.random() * items.length)];\r\n}\r\n\r\nexport {\r\n    getRandomItem\r\n}","export default [\r\n    { name: 'Blue', imageKey: 'tile_01' },\r\n    { name: 'Green', imageKey: 'tile_02' },\r\n    { name: 'Red', imageKey: 'tile_03' },\r\n    { name: 'Yellow', imageKey: 'tile_04' }\r\n];","import { getRandomItem } from './Utility';\r\nimport Tile from './Tile';\r\nimport TileGenerationBehavior from './TileGenerationBehavior';\r\nimport TileState from './TileState';\r\nimport TileType from './TileType';\r\n\r\nexport default class {\r\n\r\n    constructor(tileGridWidth, tileGridHeight, tileSize, offsetX, offsetY, onTileSelect, onTileMatch, tileGenerationBehavior, queue)\r\n    {\r\n        this.offsetX = offsetX;\r\n        this.offsetY = offsetY;\r\n        this.tileSize = tileSize;\r\n        this.tileGridHeight = tileGridHeight;\r\n        this.tileGridWidth = tileGridWidth;\r\n        this.tileGrid = [];\r\n        this.tileImageContainer = null;\r\n        this.playAreaOffset = (this.tileGridHeight * this.tileSize);\r\n\r\n        this.onTileSelect = onTileSelect;\r\n        this.onTileMatch = onTileMatch;\r\n\r\n        this.tileGenerationBehavior = tileGenerationBehavior;\r\n\r\n        this.queue = queue;\r\n\r\n        // We're going to generate a grid that's twice the height of\r\n        // the desired tile grid height since we'll use the hidden, upper\r\n        // region to stage the bricks that will fall into the play area\r\n        for(let y = 0; y < tileGridHeight * 2; y++)\r\n        {\r\n            this.tileGrid[y] = [];\r\n            for(let x = 0; x < tileGridWidth; x++)\r\n            {\r\n                this.tileGrid[y][x] = (y < tileGridHeight)\r\n                    ? null\r\n                    : this.createTile(this.getTileType(x, y, TileGenerationBehavior.None), x, y);\r\n\r\n                // When we're generating the grid, we start with the default tile generation\r\n                // behavior since the \"Easy Win\" behavior will create a grid with identical\r\n                // tiles\r\n            }\r\n        }\r\n    }\r\n\r\n    create(context)\r\n    {\r\n        this.tileImageContainer = context.add.container();\r\n\r\n        // Create all of the tiles\r\n        this.forEachTile(tile => {\r\n\r\n            if(tile === null)\r\n            {\r\n                return;\r\n            }\r\n\r\n            tile.create(context);\r\n            this.tileImageContainer.add(tile.image);\r\n\r\n        });\r\n\r\n        // Create a mask to only show the play area\r\n        const maskShape = context.make.graphics();\r\n        maskShape.fillStyle(0xffffff, 1);\r\n        maskShape.fillRect(this.offsetX - (this.tileSize/2), this.offsetY + (this.tileGridHeight * this.tileSize) - (this.tileSize/2), this.tileGridWidth * this.tileSize, this.tileGridHeight * this.tileSize);\r\n        \r\n        this.tileImageContainer.mask = new Phaser.Display.Masks.GeometryMask(context, maskShape);\r\n    }\r\n\r\n    update(context)\r\n    {\r\n        const self = this;\r\n\r\n        if(self.queue.length > 0)\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Detect and destroy any matches\r\n        const matchedTiles = self.getMatches();\r\n\r\n        if(matchedTiles.length > 0)\r\n        {\r\n            self.onTileMatch(context, matchedTiles);\r\n        }\r\n\r\n        let destroys = [];\r\n        matchedTiles.forEach(t => { destroys.push(t.destroy(context, this.tileImageContainer)); });\r\n\r\n        if(destroys.length > 0)\r\n        {\r\n            self.queue.push(() => { return Promise.all(destroys); });\r\n        }\r\n\r\n        // Remove any destroyed tiles\r\n        self.forEachTile((tile, x, y) => {\r\n\r\n            if(tile === null)\r\n            {\r\n                return;\r\n            }\r\n\r\n            if(tile.state === TileState.Destroyed)\r\n            {\r\n                self.tileGrid[y][x] = null;\r\n            }\r\n\r\n        });\r\n\r\n        // Shift all of the tiles downward to fill empty spots\r\n        let drops = [];\r\n        for(let x = 0; x < this.tileGridWidth; x++)\r\n        {\r\n            let y = (this.tileGridHeight * 2) - 1;\r\n            while(y >= 0)\r\n            {\r\n                // If the tile is null...\r\n                if(self.tileGrid[y][x] === null)\r\n                {\r\n                    // ...find the closest tile that's not null...\r\n                    let closestY = y - 1;\r\n                    while(closestY >= 0)\r\n                    {\r\n                        let closestTile = self.tileGrid[closestY][x];\r\n                        if(closestTile !== null)\r\n                        {\r\n                            // ...and shift it downward\r\n                            self.tileGrid[y][x] = closestTile;\r\n                            self.tileGrid[closestY][x] = null;\r\n                            drops.push(this.getTileDrop(context, closestTile, x, y));\r\n                            y--;\r\n                        }\r\n                        closestY--;\r\n                    }\r\n                }\r\n\r\n                y--;\r\n            }\r\n        }\r\n\r\n        // Fill in all of the empty tiles\r\n        self.forEachPlayableTile((tile, x, y) => {\r\n            if(tile === null)\r\n            {\r\n                const adjustedY = y - self.tileGridHeight;\r\n\r\n                const tile = self.createTile(self.getTileType(x, y, self.tileGenerationBehavior), x, adjustedY);\r\n                self.tileGrid[adjustedY][x] = tile;\r\n                tile.create(context);\r\n                self.tileImageContainer.add(tile.image);\r\n            }\r\n        });\r\n\r\n        if(drops.length > 0)\r\n        {\r\n            self.queue.push(() => { return Promise.all(drops); });\r\n        }\r\n    }\r\n\r\n    swapTiles(context, firstTile, secondTile)\r\n    {\r\n        let self = this;\r\n\r\n        self.queue.push(() => {\r\n            \r\n            let firstTileX = firstTile.x;\r\n            let firstTileY = firstTile.y;\r\n            let firstTileGridX = firstTile.tileGridX;\r\n            let firstTileGridY = firstTile.tileGridY;\r\n    \r\n            let secondTileX = secondTile.x;\r\n            let secondTileY = secondTile.y;\r\n            let secondTileGridX = secondTile.tileGridX;\r\n            let secondTileGridY = secondTile.tileGridY;\r\n    \r\n            let firstSwap = secondTile.updatePosition(context, firstTileX, firstTileY, firstTileGridX, firstTileGridY);\r\n            self.tileGrid[firstTileGridY][firstTileGridX] = secondTile;\r\n    \r\n            let secondSwap = firstTile.updatePosition(context, secondTileX, secondTileY, secondTileGridX, secondTileGridY);\r\n            self.tileGrid[secondTileGridY][secondTileGridX] = firstTile;\r\n\r\n            return Promise.all([firstSwap, secondSwap]);\r\n\r\n        });\r\n    }\r\n\r\n    hasMatches(targetGridX, targetGridY)\r\n    {\r\n        return this.getMatches(targetGridX, targetGridY).length > 0;\r\n    }\r\n\r\n    getMatches(targetGridX, targetGridY)\r\n    {\r\n        const self = this;\r\n        const matchedTiles = [];\r\n\r\n        self.forEachTile((tile, x, y) => {\r\n\r\n            if(\r\n                (typeof targetGridX !== 'undefined' && x !== targetGridX) &&\r\n                (typeof targetGridY !== 'undefined' && y !== targetGridY)\r\n              )\r\n            {\r\n                return;\r\n            }\r\n\r\n            if(!this.isPlayable(tile))\r\n            {\r\n                return;\r\n            }\r\n\r\n            const targetTileType = tile.tileType;\r\n            const matchedXTiles = [];\r\n            const matchedYTiles = [];\r\n\r\n            // Check for matches to the right\r\n            let currX = (x + 1);\r\n            while(currX < self.tileGridWidth)\r\n            {\r\n                const currTile = self.tileGrid[y][currX];\r\n\r\n                if(currTile != null && targetTileType.name === currTile.tileType.name)\r\n                {\r\n                    matchedXTiles.push(currTile);\r\n                }\r\n                else\r\n                {\r\n                    break;\r\n                }\r\n\r\n                currX++;\r\n            }\r\n\r\n            // Check for matches to the left\r\n            currX = (x - 1);\r\n            while(currX > 0)\r\n            {\r\n                const currTile = self.tileGrid[y][currX];\r\n\r\n                if(currTile != null && targetTileType.name === currTile.tileType.name)\r\n                {\r\n                    matchedXTiles.push(currTile);\r\n                }\r\n                else\r\n                {\r\n                    break;\r\n                }\r\n\r\n                currX--;\r\n            }\r\n\r\n            // Check matches downwards\r\n            let currY = (y + 1);\r\n            while(currY < self.tileGridHeight)\r\n            {\r\n                const currTile = self.tileGrid[currY][x];\r\n\r\n                if(currTile != null && targetTileType.name === currTile.tileType.name)\r\n                {\r\n                    matchedYTiles.push(currTile);\r\n                }\r\n                else\r\n                {\r\n                    break;\r\n                }\r\n\r\n                currY++;\r\n            }\r\n\r\n            // Check matches upwards\r\n            currY = (y - 1);\r\n            while(currY > 0)\r\n            {\r\n                const currTile = self.tileGrid[currY][x];\r\n\r\n                if(currTile != null && targetTileType === currTile.tileType)\r\n                {\r\n                    matchedYTiles.push(currTile);\r\n                }\r\n                else\r\n                {\r\n                    break;\r\n                }\r\n\r\n                currY--;\r\n            }\r\n            \r\n            if(matchedYTiles.length > 1)\r\n            {\r\n                matchedTiles.push(...matchedYTiles);\r\n            }\r\n            \r\n            if(matchedXTiles.length > 1)\r\n            {\r\n                matchedTiles.push(...matchedXTiles);\r\n            }\r\n\r\n            if(matchedYTiles.length > 1 || matchedXTiles.length > 1)\r\n            {\r\n                matchedTiles.push(tile);\r\n            }\r\n        });\r\n\r\n        return matchedTiles;\r\n    }\r\n\r\n    forEachTile(callback)\r\n    {\r\n        for(let y = 0; y < this.tileGridHeight * 2; y++)\r\n        {\r\n            for(let x = 0; x < this.tileGridWidth; x++)\r\n            {\r\n                callback(this.tileGrid[y][x], x, y);\r\n            }\r\n        }\r\n    }\r\n\r\n    forEachPlayableTile(callback)\r\n    {\r\n        for(let y = this.tileGridHeight; y < this.tileGridHeight * 2; y++)\r\n        {\r\n            for(let x = 0; x < this.tileGridWidth; x++)\r\n            {\r\n                callback(this.tileGrid[y][x], x, y);\r\n            }\r\n        }\r\n    }\r\n\r\n    createTile(tileType, x, y)\r\n    {\r\n        return new Tile(tileType, this.getTileX(x), this.getTileY(y), x, y, this.onTileSelect);\r\n    }\r\n\r\n    getTileDrop(context, tile, x, y)\r\n    {\r\n        return tile.updatePosition(context, this.getTileX(x), this.getTileY(y), x, y);\r\n    }\r\n\r\n    getTileX(x)\r\n    {\r\n        return this.offsetX + (this.tileSize * x);\r\n    }\r\n\r\n    getTileY(y)\r\n    {\r\n        return this.offsetY + (this.tileSize * y);\r\n    }\r\n\r\n    canSelect(tile)\r\n    {\r\n        return this.isPlayable(tile);\r\n    }\r\n\r\n    isPlayable(tile)\r\n    {\r\n        return (tile != null) && (tile.tileGridY > (this.tileGridHeight - 1));\r\n    }\r\n\r\n    getTileType(x, y, behavior)\r\n    {\r\n        const aboveTile = (y < 1) ? null : this.tileGrid[y - 1][x];\r\n        const belowTile = (y > self.tileGridHeight - 1 || !this.tileGrid[y + 1]) ? null : this.tileGrid[y + 1][x];\r\n\r\n        const leftTile = (x < 1) ? null : this.tileGrid[y][x - 1];\r\n        const rightTile = (x > self.tileGridWidth - 1) ? null : this.tileGrid[y][x + 1];\r\n\r\n        if(behavior === TileGenerationBehavior.EasyWin && (aboveTile != null || belowTile != null || leftTile != null || rightTile != null))\r\n        {\r\n            return getRandomItem([aboveTile, belowTile, leftTile, rightTile].filter(t => t != null).map(t => t.tileType));\r\n        }\r\n        \r\n        if(behavior === TileGenerationBehavior.Hard)\r\n        {\r\n            return getRandomItem(TileType.filter(t =>\r\n                (belowTile === null || t.name !== belowTile.tileType.name) &&\r\n                (rightTile === null || t.name !== rightTile.tileType.name) &&\r\n                (leftTile === null || t.name !== leftTile.tileType.name)\r\n            ));\r\n        }\r\n\r\n        return getRandomItem(TileType.filter(t =>\r\n            (aboveTile === null || t.name !== aboveTile.tileType.name) &&\r\n            (leftTile === null || t.name !== leftTile.tileType.name)\r\n        ));\r\n    }\r\n}","import TileState from './TileState';\r\n\r\nexport default class {\r\n\r\n    constructor(tileType, x, y, tileGridX, tileGridY, onTileSelect)\r\n    {\r\n        this.tileType = tileType;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.tileGridX = tileGridX;\r\n        this.tileGridY = tileGridY;\r\n        this.onTileSelect = onTileSelect;\r\n        this.image = null;\r\n        this.state = TileState.Active;\r\n        this.isActivated = false;\r\n        this.isDestroying = false;\r\n    }\r\n\r\n    create(context)\r\n    {\r\n        this.image = context.add.image(this.x, this.y, this.tileType.imageKey);\r\n        this.image.setInteractive();\r\n        this.image.on('pointerdown', () => { this.onTileSelect(context, this); });\r\n    }\r\n\r\n    activate()\r\n    {\r\n        this.isActivated = true;\r\n        this.image.setTintFill(0xffffff);\r\n    }\r\n\r\n    deactivate()\r\n    {\r\n        this.isActivated = false;\r\n        this.image.clearTint();\r\n    }\r\n\r\n    updatePosition(context, x, y, tileGridX, tileGridY)\r\n    {\r\n        let self = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            self.x = x;\r\n            self.y = y;\r\n            self.tileGridX = tileGridX;\r\n            self.tileGridY = tileGridY;\r\n\r\n            context.tweens.add({\r\n                targets: self.image,\r\n                x: x,\r\n                y: y,\r\n                ease: 'Power1',\r\n                duration: 500,\r\n                onComplete: () => { resolve() }\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n    destroy(context, container)\r\n    {\r\n        let self = this;\r\n        \r\n        if(self.isDestroying)\r\n        {\r\n            return;\r\n        }\r\n\r\n        self.isDestroying = true;\r\n\r\n        // Create cover for fading the shape to white\r\n        const fadeOutCover = context.add.image(self.x, self.y, self.tileType.imageKey);\r\n        fadeOutCover.setTintFill(0xffffff);\r\n        fadeOutCover.alpha = 0;\r\n\r\n        // Create particles for \"explosion\" effect\r\n        const particleGraphics = [];\r\n        for(let i=0; i<4; i++)\r\n        {\r\n            const explodeParticleGraphics = context.add.graphics({ fillStyle: { color: 0xffffff }, alpha: 0 });\r\n            const explodeParticle = new Phaser.Geom.Circle(this.x, this.y, Phaser.Math.Between(0, 10));\r\n            explodeParticleGraphics.fillCircleShape(explodeParticle);\r\n            particleGraphics.push(explodeParticleGraphics);\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n           context.tweens.add({\r\n               targets: fadeOutCover,\r\n               alpha: 1,\r\n               duration: 200,\r\n               onComplete: () => {\r\n\r\n                    // Remove the tile image\r\n                    container.remove(self.image);\r\n                    self.image.destroy();\r\n                    self.state = TileState.Destroyed;\r\n\r\n                    // Remove the fade out cover\r\n                    container.remove(fadeOutCover);\r\n                    fadeOutCover.destroy();\r\n\r\n                    // Remove the particles\r\n                    particleGraphics.forEach((graphics) => {\r\n                        container.remove(graphics);\r\n                        graphics.destroy();\r\n                    });\r\n\r\n                    resolve();\r\n               }\r\n           });\r\n\r\n           particleGraphics.forEach((graphics, index) => {\r\n\r\n                let xSign = '';\r\n                let ySign = '';\r\n               \r\n                switch(index)\r\n                {\r\n                    case 1:\r\n                        xSign = '-';\r\n                        ySign = '-';\r\n                        break;\r\n\r\n                    case 2:\r\n                        xSign = '+';\r\n                        ySign = '+';\r\n                        break;\r\n\r\n                    case 3:\r\n                        xSign = '+';\r\n                        ySign = '-';\r\n                        break;\r\n\r\n                    case 4:\r\n                        xSign = '-';\r\n                        ySign = '+';\r\n                        break;\r\n                }\r\n\r\n                context.tweens.add({\r\n                    targets: graphics,\r\n                    x: xSign + '=35',\r\n                    y: ySign + '=35',\r\n                    alpha: 1,\r\n                    duration: 200,\r\n                    ease: 'Cubic.easeOut'\r\n                });\r\n           });\r\n\r\n        });\r\n    }\r\n}","import ActionQueue from '../ActionQueue';\r\nimport DialogManager from '../DialogManager';\r\nimport Guide from '../Guide';\r\nimport LevelManifest from '../LevelManifest';\r\nimport ScoreDisplay from '../ScoreDisplay';\r\nimport TileGrid from '../TileGrid';\r\nimport Timer from '../Timer';\r\nimport TileGenerationBehavior from '../TileGenerationBehavior';\r\n\r\nexport default class extends Phaser.Scene {\r\n\r\n    constructor()\r\n    {\r\n        super('RoundScene');\r\n\r\n        this.isAwaitingRoundTransition = false;\r\n\r\n        this.score = null;\r\n        this.queue = null;\r\n        this.selectedTiles = null;\r\n        this.tileGrid = null;\r\n        this.scoreDisplay = null;\r\n        this.timer = null;\r\n \r\n        this.guide = null;\r\n        this.level = null;\r\n\r\n        this.comboCount = null;\r\n        this.totalMatches = null;\r\n    }\r\n\r\n    preload()\r\n    {\r\n        // Images: Tiles\r\n        this.load.image('tile_01', 'assets/tile_01.png');\r\n        this.load.image('tile_02', 'assets/tile_02.png');\r\n        this.load.image('tile_03', 'assets/tile_03.png');\r\n        this.load.image('tile_04', 'assets/tile_04.png');\r\n\r\n        // Images: Guide\r\n        this.load.image('guide_character', 'assets/guide.png');\r\n\r\n        // Images: Background\r\n        this.load.image('background', 'assets/background.png');\r\n    }\r\n\r\n    init(data)\r\n    {\r\n        this.level = data.level;\r\n    }\r\n\r\n    create()\r\n    {\r\n        this.isAwaitingRoundTransition = false;\r\n\r\n        this.score = 0;\r\n        this.comboCount = 0;\r\n        this.totalMatches = 0;\r\n\r\n        this.queue = new ActionQueue();\r\n\r\n        this.add.image(400, 400, 'background');\r\n\r\n        const tileGenerationBehavior = LevelManifest[this.level].behavior;\r\n\r\n        this.selectedTiles = [];\r\n        this.tileGrid = new TileGrid(6, 6, 80, 325, -265, this.onTileSelect, this.onTileMatch, tileGenerationBehavior, this.queue);\r\n        this.scoreDisplay = new ScoreDisplay(100, 580);\r\n\r\n        const timerSeconds = LevelManifest[this.level].timer;\r\n        this.timer = (timerSeconds > 0) ? new Timer(5, 570, timerSeconds) : null;\r\n\r\n        const dialogManager = new DialogManager();\r\n        const script = dialogManager.getScript(this.level);\r\n        this.guide = new Guide(20, 20, script);\r\n\r\n        this.tileGrid.create(this);\r\n        this.scoreDisplay.create(this);\r\n        this.timer && this.timer.create(this);\r\n        this.guide.create(this);\r\n\r\n        const self = this;\r\n        this.input.on('pointerdown', () => { self.guide.progressDialogue(); });\r\n    }\r\n\r\n    update()\r\n    {\r\n        if(this.isAwaitingRoundTransition)\r\n        {\r\n            if(!this.guide.isBlockingGameplay)\r\n            {\r\n                this.scene.start('RoundTransitionScene', { nextLevel: (this.level + 1) });\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        this.handleSpecialLevelBehavior();\r\n        \r\n        // Start the timer if the guide has stopped talking\r\n        if(!this.guide.isBlockingGameplay && this.timer && this.timer.isPaused)\r\n        {\r\n            this.timer.start();\r\n        }\r\n\r\n        // Have we run out of time?\r\n        if(this.timer != null && this.timer.seconds <= 0)\r\n        {\r\n            this.guide.displayGameOverMessage();\r\n            this.isAwaitingRoundTransition = true;\r\n            return;\r\n        }\r\n\r\n        if(this.isLevelComplete())\r\n        {\r\n            this.scene.start('RoundTransitionScene', { nextLevel: (this.level + 1) });\r\n            return;\r\n        }\r\n\r\n        // Are we currently executing a queued action?\r\n        if(this.queue.isActionRunning())\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Do we have any queued actions on the stack?\r\n        if(this.queue.hasActions())\r\n        {\r\n            this.queue.next();\r\n            return;\r\n        }\r\n\r\n        // If nothing's left in the queue, we can move the game's state forward\r\n        this.tileGrid.update(this);\r\n    }\r\n\r\n    onTileSelect(context, tile)\r\n    {\r\n        // Are we currently executing a queued action?\r\n        if(context.queue.isActionRunning())\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Is the guide currently blocking gameplay?\r\n        if(context.guide.isBlockingGameplay)\r\n        {\r\n            return;\r\n        }\r\n    \r\n        // Can we select this tile?\r\n        if(!context.tileGrid.canSelect(tile))\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Is this tile already selected?\r\n        if(tile.isActivated)\r\n        {\r\n            context.selectedTiles = [];\r\n            tile.deactivate();\r\n            return;\r\n        }\r\n    \r\n        if(context.selectedTiles.length === 0)\r\n        {\r\n            context.selectedTiles.push(tile);\r\n            tile.activate();\r\n            return;\r\n        }\r\n    \r\n        if(context.selectedTiles.length === 1)\r\n        {\r\n            const selectedTile = context.selectedTiles[0];\r\n            const xDiff = Math.abs(selectedTile.tileGridX - tile.tileGridX);\r\n            const yDiff = Math.abs(selectedTile.tileGridY - tile.tileGridY);\r\n    \r\n            if((xDiff === 1 && yDiff === 0) || (xDiff === 0 && yDiff === 1))\r\n            {\r\n                context.selectedTiles.push(tile);\r\n    \r\n                let firstSelectedTile = context.selectedTiles[0];\r\n                let secondSelectedTile = context.selectedTiles[1];\r\n    \r\n                context.tileGrid.swapTiles(context, firstSelectedTile, secondSelectedTile);\r\n    \r\n                context.queue.push(() => {\r\n    \r\n                    // If there are no matches, swap the tiles back\r\n                    if(\r\n                        !context.tileGrid.hasMatches(firstSelectedTile.tileGridX, firstSelectedTile.tileGridY) &&\r\n                        !context.tileGrid.hasMatches(secondSelectedTile.tileGridX, secondSelectedTile.tileGridY)\r\n                    )\r\n                    {\r\n                        context.tileGrid.swapTiles(context, firstSelectedTile, secondSelectedTile);\r\n                    }\r\n    \r\n                    return Promise.resolve();\r\n    \r\n                });\r\n    \r\n                context.selectedTiles.forEach((tile) => { tile.deactivate(); });\r\n                context.selectedTiles = [];\r\n                \r\n                context.comboCount = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    onTileMatch(context, matchedTiles)\r\n    {\r\n        context.comboCount++;\r\n        context.totalMatches++;\r\n\r\n        context.score += (matchedTiles.length * context.comboCount);\r\n        context.scoreDisplay.updateScore(context.score);\r\n\r\n        if(context.comboCount > 1)\r\n        {\r\n            context.scoreDisplay.updateCombo(`${context.comboCount}x multiplier!`);\r\n        }\r\n        else\r\n        {\r\n            context.scoreDisplay.updateCombo('');\r\n        }\r\n    }\r\n\r\n    isLevelComplete()\r\n    {\r\n        return this.score >= LevelManifest[this.level].score;\r\n    }\r\n\r\n    handleSpecialLevelBehavior()\r\n    {\r\n        const handler = LevelManifest[this.level].handler;\r\n        handler && handler({\r\n            tileGrid: this.tileGrid,\r\n            score: this.score,\r\n            level: this.level\r\n        });\r\n    }\r\n    \r\n}","export default class {\r\n\r\n    constructor()\r\n    {\r\n        this.queuedActions = [];\r\n        this.currentAction = null;\r\n    }\r\n\r\n    isActionRunning()\r\n    {\r\n        return this.currentAction != null;\r\n    }\r\n\r\n    hasActions()\r\n    {\r\n        return this.queuedActions.length > 0;\r\n    }\r\n\r\n    next()\r\n    {\r\n        this.currentAction = this.queuedActions.shift();\r\n        this.currentAction();\r\n    }\r\n\r\n    push(action)\r\n    {\r\n        var self = this;\r\n        self.queuedActions.push(() => { action().then(() => { self.currentAction = null; }) });\r\n    }\r\n\r\n}","export default class {\r\n\r\n    constructor(x, y)\r\n    {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.scoreText = null;\r\n        this.comboText = null;\r\n        this.score = 0;\r\n    }\r\n\r\n    create(context)\r\n    {\r\n        this.scoreText = context.add.text(this.x, this.y, this.score);\r\n        this.updateScore(this.score);\r\n\r\n        this.comboText = context.add.text(this.x, this.y + 20, '');\r\n    }\r\n\r\n    updateScore(score)\r\n    {\r\n        this.score = score;\r\n        this.scoreText.setText(score + ' dew drops');\r\n    }\r\n\r\n    updateCombo(text)\r\n    {\r\n        this.comboText.setText(text);\r\n    }\r\n}","export default class {\r\n\r\n    constructor(x, y, seconds)\r\n    {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.text = null;\r\n        this.seconds = seconds;\r\n        this.isPaused = true;\r\n    }\r\n\r\n    create(context)\r\n    {\r\n        this.text = context.add.text(this.x, this.y, this.score);\r\n        \r\n        this.tick();\r\n        context.time.addEvent({ delay: 1000, callback: this.tick, callbackScope: this, loop: true })\r\n    }\r\n\r\n    tick()\r\n    {\r\n        if(this.seconds <= 0 || this.isPaused)\r\n        {\r\n            return;\r\n        }\r\n\r\n        this.seconds--;\r\n\r\n        // Display the remaining time\r\n        const minutes = Math.floor(this.seconds / 60);\r\n\r\n        let seconds = (this.seconds % 60);\r\n        if(seconds < 10)\r\n        {\r\n            seconds = '0' + seconds;\r\n        }\r\n\r\n        this.text.setText(`${minutes}:${seconds}`);\r\n    }\r\n\r\n    start()\r\n    {\r\n        this.isPaused = false;\r\n    }\r\n}","import DialogScript from \"./DialogScript\";\r\n\r\nexport default class {\r\n\r\n    getScript(level)\r\n    {\r\n        const script = new DialogScript();\r\n\r\n        switch(level)\r\n        {\r\n            // Level 0 (Intro)\r\n            case 0:\r\n\r\n                script.introMessages = [\r\n                    `*Oh, doozle, you made it!* You're here! (Click or tap anywhere!)`,\r\n                    `The Dew Drop Kingdom is in trouble!`,\r\n                    `We lost all of our dew drops and now we'll starve!`,\r\n                    `But you can help us by collecting as many dew drops as you can!`,\r\n                    \"If you match three or more dew drops of the same color, we can collect them!\",\r\n                    \"To make a match, select two dew drops and swap their places!\"\r\n                ];\r\n\r\n                script.getDisplayTileMatchMessages = (data) => {\r\n\r\n                    if(data.totalMatches === 1)\r\n                    {\r\n                        return [\r\n                            \"You got it! That's it!\",\r\n                            \"You collect extra dew drops when you chain together matches in a combo!\",\r\n                            \"See if you can collect 100 dew drops!\"\r\n                        ];\r\n                    }\r\n\r\n                };\r\n\r\n                break;\r\n\r\n            // Level 1 (Timer Intro)\r\n            case 1:\r\n\r\n                script.introMessages = [\r\n                    \"*Oh, doozle!* You're so good at this!\",\r\n                    \"But, we'll have to hurry this time!\",\r\n                    \"We only have two minutes before the sun dries up all the dew drops!\",\r\n                    \"Collect at least 200 dew drops in two minutes!\"\r\n                ];\r\n\r\n                break;\r\n\r\n            // Level 2 (Breaking the Fourth Wall)\r\n            case 2:\r\n\r\n                script.introMessages = [\r\n                    \"Wow, we're so proud of you!\",\r\n                    \"This round you'll only have 30 seconds to collect at least 300 dew drops!\"\r\n                ];\r\n\r\n                script.getGameOverMessages = () => {\r\n                    return [\r\n                        \"Wait, wait, sorry, hold on.\",\r\n                        \"It's too early for the *\\\"Lose in a Panic\\\"* scenario.\",\r\n                        \"So sorry about that.\",\r\n                        \"You've been really great so far, honestly.\",\r\n                        \"You know, what, let's just go to the next round and we'll take it from the top.\"\r\n                    ];\r\n                };\r\n\r\n                break;\r\n\r\n            // Level 3 (Easy Win)\r\n            case 3:\r\n\r\n                script.introMessages = [\r\n                    \"Alright, I think we've got everything figured out.\",\r\n                    \"Okay, for this next round, let me set you up:\",\r\n                    \"Remember, you've been winning the last few rounds and you're gaining confidence.\",\r\n                    \"In this round, it's going to be easy for you to get combos.\",\r\n                    \"So the idea here is that you're going to get a little *too* confident, right?\",\r\n                    \"Like a little full of yourself, alright?\",\r\n                    \"Okay, great! Let's do this:\",\r\n                    \"...\",\r\n                    \"*Oh doozle woozle!*\",\r\n                    \"You're so amazing!\",\r\n                    \"You have two minutes again, but this time you'll have to collect 300 dew drops.\",\r\n                    \"Can you do it?\",\r\n                    \"Who am I kidding? Of course you can!\"\r\n                ];\r\n\r\n                break;\r\n\r\n            // Level 4 (Losing Confidence)\r\n            case 4:\r\n\r\n                script.introMessages = [\r\n                    \"Okay, okay, great stuff.\",\r\n                    \"For this round, you're bringing all of that pride, all of that hubris.\",\r\n                    \"And, when the round starts, things are still going your way.\",\r\n                    \"But guess what?\",\r\n                    \"Halfway through this round, things start getting a little harder.\",\r\n                    \"So this is where we begin to chip away at your pride as the player.\",\r\n                    \"Alright, that's your set up: now let me get into the right headspace.\",\r\n                    \"...oh doozle woo-\",\r\n                    \"...no, no, it's doozy-woozy here...\",\r\n                    \"...yeah, doozy-woozy, you're our hero, blah, blah...\",\r\n                    \"Alright! Got it!\",\r\n                    \"...\",\r\n                    \"*Doozy-woozy!*\",\r\n                    \"You're our hero!\",\r\n                    \"You've done so much for us, but we still need your help!\",\r\n                    \"We need you to collect 500 dew drops in five minutes!\" \r\n                ];\r\n\r\n                break;\r\n\r\n            // Level 5 (Fall From Grace)\r\n            case 5:\r\n\r\n                script.introMessages = [\r\n                    \"Wow, such moving work.\",\r\n                    \"It really feels so authentic.\",\r\n                    \"It's been a joy working with you.\",\r\n                    \"Okay, here we go, this is a pivotal scene:\",\r\n                    \"This round will not go your way at all. At all.\",\r\n                    \"This is your fall from grace.\",\r\n                    \"(Ahem)\",\r\n                    \"...\",\r\n                    \"*Doozle!*\",\r\n                    \"*Woozle!*\",\r\n                    \"I can't believe you did it!\",\r\n                    \"We've got a bigger challenge ahead, but I know you can do it!\",\r\n                    \"You can do anything!\",\r\n                    \"We need you to collect 1000 dew drops in five minutes!\"\r\n                ];\r\n\r\n                break;\r\n\r\n            // Level 6 (Wallowing)\r\n            case 6:\r\n\r\n                script.introMessages = [\r\n                    \"Okay, let's move right into the next scene:\",\r\n                    \"Here, you are wallowing, right?\",\r\n                    \"You are in the pit of despair and you can't see a way out.\",\r\n                    \"This round won't be particularly hard, but you can't seem to find any matches.\",\r\n                    \"Got it?\",\r\n                    \"Alright, great: let me find my place here...\",\r\n                    \"Yes, okay, I believed in you, but now my faith is faltering...\",\r\n                    \"I'm keeping a brave face, but I'm really starting to lose confidence...\",\r\n                    \"Okay, I'm ready!\",\r\n                    \"...\",\r\n                    \"Oh no!\",\r\n                    \"*Whoopsie whoozle!*\",\r\n                    \"Don't worry, that was a tough one!\",\r\n                    \"Let's try again! I know you can do it!\",\r\n                    \"We need you to collect 1000 dew drops in five minutes!\"\r\n                ];\r\n\r\n                script.getDisplayTileMatchMessages = (data) => {\r\n\r\n                    return [\r\n                        \"(Oh, hey: remember, you're not going to find any matches this round)\"\r\n                    ];\r\n\r\n                };\r\n\r\n                break;\r\n\r\n            // Level 7 (Pheonix Rises)\r\n            case 7:\r\n\r\n                script.introMessages = [\r\n                    \"Now, you've been wallowing. You've feeling really low.\",\r\n                    \"You're in such despair, that in this round...\",\r\n                    \"There's an obvious combo.\",\r\n                    \"Right there, right in front of your face.\",\r\n                    \"But you can't see it through the despair.\",\r\n                    \"But then, in the last ten seconds of the round, you see it.\",\r\n                    \"Boom, it's the perfect match.\",\r\n                    \"And the pheonix rises once again!\"\r\n                ];\r\n\r\n                break;\r\n\r\n            // Level 8 (Victory Lap)\r\n            case 8:\r\n\r\n                script.introMessages = [\r\n                    \"Our hero is back!\",\r\n                    \"This final scene is our victory lap.\",\r\n                    \"However, we don't want too many combos in this round, right?\",\r\n                    \"This is a round the player wins on their own.\",\r\n                    \"No assistance from the game.\",\r\n                    \"A true hero's victory!\",\r\n                    \"Alright, let's do this: I've got an appointment after this.\"\r\n                ];\r\n\r\n                break;\r\n\r\n        }\r\n\r\n        return script;\r\n    }\r\n\r\n}","export default class {\r\n\r\n    constructor()\r\n    {\r\n        this.introMessages = [];\r\n        this.getDisplayTileMatchMessages = () => {};\r\n    }\r\n}","import TagText from 'phaser3-rex-plugins/plugins/tagtext.js';\r\nimport TextTyping from 'phaser3-rex-plugins/plugins/texttyping.js';\r\n\r\nexport default class {\r\n\r\n    constructor(x, y, script)\r\n    {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.script = script;\r\n\r\n        this.queuedMessages = null;\r\n        this.isPaused = false;\r\n        this.isBlockingGameplay = false;\r\n\r\n        this.endDialogueMarkerGraphics = null;\r\n    }\r\n\r\n    create(context)\r\n    {\r\n        const self = this;\r\n\r\n        const speechBubbleWidth = 760;\r\n        const speechBubbleHeight = 130;\r\n\r\n        const endDialogueMarkerRadius = 10;\r\n        \r\n        const characterWidth = 250;\r\n        const characterHeight = 500;\r\n\r\n        const speechBubbleIntroOffset = 40;\r\n\r\n        // Speech Bubble\r\n        const speechBubbleGraphics = context.add.graphics({ fillStyle: { color: 0xffffff } }).setAlpha(0);\r\n        speechBubbleGraphics.fillRoundedRect(this.x, this.y - speechBubbleIntroOffset, speechBubbleWidth, speechBubbleHeight, 10);\r\n        speechBubbleGraphics.fillTriangle(\r\n            this.x + 120, this.y + speechBubbleHeight + 20 - speechBubbleIntroOffset,\r\n            this.x + 105, this.y + speechBubbleHeight - speechBubbleIntroOffset,\r\n            this.x + 135, this.y + speechBubbleHeight - speechBubbleIntroOffset\r\n        );\r\n\r\n        // End Dialogue Marker\r\n        this.endDialogueMarkerGraphics = context.add.graphics({ fillStyle: { color: 0xcccccc } });\r\n        this.hideEndDialogueMarker();\r\n        const endDialogueMarker = new Phaser.Geom.Circle(\r\n            this.x + speechBubbleWidth - endDialogueMarkerRadius - 15,\r\n            this.y + speechBubbleHeight - endDialogueMarkerRadius - 15,\r\n            endDialogueMarkerRadius);\r\n        this.endDialogueMarkerGraphics.fillCircleShape(endDialogueMarker);\r\n\r\n        context.tweens.add({\r\n            targets: this.endDialogueMarkerGraphics,\r\n            alpha: 0,\r\n            duration: 500,\r\n            repeat: -1,\r\n            yoyo: true\r\n        });\r\n\r\n        // Speech Bubble Text\r\n        const speechBubbleTextStyle = {\r\n            color: '#000',\r\n            fontFamily: '\"Baloo Thambi 2\"',\r\n            fontSize: '30px',\r\n            wrap: {\r\n                mode: 'word',\r\n                width: speechBubbleWidth\r\n            },\r\n            tags: {\r\n                exclamation: {\r\n                    fontStyle: 'bold'\r\n                }\r\n            }\r\n        };\r\n        \r\n        this.speechBubbleText = new TagText(context, this.x + 15, this.y + 15, '', speechBubbleTextStyle);\r\n        context.add.existing(this.speechBubbleText);\r\n\r\n        // Speech Bubble Text Typing\r\n        this.speechBubbleTextTyping = new TextTyping(this.speechBubbleText, { speed: 30 }); \r\n        this.speechBubbleTextTyping.on('complete', () => { self.onMessageComplete.call(self) });\r\n\r\n        // Character\r\n        context.add.image(this.x + (characterWidth/2), this.y + speechBubbleHeight + 230, 'guide_character');\r\n\r\n        // Speech Bubble Intro Animation\r\n        context.tweens.add({\r\n            targets: speechBubbleGraphics,\r\n            props: {\r\n                y: { value: `+=${speechBubbleIntroOffset}`, duration: 500, ease: 'Bounce.easeOut' },\r\n                alpha: { value: 1, duration: 300, ease: 'Linear' }\r\n            },\r\n            onComplete: () => {\r\n                self.queueMessages(context, this.script.introMessages);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    queueMessages(context, messages)\r\n    {\r\n        if(!messages)\r\n        {\r\n            return;\r\n        }\r\n\r\n        const self = this;\r\n\r\n        if(self.queuedMessages === null)\r\n        {\r\n            self.queuedMessages = [];\r\n        }\r\n\r\n        self.queuedMessages.push(...messages);\r\n\r\n        if(self.speechBubbleTextTyping.isTyping)\r\n        {\r\n            return;\r\n        }\r\n\r\n        self.isBlockingGameplay = true;\r\n        self.progressDialogue();\r\n    }\r\n\r\n    onMessageComplete()\r\n    {\r\n        this.showEndDialogueMarker();\r\n        if(this.queuedMessages.length === 0)\r\n        {\r\n            this.isBlockingGameplay = false;\r\n            return;\r\n        }\r\n    }\r\n\r\n    displayTileMatchMessage(context, data)\r\n    {\r\n        const messages = this.script.getDisplayTileMatchMessages(data);\r\n        this.queueMessages(context, messages);\r\n    }\r\n\r\n    displayGameOverMessage(context)\r\n    {\r\n        const messages = this.script.getGameOverMessages();\r\n\r\n        // Push in a placeholder message to force players to confirm the last\r\n        // message in the \"Game Over\" queue\r\n        messages.push(' ');\r\n\r\n        this.queueMessages(context, messages);\r\n    }\r\n\r\n    progressDialogue()\r\n    {\r\n        this.hideEndDialogueMarker();\r\n        if(this.queuedMessages.length > 0)\r\n        {\r\n            const message = this.convertDialogToTagText(this.queuedMessages.shift());\r\n            this.speechBubbleTextTyping.start(message);\r\n        }\r\n    }\r\n\r\n    showEndDialogueMarker()\r\n    {\r\n        this.endDialogueMarkerGraphics.setVisible(true);\r\n    }\r\n\r\n    hideEndDialogueMarker()\r\n    {\r\n        this.endDialogueMarkerGraphics.setVisible(false);\r\n    }\r\n\r\n    convertDialogToTagText(input)\r\n    {\r\n        const styles = [\r\n            { token: '*', className: 'exclamation' },\r\n            { token: '_', className: 'underline'}\r\n        ];    \r\n\r\n        let output = '';\r\n        let currClass = '';\r\n    \r\n        for(let i=0; i<input.length; i++)\r\n        {\r\n            const currChar = input[i];\r\n            const isStyleToken = styles.some(style => style.token === currChar);\r\n    \r\n            // If the first character isn't a style token, then\r\n            // we need to open a \"normal\" class tag\r\n            if(i === 0 && !isStyleToken)\r\n            {\r\n                output += '<class=\"normal\">';\r\n                currClass = 'normal';\r\n            }\r\n    \r\n            // If the last character is a style token, we ignore it\r\n            // since we'll always end with a closing class tag anyway\r\n            if(i === input.length - 1 && isStyleToken)\r\n            {\r\n                continue;\r\n            }\r\n    \r\n            if(isStyleToken)\r\n            {\r\n                const targetStyle = styles.find(style => style.token === currChar);\r\n    \r\n                // If we've encountered a token of the class we already have open,\r\n                // that means we need to close the class\r\n                if(currClass === targetStyle.className)\r\n                {\r\n                    output += '</class>';\r\n                    output += '<class=\"normal\">';\r\n                    currClass = 'normal';\r\n                }\r\n    \r\n                // Otherwise, we need to close the existing the class and\r\n                // open the new class\r\n                else\r\n                {\r\n                    if(i !== 0)\r\n                    {\r\n                        output += '</class>';\r\n                    }\r\n    \r\n                    output += `<class=\"${targetStyle.className}\">`;\r\n                    currClass = targetStyle.className;\r\n                }\r\n            }\r\n            else\r\n            {\r\n                output += input[i];\r\n            }\r\n        }\r\n    \r\n        output += '</class>';\r\n        return output;\r\n    }\r\n}","export default class extends Phaser.Scene {\r\n\r\n    constructor()\r\n    {\r\n        super('RoundTransitionScene');\r\n\r\n        this.nextLevel = 0;\r\n    }\r\n\r\n    init(data)\r\n    {\r\n        this.nextLevel = data.nextLevel;\r\n    }\r\n\r\n    create()\r\n    {\r\n        const self = this;\r\n\r\n        // Title\r\n        this.add.text(50, 50, `Round ${self.nextLevel}`);\r\n\r\n        this.time.addEvent({ delay: 1000, callback: function() { self.scene.start('RoundScene', { level: self.nextLevel }) }, callbackScope: this })\r\n    }\r\n    \r\n}","import TitleScene from './scenes/TitleScene';\r\nimport RoundScene from './scenes/RoundScene';\r\nimport RoundTransitionScene from './scenes/RoundTransitionScene';\r\n\r\nconst config = {\r\n    type: Phaser.AUTO,\r\n    width: 800,\r\n    height: 700,\r\n    scene: [TitleScene, RoundScene, RoundTransitionScene]\r\n};\r\n\r\nconst game = new Phaser.Game(config);"],"sourceRoot":""}