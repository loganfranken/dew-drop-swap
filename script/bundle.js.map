{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/render/WebGLRenderer.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/render/CanvasRenderer.js","webpack:///./script/scenes/TitleScene.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/object/NOOP.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/render/Render.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/textstyle/MeasureText.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/const.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/textstyle/TextStyle.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/canvastext/DrawMethods.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/struct/Stack.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/pool.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/penmanger/Pen.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/object/Clear.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/object/Clone.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/penmanger/PenManager.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/hitareamanager/HitAreaManager.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/canvastext/SetInteractive.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/canvastext/WrapText.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/canvastext/CanvasText.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/imagemanager/ImageManager.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/imagemanager/GetGlobImageManager.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/Text.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/tagtext/Parser.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/tagtext/TagText.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/tagtext/Creator.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/tagtext.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/tagtext/Factory.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/eventemitter/EventEmitterMethods.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/system/IsSceneObject.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/system/GetSceneObject.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/behaviors/texttyping/TextTyping.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/texttyping.js","webpack:///./script/TileGenerationBehavior.js","webpack:///./script/TileState.js","webpack:///./script/LevelManifest.js","webpack:///./script/Utility.js","webpack:///./script/TileType.js","webpack:///./script/TileGrid.js","webpack:///./script/Tile.js","webpack:///./script/scenes/RoundScene.js","webpack:///./script/ActionQueue.js","webpack:///./script/ScoreDisplay.js","webpack:///./script/Timer.js","webpack:///./script/DialogManager.js","webpack:///./script/DialogScript.js","webpack:///./script/Guide.js","webpack:///./script/scenes/RoundTransitionScene.js","webpack:///./script/main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Utils","Phaser","Renderer","WebGL","renderer","src","interpolationPercentage","camera","parentMatrix","width","height","frame","getTint","getTintAppendFloatAlpha","this","pipeline","batchTexture","glTexture","x","y","style","resolution","scaleX","scaleY","rotation","flipX","flipY","scrollFactorX","scrollFactorY","displayOriginX","displayOriginY","_tintTL","alpha","_alphaTL","_tintTR","_alphaTR","_tintBL","_alphaBL","_tintBR","_alphaBR","_isTinted","tintFill","batchSprite","super","load","image","self","add","startBtnGlow","setAlpha","tweens","targets","duration","repeat","yoyo","ease","startBtn","setInteractive","cursor","startBtnOverlay","on","scene","start","level","renderWebGL","renderCanvas","CanvasPool","Display","Canvas","textStyle","canvas","context","getContext","syncFont","Math","ceil","measureText","testString","baselineX","baseline","baselineY","fillStyle","fillRect","font","_font","textBaseline","fillText","output","ascent","descent","fontSize","getImageData","remove","j","imagedata","data","pixels","length","line","idx","stop","NO_NEWLINE","RAW_NEWLINE","WRAPPED_NEWLINE","NO_WRAP","WORD_WRAP","CHAR_WRAP","SPLITREGEXP","GetAdvancedValue","Objects","GetValue","propertyMap","backgroundColor","fontFamily","fontStyle","color","stroke","strokeThickness","shadowOffsetX","shadowOffsetY","shadowColor","shadowBlur","shadowStroke","shadowFill","underlineColor","underlineThickness","underlineOffset","halign","valign","maxLines","fixedWidth","fixedHeight","lineSpacing","rtl","wrapMode","wrapWidth","WRAPMODE","none","word","char","character","text","parent","setStyle","metrics","updateText","undefined","wrap","toString","fill","update","strokeStyle","lineWidth","lineCap","lineJoin","enabled","recalculateMetrics","newFont","family","size","string","thickness","blur","offset","toLowerCase","max","getTextMetrics","startX","startY","boxWidth","boxHeight","penManager","hitAreaManager","clear","save","drawBackground","defatultStyle","startXOffset","startYOffset","drawLinesNum","drawLineStartIdx","drawLineEndIdx","offsetX","offsetY","lineHeight","lines","totalLinesNum","floor","lineIdx","getLineWidth","pens","penIdx","pensLen","drawPen","restore","pen","curStyle","parser","propToContextStyle","prop","buildFont","syncStyle","drawUnderline","isTextPen","drawText","isImagePen","drawImage","img","hasAreaMarker","area","clearRect","autoRound","round","savedLineCap","beginPath","moveTo","lineTo","syncShadow","strokeText","imgKey","imageManager","imgData","getFrame","left","source","cutX","cutY","cutWidth","cutHeight","items","pop","push","arr","apply","config","resetFromJSON","newLineMode","startIndex","txt","len","rawTextLength","obj","Array","isArray","out","objIsArray","GetFastValue","PensPool","LinesPool","maxLinesWidth","tagToText","tagToTextScope","freePens","pushMultiple","PEN_CONFIG","addPen","addTextPen","previousPen","lastPen","lastX","endIndex","lastLine","targetPenManager","li","llen","pi","plen","getLineEndIndex","hasLastPen","w","maxW","result","plainText","end","penTxt","penStartIdx","penEndIdx","currentProp","previousProp","wrapText","substring","Rectangle","Geom","RectanglePool","hitAreas","rectangle","setTo","hitArea","cnt","contains","graphics","scaleCanvas","rotateCanvas","translateCanvas","lineStyle","strokeRect","FireEvent","eventName","pointer","localX","localY","emit","event","splitRegExp","WRAP_RESULT","newline","getTextWidth","retLines","remainWidth","split","linesLen","tokenArray","token","textWidth","currLineWidth","curLineText","lineText","tokenLen","pensPool","newPenManager","_tmpPenManager","destroy","curProp","wrapLines","cursorX","cursorY","match","splitText","tagTextToProp","imgWidth","getOuterWidth","addNewLinePen","addImagePen","jLen","linesCount","getMaxLineWidth","desplayLinesCount","linesHeight","propToTagText","retPenManager","copyPenManager","updatePenManager","getSliceTagText","tmpPenManager","ret","copy","methods","assign","DrawMethods","globImageManager","textureManager","images","_add","textureKey","frameKey","frameWidth","frameHeight","right","exists","AddToDOM","DOM","GameObject","GameObjects","RemoveFromDOM","PensPools","type","sys","game","setPosition","setOrigin","initPipeline","align","_text","padding","top","bottom","dirty","_crop","resetCropObject","texture","textures","addCanvas","gl","deleteTexture","canvasText","setPadding","setText","events","dir","direction","display","originX","join","setFont","setFontFamily","setFontSize","setFontStyle","setFixedSize","setBackgroundColor","setFill","setColor","setStroke","setShadow","setShadowOffset","setShadowColor","setShadowBlur","setShadowStroke","setShadowFill","setWrapMode","setWrapWidth","setHAlign","setLineSpacing","setResolution","setMaxLines","runWrap","textHeight","linesWidth","h","updateDisplayOrigin","setSize","scale","draw","canvasToTexture","input","customHitArea","Components","ToJSON","toJSON","shape","callback","dropZone","getText","getPlainText","getPenManager","drawBounds","Class","mixin","Alpha","BlendMode","ComputedSize","Crop","Depth","Flip","GetBounds","Mask","Origin","Pipeline","ScrollFactor","Tint","Transform","Visible","Render","GETPROP_RESULT","prevProp","STYLE_RESULT","styleToProp","k","v","slen","isEmpty","thinkness","parseInt","replace","shadow","u","RE_SPACE","RE_SPLITTEXT","RE_CLASS_HEADER","RE_CLASS","RE_STYLE_HEADER","RE_STYLE","tags","innerMatch","charIdx","totalLen","matchStart","exec","lastIndex","test","propOut","_class","_style","defaultStyle","underline","isTextTag","tagName","tag","Parser","addTag","preDestroy","BuildGameObject","GameObjectFactory","register","gameObject","existing","GameObjectCreator","content","addToScene","eventEmitter","EventEmitterClass","Events","EventEmitter","_privateEE","_eventEmitter","shutdown","arguments","once","off","addListener","removeListener","removeAllListeners","listenerCount","listeners","SceneClass","Scene","setEventEmitter","timer","boot","setTypeMode","setTypeSpeed","setTextCallback","setTextCallbackScope","typingIdx","transferText","textLen","insertIdx","elapsed","getTimer","typeMode","speed","destroyEventEmitter","freeTimer","TYPEMODE","startIdx","timerStartAt","setTypingContent","startTimer","newText","concat","isTyping","showAllText","paused","getTextLength","getTypingString","isLastChar","delay","typeIdx","endIdx","getSubString","midIdx","lowerResult","lowerLen","upperResult","upperLen","startAt","time","addEvent","loop","onTyping","callbackScope","slice","EventEmitterMethods","score","behavior","TileGenerationBehavior","handler","state","tileGrid","LevelManifest","tileGenerationBehavior","getRandomItem","random","imageKey","tileGridWidth","tileGridHeight","tileSize","onTileSelect","onTileMatch","queue","tileImageContainer","playAreaOffset","createTile","getTileType","container","forEachTile","tile","maskShape","make","mask","Masks","GeometryMask","matchedTiles","getMatches","destroys","forEach","Promise","all","TileState","drops","closestY","closestTile","getTileDrop","forEachPlayableTile","adjustedY","firstTile","secondTile","firstTileX","firstTileY","firstTileGridX","tileGridX","firstTileGridY","tileGridY","secondTileX","secondTileY","secondTileGridX","secondTileGridY","firstSwap","updatePosition","secondSwap","targetGridX","targetGridY","isPlayable","targetTileType","tileType","matchedXTiles","matchedYTiles","currX","currTile","currY","isActivated","isDestroying","setTintFill","clearTint","resolve","reject","onComplete","fadeOutCover","particleGraphics","explodeParticleGraphics","explodeParticle","Circle","Between","fillCircleShape","index","xSign","ySign","getTileX","getTileY","aboveTile","belowTile","leftTile","rightTile","TileType","filter","map","isAwaitingRoundTransition","selectedTiles","scoreDisplay","guide","comboCount","totalMatches","queuedActions","currentAction","shift","action","then","TileGrid","scoreText","comboText","updateScore","timerSeconds","seconds","isPaused","tick","minutes","script","introMessages","getDisplayTileMatchMessages","getGameOverMessages","getScript","queuedMessages","isBlockingGameplay","endDialogueMarkerGraphics","speechBubbleGraphics","fillRoundedRect","fillTriangle","hideEndDialogueMarker","endDialogueMarker","speechBubbleTextStyle","exclamation","speechBubbleText","speechBubbleTextTyping","onMessageComplete","props","queueMessages","messages","progressDialogue","showEndDialogueMarker","message","convertDialogToTagText","setVisible","styles","className","currClass","currChar","isStyleToken","some","targetStyle","find","nextLevel","handleSpecialLevelBehavior","displayGameOverMessage","isLevelComplete","isActionRunning","hasActions","next","canSelect","deactivate","activate","selectedTile","xDiff","abs","yDiff","firstSelectedTile","secondSelectedTile","swapTiles","hasMatches","updateCombo","AUTO","TitleScene","RoundScene","RoundTransitionScene","Game"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Utils = Phaser.Renderer.WebGL.Utils;\r\n\r\n/**\r\n * Renders this Game Object with the WebGL Renderer to the given Camera.\r\n * The object will not render if any of its renderFlags are set or it is being actively filtered out by the Camera.\r\n * This method should not be called directly. It is a utility function of the Render module.\r\n *\r\n * @method Phaser.GameObjects.Text#renderWebGL\r\n * @since 3.0.0\r\n * @private\r\n *\r\n * @param {Phaser.Renderer.WebGL.WebGLRenderer} renderer - A reference to the current active WebGL renderer.\r\n * @param {Phaser.GameObjects.Text} src - The Game Object being rendered in this call.\r\n * @param {number} interpolationPercentage - Reserved for future use and custom pipelines.\r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The Camera that is rendering the Game Object.\r\n * @param {Phaser.GameObjects.Components.TransformMatrix} parentMatrix - This transform matrix is defined if the game object is nested\r\n */\r\nvar TextWebGLRenderer = function (renderer, src, interpolationPercentage, camera, parentMatrix) {\r\n    if ((src.width === 0) || (src.height === 0)) {\r\n        return;\r\n    }\r\n\r\n    var frame = src.frame;\r\n    var width = frame.width;\r\n    var height = frame.height;\r\n    var getTint = Utils.getTintAppendFloatAlpha;\r\n\r\n    this.pipeline.batchTexture(\r\n        src,\r\n        frame.glTexture,\r\n        width, height,\r\n        src.x, src.y,\r\n        width / src.style.resolution, height / src.style.resolution,\r\n        src.scaleX, src.scaleY,\r\n        src.rotation,\r\n        src.flipX, src.flipY,\r\n        src.scrollFactorX, src.scrollFactorY,\r\n        src.displayOriginX, src.displayOriginY,\r\n        0, 0, width, height,\r\n        getTint(src._tintTL, camera.alpha * src._alphaTL),\r\n        getTint(src._tintTR, camera.alpha * src._alphaTR),\r\n        getTint(src._tintBL, camera.alpha * src._alphaBL),\r\n        getTint(src._tintBR, camera.alpha * src._alphaBR),\r\n        (src._isTinted && src.tintFill),\r\n        0, 0,\r\n        camera,\r\n        parentMatrix\r\n    );\r\n};\r\n\r\nmodule.exports = TextWebGLRenderer;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Renders this Game Object with the Canvas Renderer to the given Camera.\r\n * The object will not render if any of its renderFlags are set or it is being actively filtered out by the Camera.\r\n * This method should not be called directly. It is a utility function of the Render module.\r\n *\r\n * @method Phaser.GameObjects.Text#renderCanvas\r\n * @since 3.0.0\r\n * @private\r\n *\r\n * @param {Phaser.Renderer.Canvas.CanvasRenderer} renderer - A reference to the current active Canvas renderer.\r\n * @param {Phaser.GameObjects.Text} src - The Game Object being rendered in this call.\r\n * @param {number} interpolationPercentage - Reserved for future use and custom pipelines.\r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The Camera that is rendering the Game Object.\r\n * @param {Phaser.GameObjects.Components.TransformMatrix} parentMatrix - This transform matrix is defined if the game object is nested\r\n */\r\nvar TextCanvasRenderer = function (renderer, src, interpolationPercentage, camera, parentMatrix) {\r\n    if ((src.width === 0) || (src.height === 0)) {\r\n        return;\r\n    }\r\n\r\n    renderer.batchSprite(src, src.frame, camera, parentMatrix);\r\n};\r\n\r\nmodule.exports = TextCanvasRenderer;\r\n","export default class extends Phaser.Scene {\r\n\r\n    constructor()\r\n    {\r\n        super('TitleScene');\r\n    }\r\n\r\n    preload()\r\n    {\r\n        this.load.image('background', 'assets/background.png');\r\n        this.load.image('title', 'assets/title.png');\r\n        this.load.image('start', 'assets/start.png');\r\n        this.load.image('start-glow', 'assets/start_glow.png');\r\n        this.load.image('start-active', 'assets/start_active.png');\r\n    }\r\n\r\n    create()\r\n    {\r\n        const self = this;\r\n\r\n        // Background\r\n        this.add.image(400, 400, 'background');\r\n\r\n        // Title\r\n        this.add.image(400, 200, 'title');\r\n\r\n        // \"Start\" Button\r\n        const startBtnGlow = this.add.image(400, 550, 'start-glow');\r\n        startBtnGlow.setAlpha(0);\r\n\r\n        this.tweens.add({\r\n            targets: startBtnGlow,\r\n            alpha: 1,\r\n            duration: 1000,\r\n            repeat: -1,\r\n            yoyo: true,\r\n            ease: 'Sine.easeInOut'\r\n        });\r\n\r\n        const startBtn = this.add.image(400, 550, 'start');\r\n        startBtn.setInteractive({ cursor: 'pointer' });\r\n\r\n        const startBtnOverlay = this.add.image(400, 550, 'start-active');\r\n        startBtnOverlay.setAlpha(0);\r\n\r\n        startBtn.on('pointerover', () => {\r\n            self.tweens.add({\r\n                targets: startBtnOverlay,\r\n                alpha: 1,\r\n                duration: 100,\r\n                ease: 'Sine.easeInOut'\r\n            });\r\n        });\r\n\r\n        startBtn.on('pointerout', () => {\r\n            self.tweens.add({\r\n                targets: startBtnOverlay,\r\n                alpha: 0,\r\n                duration: 100,\r\n                ease: 'Sine.easeInOut'\r\n            });\r\n        });\r\n\r\n        startBtn.on('pointerdown', () => { self.scene.start('RoundScene', { level: 0 }); });\r\n    }\r\n    \r\n}","var NOOP = function () {\r\n    //  NOOP\r\n};\r\n\r\nexport default NOOP;","import WebGLRenderer from './WebGLRenderer.js';\r\nimport CanvasRenderer from './CanvasRenderer.js';\r\nimport NOOP from '../../../../utils/object/NOOP';\r\n\r\nvar renderWebGL = NOOP;\r\nvar renderCanvas = NOOP;\r\n\r\nif (WEBGL_RENDERER) {\r\n    renderWebGL = WebGLRenderer;\r\n}\r\n\r\nif (CANVAS_RENDERER) {\r\n    renderCanvas = CanvasRenderer;\r\n}\r\n\r\nexport default {\r\n    renderWebGL: renderWebGL,\r\n    renderCanvas: renderCanvas\r\n\r\n};","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nconst CanvasPool = Phaser.Display.Canvas.CanvasPool;\r\n\r\n/**\r\n * Calculates the ascent, descent and fontSize of a given font style.\r\n *\r\n * @function Phaser.GameObjects.Text.MeasureText\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.GameObjects.Text.TextStyle} textStyle - The TextStyle object to measure.\r\n *\r\n * @return {object} An object containing the ascent, descent and fontSize of the TextStyle.\r\n */\r\nvar MeasureText = function (textStyle) {\r\n    // @property {HTMLCanvasElement} canvas - The canvas element that the text is rendered.\r\n    var canvas = CanvasPool.create(this);\r\n\r\n    // @property {HTMLCanvasElement} context - The context of the canvas element that the text is rendered to.\r\n    var context = canvas.getContext('2d');\r\n\r\n    textStyle.syncFont(canvas, context);\r\n\r\n    var width = Math.ceil(context.measureText(textStyle.testString).width * textStyle.baselineX);\r\n    var baseline = width;\r\n    var height = 2 * baseline;\r\n\r\n    baseline = baseline * textStyle.baselineY | 0;\r\n\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n\r\n    context.fillStyle = '#f00';\r\n    context.fillRect(0, 0, width, height);\r\n\r\n    context.font = textStyle._font;\r\n\r\n    context.textBaseline = 'alphabetic';\r\n    context.fillStyle = '#000';\r\n    context.fillText(textStyle.testString, 0, baseline);\r\n\r\n    var output = {\r\n        ascent: 0,\r\n        descent: 0,\r\n        fontSize: 0\r\n    };\r\n\r\n    if (!context.getImageData(0, 0, width, height)) {\r\n        output.ascent = baseline;\r\n        output.descent = baseline + 6;\r\n        output.fontSize = output.ascent + output.descent;\r\n\r\n        CanvasPool.remove(canvas);\r\n\r\n        return output;\r\n    }\r\n\r\n    var imagedata = context.getImageData(0, 0, width, height).data;\r\n    var pixels = imagedata.length;\r\n    var line = width * 4;\r\n    var i;\r\n    var j;\r\n    var idx = 0;\r\n    var stop = false;\r\n\r\n    // ascent. scan from top to bottom until we find a non red pixel\r\n    for (i = 0; i < baseline; i++) {\r\n        for (j = 0; j < line; j += 4) {\r\n            if (imagedata[idx + j] !== 255) {\r\n                stop = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!stop) {\r\n            idx += line;\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n\r\n    output.ascent = baseline - i;\r\n\r\n    idx = pixels - line;\r\n    stop = false;\r\n\r\n    // descent. scan from bottom to top until we find a non red pixel\r\n    for (i = height; i > baseline; i--) {\r\n        for (j = 0; j < line; j += 4) {\r\n            if (imagedata[idx + j] !== 255) {\r\n                stop = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!stop) {\r\n            idx -= line;\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n\r\n    output.descent = (i - baseline);\r\n    output.fontSize = output.ascent + output.descent;\r\n\r\n    CanvasPool.remove(canvas);\r\n\r\n    return output;\r\n};\r\n\r\nexport default MeasureText;","var CONST = {\r\n    // new line mode\r\n    NO_NEWLINE: 0,\r\n    RAW_NEWLINE: 1,\r\n    WRAPPED_NEWLINE: 2,\r\n\r\n    // wrap mode\r\n    NO_WRAP: 0,\r\n    WORD_WRAP: 1,\r\n    CHAR_WRAP: 2,\r\n\r\n    // split lines\r\n    SPLITREGEXP: /(?:\\r\\n|\\r|\\n)/\r\n};\r\n\r\nexport default CONST;","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nimport MeasureText from './MeasureText.js';\r\nimport CONST from '../const.js';\r\n\r\nconst GetAdvancedValue = Phaser.Utils.Objects.GetAdvancedValue;\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\n\r\n//  Key: [ Object Key, Default Value ]\r\n\r\n/**\r\n * A custom function that will be responsible for wrapping the text.\r\n * @callback TextStyleWordWrapCallback\r\n *\r\n * @param {string} text - The string to wrap.\r\n * @param {Phaser.GameObjects.Text} textObject - The Text instance.\r\n *\r\n * @return {(string|string[])} Should return the wrapped lines either as an array of lines or as a string with\r\n * newline characters in place to indicate where breaks should happen.\r\n */\r\n\r\nvar propertyMap = {\r\n    // background\r\n    backgroundColor: ['backgroundColor', null],\r\n\r\n    // font\r\n    fontFamily: ['fontFamily', 'Courier'],\r\n    fontSize: ['fontSize', '16px'],\r\n    fontStyle: ['fontStyle', ''],\r\n    color: ['color', '#fff'],\r\n    stroke: ['stroke', '#fff'],\r\n    strokeThickness: ['strokeThickness', 0],\r\n    shadowOffsetX: ['shadow.offsetX', 0],\r\n    shadowOffsetY: ['shadow.offsetY', 0],\r\n    shadowColor: ['shadow.color', '#000'],\r\n    shadowBlur: ['shadow.blur', 0],\r\n    shadowStroke: ['shadow.stroke', false],\r\n    shadowFill: ['shadow.fill', false],\r\n\r\n    // underline\r\n    underlineColor: ['underline.color', '#000'],\r\n    underlineThickness: ['underline.thickness', 0],\r\n    underlineOffset: ['underline.offset', 0],\r\n\r\n    // align\r\n    halign: ['halign', 'left'],\r\n    valign: ['valign', 'top'],\r\n\r\n    // size\r\n    maxLines: ['maxLines', 0],\r\n    fixedWidth: ['fixedWidth', 0],\r\n    fixedHeight: ['fixedHeight', 0],\r\n    resolution: ['resolution', 0],\r\n    lineSpacing: ['lineSpacing', 0],\r\n\r\n    rtl: ['rtl', false],\r\n    testString: ['testString', '|MÃ‰qgy'],\r\n    baselineX: ['baselineX', 1.2],\r\n    baselineY: ['baselineY', 1.4],\r\n\r\n    // wrap\r\n    wrapMode: ['wrap.mode', 1],\r\n    wrapWidth: ['wrap.width', 0]\r\n    //wrapCallback: ['wrap.callback', null],\r\n    //wrapCallbackScope: ['wrap.callbackScope', null]\r\n};\r\n\r\nclass TextStyle {\r\n    constructor(text, style) {\r\n        this.parent = text;\r\n\r\n        this.backgroundColor;\r\n\r\n        this.fontFamily;\r\n        this.fontSize;\r\n        this.fontStyle;\r\n        this.color;\r\n        this.stroke;\r\n        this.strokeThickness;\r\n        this.shadowOffsetX;\r\n        this.shadowOffsetY;\r\n        this.shadowColor;\r\n        this.shadowBlur;\r\n        this.shadowStroke;\r\n        this.shadowFill;\r\n\r\n        this.underlineColor;\r\n        this.underlineThickness;\r\n        this.underlineOffset;\r\n\r\n        this.halign;\r\n        this.valign;\r\n\r\n        this.maxLines;\r\n        this.fixedWidth;\r\n        this.fixedHeight;\r\n        this.resolution;\r\n        this.lineSpacing;\r\n\r\n        this.rtl;\r\n        this.testString;\r\n\r\n\r\n        this.baselineX;\r\n        this.baselineY;\r\n\r\n        this._font;\r\n\r\n        //  Set to defaults + user style\r\n        this.setStyle(style, false);\r\n\r\n        var metrics = GetValue(style, 'metrics', false);\r\n\r\n        //  Provide optional TextMetrics in the style object to avoid the canvas look-up / scanning\r\n        //  Doing this is reset if you then change the font of this TextStyle after creation\r\n        if (metrics) {\r\n            this.metrics = {\r\n                ascent: GetValue(metrics, 'ascent', 0),\r\n                descent: GetValue(metrics, 'descent', 0),\r\n                fontSize: GetValue(metrics, 'fontSize', 0)\r\n            };\r\n        } else {\r\n            this.metrics = MeasureText(this);\r\n        }\r\n    }\r\n\r\n    setStyle(style, updateText) {\r\n        if (updateText === undefined) {\r\n            updateText = true;\r\n        }\r\n\r\n        if (style && style.hasOwnProperty('wrap')) {\r\n            var wrap = style.wrap;\r\n            if (wrap.hasOwnProperty('mode')) {\r\n                var mode = wrap.mode;\r\n                if (typeof mode === 'string') {\r\n                    wrap.mode = WRAPMODE[mode];\r\n                }\r\n            } else {\r\n                if (wrap.hasOwnProperty('width')) {\r\n                    wrap.mode = 1;\r\n                }\r\n            }\r\n        }\r\n\r\n        //  Avoid type mutation\r\n        if (style && style.hasOwnProperty('fontSize') && typeof style.fontSize === 'number') {\r\n            style.fontSize = style.fontSize.toString() + 'px';\r\n        }\r\n\r\n        for (var key in propertyMap) {\r\n            if (key === 'wrapCallback' || key === 'wrapCallbackScope') {\r\n                // Callback & scope should be set without processing the values\r\n                this[key] = GetValue(style, propertyMap[key][0], propertyMap[key][1]);\r\n            } else {\r\n                this[key] = GetAdvancedValue(style, propertyMap[key][0], propertyMap[key][1]);\r\n            }\r\n        }\r\n\r\n        //  Allow for 'font' override\r\n        var font = GetValue(style, 'font', null);\r\n\r\n        if (font === null) {\r\n            this._font = this.fontStyle + ' ' + this.fontSize + ' ' + this.fontFamily;\r\n        } else {\r\n            this._font = font;\r\n        }\r\n\r\n        //  Allow for 'fill' to be used in place of 'color'\r\n        var fill = GetValue(style, 'fill', null);\r\n\r\n        if (fill !== null) {\r\n            this.color = fill;\r\n        }\r\n\r\n        if (updateText) {\r\n            return this.update(true);\r\n        } else {\r\n            return this.parent;\r\n        }\r\n    }\r\n\r\n    syncFont(canvas, context) {\r\n        context.font = this._font;\r\n    }\r\n\r\n    syncStyle(canvas, context) {\r\n        context.textBaseline = 'alphabetic';\r\n\r\n        context.fillStyle = this.color;\r\n        context.strokeStyle = this.stroke;\r\n\r\n        context.lineWidth = this.strokeThickness;\r\n        context.lineCap = 'round';\r\n        context.lineJoin = 'round';\r\n    }\r\n\r\n    syncShadow(context, enabled) {\r\n        if (enabled) {\r\n            context.shadowOffsetX = this.shadowOffsetX;\r\n            context.shadowOffsetY = this.shadowOffsetY;\r\n            context.shadowColor = this.shadowColor;\r\n            context.shadowBlur = this.shadowBlur;\r\n        } else {\r\n            context.shadowOffsetX = 0;\r\n            context.shadowOffsetY = 0;\r\n            context.shadowColor = 0;\r\n            context.shadowBlur = 0;\r\n        }\r\n    }\r\n\r\n    update(recalculateMetrics) {\r\n        if (recalculateMetrics) {\r\n            this._font = this.fontStyle + ' ' + this.fontSize + ' ' + this.fontFamily;\r\n\r\n            this.metrics = MeasureText(this);\r\n        }\r\n\r\n        return this.parent.updateText(recalculateMetrics);\r\n    }\r\n\r\n    buildFont() {\r\n        var newFont = this.fontStyle + ' ' + this.fontSize + ' ' + this.fontFamily;\r\n        if (newFont !== this._font) {\r\n            this._font = newFont;\r\n            //this.metrics = MeasureText(this);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    setFont(font) {\r\n        if (typeof font === 'string') {\r\n            this.fontFamily = font;\r\n            this.fontSize = '';\r\n            this.fontStyle = '';\r\n        } else {\r\n            this.fontFamily = GetValue(font, 'fontFamily', 'Courier');\r\n            this.fontSize = GetValue(font, 'fontSize', '16px');\r\n            this.fontStyle = GetValue(font, 'fontStyle', '');\r\n        }\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setFontFamily(family) {\r\n        this.fontFamily = family;\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setFontStyle(style) {\r\n        this.fontStyle = style;\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setFontSize(size) {\r\n        if (typeof size === 'number') {\r\n            size = size.toString() + 'px';\r\n        }\r\n\r\n        this.fontSize = size;\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setTestString(string) {\r\n        this.testString = string;\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setFixedSize(width, height) {\r\n        this.fixedWidth = width;\r\n        this.fixedHeight = height;\r\n\r\n        if (width) {\r\n            this.parent.width = width;\r\n        }\r\n\r\n        if (height) {\r\n            this.parent.height = height;\r\n        }\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setResolution(value) {\r\n        this.resolution = value;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setLineSpacing(value) {\r\n        this.lineSpacing = value;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setBackgroundColor(color) {\r\n        this.backgroundColor = color;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setFill(color) {\r\n        this.color = color;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setColor(color) {\r\n        this.color = color;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setStroke(color, thickness) {\r\n        if (color === undefined) {\r\n            //  Reset the stroke to zero (disabling it)\r\n            this.strokeThickness = 0;\r\n        } else {\r\n            if (thickness === undefined) {\r\n                thickness = this.strokeThickness;\r\n            }\r\n\r\n            this.stroke = color;\r\n            this.strokeThickness = thickness;\r\n        }\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setShadow(x, y, color, blur, shadowStroke, shadowFill) {\r\n        if (x === undefined) {\r\n            x = 0;\r\n        }\r\n        if (y === undefined) {\r\n            y = 0;\r\n        }\r\n        if (color === undefined) {\r\n            color = '#000';\r\n        }\r\n        if (blur === undefined) {\r\n            blur = 0;\r\n        }\r\n        if (shadowStroke === undefined) {\r\n            shadowStroke = false;\r\n        }\r\n        if (shadowFill === undefined) {\r\n            shadowFill = true;\r\n        }\r\n\r\n        this.shadowOffsetX = x;\r\n        this.shadowOffsetY = y;\r\n        this.shadowColor = color;\r\n        this.shadowBlur = blur;\r\n        this.shadowStroke = shadowStroke;\r\n        this.shadowFill = shadowFill;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setShadowOffset(x, y) {\r\n        if (x === undefined) {\r\n            x = 0;\r\n        }\r\n        if (y === undefined) {\r\n            y = x;\r\n        }\r\n\r\n        this.shadowOffsetX = x;\r\n        this.shadowOffsetY = y;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setShadowColor(color) {\r\n        if (color === undefined) {\r\n            color = '#000';\r\n        }\r\n\r\n        this.shadowColor = color;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setShadowBlur(blur) {\r\n        if (blur === undefined) {\r\n            blur = 0;\r\n        }\r\n\r\n        this.shadowBlur = blur;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setShadowStroke(enabled) {\r\n        this.shadowStroke = enabled;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setShadowFill(enabled) {\r\n        this.shadowFill = enabled;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setUnderline(color, thickness, offset) {\r\n        if (color === undefined) {\r\n            color = '#000';\r\n        }\r\n        if (thickness === undefined) {\r\n            thickness = 0;\r\n        }\r\n        if (offset === undefined) {\r\n            offset = 0;\r\n        }\r\n\r\n        this.underlineColor = color;\r\n        this.underlineThickness = thickness;\r\n        this.underlineOffset = offset;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setUnderlineColor(color) {\r\n        if (color === undefined) {\r\n            color = '#000';\r\n        }\r\n\r\n        this.underlineColor = color;\r\n        return this.update(false);\r\n    }\r\n\r\n    setUnderlineThickness(thickness) {\r\n        if (thickness === undefined) {\r\n            thickness = 0;\r\n        }\r\n\r\n        this.underlineThickness = thickness;\r\n        return this.update(false);\r\n    }\r\n\r\n    setUnderlineOffset(offset) {\r\n        if (offset === undefined) {\r\n            offset = 0;\r\n        }\r\n\r\n        this.underlineOffset = offset;\r\n        return this.update(false);\r\n    }\r\n\r\n    setWrapMode(mode) {\r\n        if (typeof mode === 'string') {\r\n            mode = WRAPMODE[mode.toLowerCase()] || 0;\r\n        }\r\n        this.wrapMode = mode;\r\n        return this.update(true);\r\n    }\r\n\r\n    setWrapWidth(width) {\r\n        this.wrapWidth = width;\r\n        return this.update(false);\r\n    }\r\n\r\n    setAlign(halign, valign) {\r\n        if (halign === undefined) {\r\n            halign = 'left';\r\n        }\r\n        if (valign === undefined) {\r\n            valign = 'top';\r\n        }\r\n        this.halign = halign;\r\n        this.valign = valign;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setHAlign(halign) {\r\n        if (halign === undefined) {\r\n            halign = 'left';\r\n        }\r\n        this.halign = halign;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setVAlign(valign) {\r\n        if (valign === undefined) {\r\n            valign = 'top';\r\n        }\r\n        this.valign = valign;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setMaxLines(max) {\r\n        if (max === undefined) {\r\n            max = 0;\r\n        }\r\n\r\n        this.maxLines = max;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    getTextMetrics() {\r\n        var metrics = this.metrics;\r\n\r\n        return {\r\n            ascent: metrics.ascent,\r\n            descent: metrics.descent,\r\n            fontSize: metrics.fontSize\r\n        };\r\n    }\r\n\r\n    get lineHeight() {\r\n        return this.metrics.fontSize + this.strokeThickness + this.lineSpacing;\r\n    }\r\n\r\n    toJSON() {\r\n        var output = {};\r\n\r\n        for (var key in propertyMap) {\r\n            output[key] = this[key];\r\n        }\r\n\r\n        output.metrics = this.getTextMetrics();\r\n\r\n        return output;\r\n    }\r\n\r\n    destroy() {\r\n        this.parent = undefined;\r\n    }\r\n\r\n}\r\n\r\nconst HALIGNMODE = {\r\n    left: CONST.hleft,\r\n    center: CONST.hcenter,\r\n    right: CONST.hright,\r\n};\r\nconst VALIGNMODE = {\r\n    top: CONST.vtop,\r\n    center: CONST.vcenter,\r\n    bottom: CONST.vbottom,\r\n};\r\nconst WRAPMODE = {\r\n    none: CONST.NO_WRAP,\r\n    word: CONST.WORD_WRAP,\r\n    char: CONST.CHAR_WRAP,\r\n    character: CONST.CHAR_WRAP\r\n};\r\n\r\nexport default TextStyle;","import CONST from '../const.js';\r\n\r\nexport default {\r\n    draw(startX, startY, boxWidth, boxHeight) {\r\n        var penManager = this.penManager;\r\n        this.hitAreaManager.clear();\r\n\r\n        var context = this.context;\r\n        context.save();\r\n\r\n        // this.clear();\r\n        this.drawBackground(this.defatultStyle.backgroundColor);\r\n\r\n        // draw lines\r\n        var defatultStyle = this.defatultStyle;\r\n        startX += this.startXOffset;\r\n        startY += this.startYOffset;\r\n        var halign = defatultStyle.halign,\r\n            valign = defatultStyle.valign;\r\n\r\n        var lineWidth, lineHeight = defatultStyle.lineHeight;\r\n        var lines = penManager.lines;\r\n        var totalLinesNum = lines.length,\r\n            maxLines = defatultStyle.maxLines;\r\n        var drawLinesNum, drawLineStartIdx, drawLineEndIdx;\r\n        if ((maxLines > 0) && (totalLinesNum > maxLines)) {\r\n            drawLinesNum = maxLines;\r\n            if (valign === 'center') { // center\r\n                drawLineStartIdx = Math.floor((totalLinesNum - drawLinesNum) / 2);\r\n            } else if (valign === 'bottom') { // bottom\r\n                drawLineStartIdx = totalLinesNum - drawLinesNum;\r\n            } else {\r\n                drawLineStartIdx = 0;\r\n            }\r\n        } else {\r\n            drawLinesNum = totalLinesNum;\r\n            drawLineStartIdx = 0;\r\n        }\r\n        drawLineEndIdx = drawLineStartIdx + drawLinesNum;\r\n\r\n        var offsetX, offsetY;\r\n        if (valign === 'center') { // center\r\n            offsetY = Math.max((boxHeight - (drawLinesNum * lineHeight)) / 2, 0);\r\n        } else if (valign === 'bottom') { // bottom\r\n            offsetY = Math.max(boxHeight - (drawLinesNum * lineHeight) - 2, 0);\r\n        } else {\r\n            offsetY = 0;\r\n        }\r\n        offsetY += startY;\r\n        for (var lineIdx = drawLineStartIdx; lineIdx < drawLineEndIdx; lineIdx++) {\r\n            lineWidth = penManager.getLineWidth(lineIdx);\r\n            if (lineWidth === 0) {\r\n                continue;\r\n            }\r\n\r\n            if (halign === 'center') { // center\r\n                offsetX = (boxWidth - lineWidth) / 2;\r\n            } else if (halign === 'right') { // right\r\n                offsetX = boxWidth - lineWidth;\r\n            } else {\r\n                offsetX = 0;\r\n            }\r\n            offsetX += startX;\r\n\r\n            var pens = lines[lineIdx];\r\n            for (var penIdx = 0, pensLen = pens.length; penIdx < pensLen; penIdx++) {\r\n                this.drawPen(pens[penIdx], offsetX, offsetY);\r\n            }\r\n        }\r\n\r\n        context.restore();\r\n    },\r\n\r\n    drawPen(pen, offsetX, offsetY) {\r\n        offsetX += pen.x;\r\n        offsetY += pen.y;\r\n\r\n        var canvas = this.canvas;\r\n        var context = this.context;\r\n        context.save();\r\n\r\n        var curStyle = this.parser.propToContextStyle(\r\n            this.defatultStyle,\r\n            pen.prop\r\n        );\r\n        curStyle.buildFont();\r\n        curStyle.syncFont(canvas, context);\r\n        curStyle.syncStyle(canvas, context);\r\n\r\n        // Underline\r\n        if ((curStyle.underlineThickness > 0) && (pen.width > 0)) {\r\n            this.drawUnderline(offsetX, offsetY, pen.width, curStyle);\r\n        }\r\n\r\n        // Text\r\n        if (pen.isTextPen) {\r\n            this.drawText(offsetX, offsetY, pen.text, curStyle);\r\n        }\r\n\r\n        // Image\r\n        if (pen.isImagePen) {\r\n            this.drawImage(offsetX, offsetY, pen.prop.img, curStyle);\r\n        }\r\n\r\n        context.restore();\r\n\r\n        if (pen.hasAreaMarker && (pen.width > 0)) {\r\n            this.hitAreaManager.add(\r\n                pen.prop.area,\r\n                offsetX, (offsetY - this.startYOffset),\r\n                pen.width, this.defatultStyle.lineHeight);\r\n        }\r\n    },\r\n\r\n    clear() {\r\n        var canvas = this.canvas;\r\n        this.context.clearRect(0, 0, canvas.width, canvas.height);\r\n    },\r\n\r\n    drawBackground(color) {\r\n        if (color === null) {\r\n            return;\r\n        }\r\n        this.context.fillStyle = color;\r\n        this.context.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n    },\r\n\r\n    drawUnderline(x, y, width, style) {\r\n        y += style.underlineOffset - (style.underlineThickness / 2);\r\n        if (this.autoRound) {\r\n            x = Math.round(x);\r\n            y = Math.round(y);\r\n        }\r\n\r\n        var context = this.context;\r\n        var savedLineCap = context.lineCap;\r\n        context.lineCap = 'butt';\r\n        context.beginPath();\r\n        context.strokeStyle = style.underlineColor;\r\n        context.lineWidth = style.underlineThickness;\r\n        context.moveTo(x, y);\r\n        context.lineTo((x + width), y);\r\n        context.stroke();\r\n        context.lineCap = savedLineCap;\r\n    },\r\n\r\n    drawText(x, y, text, style) {\r\n        if (this.autoRound) {\r\n            x = Math.round(x);\r\n            y = Math.round(y);\r\n        }\r\n\r\n        var context = this.context;\r\n        if (style.strokeThickness) {\r\n            style.syncShadow(context, style.shadowStroke);\r\n            context.strokeText(text, x, y);\r\n        }\r\n\r\n        if (style.color && (style.color !== 'none')) {\r\n            style.syncShadow(context, style.shadowFill);\r\n            context.fillText(text, x, y);\r\n        }\r\n    },\r\n\r\n    drawImage(x, y, imgKey, style) {\r\n        var imageManager = this.parent.imageManager;\r\n        var imgData = imageManager.get(imgKey);\r\n        var frame = imageManager.getFrame(imgKey);\r\n\r\n        x += imgData.left;\r\n        y += - this.startYOffset + imgData.y;\r\n        if (this.autoRound) {\r\n            x = Math.round(x);\r\n            y = Math.round(y);\r\n        }\r\n\r\n        var context = this.context;\r\n        context.drawImage(\r\n            frame.source.image,\r\n            frame.cutX, frame.cutY, frame.cutWidth, frame.cutHeight,\r\n            x, y, imgData.width, imgData.height\r\n        );\r\n    }\r\n\r\n}","class Stack {\r\n    constructor() {\r\n        this.items = [];\r\n    }\r\n\r\n    destroy() {\r\n        this.items.length = 0;\r\n        this.items = undefined;\r\n    }\r\n\r\n    pop() {\r\n        return (this.items.length > 0) ? this.items.pop() : null;\r\n    }\r\n\r\n    push(l) {\r\n        this.items.push(l);\r\n        return this;\r\n    }\r\n\r\n    pushMultiple(arr) {\r\n        this.items.push.apply(this.items, arr);\r\n        arr.length = 0;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport default Stack;","import Pool from './utils/struct/Stack.js';\r\nexport default Pool;","import CONST from '../const.js';\r\n\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\nconst NO_NEWLINE = CONST.NO_NEWLINE;\r\nconst RAW_NEWLINE = CONST.RAW_NEWLINE;\r\n\r\nclass Pen {\r\n    constructor(config) {\r\n        this.prop = {};\r\n        this.resetFromJSON(config);\r\n    }\r\n\r\n    resetFromJSON(o) { // (txt, x, y, width, prop, newLineMode, startIndex)\r\n        this.text = GetValue(o, 'text', '');\r\n        this.x = GetValue(o, 'x', 0);\r\n        this.y = GetValue(o, 'y', 0);\r\n        this.width = GetValue(o, 'width', 0);\r\n\r\n        var prop = GetValue(o, 'prop', null);\r\n        if (prop === null) {\r\n            prop = {};\r\n        }\r\n        this.prop = prop;\r\n        this.newLineMode = GetValue(o, 'newLineMode', 0);\r\n        this.startIndex = GetValue(o, 'startIndex', 0);\r\n    }\r\n\r\n    get plainText() {\r\n        var txt = this.text\r\n        if (this.newLineMode === RAW_NEWLINE) {\r\n            txt += \"\\n\";\r\n        }\r\n\r\n        return txt;\r\n    }\r\n\r\n    get wrapText() {\r\n        var txt = this.text;\r\n        if (this.newLineMode !== NO_NEWLINE) {\r\n            txt += \"\\n\";\r\n        }\r\n\r\n        return txt;\r\n    }\r\n\r\n    get rawTextLength() {\r\n        var len = this.text.length;\r\n        if (this.newLineMode === RAW_NEWLINE) {\r\n            len += 1;\r\n        }\r\n        return len;\r\n    }\r\n\r\n    get endIndex() {\r\n        return this.startIndex + this.rawTextLength;\r\n    }\r\n\r\n    get lastX() {\r\n        return this.x + this.width;\r\n    }\r\n\r\n    get isTextPen() {\r\n        return (this.text !== '');\r\n    }\r\n\r\n    get isImagePen() {\r\n        return !!this.prop.img;\r\n    }\r\n\r\n    get hasAreaMarker() {\r\n        return !!this.prop.area;\r\n    }\r\n};\r\n\r\nexport default Pen;","var Clear = function (obj) {\r\n    if (Array.isArray(obj)) {\r\n        obj.length = 0;\r\n    } else {\r\n        for (var key in obj) {\r\n            delete obj[key];\r\n        }\r\n    }\r\n}\r\nexport default Clear;","import Clear from './Clear.js';\r\n\r\n/**\r\n * Shallow Object Clone. Will not out nested objects.\r\n * @param {object} obj JSON object\r\n * @param {object} ret JSON object to return, set null to return a new object\r\n * @returns {object} this object\r\n */\r\nvar Clone = function (obj, out) {\r\n    var objIsArray = Array.isArray(obj);\r\n\r\n    if (out === undefined) {\r\n        out = (objIsArray) ? [] : {};\r\n    } else {\r\n        Clear(out);\r\n    }\r\n\r\n    if (objIsArray) {\r\n        out.length = obj.length;\r\n    }\r\n    for (var key in obj) {\r\n        out[key] = obj[key];\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nexport default Clone;\r\n","import Pool from '../../../../pool.js';\r\nimport Pen from './Pen.js';\r\nimport CONST from '../const.js';\r\nimport Clone from '../../../../utils/object/Clone.js';\r\nimport NOOP from '../../../../utils/object/NOOP.js';\r\n\r\nconst GetFastValue = Phaser.Utils.Objects.GetFastValue;\r\nconst NO_NEWLINE = CONST.NO_NEWLINE;\r\nconst WRAPPED_NEWLINE = CONST.WRAPPED_NEWLINE;\r\n\r\nvar PensPool = new Pool(); // default pens pool\r\nvar LinesPool = new Pool(); // default lines pool\r\nclass PenManager {\r\n    constructor(config) {\r\n        this.pens = []; // all pens\r\n        this.lines = []; // pens in lines [ [],[],[],.. ]\r\n        this.maxLinesWidth = undefined;\r\n\r\n        this.PensPool = GetFastValue(config, 'pensPool', PensPool);\r\n        this.LinesPool = GetFastValue(config, 'linesPool', LinesPool);\r\n        this.tagToText = GetFastValue(config, 'tagToText', NOOP);\r\n        this.tagToTextScope = GetFastValue(config, 'tagToTextScope', undefined);\r\n    }\r\n\r\n    destroy() {\r\n        this.freePens();\r\n        this.tagToText = undefined;\r\n        this.tagToTextScope = undefined;\r\n    }\r\n\r\n    freePens() {\r\n        for (var i = 0, len = this.lines.length; i < len; i++)\r\n            this.lines[i].length = 0;\r\n\r\n        this.PensPool.pushMultiple(this.pens);\r\n        this.LinesPool.pushMultiple(this.lines);\r\n        this.maxLinesWidth = undefined;\r\n    }\r\n\r\n    addTextPen(text, x, y, width, prop, newLineMode) {\r\n        var pen = this.PensPool.pop();\r\n        if (pen == null) {\r\n            pen = new Pen();\r\n        }\r\n        PEN_CONFIG.text = text;\r\n        PEN_CONFIG.x = x;\r\n        PEN_CONFIG.y = y;\r\n        PEN_CONFIG.width = width;\r\n        PEN_CONFIG.prop = prop;\r\n        PEN_CONFIG.newLineMode = newLineMode;\r\n        pen.resetFromJSON(PEN_CONFIG);\r\n        this.addPen(pen);\r\n        return this;\r\n    }\r\n\r\n    addImagePen(x, y, width, prop) {\r\n        this.addTextPen('', x, y, width, prop, NO_NEWLINE);\r\n        return this;\r\n    }\r\n\r\n    addNewLinePen() {\r\n        var previousPen = this.lastPen;\r\n        var x = (previousPen) ? previousPen.lastX : 0;\r\n        var y = (previousPen) ? previousPen.y : 0;\r\n        var prop = (previousPen) ? Clone(previousPen.prop) : null;\r\n        this.addTextPen('', x, y, 0, prop, WRAPPED_NEWLINE);\r\n        return this;\r\n    }\r\n\r\n    addPen(pen) {\r\n        var previousPen = this.lastPen;\r\n        if (previousPen == null) {\r\n            pen.startIndex = 0;\r\n        } else {\r\n            pen.startIndex = previousPen.endIndex;\r\n        }\r\n        this.pens.push(pen);\r\n\r\n        // maintan lines\r\n        var line = this.lastLine;\r\n        if (line == null) {\r\n            line = this.LinesPool.pop() || [];\r\n            this.lines.push(line);\r\n        }\r\n        line.push(pen);\r\n\r\n        // new line, add an empty line\r\n        if (pen.newLineMode !== NO_NEWLINE) {\r\n            line = this.LinesPool.pop() || [];\r\n            this.lines.push(line);\r\n        }\r\n        this.maxLinesWidth = undefined;\r\n    }\r\n\r\n    clone(targetPenManager) {\r\n        if (targetPenManager == null)\r\n            targetPenManager = new PenManager();\r\n\r\n        targetPenManager.freePens();\r\n\r\n        for (var li = 0, llen = this.lines.length; li < llen; li++) {\r\n            var pens = this.lines[li];\r\n            for (var pi = 0, plen = pens.length; pi < plen; pi++) {\r\n                var pen = pens[pi];\r\n                targetPenManager.addPen(\r\n                    pen.text,\r\n                    pen.x,\r\n                    pen.y,\r\n                    pen.width,\r\n                    Clone(pen.prop),\r\n                    pen.newLineMode\r\n                );\r\n            }\r\n        }\r\n\r\n        return targetPenManager;\r\n    }\r\n\r\n    get lastPen() {\r\n        return this.pens[this.pens.length - 1];\r\n    }\r\n\r\n    get lastLine() {\r\n        return this.lines[this.lines.length - 1];\r\n    }\r\n\r\n    getLineStartIndex(i) {\r\n        if (i >= this.lines.length) {\r\n            return this.getLineEndIndex(i);\r\n        } else {\r\n            var line = this.lines[i];\r\n            return (line && line[0]) ? line[0].startIndex : 0;\r\n        }\r\n    }\r\n\r\n    getLineEndIndex(i) {\r\n        if (i >= this.lines.length) {\r\n            i = this.lines.length - 1;\r\n        }\r\n        var li, hasLastPen = false,\r\n            line;\r\n        for (li = i; li >= 0; li--) {\r\n            line = this.lines[li];\r\n            hasLastPen = (line != null) && (line.length > 0);\r\n            if (hasLastPen) {\r\n                break;\r\n            }\r\n        }\r\n        if (!hasLastPen) {\r\n            return 0;\r\n        }\r\n\r\n        var lastPen = line[line.length - 1];\r\n        return lastPen.endIndex;\r\n    }\r\n\r\n    getLineWidth(i) {\r\n        var line = this.lines[i];\r\n        if (!line) {\r\n            return 0;\r\n        }\r\n\r\n        var lastPen = line[line.length - 1];\r\n        if (lastPen == null) {\r\n            return 0;\r\n        }\r\n\r\n        var lineWidth = lastPen.lastX; // start from 0\r\n        return lineWidth;\r\n    }\r\n\r\n    getMaxLineWidth() {\r\n        if (this.maxLinesWidth !== undefined) {\r\n            return this.maxLinesWidth;\r\n        }\r\n        var w, maxW = 0;\r\n        for (var i = 0, len = this.lines.length; i < len; i++) {\r\n            w = this.getLineWidth(i);\r\n            if (w > maxW) {\r\n                maxW = w;\r\n            }\r\n        }\r\n        this.maxLinesWidth = maxW;\r\n        return maxW;\r\n    }\r\n\r\n    getLineWidths() {\r\n        var result = [];\r\n        for (var i = 0, len = this.lines.length; i < len; i++) {\r\n            result.push(this.getLineWidth(i));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    get linesCount() {\r\n        return this.lines.length;\r\n    }\r\n\r\n    get plainText() {\r\n        var txt = \"\",\r\n            pens = this.pens;\r\n        for (var i = 0, len = pens.length; i < len; i++) {\r\n            txt += pens[i].plainText;\r\n        }\r\n\r\n        return txt;\r\n    }\r\n\r\n    get rawTextLength() {\r\n        var l = 0,\r\n            pens = this.pens;\r\n        for (var i = 0, len = this.pens.length; i < len; i++) {\r\n            l += pens[i].rawTextLength;\r\n        }\r\n\r\n        return l;\r\n    }\r\n\r\n    getSliceTagText(start, end, wrap) {\r\n        if (start === undefined) {\r\n            start = 0;\r\n        }\r\n        if (end === undefined) {\r\n            var lastPen = this.lastPen;\r\n            if (lastPen == null) {\r\n                return \"\";\r\n            }\r\n\r\n            end = lastPen.endIndex;\r\n        }\r\n        if (wrap === undefined) {\r\n            wrap = false;\r\n        }\r\n\r\n        var txt = \"\",\r\n            formatTxt,\r\n            pen, penTxt, penStartIdx, penEndIdx, isInRange;\r\n        var currentProp, previousProp;\r\n        for (var i = 0, len = this.pens.length; i < len; i++) {\r\n            pen = this.pens[i];\r\n            penEndIdx = pen.endIndex;\r\n            if (penEndIdx <= start) {\r\n                continue;\r\n            }\r\n            pen = this.pens[i];\r\n            penTxt = (!wrap) ? pen.plainText : pen.wrapText;\r\n            currentProp = pen.prop;\r\n            penStartIdx = pen.startIndex;\r\n\r\n            isInRange = (penStartIdx >= start) && (penEndIdx <= end);\r\n            if (!isInRange) {\r\n                penTxt = penTxt.substring(start - penStartIdx, end - penStartIdx);\r\n            }\r\n\r\n            if (this.tagToTextScope) {\r\n                txt += this.tagToText.call(this.tagToTextScope, penTxt, currentProp, previousProp);\r\n            } else {\r\n                txt += this.tagToText(penTxt, currentProp, previousProp);\r\n            }\r\n\r\n            previousProp = currentProp;\r\n            if (penEndIdx >= end) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return txt;\r\n    }\r\n};\r\n\r\nvar PEN_CONFIG = {};\r\n\r\nexport default PenManager;","import Pool from '../../../../pool.js';\r\n\r\nconst Rectangle = Phaser.Geom.Rectangle;\r\n\r\nvar RectanglePool = new Pool();\r\nclass HitAreaManager {\r\n    constructor() {\r\n        this.hitAreas = [];\r\n    }\r\n\r\n    destroy() {\r\n        this.clear();\r\n    }\r\n\r\n    clear() {\r\n        RectanglePool.pushMultiple(this.hitAreas);\r\n        return this;\r\n    }\r\n\r\n    add(key, x, y, width, height) {\r\n        var rectangle = RectanglePool.pop();\r\n        if (rectangle === null) {\r\n            rectangle = new Rectangle(x, y, width, height);\r\n        } else {\r\n            rectangle.setTo(x, y, width, height);\r\n        }\r\n        rectangle.key = key;\r\n        this.hitAreas.push(rectangle);\r\n        return this;\r\n    }\r\n\r\n    contains(x, y) {\r\n        var hitAreas = this.hitAreas, hitArea;\r\n        for (var i = 0, cnt = hitAreas.length; i < cnt; i++) {\r\n            hitArea = hitAreas[i];\r\n            if (hitArea.contains(x, y)) {\r\n                return hitArea.key;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    drawBounds(graphics, color, parent) {\r\n        if (color === undefined) {\r\n            color = 0xffffff;\r\n        }\r\n\r\n        if (parent) {\r\n            graphics\r\n                .save()\r\n                .scaleCanvas(parent.scaleX, parent.scaleY)\r\n                .rotateCanvas(parent.rotation)\r\n                .translateCanvas(parent.x, parent.y)\r\n        }\r\n\r\n        var hitAreas = this.hitAreas, hitArea;\r\n        for (var i = 0, cnt = hitAreas.length; i < cnt; i++) {\r\n            hitArea = hitAreas[i];\r\n            graphics.lineStyle(1, color).strokeRect(hitArea.x, hitArea.y, hitArea.width, hitArea.height);\r\n        }\r\n\r\n        if (parent) {\r\n            graphics\r\n                .restore()\r\n        }\r\n        return this;\r\n    }\r\n}\r\nexport default HitAreaManager;","var SetInteractive = function () {\r\n    this.parent\r\n        .on('pointerdown', function (pointer, localX, localY, event) {\r\n            FireEvent.call(this, 'areadown', pointer, localX, localY);\r\n        }, this)\r\n        .on('pointerup', function (pointer, localX, localY, event) {\r\n            FireEvent.call(this, 'areaup', pointer, localX, localY);\r\n        }, this)\r\n}\r\n\r\nvar FireEvent = function (eventName, pointer, localX, localY) {\r\n    var key = this.hitAreaManager.contains(localX, localY);\r\n    if (key === false) {\r\n        return;\r\n    }\r\n    this.parent.emit(`${eventName}-${key}`, pointer, localX, localY)\r\n    this.parent.emit(eventName, key, pointer, localX, localY)\r\n}\r\nexport default SetInteractive;","import Pool from '../../../../pool.js';\r\nimport CONST from '../const.js';\r\n\r\nconst NO_NEWLINE = CONST.NO_NEWLINE;\r\nconst RAW_NEWLINE = CONST.RAW_NEWLINE;\r\nconst WRAPPED_NEWLINE = CONST.WRAPPED_NEWLINE;\r\nconst NO_WRAP = CONST.NO_WRAP;\r\nconst WORD_WRAP = CONST.WORD_WRAP;\r\nconst CHAR_WRAP = CONST.CHAR_WRAP;\r\nconst splitRegExp = CONST.SPLITREGEXP;\r\n\r\nvar WRAP_RESULT = [];\r\nvar WrapText = function (text, getTextWidth, wrapMode, wrapWidth, offset) {\r\n    if (wrapWidth <= 0) {\r\n        wrapMode = NO_WRAP;\r\n    }\r\n\r\n    var retLines = WRAP_RESULT;\r\n    LinesPool.pushMultiple(retLines);\r\n\r\n    if (!text || !text.length) {\r\n        return retLines;\r\n    }\r\n\r\n    var lines = text.split(splitRegExp),\r\n        line, remainWidth, isLaseLine, newLineMode;\r\n    for (var i = 0, linesLen = lines.length; i < linesLen; i++) {\r\n        line = lines[i];\r\n        newLineMode = (i === (linesLen - 1)) ? NO_NEWLINE : RAW_NEWLINE;\r\n\r\n        if (wrapMode === NO_WRAP) {\r\n            var textWidth = getTextWidth(line);\r\n            retLines.push(LinesPool.newline(line, textWidth, newLineMode));\r\n            continue;\r\n        } else {\r\n            if (i === 0) {\r\n                remainWidth = wrapWidth - offset;\r\n            } else {\r\n                remainWidth = wrapWidth;\r\n            }\r\n        }\r\n\r\n        // short string testing\r\n        if (line.length <= 100) {\r\n            var textWidth = getTextWidth(line);\r\n            if (textWidth <= remainWidth) {\r\n                retLines.push(LinesPool.newline(line, textWidth, newLineMode));\r\n                continue;\r\n            }\r\n        }\r\n\r\n        // character mode\r\n        var tokenArray;\r\n        if (wrapMode === WORD_WRAP) {\r\n            // word mode\r\n            tokenArray = line.split(' ');\r\n        } else {\r\n            tokenArray = line;\r\n        }\r\n        var token;\r\n        var curLineText = '',\r\n            lineText = '',\r\n            currLineWidth, lineWidth = 0;\r\n        for (var j = 0, tokenLen = tokenArray.length; j < tokenLen; j++) {\r\n            token = tokenArray[j];\r\n\r\n            if (wrapMode === WORD_WRAP) {\r\n                curLineText += token;\r\n\r\n                if (j < (tokenLen - 1)) {\r\n                    curLineText += ' ';\r\n                }\r\n            } else {\r\n                curLineText += token;\r\n            }\r\n\r\n            currLineWidth = getTextWidth(curLineText);\r\n            if (currLineWidth > remainWidth) {\r\n                // new line\r\n                if (j === 0) {\r\n                    retLines.push(LinesPool.newline('', 0, WRAPPED_NEWLINE));\r\n                } else {\r\n                    retLines.push(LinesPool.newline(lineText, lineWidth, WRAPPED_NEWLINE));\r\n                    curLineText = token;\r\n                    if (wrapMode === WORD_WRAP) {\r\n                        if (j < (tokenLen - 1)) {\r\n                            curLineText += ' ';\r\n                        }\r\n                    }\r\n                    currLineWidth = getTextWidth(curLineText);\r\n                }\r\n\r\n                remainWidth = wrapWidth;\r\n            }\r\n\r\n            lineText = curLineText;\r\n            lineWidth = currLineWidth;\r\n        } // for token in tokenArray\r\n\r\n        // flush remain text\r\n        retLines.push(LinesPool.newline(lineText, lineWidth, newLineMode));\r\n\r\n    } // for each line in lines\r\n\r\n    return retLines;\r\n};\r\n\r\nvar LinesPool = new Pool();\r\nLinesPool.newline = function (text, width, newLineMode) {\r\n    var l = this.pop();\r\n    if (l === null) {\r\n        l = {};\r\n    }\r\n    l.text = text;\r\n    l.width = width;\r\n    l.newLineMode = newLineMode;\r\n    return l;\r\n};\r\n\r\nexport default WrapText;","import DrawMethods from './DrawMethods.js';\r\nimport PenManager from '../penmanger/PenManager.js';\r\nimport HitAreaManager from '../hitareamanager/HitAreaManager.js';\r\nimport SetInteractive from './SetInteractive.js';\r\nimport CONST from '../const.js';\r\nimport WrapText from './WrapText.js';\r\nimport Clone from '../../../../utils/object/Clone.js';\r\n\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\nconst NO_WRAP = CONST.NO_WRAP;\r\nconst NO_NEWLINE = CONST.NO_NEWLINE;\r\n\r\nclass CanvasText {\r\n    constructor(config) {\r\n        this.parent = config.parent;\r\n        this.context = GetValue(config, 'context', null);\r\n        this.canvas = this.context.canvas;\r\n        this.parser = GetValue(config, 'parser', null);\r\n        this.defatultStyle = GetValue(config, 'style', null);\r\n        this.autoRound = true;\r\n\r\n        this.pensPool = GetValue(config, 'pensPool', null);\r\n        this.penManager = this.newPenManager();\r\n        this._tmpPenManager = null;\r\n\r\n        this.hitAreaManager = new HitAreaManager();\r\n\r\n        var context = this.context;\r\n        this.getTextWidth = function (text) {\r\n            return context.measureText(text).width;\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.context = undefined;\r\n        this.canvas = undefined;\r\n        this.parser = undefined;\r\n        this.defatultStyle = undefined;\r\n\r\n        if (this.penManager) {\r\n            this.penManager.destroy();\r\n            this.penManager = undefined;\r\n        }\r\n        if (this._tmpPenManager) {\r\n            this._tmpPenManager.destroy();\r\n            this._tmpPenManager = undefined;\r\n        }\r\n        if (this.hitAreaManager) {\r\n            this.hitAreaManager.destroy();\r\n            this.hitAreaManager = undefined;\r\n        }\r\n    }\r\n\r\n    updatePenManager(text, wrapMode, wrapWidth, lineHeight, penManager) {\r\n        if (penManager === undefined) {\r\n            penManager = this.penManager;\r\n        }\r\n        penManager.freePens();\r\n        if (text === \"\") {\r\n            return penManager;\r\n        }\r\n\r\n        var canvas = this.canvas;\r\n        var context = this.context;\r\n\r\n        var cursorX = 0,\r\n            cursorY = 0;\r\n\r\n        var plainText, curProp, curStyle;\r\n        var match = this.parser.splitText(text),\r\n            result, wrapLines;\r\n        for (var i = 0, len = match.length; i < len; i++) {\r\n            result = this.parser.tagTextToProp(match[i], curProp);\r\n            plainText = result.plainText;\r\n            curProp = result.prop;\r\n\r\n            if (curProp.img) { // Image tag                \r\n                var imgWidth = this.imageManager.getOuterWidth(curProp.img);\r\n                if ((wrapWidth > 0) && (wrapMode !== NO_WRAP)) {  // Wrap mode\r\n                    if (wrapWidth < (cursorX + imgWidth)) {\r\n                        penManager.addNewLinePen();\r\n                        cursorY += lineHeight;\r\n                        cursorX = 0;\r\n                    }\r\n                }\r\n                penManager.addImagePen(cursorX, cursorY, imgWidth, Clone(curProp));\r\n                cursorX += imgWidth;\r\n\r\n            } else if (plainText !== '') {\r\n                // wrap text to lines\r\n                // Save the current context.\r\n                this.context.save();\r\n                curStyle = this.parser.propToContextStyle(\r\n                    this.defatultStyle,\r\n                    curProp\r\n                );\r\n                curStyle.buildFont();\r\n                curStyle.syncFont(canvas, context);\r\n                curStyle.syncStyle(canvas, context);\r\n                wrapLines = WrapText(plainText, this.getTextWidth, wrapMode, wrapWidth, cursorX);\r\n\r\n                // add pens\r\n                var n;\r\n                for (var j = 0, jLen = wrapLines.length; j < jLen; j++) {\r\n                    n = wrapLines[j];\r\n                    penManager.addTextPen(n.text, cursorX, cursorY, n.width, Clone(curProp), n.newLineMode);\r\n\r\n                    if (n.newLineMode !== NO_NEWLINE) {\r\n                        cursorX = 0;\r\n                        cursorY += lineHeight;\r\n                    } else {\r\n                        cursorX += n.width;\r\n                    }\r\n\r\n                }\r\n                this.context.restore();\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return penManager;\r\n    }\r\n\r\n    get startXOffset() {\r\n        var defatultStyle = this.defatultStyle;\r\n        return (defatultStyle.strokeThickness / 2);\r\n    }\r\n\r\n    get startYOffset() {\r\n        var defatultStyle = this.defatultStyle;\r\n        return (defatultStyle.strokeThickness / 2) + defatultStyle.metrics.ascent;\r\n    }\r\n\r\n    get lines() {\r\n        return this.penManager.lines;\r\n    }\r\n\r\n    get desplayLinesCount() {\r\n        var linesCount = this.penManager.linesCount,\r\n            maxLines = this.defatultStyle.maxLines;\r\n        if ((maxLines > 0) && (linesCount > maxLines)) {\r\n            linesCount = maxLines;\r\n        }\r\n        return linesCount;\r\n    }\r\n\r\n    get linesWidth() {\r\n        return this.penManager.getMaxLineWidth();\r\n    }\r\n\r\n    get linesHeight() {\r\n        var linesCount = this.desplayLinesCount;\r\n        var linesHeight = (this.defatultStyle.lineHeight * linesCount);\r\n        if (linesCount > 0) {\r\n            linesHeight -= this.defatultStyle.lineSpacing;\r\n        }\r\n        return linesHeight;\r\n    }\r\n\r\n    get imageManager() {\r\n        return this.parent.imageManager;\r\n    }\r\n\r\n    newPenManager() {\r\n        return new PenManager({\r\n            pensPool: this.pensPool,\r\n            tagToText: this.parser.propToTagText,\r\n            tagToTextScope: this.parser\r\n        });\r\n    }\r\n\r\n    get tmpPenManager() {\r\n        if (this._tmpPenManager === null) {\r\n            this._tmpPenManager = this.newPenManager();\r\n        }\r\n        return this._tmpPenManager;\r\n    }\r\n\r\n    getPlainText(text, start, end) {\r\n        var plainText;\r\n        if (text == null) {\r\n            plainText = this.penManager.plainText;\r\n        } else {\r\n            var m, match = this.parser.splitText(text, 1); // PLAINTEXTONLY_MODE\r\n            plainText = \"\";\r\n            for (var i = 0, len = match.length; i < len; i++) {\r\n                plainText += match[i];\r\n            }\r\n        }\r\n\r\n        if ((start != null) || (end != null)) {\r\n            if (start == null) {\r\n                start = 0;\r\n            }\r\n            if (end == null) {\r\n                end = plainText.length;\r\n            }\r\n            plainText = plainText.substring(start, end);\r\n        }\r\n\r\n        return plainText;\r\n    }\r\n\r\n    getPenManager(text, retPenManager) {\r\n        if (text === undefined) {\r\n            return this.copyPenManager(retPenManager, this.penManager);\r\n        }\r\n\r\n        if (retPenManager === undefined) {\r\n            retPenManager = this.newPenManager();\r\n        }\r\n\r\n        var defatultStyle = this.defatultStyle;\r\n        this.updatePenManager(\r\n            text,\r\n            defatultStyle.wrapMode,\r\n            defatultStyle.wrapWidth,\r\n            defatultStyle.lineHeight,\r\n            retPenManager\r\n        );\r\n        return retPenManager;\r\n    }\r\n\r\n    getText(text, start, end, wrap) {\r\n        if (text == null) {\r\n            return this.penManager.getSliceTagText(start, end, wrap);\r\n        }\r\n\r\n        var penManager = this.tmpPenManager;\r\n        var defatultStyle = this.defatultStyle;\r\n        this.updatePenManager(\r\n            text,\r\n            defatultStyle.wrapMode,\r\n            defatultStyle.wrapWidth,\r\n            defatultStyle.lineHeight,\r\n            penManager\r\n        );\r\n\r\n        return penManager.getSliceTagText(start, end, wrap);\r\n    }\r\n\r\n    copyPenManager(ret, src) {\r\n        if (src === undefined) {\r\n            src = this.penManager;\r\n        }\r\n        return src.copy(ret);\r\n    }\r\n\r\n    getTextWidth(penManager) {\r\n        if (penManager === undefined) {\r\n            penManager = this.penManager;\r\n        }\r\n\r\n        return penManager.getMaxLineWidth();\r\n    }\r\n\r\n    getLastPen(penManager) {\r\n        if (penManager === undefined) {\r\n            penManager = this.penManager;\r\n        }\r\n\r\n        return penManager.lastPen;\r\n    }\r\n};\r\n\r\nvar methods = {\r\n    setInteractive: SetInteractive,\r\n}\r\n\r\nObject.assign(\r\n    CanvasText.prototype,\r\n    DrawMethods,\r\n    methods\r\n);\r\n\r\nexport default CanvasText;","const GetValue = Phaser.Utils.Objects.GetValue;\r\n\r\nclass ImageManager {\r\n    constructor(textureManager) {\r\n        this.textureManager = textureManager;\r\n        this.images = {};\r\n    }\r\n\r\n    add(key, config) {\r\n        if (typeof (key) === 'string') {\r\n            this._add(key, config);\r\n        } else if (Array.isArray(key)) {\r\n            var data = key;\r\n            for (var i = 0, cnt = data.length; i < cnt; i++) {\r\n                this._add(data[i]);\r\n            }\r\n        } else {\r\n            var data = key;\r\n            for (var key in data) {\r\n                this._add(key, data[key]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    _add(key, config) {\r\n        if (config === undefined) {\r\n            config = {\r\n                key: key\r\n            }\r\n        }\r\n\r\n        var textureKey = config.key, frameKey = config.frame;\r\n        var width = config.width, height = config.height;\r\n\r\n        if ((width === undefined) || (height === undefined)) {\r\n            var frame = this.textureManager.getFrame(textureKey, frameKey);\r\n            var frameWidth = (frame) ? frame.cutWidth : 0;\r\n            var frameHeight = (frame) ? frame.cutHeight : 0;\r\n            if ((width === undefined) && (height === undefined)) {\r\n                width = frameWidth;\r\n                height = frameHeight;\r\n            } else if (width === undefined) {\r\n                width = frameWidth * (height / frameHeight);\r\n            } else if (height === undefined) {\r\n                height = frameHeight * (width / frameWidth);\r\n            }\r\n        }\r\n\r\n        this.images[key] = {\r\n            key: textureKey,\r\n            frame: frameKey,\r\n            width: width,\r\n            height: height,\r\n            y: GetValue(config, 'y', 0),\r\n            left: GetValue(config, 'left', 0),\r\n            right: GetValue(config, 'right', 0)\r\n        }\r\n    }\r\n\r\n    remove(key) {\r\n        if (this.images.hasOwnProperty(key)) {\r\n            delete this.images[key];\r\n        }\r\n        return this;\r\n    }\r\n\r\n    get(key) {\r\n        if (!this.images.hasOwnProperty(key)) {\r\n            if (this.textureManager.exists(key)) {\r\n                this.add(key);\r\n            }\r\n        }\r\n        return this.images[key];\r\n    }\r\n\r\n    getOuterWidth(key) {\r\n        var data = this.get(key);\r\n        return (data) ? (data.width + data.left + data.right) : 0;\r\n    }\r\n\r\n    getFrame(key) {\r\n        var data = this.get(key);\r\n        return (data) ? this.textureManager.getFrame(data.key, data.frame) : undefined;\r\n    }\r\n\r\n    hasTexture(key) {\r\n        return !!this.getFrame(key);\r\n    }\r\n}\r\nexport default ImageManager;","import ImageManager from './ImageManager.js';\r\n\r\nvar globImageManager;\r\n\r\nexport default function(textureManager) {\r\n    if (globImageManager === undefined) {\r\n        globImageManager = new ImageManager(textureManager);\r\n    }\r\n    return globImageManager;\r\n}","import Render from './render/Render.js';\r\nimport TextStyle from './textstyle/TextStyle.js'; // extended\r\nimport CanvasTextKlass from './canvastext/CanvasText.js';\r\nimport Pool from '../../../pool.js';\r\nimport CONST from './const.js';\r\nimport GetGlobImageManager from './imagemanager/GetGlobImageManager.js';\r\n\r\nconst AddToDOM = Phaser.DOM.AddToDOM;\r\nconst CanvasPool = Phaser.Display.Canvas.CanvasPool;\r\nconst GameObject = Phaser.GameObjects.GameObject;\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\nconst RemoveFromDOM = Phaser.DOM.RemoveFromDOM;\r\nconst SPLITREGEXP = CONST.SPLITREGEXP;\r\n\r\nvar PensPools = {};\r\n\r\nclass Text extends GameObject {\r\n    constructor(scene, x, y, text, style, type, parser) {\r\n        if (x === undefined) {\r\n            x = 0;\r\n        }\r\n        if (y === undefined) {\r\n            y = 0;\r\n        }\r\n\r\n        super(scene, type);\r\n\r\n        this.renderer = scene.sys.game.renderer;\r\n\r\n        this.setPosition(x, y);\r\n        this.setOrigin(0, 0);\r\n        this.initPipeline();\r\n\r\n        this.canvas = CanvasPool.create(this);\r\n\r\n        this.context = this.canvas.getContext('2d');\r\n\r\n        if (style) {\r\n            // Override align\r\n            if (style.hasOwnProperty('align')) {\r\n                var halign = style.align;\r\n                delete style.align;\r\n                style.halign = halign;\r\n            }\r\n        }\r\n        this.style = new TextStyle(this, style);\r\n\r\n        this.autoRound = true;\r\n\r\n        this._text = undefined;\r\n\r\n        this.padding = {\r\n            left: 0,\r\n            right: 0,\r\n            top: 0,\r\n            bottom: 0\r\n        };\r\n\r\n        this.width = 1;\r\n\r\n        this.height = 1;\r\n\r\n        this.dirty = false;\r\n\r\n        //  If resolution wasn't set, then we get it from the game config\r\n        if (this.style.resolution === 0) {\r\n            this.style.resolution = scene.sys.game.config.resolution;\r\n        }\r\n\r\n        this._crop = this.resetCropObject();\r\n\r\n        //  Create a Texture for this Text object\r\n        this.texture = scene.sys.textures.addCanvas(null, this.canvas, true);\r\n\r\n        //  Get the frame\r\n        this.frame = this.texture.get();\r\n\r\n        //  Set the resolution\r\n        this.frame.source.resolution = this.style.resolution;\r\n\r\n        if (this.renderer && this.renderer.gl) {\r\n            //  Clear the default 1x1 glTexture, as we override it later\r\n\r\n            this.renderer.deleteTexture(this.frame.source.glTexture);\r\n\r\n            this.frame.source.glTexture = null;\r\n        }\r\n\r\n        if (!PensPools.hasOwnProperty(type)) {\r\n            PensPools[type] = new Pool();\r\n        }\r\n        this.canvasText = new CanvasTextKlass({\r\n            parent: this,\r\n            context: this.context,\r\n            parser: parser,\r\n            style: this.style,\r\n            pensPool: PensPools[type]\r\n        });\r\n\r\n        //this.initRTL();\r\n\r\n        if (style && style.padding) {\r\n            this.setPadding(style.padding);\r\n        }\r\n\r\n        this.setText(text);\r\n\r\n        scene.sys.game.events.on('contextrestored', function () {\r\n            this.dirty = true;\r\n        }, this);\r\n    }\r\n\r\n    set text(value) {\r\n        this.setText(value);\r\n    }\r\n    get text() {\r\n        return this._text;\r\n    }\r\n\r\n    initRTL() {\r\n        if (!this.style.rtl) {\r\n            return;\r\n        }\r\n\r\n        //  Here is where the crazy starts.\r\n        //\r\n        //  Due to browser implementation issues, you cannot fillText BiDi text to a canvas\r\n        //  that is not part of the DOM. It just completely ignores the direction property.\r\n\r\n        this.canvas.dir = 'rtl';\r\n\r\n        //  Experimental atm, but one day ...\r\n        this.context.direction = 'rtl';\r\n\r\n        //  Add it to the DOM, but hidden within the parent canvas.\r\n        this.canvas.style.display = 'none';\r\n\r\n        AddToDOM(this.canvas, this.scene.sys.canvas);\r\n\r\n        //  And finally we set the x origin\r\n        this.originX = 1;\r\n    }\r\n\r\n    setText(value) {\r\n        if (!value && value !== 0) {\r\n            value = '';\r\n        }\r\n\r\n        if (Array.isArray(value)) {\r\n            value = value.join('\\n');\r\n        }\r\n\r\n        if (value !== this._text) {\r\n            this._text = value.toString();\r\n\r\n            this.updateText();\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    setStyle(style) {\r\n        return this.style.setStyle(style);\r\n    }\r\n\r\n    setFont(font) {\r\n        return this.style.setFont(font);\r\n    }\r\n\r\n    setFontFamily(family) {\r\n        return this.style.setFontFamily(family);\r\n    }\r\n\r\n    setFontSize(size) {\r\n        return this.style.setFontSize(size);\r\n    }\r\n\r\n    setFontStyle(style) {\r\n        return this.style.setFontStyle(style);\r\n    }\r\n\r\n    setFixedSize(width, height) {\r\n        return this.style.setFixedSize(width, height);\r\n    }\r\n\r\n    setBackgroundColor(color) {\r\n        return this.style.setBackgroundColor(color);\r\n    }\r\n\r\n    setFill(color) {\r\n        return this.style.setFill(color);\r\n    }\r\n\r\n    setColor(color) {\r\n        return this.style.setColor(color);\r\n    }\r\n\r\n    setStroke(color, thickness) {\r\n        return this.style.setStroke(color, thickness);\r\n    }\r\n\r\n    setShadow(x, y, color, blur, shadowStroke, shadowFill) {\r\n        return this.style.setShadow(x, y, color, blur, shadowStroke, shadowFill);\r\n    }\r\n\r\n    setShadowOffset(x, y) {\r\n        return this.style.setShadowOffset(x, y);\r\n    }\r\n\r\n    setShadowColor(color) {\r\n        return this.style.setShadowColor(color);\r\n    }\r\n\r\n    setShadowBlur(blur) {\r\n        return this.style.setShadowBlur(blur);\r\n    }\r\n\r\n    setShadowStroke(enabled) {\r\n        return this.style.setShadowStroke(enabled);\r\n    }\r\n\r\n    setShadowFill(enabled) {\r\n        return this.style.setShadowFill(enabled);\r\n    }\r\n\r\n    setWrapMode(mode) {\r\n        return this.style.setWrapMode(mode);\r\n    }\r\n\r\n    setWrapWidth(width) {\r\n        return this.style.setWrapWidth(width);\r\n    }\r\n\r\n    setAlign(align) {\r\n        return this.style.setHAlign(align);\r\n    }\r\n\r\n    setLineSpacing(value) {\r\n        return this.style.setLineSpacing(value);\r\n    }\r\n\r\n    setPadding(left, top, right, bottom) {\r\n        if (typeof left === 'object') {\r\n            var config = left;\r\n\r\n            //  If they specify x and/or y this applies to all\r\n            var x = GetValue(config, 'x', null);\r\n\r\n            if (x !== null) {\r\n                left = x;\r\n                right = x;\r\n            } else {\r\n                left = GetValue(config, 'left', 0);\r\n                right = GetValue(config, 'right', left);\r\n            }\r\n\r\n            var y = GetValue(config, 'y', null);\r\n\r\n            if (y !== null) {\r\n                top = y;\r\n                bottom = y;\r\n            } else {\r\n                top = GetValue(config, 'top', 0);\r\n                bottom = GetValue(config, 'bottom', top);\r\n            }\r\n        } else {\r\n            if (left === undefined) {\r\n                left = 0;\r\n            }\r\n            if (top === undefined) {\r\n                top = left;\r\n            }\r\n            if (right === undefined) {\r\n                right = left;\r\n            }\r\n            if (bottom === undefined) {\r\n                bottom = top;\r\n            }\r\n        }\r\n\r\n        this.padding.left = left;\r\n        this.padding.top = top;\r\n        this.padding.right = right;\r\n        this.padding.bottom = bottom;\r\n\r\n        return this.updateText(false);\r\n    }\r\n\r\n    setResolution(value) {\r\n        return this.style.setResolution(value);\r\n    }\r\n\r\n    setMaxLines(max) {\r\n        return this.style.setMaxLines(max);\r\n    }\r\n\r\n    updateText(runWrap) {\r\n        if (runWrap === undefined) {\r\n            runWrap = true;\r\n        }\r\n        var canvasText = this.canvasText;\r\n\r\n        // wrap text to pens\r\n        var style = this.style;\r\n        if (runWrap) {\r\n            canvasText.updatePenManager(\r\n                this._text,\r\n                style.wrapMode,\r\n                style.wrapWidth,\r\n                style.lineHeight\r\n            );\r\n        }\r\n\r\n        // resize\r\n        var padding = this.padding;\r\n        var textWidth, textHeight;\r\n        if (style.fixedWidth === 0) {\r\n            this.width = canvasText.linesWidth + padding.left + padding.right;\r\n            textWidth = canvasText.linesWidth;\r\n        }\r\n        else {\r\n            this.width = style.fixedWidth;\r\n            textWidth = this.width - padding.left - padding.right;\r\n            if (textWidth < canvasText.linesWidth) {\r\n                textWidth = canvasText.linesWidth;\r\n            }\r\n        }\r\n        if (style.fixedHeight === 0) {\r\n            this.height = canvasText.linesHeight + padding.top + padding.bottom;\r\n            textHeight = canvasText.linesHeight;\r\n        }\r\n        else {\r\n            this.height = style.fixedHeight;\r\n            textHeight = this.height - padding.top - padding.bottom;\r\n            if (textHeight < canvasText.linesHeight) {\r\n                textHeight = canvasText.linesHeight;\r\n            }\r\n        }\r\n\r\n        var w = this.width;\r\n        var h = this.height;\r\n\r\n        this.updateDisplayOrigin();\r\n\r\n        var resolution = style.resolution;\r\n        w *= resolution;\r\n        h *= resolution;\r\n\r\n        w = Math.max(Math.ceil(w), 1);\r\n        h = Math.max(Math.ceil(h), 1);\r\n\r\n        var canvas = this.canvas;\r\n        var context = this.context;\r\n        if (canvas.width !== w || canvas.height !== h) {\r\n            canvas.width = w;\r\n            canvas.height = h;\r\n            this.frame.setSize(w, h);\r\n        } else {\r\n            context.clearRect(0, 0, w, h);\r\n        }\r\n\r\n        context.save();\r\n        context.scale(resolution, resolution);\r\n\r\n        // draw\r\n        canvasText.draw(\r\n            padding.left,\r\n            padding.top,\r\n            textWidth,\r\n            textHeight\r\n        );\r\n\r\n        context.restore();\r\n\r\n        if (this.renderer.gl) {\r\n            this.frame.source.glTexture = this.renderer.canvasToTexture(canvas, this.frame.source.glTexture, true);\r\n            this.frame.glTexture = this.frame.source.glTexture;\r\n        }\r\n\r\n        this.dirty = true;\r\n\r\n        var input = this.input;\r\n\r\n        if (input && !input.customHitArea) {\r\n            input.hitArea.width = this.width;\r\n            input.hitArea.height = this.height;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    getTextMetrics() {\r\n        return this.style.getTextMetrics();\r\n    }\r\n\r\n    toJSON() {\r\n        var out = Components.ToJSON(this);\r\n\r\n        //  Extra Text data is added here\r\n\r\n        var data = {\r\n            autoRound: this.autoRound,\r\n            text: this._text,\r\n            style: this.style.toJSON(),\r\n            resolution: this.resolution,\r\n            padding: {\r\n                left: this.padding.left,\r\n                right: this.padding.right,\r\n                top: this.padding.top,\r\n                bottom: this.padding.bottom\r\n            }\r\n        };\r\n\r\n        out.data = data;\r\n\r\n        return out;\r\n    }\r\n\r\n    preDestroy() {\r\n        if (this.style.rtl) {\r\n            RemoveFromDOM(this.canvas);\r\n        }\r\n\r\n        CanvasPool.remove(this.canvas);\r\n        this.canvasText.destroy();\r\n    }\r\n\r\n    setInteractive(shape, callback, dropZone) {\r\n        GameObject.prototype.setInteractive.call(this, shape, callback, dropZone);\r\n        this.canvasText.setInteractive();\r\n        return this;\r\n    }\r\n\r\n    getWrappedText(text, start, end) {\r\n        text = this.canvasText.getText(text, start, end, true);\r\n        return text.split(SPLITREGEXP);\r\n    }\r\n\r\n    getPlainText(text, start, end) {\r\n        return this.canvasText.getPlainText(text, start, end);\r\n    }\r\n\r\n    getText(text, start, end) {\r\n        return this.canvasText.getText(text, start, end, false);\r\n    }\r\n\r\n    getSubString(text, start, end) {\r\n        return this.getText(text, start, end);\r\n    }\r\n\r\n    copyPenManager(penManager) {\r\n        return this.canvasText.copyPenManager(penManager);\r\n    }\r\n\r\n    getPenManager(text, penManager) {\r\n        return this.canvasText.getPenManager(text, penManager);\r\n    }\r\n\r\n    setSize(width, height) {\r\n        return this.setFixedSize(width, height);\r\n    }\r\n\r\n    resize(width, height) {\r\n        return this.setFixedSize(width, height);\r\n    }\r\n\r\n    set lineSpacing(value) {\r\n        this.setLineSpacing(value);\r\n    }\r\n    get lineSpacing() {\r\n        return this.style.lineSpacing;\r\n    }\r\n\r\n    get imageManager() {\r\n        return GetGlobImageManager(this.scene.textures);\r\n    }\r\n\r\n    addImage(key, config) {\r\n        this.imageManager.add(key, config);\r\n        return this;\r\n    }\r\n\r\n    drawAreaBounds(graphics, color) {\r\n        this.canvasText.hitAreaManager.drawBounds(graphics, color, this);\r\n        return this;\r\n    }\r\n}\r\n\r\nconst Components = Phaser.GameObjects.Components;\r\nPhaser.Class.mixin(Text,\r\n    [\r\n        Components.Alpha,\r\n        Components.BlendMode,\r\n        Components.ComputedSize,\r\n        Components.Crop,\r\n        Components.Depth,\r\n        Components.Flip,\r\n        Components.GetBounds,\r\n        Components.Mask,\r\n        Components.Origin,\r\n        Components.Pipeline,\r\n        Components.ScrollFactor,\r\n        Components.Tint,\r\n        Components.Transform,\r\n        Components.Visible,\r\n        Render\r\n    ]\r\n);\r\n\r\nexport default Text;","import TextStyle from '../textbase/textstyle/TextStyle.js';\r\n\r\nvar GETPROP_RESULT = {\r\n    plainText: null,\r\n    prevProp: null\r\n};\r\n\r\nvar STYLE_RESULT = new TextStyle();\r\nvar PROPLIST = [];\r\n\r\nclass parser {\r\n    constructor(tags) {\r\n        if (tags === undefined) {\r\n            tags = {};\r\n        }\r\n        this.tags = tags;\r\n    }\r\n\r\n    addTag(name, prop) {\r\n        this.tags[name] = prop;\r\n    }\r\n\r\n    splitText(text, mode) {\r\n        var result = [];\r\n        var arr, m, charIdx = 0,\r\n            totalLen = text.length,\r\n            matchStart = totalLen;\r\n        var innerMatch;\r\n        while (true) {\r\n            arr = RE_SPLITTEXT.exec(text);\r\n            if (!arr) {\r\n                break;\r\n            }\r\n\r\n            m = arr[0];\r\n            matchStart = RE_SPLITTEXT.lastIndex - m.length;\r\n\r\n            if (charIdx < matchStart) {\r\n                result.push(text.substring(charIdx, matchStart));\r\n            }\r\n            if (mode === undefined) {\r\n                result.push(m);\r\n            } else if (mode === 1) { // RAWTEXTONLY_MODE\r\n                if (RE_CLASS_HEADER.test(m)) {\r\n                    innerMatch = m.match(RE_CLASS);\r\n                    result.push(innerMatch[2]);\r\n                } else if (RE_STYLE_HEADER.test(m)) {\r\n                    innerMatch = m.match(RE_STYLE);\r\n                    result.push(innerMatch[2]);\r\n                }\r\n            }\r\n\r\n            charIdx = RE_SPLITTEXT.lastIndex;\r\n        }\r\n\r\n\r\n        if (charIdx < totalLen) {\r\n            result.push(text.substring(charIdx, totalLen));\r\n        }\r\n        return result; // [text,...]\r\n    }\r\n\r\n    tagTextToProp(text, prevProp) {\r\n        var plainText, propOut;\r\n        if (RE_CLASS_HEADER.test(text)) {\r\n            var innerMatch = text.match(RE_CLASS);\r\n            if (innerMatch != null) {\r\n                var name = innerMatch[1];\r\n                var tags = this.tags;\r\n                if (tags.hasOwnProperty(name)) {\r\n                    propOut = tags[name];\r\n                } else {\r\n                    propOut = {};\r\n                }\r\n                propOut._class = name;\r\n                plainText = innerMatch[2];\r\n            }\r\n        } else if (RE_STYLE_HEADER.test(text)) {\r\n            var innerMatch = text.match(RE_STYLE);\r\n            if (innerMatch != null) {\r\n                var style = innerMatch[1];\r\n                propOut = styleToProp(style);\r\n                propOut._style = style;\r\n                plainText = innerMatch[2];\r\n            }\r\n        }\r\n\r\n        if (plainText == null) {\r\n            plainText = text;\r\n        }\r\n\r\n        if (propOut == null) {\r\n            propOut = {};\r\n        }\r\n\r\n        var result = GETPROP_RESULT;\r\n        result.plainText = plainText;\r\n        result.prop = propOut;\r\n        return result;\r\n    }\r\n\r\n    propToContextStyle(defaultStyle, prop) {\r\n        var result = STYLE_RESULT;\r\n        if (!prop.hasOwnProperty('img')) {\r\n            result.image = null;\r\n\r\n            if (prop.hasOwnProperty('family') || prop.hasOwnProperty('fontFamily') || prop.hasOwnProperty('font-family')) {\r\n                var family = (prop.hasOwnProperty('family')) ? prop.family :\r\n                    (prop.hasOwnProperty('fontFamily')) ? prop.fontFamily :\r\n                    prop['font-family'];\r\n                result.fontFamily = family;\r\n            } else {\r\n                result.fontFamily = defaultStyle.fontFamily;\r\n            }\r\n\r\n            if (prop.hasOwnProperty('size') || prop.hasOwnProperty('fontSize') || prop.hasOwnProperty('font-size')) {\r\n                var size = (prop.hasOwnProperty('size')) ? prop.size :\r\n                    (prop.hasOwnProperty('fontSize')) ? prop.fontSize :\r\n                    prop['font-size'];\r\n                if (typeof (size) === 'number') {\r\n                    size = size.toString() + 'px';\r\n                }\r\n                result.fontSize = size;\r\n            } else {\r\n                result.fontSize = defaultStyle.fontSize;\r\n            }\r\n\r\n            if (prop.hasOwnProperty('style') || prop.hasOwnProperty('fontStyle') || prop.hasOwnProperty('font-style')) {\r\n                var fontStyle = (prop.hasOwnProperty('style')) ? prop.style :\r\n                    (prop.hasOwnProperty('fontStyle')) ? prop.fontStyle :\r\n                    prop['font-style'];\r\n                result.fontStyle = fontStyle;\r\n            } else {\r\n                result.fontStyle = defaultStyle.fontStyle;\r\n            }\r\n\r\n            if (prop.hasOwnProperty('color') || prop.hasOwnProperty('font-color')) {\r\n                var color = (prop.hasOwnProperty('color')) ? prop.color : prop['font-color'];\r\n                result.color = prop.color;\r\n            } else {\r\n                result.color = defaultStyle.color;\r\n            }\r\n\r\n            if (prop.hasOwnProperty('stroke')) {\r\n                var stroke = prop.stroke; // {color, thinkness}\r\n                result.stroke = (stroke.hasOwnProperty('color')) ? stroke.color : defaultStyle.stroke;\r\n                result.strokeThickness = (stroke.hasOwnProperty('thinkness')) ? stroke.thinkness : defaultStyle.strokeThickness;\r\n            } else {\r\n                result.stroke = defaultStyle.stroke;\r\n                result.strokeThickness = defaultStyle.strokeThickness;\r\n            }\r\n        } else {\r\n            result.image = prop.img;\r\n        }\r\n\r\n        if (prop.hasOwnProperty('shadow')) {\r\n            var shadow = prop.shadow; // {color, offsetX, offsetY, blur}\r\n            result.shadowColor = (shadow.hasOwnProperty('color')) ? shadow.color : defaultStyle.shadowColor;\r\n            result.shadowOffsetX = (shadow.hasOwnProperty('offsetX')) ? shadow.offsetX : defaultStyle.shadowOffsetX;\r\n            result.shadowOffsetY = (shadow.hasOwnProperty('offsetY')) ? shadow.offsetY : defaultStyle.shadowOffsetY;\r\n            result.shadowBlur = (shadow.hasOwnProperty('blur')) ? shadow.blur : defaultStyle.shadowBlur;\r\n            result.shadowStroke = true;\r\n            result.shadowFill = true;\r\n        } else {\r\n            result.shadowColor = defaultStyle.shadowColor;\r\n            result.shadowOffsetX = defaultStyle.shadowOffsetX;\r\n            result.shadowOffsetY = defaultStyle.shadowOffsetY;\r\n            result.shadowBlur = defaultStyle.shadowBlur;\r\n            result.shadowStroke = defaultStyle.shadowStroke;\r\n            result.shadowFill = defaultStyle.shadowFill;\r\n        }\r\n\r\n        if (prop.hasOwnProperty('u') || prop.hasOwnProperty('underline')) {\r\n            var u = (prop.hasOwnProperty('u')) ? prop.u : prop.underline; // {color, thinkness, offset}\r\n            result.underlineColor = (u.hasOwnProperty('color')) ? u.color : defaultStyle.underlineColor;\r\n            result.underlineThickness = (u.hasOwnProperty('thinkness')) ? u.thinkness : defaultStyle.underlineThickness;\r\n            result.underlineOffset = (u.hasOwnProperty('offset')) ? u.offset : defaultStyle.underlineOffset;\r\n        } else {\r\n            result.underlineColor = defaultStyle.underlineColor;\r\n            result.underlineThickness = defaultStyle.underlineThickness;\r\n            result.underlineOffset = defaultStyle.underlineOffset;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    propToTagText(text, prop, prevProp) {\r\n        if (prop.hasOwnProperty('_class')) { // class mode\r\n            if (text === '') {\r\n                if (this.isTextTag(prop._class)) {\r\n                    return '';\r\n                }\r\n            }\r\n            return \"<class='\" + prop._class + \"'>\" + text + \"</class>\";\r\n        } else if (prop.hasOwnProperty('_style')) { // class mode\r\n            return \"<style='\" + prop._style + \"'>\" + text + \"</style>\";\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.tags = undefined;\r\n    }\r\n\r\n    isTextTag(tagName) {\r\n        var tag = this.tags[tagName];\r\n        if (tag) {\r\n            return (tag.img == null);\r\n        } else { // tag not found\r\n            return false;\r\n        }\r\n    }\r\n};\r\n\r\nvar styleToProp = function (s) {\r\n    s = s.split(\";\");\r\n\r\n    var result = {},\r\n        prop, k, v;\r\n    for (var i = 0, slen = s.length; i < slen; i++) {\r\n        prop = s[i].split(\":\");\r\n        k = prop[0], v = prop[1];\r\n        if (isEmpty(k) || isEmpty(v)) {\r\n            continue;\r\n        }\r\n\r\n        switch (k) {\r\n            case 'stroke':\r\n                var stroke = v.split(' '); // stroke:blue 1px\r\n                var len = stroke.length;\r\n                v = {};\r\n                if (len >= 1) {\r\n                    v.color = stroke[0];\r\n                }\r\n                if (len >= 2) {\r\n                    v.thinkness = parseInt(stroke[1].replace('px', ''));\r\n                }\r\n                break;\r\n            case 'shadow':\r\n                var shadow = v.split(' '); // shadow:blue 2px 2px 2px\r\n                var len = shadow.length;\r\n                v = {};\r\n                if (len >= 1) {\r\n                    v.color = shadow[0];\r\n                }\r\n                if (len >= 2) {\r\n                    v.offsetX = parseInt(shadow[1].replace('px', ''));\r\n                }\r\n                if (len >= 3) {\r\n                    v.offsetY = parseInt(shadow[2].replace('px', ''));\r\n                }\r\n                if (len >= 4) {\r\n                    v.blur = parseInt(shadow[3].replace('px', ''));\r\n                }\r\n                break;\r\n            case 'u':\r\n            case 'underline': // underline:blue 3px -1px\r\n                var u = v.split(' ');\r\n                var len = u.length;\r\n                v = {};\r\n                if (len >= 1) {\r\n                    v.color = u[0];\r\n                }\r\n                if (len >= 2) {\r\n                    v.thinkness = parseInt(u[1].replace('px', ''));\r\n                }\r\n                if (len >= 3) {\r\n                    v.offset = parseInt(u[2].replace('px', ''));\r\n                }\r\n                break;\r\n        }\r\n        result[k] = v;\r\n    }\r\n    return result;\r\n};\r\n\r\nvar isEmpty = function (s) {\r\n    // Remove white spaces.\r\n    s = s.replace(RE_SPACE, '');\r\n    return (s.length === 0);\r\n};\r\n\r\nvar RE_SPLITTEXT = /<\\s*class=[\"|']([^\"|']+)[\"|']\\s*\\>([\\s\\S]*?)<\\s*\\/class\\s*\\>|<\\s*style=[\"|']([^\"|']+)[\"|']\\s*\\>([\\s\\S]*?)<\\s*\\/style\\s*\\>/g;\r\nvar RE_CLASS_HEADER = /<\\s*class=/i;\r\nvar RE_CLASS = /<\\s*class=[\"|']([^\"|']+)[\"|']\\s*\\>([\\s\\S]*?)<\\s*\\/class\\s*\\>/;\r\nvar RE_STYLE_HEADER = /<\\s*style=/i;\r\nvar RE_STYLE = /<\\s*style=[\"|']([^\"|']+)[\"|']\\s*\\>([\\s\\S]*?)<\\s*\\/style\\s*\\>/;\r\nvar RE_SPACE = /^\\s+|\\s+$/;\r\n\r\nexport default parser;","import Text from '../textbase/Text.js';\r\nimport ParserKlass from './Parser.js';\r\n\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\n\r\nclass TagText extends Text {\r\n    constructor(scene, x, y, text, style) {\r\n        var tags = GetValue(style, 'tags', undefined);\r\n        var parser = new ParserKlass(tags);\r\n        super(scene, x, y, text, style, 'rexTagText', parser);\r\n        this.parser = parser;\r\n    }\r\n\r\n    addTag(name, prop) {\r\n        this.parser.addTag(name, prop);\r\n        return this.updateText(true);\r\n    }\r\n\r\n    addTags(tags) {\r\n        for(var name in tags){\r\n            this.parser.addTag(name, tags[name]);\r\n        }\r\n        return this.updateText(true);\r\n    }\r\n\r\n    preDestroy() {\r\n        super.preDestroy();\r\n        this.parser.destroy();\r\n        this.parser = undefined;\r\n    }\r\n}\r\n\r\nexport default TagText;","import TagText from './TagText.js';\r\n\r\nconst GetAdvancedValue = Phaser.Utils.Objects.GetAdvancedValue;\r\nconst BuildGameObject = Phaser.GameObjects.BuildGameObject;\r\n\r\nexport default function (config, addToScene) {\r\n    // style Object = {\r\n    //     font: [ 'font', '16px Courier' ],\r\n    //     backgroundColor: [ 'backgroundColor', null ],\r\n    //     fill: [ 'fill', '#fff' ],\r\n    //     stroke: [ 'stroke', '#fff' ],\r\n    //     strokeThickness: [ 'strokeThickness', 0 ],\r\n    //     shadowOffsetX: [ 'shadow.offsetX', 0 ],\r\n    //     shadowOffsetY: [ 'shadow.offsetY', 0 ],\r\n    //     shadowColor: [ 'shadow.color', '#000' ],\r\n    //     shadowBlur: [ 'shadow.blur', 0 ],\r\n    //     shadowStroke: [ 'shadow.stroke', false ],\r\n    //     shadowFill: [ 'shadow.fill', false ],\r\n    //     align: [ 'align', 'left' ],\r\n    //     maxLines: [ 'maxLines', 0 ],\r\n    //     fixedWidth: [ 'fixedWidth', false ],\r\n    //     fixedHeight: [ 'fixedHeight', false ]\r\n    // }\r\n\r\n    var content = GetAdvancedValue(config, 'text', '');\r\n    var style = GetAdvancedValue(config, 'style', null);\r\n\r\n    //  Padding\r\n    //      { padding: 2 }\r\n    //      { padding: { x: , y: }}\r\n    //      { padding: { left: , top: }}\r\n    //      { padding: { left: , right: , top: , bottom: }}  \r\n\r\n    var padding = GetAdvancedValue(config, 'padding', null);\r\n\r\n    if (padding !== null) {\r\n        style.padding = padding;\r\n    }\r\n\r\n    if (addToScene !== undefined) {\r\n        config.add = addToScene;\r\n    }\r\n\r\n    var gameObject = new TagText(this.scene, 0, 0, content, style);\r\n    BuildGameObject(this.scene, gameObject, config);\r\n\r\n    //  Text specific config options:\r\n\r\n    gameObject.autoRound = GetAdvancedValue(config, 'autoRound', true);\r\n    gameObject.resolution = GetAdvancedValue(config, 'resolution', 1);\r\n\r\n    return gameObject;\r\n};","import Factory from './gameobjects/text/tagtext/Factory.js';\r\nimport Creator from './gameobjects/text/tagtext/Creator.js';\r\nimport TagText from './gameobjects/text/tagtext/TagText.js';\r\n\r\nPhaser.GameObjects.GameObjectFactory.register('rexTagText', Factory);\r\nPhaser.GameObjects.GameObjectCreator.register('rexTagText', Creator);\r\n\r\nexport default TagText;","import TagText from './TagText.js';\r\n\r\nexport default function (x, y, text, style) {\r\n    var gameObject = new TagText(this.scene, x, y, text, style);\r\n    this.scene.add.existing(gameObject);\r\n    return gameObject;\r\n}","export default {\r\n    setEventEmitter(eventEmitter, EventEmitterClass) {\r\n        if (EventEmitterClass === undefined) {\r\n            EventEmitterClass = Phaser.Events.EventEmitter; // Use built-in EventEmitter class by default\r\n        }\r\n        this._privateEE = (eventEmitter === undefined);\r\n        this._eventEmitter = (this._privateEE) ? (new EventEmitterClass()) : eventEmitter;\r\n        return this;\r\n    },\r\n\r\n    destroyEventEmitter() {\r\n        if (this._eventEmitter && this._privateEE) {\r\n            this._eventEmitter.shutdown();\r\n        }\r\n        return this;\r\n    },\r\n\r\n    getEventEmitter() {\r\n        return this._eventEmitter;\r\n    },\r\n\r\n    on: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.on.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    once: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.once.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    off: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.off.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    emit: function (event) {\r\n        if (this._eventEmitter && event) {\r\n            this._eventEmitter.emit.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    addListener: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.addListener.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    removeListener: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.removeListener.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    removeAllListeners: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.removeAllListeners.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    listenerCount: function () {\r\n        if (this._eventEmitter) {\r\n            return this._eventEmitter.listenerCount.apply(this._eventEmitter, arguments);\r\n        }\r\n        return 0;\r\n    },\r\n\r\n    listeners: function () {\r\n        if (this._eventEmitter) {\r\n            return this._eventEmitter.listeners.apply(this._eventEmitter, arguments);\r\n        }\r\n        return [];\r\n    }\r\n};","const SceneClass = Phaser.Scene;\r\nvar IsSceneObject = function (object) {\r\n    return (object instanceof SceneClass);\r\n}\r\nexport default IsSceneObject;","import IsSceneObject from './IsSceneObject.js';\r\n\r\nvar GetSceneObject = function (object) {\r\n    if (IsSceneObject(object)) { // object = scene\r\n        return object;\r\n    } else if (object.scene && IsSceneObject(object.scene)) { // object = game object\r\n        return object.scene;\r\n    } else if (object.parent && object.parent.scene && IsSceneObject(object.parent.scene)) { // parent = bob object\r\n        return object.parent.scene;\r\n    }\r\n}\r\n\r\nexport default GetSceneObject;","import EventEmitterMethods from '../../utils/eventemitter/EventEmitterMethods.js';\r\nimport GetSceneObject from '../../utils/system/GetSceneObject.js';\r\n\r\nconst GetFastValue = Phaser.Utils.Objects.GetFastValue;\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\n\r\nclass TextTyping {\r\n    constructor(gameObject, config) {\r\n        this.gameObject = gameObject;\r\n        this.scene = GetSceneObject(gameObject);        \r\n        this.setEventEmitter(GetValue(config, 'eventEmitter', undefined));\r\n        \r\n        this.timer = null;\r\n        this.resetFromJSON(config);\r\n        this.boot();\r\n    }\r\n\r\n    /**\r\n     * Reset status by JSON object\r\n     * @param {object} o JSON object\r\n     * @returns {object} this object\r\n     */\r\n    resetFromJSON(o) {\r\n        this.setTypeMode(GetValue(o, 'typeMode', 0));\r\n        this.setTypeSpeed(GetValue(o, 'speed', 333));\r\n        this.setTextCallback = GetFastValue(o, 'setTextCallback', null);\r\n        this.setTextCallbackScope = GetFastValue(o, 'setTextCallbackScope', null);\r\n\r\n        this.typingIdx = GetFastValue(o, 'typingIdx', 0);\r\n        this.text = transferText(GetFastValue(o, 'text', ''));\r\n        this.textLen = GetFastValue(o, 'textLen', 0);\r\n        this.insertIdx = GetFastValue(o, 'insertIdx', null);\r\n\r\n        var elapsed = GetFastValue(o, 'elapsed', null);\r\n        if (elapsed !== null) {\r\n            this.start(undefined, undefined, this.typingIdx, elapsed);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Return status in JSON object\r\n     * @returns JSON object\r\n     */\r\n    toJSON() {\r\n        var elapsed;\r\n        var timer = this.getTimer();\r\n        if (timer) {\r\n            elapsed = timer.elapsed;\r\n        } else {\r\n            elapsed = null;\r\n        }\r\n\r\n        return {\r\n            typeMode: this.typeMode,\r\n            speed: this.speed,\r\n            setTextCallback: this.setTextCallback,\r\n            setTextCallbackScope: this.setTextCallbackScope,\r\n\r\n            typingIdx: this.typingIdx,\r\n            text: this.text,\r\n            textLen: this.textLen,\r\n            insertIdx: this.insertIdx,\r\n            elapsed: elapsed\r\n        };\r\n    }\r\n\r\n    boot() {\r\n        if (this.gameObject.once) { // oops, bob object does not have event emitter\r\n            this.gameObject.once('destroy', this.destroy, this);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    shutdown() {\r\n        this.destroyEventEmitter();\r\n        this.freeTimer();\r\n        this.gameObject = undefined;\r\n        this.scene = undefined;\r\n        return this;\r\n    }\r\n\r\n    destroy() {\r\n        this.shutdown();\r\n        return this;\r\n    }\r\n\r\n    setTypeMode(m) {\r\n        if (typeof (m) === 'string') {\r\n            m = TYPEMODE[m];\r\n        }\r\n        this.typeMode = m;\r\n        return this;\r\n    }\r\n\r\n    setTypeSpeed(speed) {\r\n        this.speed = speed;\r\n        return this;\r\n    }\r\n\r\n    get isTyping() {\r\n        return (this.getTimer() !== null);\r\n    }\r\n\r\n    get isLastChar() {\r\n        return (this.typingIdx === this.textLen);\r\n    }\r\n\r\n    start(text, speed, startIdx, timerStartAt) {\r\n        if (text !== undefined) {\r\n            this.setTypingContent(text);\r\n        }\r\n        if (speed !== undefined) {\r\n            this.speed = speed;\r\n        }\r\n        if (startIdx === undefined) {\r\n            startIdx = 0;\r\n        }\r\n\r\n        this.typingIdx = startIdx + 1;\r\n        if (this.speed === 0) {\r\n            this.stop(true);\r\n        } else {\r\n            this.startTimer(timerStartAt);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    appendText(text) {\r\n        var newText = this.text.concat(transferText(text));\r\n        if (this.isTyping) {\r\n            this.setTypingContent(newText);\r\n        } else {\r\n            this.start(newText, undefined, this.textLen);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    stop(showAllText) {\r\n        var timer = this.getTimer();\r\n        if (timer) {\r\n            this.freeTimer();\r\n        }\r\n        if (showAllText) {\r\n            this.typingIdx = this.textLen;\r\n            this.setText(this.text);\r\n            this.emit('type');\r\n            this.emit('complete', this, this.gameObject);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    pause() {\r\n        var timer = this.getTimer();\r\n        if (timer) {\r\n            timer.paused = true;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    resume() {\r\n        var timer = this.getTimer();\r\n        if (timer) {\r\n            timer.paused = false;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    setTypingContent(text) {\r\n        this.text = transferText(text);\r\n        this.textLen = this.getTextLength(this.text);\r\n        return this;\r\n    }\r\n\r\n    onTyping() {\r\n        var newText = this.getTypingString(this.text, this.typingIdx, this.textLen, this.typeMode);\r\n        this.setText(newText);\r\n        this.emit('type');\r\n\r\n        if (this.isLastChar) {\r\n            this.freeTimer();\r\n            this.emit('complete', this, this.gameObject);\r\n        } else {\r\n            this.timer.delay = this.speed; // delay of next typing            \r\n            this.typingIdx++;\r\n        }\r\n    }\r\n\r\n    getTypingString(text, typeIdx, textLen, typeMode) {\r\n        var result;\r\n        if (typeMode === 0) { //left-to-right\r\n            var startIdx = 0;\r\n            var endIdx = typeIdx;\r\n            this.insertIdx = endIdx;\r\n            result = this.getSubString(text, startIdx, endIdx);\r\n\r\n        } else if (typeMode === 1) { //right-to-left\r\n            var endIdx = textLen;\r\n            var startIdx = endIdx - typeIdx;\r\n            this.insertIdx = 0;\r\n            result = this.getSubString(text, startIdx, endIdx);\r\n\r\n        } else if (typeMode === 2) { //middle-to-sides\r\n            var midIdx = textLen / 2;\r\n            var startIdx = Math.floor(midIdx - (typeIdx / 2));\r\n            var endIdx = startIdx + typeIdx;\r\n            this.insertIdx = (typeIdx % 2) ? typeIdx : 0;\r\n            result = this.getSubString(text, startIdx, endIdx);\r\n\r\n        } else if (typeMode === 3) { //sides-to-middle\r\n            var lowerLen = Math.floor(typeIdx / 2);\r\n            var lowerResult;\r\n            if (lowerLen > 0) {\r\n                var endIdx = textLen;\r\n                var startIdx = endIdx - lowerLen;\r\n                lowerResult = this.getSubString(text, startIdx, endIdx);\r\n            } else {\r\n                lowerResult = \"\";\r\n            }\r\n\r\n            var upperLen = typeIdx - lowerLen;\r\n            var upperResult;\r\n            if (upperLen > 0) {\r\n                var startIdx = 0;\r\n                var endIdx = startIdx + upperLen;\r\n                this.insertIdx = endIdx;\r\n                upperResult = this.getSubString(text, startIdx, endIdx);\r\n            } else {\r\n                upperResult = \"\";\r\n                this.insertIdx = 0;\r\n            }\r\n            result = upperResult + lowerResult;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    startTimer(timerStartAt) {\r\n        if (this.timer) {\r\n            this.freeTimer();\r\n        }\r\n        var delay, startAt;\r\n        if (timerStartAt === undefined) {\r\n            delay = 0;\r\n            startAt = 0;\r\n        } else {\r\n            delay = this.speed;\r\n            startAt = timerStartAt;\r\n        }\r\n\r\n        this.timer = this.scene.time.addEvent({\r\n            delay: 0,\r\n            startAt: startAt,\r\n            loop: true,\r\n            callback: this.onTyping,\r\n            callbackScope: this\r\n        });\r\n        return this;\r\n    }\r\n\r\n    getTimer() {\r\n        return this.timer;\r\n    }\r\n\r\n    freeTimer() {\r\n        if (this.timer) {\r\n            this.timer.remove();\r\n            this.timer = null;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    setText(text) {\r\n        if (this.setTextCallback) {\r\n            if (this.setTextCallbackScope) {\r\n                text = this.setTextCallback.call(this.setTextCallbackScope, text, this.isLastChar, this.insertIdx);\r\n            } else {\r\n                text = this.setTextCallback(text, this.isLastChar, this.insertIdx);\r\n            }\r\n        }\r\n        this.gameObject.setText(text);\r\n    }\r\n\r\n    getTextLength(text) {\r\n        var gameObject = this.gameObject;\r\n        var len;\r\n        if (gameObject.getPlainText) {\r\n            len = gameObject.getPlainText(text).length;\r\n        } else {\r\n            len = text.length;\r\n        }\r\n\r\n        return len;\r\n    }\r\n\r\n    getSubString(text, startIdx, endIdx) {\r\n        var gameObject = this.gameObject;\r\n        var result;\r\n        if (gameObject.getSubString) {\r\n            result = gameObject.getSubString(text, startIdx, endIdx);\r\n        } else {\r\n            result = text.slice(startIdx, endIdx);\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nObject.assign(\r\n    TextTyping.prototype,\r\n    EventEmitterMethods\r\n);\r\n\r\nvar transferText = function (text) {\r\n    if (Array.isArray(text)) {\r\n        text = text.join('\\n');\r\n    } else if (typeof (text) === 'number') {\r\n        text = text.toString();\r\n    }\r\n    return text;\r\n}\r\n\r\n/** @private */\r\nconst TYPEMODE = {\r\n    'left-to-right': 0,\r\n    'right-to-left': 1,\r\n    'middle-to-sides': 2,\r\n    'sides-to-middle': 3\r\n};\r\n\r\n\r\nexport default TextTyping;","import TextTyping from './behaviors/texttyping/TextTyping.js';\r\nexport default TextTyping;","export default {\r\n    None: 0,\r\n    EasyWin: 1,\r\n    Hard: 2\r\n};","export default {\r\n    Active: 0,\r\n    Destroyed: 1\r\n};","import LevelManifest from \"./LevelManifest\";\r\nimport TileGenerationBehavior from \"./TileGenerationBehavior\";\r\nimport Tile from \"./Tile\";\r\n\r\nexport default [\r\n\r\n    // 0\r\n    {\r\n        score: 100,\r\n        timer: 0,\r\n        behavior: TileGenerationBehavior.None\r\n    },\r\n\r\n    // 1\r\n    {\r\n        score: 200,\r\n        timer: 120,\r\n        behavior: TileGenerationBehavior.None\r\n    },\r\n\r\n    // 2\r\n    {\r\n        score: 300,\r\n        timer: 30,\r\n        behavior: TileGenerationBehavior.Hard\r\n    },\r\n\r\n    // 3\r\n    {\r\n        score: 300,\r\n        timer: 120,\r\n        behavior: TileGenerationBehavior.EasyWin\r\n    },\r\n\r\n    // 4\r\n    {\r\n        score: 400,\r\n        timer: 300,\r\n        behavior: TileGenerationBehavior.EasyWin,\r\n        handler: (state) => {\r\n            if(state.tileGrid.TileGenerationBehavior !== TileGenerationBehavior.Hard && state.score > (LevelManifest[state.level]/2))\r\n            {\r\n                state.tileGrid.tileGenerationBehavior = TileGenerationBehavior.Hard;\r\n            }\r\n        }\r\n    },\r\n\r\n    // 5\r\n    {\r\n        score: 1000,\r\n        timer: 300,\r\n        behavior: TileGenerationBehavior.Hard\r\n    },\r\n\r\n    // 6\r\n    {\r\n        score: 1000,\r\n        timer: 300,\r\n        behavior: TileGenerationBehavior.Hard\r\n    },\r\n\r\n    // 7\r\n    {\r\n        score: 1000,\r\n        timer: 300,\r\n        behavior: TileGenerationBehavior.EasyWin\r\n    },\r\n\r\n    // 8\r\n    {\r\n        score: 1000,\r\n        timer: 300,\r\n        behavior: TileGenerationBehavior.None\r\n    }\r\n];","// Source: https://stackoverflow.com/questions/5915096/get-random-item-from-javascript-array\r\nconst getRandomItem = (items) => {\r\n    return items[Math.floor(Math.random() * items.length)];\r\n}\r\n\r\nexport {\r\n    getRandomItem\r\n}","export default [\r\n    { name: 'Blue', imageKey: 'tile_01' },\r\n    { name: 'Green', imageKey: 'tile_02' },\r\n    { name: 'Red', imageKey: 'tile_03' },\r\n    { name: 'Yellow', imageKey: 'tile_04' }\r\n];","import { getRandomItem } from './Utility';\r\nimport Tile from './Tile';\r\nimport TileGenerationBehavior from './TileGenerationBehavior';\r\nimport TileState from './TileState';\r\nimport TileType from './TileType';\r\n\r\nexport default class {\r\n\r\n    constructor(tileGridWidth, tileGridHeight, tileSize, offsetX, offsetY, onTileSelect, onTileMatch, tileGenerationBehavior, queue)\r\n    {\r\n        this.offsetX = offsetX;\r\n        this.offsetY = offsetY;\r\n        this.tileSize = tileSize;\r\n        this.tileGridHeight = tileGridHeight;\r\n        this.tileGridWidth = tileGridWidth;\r\n        this.tileGrid = [];\r\n        this.tileImageContainer = null;\r\n        this.playAreaOffset = (this.tileGridHeight * this.tileSize);\r\n\r\n        this.onTileSelect = onTileSelect;\r\n        this.onTileMatch = onTileMatch;\r\n\r\n        this.tileGenerationBehavior = tileGenerationBehavior;\r\n\r\n        this.queue = queue;\r\n\r\n        // We're going to generate a grid that's twice the height of\r\n        // the desired tile grid height since we'll use the hidden, upper\r\n        // region to stage the bricks that will fall into the play area\r\n        for(let y = 0; y < tileGridHeight * 2; y++)\r\n        {\r\n            this.tileGrid[y] = [];\r\n            for(let x = 0; x < tileGridWidth; x++)\r\n            {\r\n                this.tileGrid[y][x] = (y < tileGridHeight)\r\n                    ? null\r\n                    : this.createTile(this.getTileType(x, y, TileGenerationBehavior.None), x, y);\r\n\r\n                // When we're generating the grid, we start with the default tile generation\r\n                // behavior since the \"Easy Win\" behavior will create a grid with identical\r\n                // tiles\r\n            }\r\n        }\r\n    }\r\n\r\n    create(context)\r\n    {\r\n        this.tileImageContainer = context.add.container();\r\n\r\n        // Create all of the tiles\r\n        this.forEachTile(tile => {\r\n\r\n            if(tile === null)\r\n            {\r\n                return;\r\n            }\r\n\r\n            tile.create(context);\r\n            this.tileImageContainer.add(tile.image);\r\n\r\n        });\r\n\r\n        // Create a mask to only show the play area\r\n        const maskShape = context.make.graphics();\r\n        maskShape.fillStyle(0xffffff, 1);\r\n        maskShape.fillRect(this.offsetX - (this.tileSize/2), this.offsetY + (this.tileGridHeight * this.tileSize) - (this.tileSize/2), this.tileGridWidth * this.tileSize, this.tileGridHeight * this.tileSize);\r\n        \r\n        this.tileImageContainer.mask = new Phaser.Display.Masks.GeometryMask(context, maskShape);\r\n    }\r\n\r\n    update(context)\r\n    {\r\n        const self = this;\r\n\r\n        if(self.queue.length > 0)\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Detect and destroy any matches\r\n        const matchedTiles = self.getMatches();\r\n\r\n        if(matchedTiles.length > 0)\r\n        {\r\n            self.onTileMatch(context, matchedTiles);\r\n        }\r\n\r\n        let destroys = [];\r\n        matchedTiles.forEach(t => { destroys.push(t.destroy(context, this.tileImageContainer)); });\r\n\r\n        if(destroys.length > 0)\r\n        {\r\n            self.queue.push(() => { return Promise.all(destroys); });\r\n        }\r\n\r\n        // Remove any destroyed tiles\r\n        self.forEachTile((tile, x, y) => {\r\n\r\n            if(tile === null)\r\n            {\r\n                return;\r\n            }\r\n\r\n            if(tile.state === TileState.Destroyed)\r\n            {\r\n                self.tileGrid[y][x] = null;\r\n            }\r\n\r\n        });\r\n\r\n        // Shift all of the tiles downward to fill empty spots\r\n        let drops = [];\r\n        for(let x = 0; x < this.tileGridWidth; x++)\r\n        {\r\n            let y = (this.tileGridHeight * 2) - 1;\r\n            while(y >= 0)\r\n            {\r\n                // If the tile is null...\r\n                if(self.tileGrid[y][x] === null)\r\n                {\r\n                    // ...find the closest tile that's not null...\r\n                    let closestY = y - 1;\r\n                    while(closestY >= 0)\r\n                    {\r\n                        let closestTile = self.tileGrid[closestY][x];\r\n                        if(closestTile !== null)\r\n                        {\r\n                            // ...and shift it downward\r\n                            self.tileGrid[y][x] = closestTile;\r\n                            self.tileGrid[closestY][x] = null;\r\n                            drops.push(this.getTileDrop(context, closestTile, x, y));\r\n                            y--;\r\n                        }\r\n                        closestY--;\r\n                    }\r\n                }\r\n\r\n                y--;\r\n            }\r\n        }\r\n\r\n        // Fill in all of the empty tiles\r\n        self.forEachPlayableTile((tile, x, y) => {\r\n            if(tile === null)\r\n            {\r\n                const adjustedY = y - self.tileGridHeight;\r\n\r\n                const tile = self.createTile(self.getTileType(x, y, self.tileGenerationBehavior), x, adjustedY);\r\n                self.tileGrid[adjustedY][x] = tile;\r\n                tile.create(context);\r\n                self.tileImageContainer.add(tile.image);\r\n            }\r\n        });\r\n\r\n        if(drops.length > 0)\r\n        {\r\n            self.queue.push(() => { return Promise.all(drops); });\r\n        }\r\n    }\r\n\r\n    swapTiles(context, firstTile, secondTile)\r\n    {\r\n        let self = this;\r\n\r\n        self.queue.push(() => {\r\n            \r\n            let firstTileX = firstTile.x;\r\n            let firstTileY = firstTile.y;\r\n            let firstTileGridX = firstTile.tileGridX;\r\n            let firstTileGridY = firstTile.tileGridY;\r\n    \r\n            let secondTileX = secondTile.x;\r\n            let secondTileY = secondTile.y;\r\n            let secondTileGridX = secondTile.tileGridX;\r\n            let secondTileGridY = secondTile.tileGridY;\r\n    \r\n            let firstSwap = secondTile.updatePosition(context, firstTileX, firstTileY, firstTileGridX, firstTileGridY);\r\n            self.tileGrid[firstTileGridY][firstTileGridX] = secondTile;\r\n    \r\n            let secondSwap = firstTile.updatePosition(context, secondTileX, secondTileY, secondTileGridX, secondTileGridY);\r\n            self.tileGrid[secondTileGridY][secondTileGridX] = firstTile;\r\n\r\n            return Promise.all([firstSwap, secondSwap]);\r\n\r\n        });\r\n    }\r\n\r\n    hasMatches(targetGridX, targetGridY)\r\n    {\r\n        return this.getMatches(targetGridX, targetGridY).length > 0;\r\n    }\r\n\r\n    getMatches(targetGridX, targetGridY)\r\n    {\r\n        const self = this;\r\n        const matchedTiles = [];\r\n\r\n        self.forEachTile((tile, x, y) => {\r\n\r\n            if(\r\n                (typeof targetGridX !== 'undefined' && x !== targetGridX) &&\r\n                (typeof targetGridY !== 'undefined' && y !== targetGridY)\r\n              )\r\n            {\r\n                return;\r\n            }\r\n\r\n            if(!this.isPlayable(tile))\r\n            {\r\n                return;\r\n            }\r\n\r\n            const targetTileType = tile.tileType;\r\n            const matchedXTiles = [];\r\n            const matchedYTiles = [];\r\n\r\n            // Check for matches to the right\r\n            let currX = (x + 1);\r\n            while(currX < self.tileGridWidth)\r\n            {\r\n                const currTile = self.tileGrid[y][currX];\r\n\r\n                if(currTile != null && targetTileType.name === currTile.tileType.name)\r\n                {\r\n                    matchedXTiles.push(currTile);\r\n                }\r\n                else\r\n                {\r\n                    break;\r\n                }\r\n\r\n                currX++;\r\n            }\r\n\r\n            // Check for matches to the left\r\n            currX = (x - 1);\r\n            while(currX > 0)\r\n            {\r\n                const currTile = self.tileGrid[y][currX];\r\n\r\n                if(currTile != null && targetTileType.name === currTile.tileType.name)\r\n                {\r\n                    matchedXTiles.push(currTile);\r\n                }\r\n                else\r\n                {\r\n                    break;\r\n                }\r\n\r\n                currX--;\r\n            }\r\n\r\n            // Check matches downwards\r\n            let currY = (y + 1);\r\n            while(currY < self.tileGridHeight)\r\n            {\r\n                const currTile = self.tileGrid[currY][x];\r\n\r\n                if(currTile != null && targetTileType.name === currTile.tileType.name)\r\n                {\r\n                    matchedYTiles.push(currTile);\r\n                }\r\n                else\r\n                {\r\n                    break;\r\n                }\r\n\r\n                currY++;\r\n            }\r\n\r\n            // Check matches upwards\r\n            currY = (y - 1);\r\n            while(currY > 0)\r\n            {\r\n                const currTile = self.tileGrid[currY][x];\r\n\r\n                if(currTile != null && targetTileType === currTile.tileType)\r\n                {\r\n                    matchedYTiles.push(currTile);\r\n                }\r\n                else\r\n                {\r\n                    break;\r\n                }\r\n\r\n                currY--;\r\n            }\r\n            \r\n            if(matchedYTiles.length > 1)\r\n            {\r\n                matchedTiles.push(...matchedYTiles);\r\n            }\r\n            \r\n            if(matchedXTiles.length > 1)\r\n            {\r\n                matchedTiles.push(...matchedXTiles);\r\n            }\r\n\r\n            if(matchedYTiles.length > 1 || matchedXTiles.length > 1)\r\n            {\r\n                matchedTiles.push(tile);\r\n            }\r\n        });\r\n\r\n        return matchedTiles;\r\n    }\r\n\r\n    forEachTile(callback)\r\n    {\r\n        for(let y = 0; y < this.tileGridHeight * 2; y++)\r\n        {\r\n            for(let x = 0; x < this.tileGridWidth; x++)\r\n            {\r\n                callback(this.tileGrid[y][x], x, y);\r\n            }\r\n        }\r\n    }\r\n\r\n    forEachPlayableTile(callback)\r\n    {\r\n        for(let y = this.tileGridHeight; y < this.tileGridHeight * 2; y++)\r\n        {\r\n            for(let x = 0; x < this.tileGridWidth; x++)\r\n            {\r\n                callback(this.tileGrid[y][x], x, y);\r\n            }\r\n        }\r\n    }\r\n\r\n    createTile(tileType, x, y)\r\n    {\r\n        return new Tile(tileType, this.getTileX(x), this.getTileY(y), x, y, this.onTileSelect);\r\n    }\r\n\r\n    getTileDrop(context, tile, x, y)\r\n    {\r\n        return tile.updatePosition(context, this.getTileX(x), this.getTileY(y), x, y);\r\n    }\r\n\r\n    getTileX(x)\r\n    {\r\n        return this.offsetX + (this.tileSize * x);\r\n    }\r\n\r\n    getTileY(y)\r\n    {\r\n        return this.offsetY + (this.tileSize * y);\r\n    }\r\n\r\n    canSelect(tile)\r\n    {\r\n        return this.isPlayable(tile);\r\n    }\r\n\r\n    isPlayable(tile)\r\n    {\r\n        return (tile != null) && (tile.tileGridY > (this.tileGridHeight - 1));\r\n    }\r\n\r\n    getTileType(x, y, behavior)\r\n    {\r\n        const aboveTile = (y < 1) ? null : this.tileGrid[y - 1][x];\r\n        const belowTile = (y > self.tileGridHeight - 1 || !this.tileGrid[y + 1]) ? null : this.tileGrid[y + 1][x];\r\n\r\n        const leftTile = (x < 1) ? null : this.tileGrid[y][x - 1];\r\n        const rightTile = (x > self.tileGridWidth - 1) ? null : this.tileGrid[y][x + 1];\r\n\r\n        if(behavior === TileGenerationBehavior.EasyWin && (aboveTile != null || belowTile != null || leftTile != null || rightTile != null))\r\n        {\r\n            return getRandomItem([aboveTile, belowTile, leftTile, rightTile].filter(t => t != null).map(t => t.tileType));\r\n        }\r\n        \r\n        if(behavior === TileGenerationBehavior.Hard)\r\n        {\r\n            return getRandomItem(TileType.filter(t =>\r\n                (belowTile === null || t.name !== belowTile.tileType.name) &&\r\n                (rightTile === null || t.name !== rightTile.tileType.name) &&\r\n                (leftTile === null || t.name !== leftTile.tileType.name)\r\n            ));\r\n        }\r\n\r\n        return getRandomItem(TileType.filter(t =>\r\n            (aboveTile === null || t.name !== aboveTile.tileType.name) &&\r\n            (leftTile === null || t.name !== leftTile.tileType.name)\r\n        ));\r\n    }\r\n}","import TileState from './TileState';\r\n\r\nexport default class {\r\n\r\n    constructor(tileType, x, y, tileGridX, tileGridY, onTileSelect)\r\n    {\r\n        this.tileType = tileType;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.tileGridX = tileGridX;\r\n        this.tileGridY = tileGridY;\r\n        this.onTileSelect = onTileSelect;\r\n        this.image = null;\r\n        this.state = TileState.Active;\r\n        this.isActivated = false;\r\n        this.isDestroying = false;\r\n    }\r\n\r\n    create(context)\r\n    {\r\n        this.image = context.add.image(this.x, this.y, this.tileType.imageKey);\r\n        this.image.setInteractive();\r\n        this.image.on('pointerdown', () => { this.onTileSelect(context, this); });\r\n    }\r\n\r\n    activate()\r\n    {\r\n        this.isActivated = true;\r\n        this.image.setTintFill(0xffffff);\r\n    }\r\n\r\n    deactivate()\r\n    {\r\n        this.isActivated = false;\r\n        this.image.clearTint();\r\n    }\r\n\r\n    updatePosition(context, x, y, tileGridX, tileGridY)\r\n    {\r\n        let self = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            self.x = x;\r\n            self.y = y;\r\n            self.tileGridX = tileGridX;\r\n            self.tileGridY = tileGridY;\r\n\r\n            context.tweens.add({\r\n                targets: self.image,\r\n                x: x,\r\n                y: y,\r\n                ease: 'Power1',\r\n                duration: 500,\r\n                onComplete: () => { resolve() }\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n    destroy(context, container)\r\n    {\r\n        let self = this;\r\n        \r\n        if(self.isDestroying)\r\n        {\r\n            return;\r\n        }\r\n\r\n        self.isDestroying = true;\r\n\r\n        // Create cover for fading the shape to white\r\n        const fadeOutCover = context.add.image(self.x, self.y, self.tileType.imageKey);\r\n        fadeOutCover.setTintFill(0xffffff);\r\n        fadeOutCover.alpha = 0;\r\n\r\n        // Create particles for \"explosion\" effect\r\n        const particleGraphics = [];\r\n        for(let i=0; i<4; i++)\r\n        {\r\n            const explodeParticleGraphics = context.add.graphics({ fillStyle: { color: 0xffffff }, alpha: 0 });\r\n            const explodeParticle = new Phaser.Geom.Circle(this.x, this.y, Phaser.Math.Between(0, 10));\r\n            explodeParticleGraphics.fillCircleShape(explodeParticle);\r\n            particleGraphics.push(explodeParticleGraphics);\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n           context.tweens.add({\r\n               targets: fadeOutCover,\r\n               alpha: 1,\r\n               duration: 200,\r\n               onComplete: () => {\r\n\r\n                    // Remove the tile image\r\n                    container.remove(self.image);\r\n                    self.image.destroy();\r\n                    self.state = TileState.Destroyed;\r\n\r\n                    // Remove the fade out cover\r\n                    container.remove(fadeOutCover);\r\n                    fadeOutCover.destroy();\r\n\r\n                    // Remove the particles\r\n                    particleGraphics.forEach((graphics) => {\r\n                        container.remove(graphics);\r\n                        graphics.destroy();\r\n                    });\r\n\r\n                    resolve();\r\n               }\r\n           });\r\n\r\n           particleGraphics.forEach((graphics, index) => {\r\n\r\n                let xSign = '';\r\n                let ySign = '';\r\n               \r\n                switch(index)\r\n                {\r\n                    case 1:\r\n                        xSign = '-';\r\n                        ySign = '-';\r\n                        break;\r\n\r\n                    case 2:\r\n                        xSign = '+';\r\n                        ySign = '+';\r\n                        break;\r\n\r\n                    case 3:\r\n                        xSign = '+';\r\n                        ySign = '-';\r\n                        break;\r\n\r\n                    case 4:\r\n                        xSign = '-';\r\n                        ySign = '+';\r\n                        break;\r\n                }\r\n\r\n                context.tweens.add({\r\n                    targets: graphics,\r\n                    x: xSign + '=35',\r\n                    y: ySign + '=35',\r\n                    alpha: 1,\r\n                    duration: 200,\r\n                    ease: 'Cubic.easeOut'\r\n                });\r\n           });\r\n\r\n        });\r\n    }\r\n}","import ActionQueue from '../ActionQueue';\r\nimport DialogManager from '../DialogManager';\r\nimport Guide from '../Guide';\r\nimport LevelManifest from '../LevelManifest';\r\nimport ScoreDisplay from '../ScoreDisplay';\r\nimport TileGrid from '../TileGrid';\r\nimport Timer from '../Timer';\r\nimport TileGenerationBehavior from '../TileGenerationBehavior';\r\n\r\nexport default class extends Phaser.Scene {\r\n\r\n    constructor()\r\n    {\r\n        super('RoundScene');\r\n\r\n        this.isAwaitingRoundTransition = false;\r\n\r\n        this.score = null;\r\n        this.queue = null;\r\n        this.selectedTiles = null;\r\n        this.tileGrid = null;\r\n        this.scoreDisplay = null;\r\n        this.timer = null;\r\n \r\n        this.guide = null;\r\n        this.level = null;\r\n\r\n        this.comboCount = null;\r\n        this.totalMatches = null;\r\n    }\r\n\r\n    preload()\r\n    {\r\n        // Images: Tiles\r\n        this.load.image('tile_01', 'assets/tile_01.png');\r\n        this.load.image('tile_02', 'assets/tile_02.png');\r\n        this.load.image('tile_03', 'assets/tile_03.png');\r\n        this.load.image('tile_04', 'assets/tile_04.png');\r\n\r\n        // Images: Guide\r\n        this.load.image('guide_character', 'assets/guide.png');\r\n\r\n        // Images: Background\r\n        this.load.image('background', 'assets/background.png');\r\n    }\r\n\r\n    init(data)\r\n    {\r\n        this.level = data.level;\r\n    }\r\n\r\n    create()\r\n    {\r\n        this.isAwaitingRoundTransition = false;\r\n\r\n        this.score = 0;\r\n        this.comboCount = 0;\r\n        this.totalMatches = 0;\r\n\r\n        this.queue = new ActionQueue();\r\n\r\n        this.add.image(400, 400, 'background');\r\n\r\n        const tileGenerationBehavior = LevelManifest[this.level].behavior;\r\n\r\n        this.selectedTiles = [];\r\n        this.tileGrid = new TileGrid(6, 6, 80, 325, -265, this.onTileSelect, this.onTileMatch, tileGenerationBehavior, this.queue);\r\n        this.scoreDisplay = new ScoreDisplay(100, 580);\r\n\r\n        const timerSeconds = LevelManifest[this.level].timer;\r\n        this.timer = (timerSeconds > 0) ? new Timer(5, 570, timerSeconds) : null;\r\n\r\n        const dialogManager = new DialogManager();\r\n        const script = dialogManager.getScript(this.level);\r\n        this.guide = new Guide(20, 20, script);\r\n\r\n        this.tileGrid.create(this);\r\n        this.scoreDisplay.create(this);\r\n        this.timer && this.timer.create(this);\r\n        this.guide.create(this);\r\n\r\n        const self = this;\r\n        this.input.on('pointerdown', () => { self.guide.progressDialogue(); });\r\n    }\r\n\r\n    update()\r\n    {\r\n        if(this.isAwaitingRoundTransition)\r\n        {\r\n            if(!this.guide.isBlockingGameplay)\r\n            {\r\n                this.scene.start('RoundTransitionScene', { nextLevel: (this.level + 1) });\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        this.handleSpecialLevelBehavior();\r\n        \r\n        // Start the timer if the guide has stopped talking\r\n        if(!this.guide.isBlockingGameplay && this.timer && this.timer.isPaused)\r\n        {\r\n            this.timer.start();\r\n        }\r\n\r\n        // Have we run out of time?\r\n        if(this.timer != null && this.timer.seconds <= 0)\r\n        {\r\n            this.guide.displayGameOverMessage();\r\n            this.isAwaitingRoundTransition = true;\r\n            return;\r\n        }\r\n\r\n        if(this.isLevelComplete())\r\n        {\r\n            this.scene.start('RoundTransitionScene', { nextLevel: (this.level + 1) });\r\n            return;\r\n        }\r\n\r\n        // Are we currently executing a queued action?\r\n        if(this.queue.isActionRunning())\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Do we have any queued actions on the stack?\r\n        if(this.queue.hasActions())\r\n        {\r\n            this.queue.next();\r\n            return;\r\n        }\r\n\r\n        // If nothing's left in the queue, we can move the game's state forward\r\n        this.tileGrid.update(this);\r\n    }\r\n\r\n    onTileSelect(context, tile)\r\n    {\r\n        // Are we currently executing a queued action?\r\n        if(context.queue.isActionRunning())\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Is the guide currently blocking gameplay?\r\n        if(context.guide.isBlockingGameplay)\r\n        {\r\n            return;\r\n        }\r\n    \r\n        // Can we select this tile?\r\n        if(!context.tileGrid.canSelect(tile))\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Is this tile already selected?\r\n        if(tile.isActivated)\r\n        {\r\n            context.selectedTiles = [];\r\n            tile.deactivate();\r\n            return;\r\n        }\r\n    \r\n        if(context.selectedTiles.length === 0)\r\n        {\r\n            context.selectedTiles.push(tile);\r\n            tile.activate();\r\n            return;\r\n        }\r\n    \r\n        if(context.selectedTiles.length === 1)\r\n        {\r\n            const selectedTile = context.selectedTiles[0];\r\n            const xDiff = Math.abs(selectedTile.tileGridX - tile.tileGridX);\r\n            const yDiff = Math.abs(selectedTile.tileGridY - tile.tileGridY);\r\n    \r\n            if((xDiff === 1 && yDiff === 0) || (xDiff === 0 && yDiff === 1))\r\n            {\r\n                context.selectedTiles.push(tile);\r\n    \r\n                let firstSelectedTile = context.selectedTiles[0];\r\n                let secondSelectedTile = context.selectedTiles[1];\r\n    \r\n                context.tileGrid.swapTiles(context, firstSelectedTile, secondSelectedTile);\r\n    \r\n                context.queue.push(() => {\r\n    \r\n                    // If there are no matches, swap the tiles back\r\n                    if(\r\n                        !context.tileGrid.hasMatches(firstSelectedTile.tileGridX, firstSelectedTile.tileGridY) &&\r\n                        !context.tileGrid.hasMatches(secondSelectedTile.tileGridX, secondSelectedTile.tileGridY)\r\n                    )\r\n                    {\r\n                        context.tileGrid.swapTiles(context, firstSelectedTile, secondSelectedTile);\r\n                    }\r\n    \r\n                    return Promise.resolve();\r\n    \r\n                });\r\n    \r\n                context.selectedTiles.forEach((tile) => { tile.deactivate(); });\r\n                context.selectedTiles = [];\r\n                \r\n                context.comboCount = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    onTileMatch(context, matchedTiles)\r\n    {\r\n        context.comboCount++;\r\n        context.totalMatches++;\r\n\r\n        context.score += (matchedTiles.length * context.comboCount);\r\n        context.scoreDisplay.updateScore(context.score);\r\n\r\n        if(context.comboCount > 1)\r\n        {\r\n            context.scoreDisplay.updateCombo(`${context.comboCount}x multiplier!`);\r\n        }\r\n        else\r\n        {\r\n            context.scoreDisplay.updateCombo('');\r\n        }\r\n    }\r\n\r\n    isLevelComplete()\r\n    {\r\n        return this.score >= LevelManifest[this.level].score;\r\n    }\r\n\r\n    handleSpecialLevelBehavior()\r\n    {\r\n        const handler = LevelManifest[this.level].handler;\r\n        handler && handler({\r\n            tileGrid: this.tileGrid,\r\n            score: this.score,\r\n            level: this.level\r\n        });\r\n    }\r\n    \r\n}","export default class {\r\n\r\n    constructor()\r\n    {\r\n        this.queuedActions = [];\r\n        this.currentAction = null;\r\n    }\r\n\r\n    isActionRunning()\r\n    {\r\n        return this.currentAction != null;\r\n    }\r\n\r\n    hasActions()\r\n    {\r\n        return this.queuedActions.length > 0;\r\n    }\r\n\r\n    next()\r\n    {\r\n        this.currentAction = this.queuedActions.shift();\r\n        this.currentAction();\r\n    }\r\n\r\n    push(action)\r\n    {\r\n        var self = this;\r\n        self.queuedActions.push(() => { action().then(() => { self.currentAction = null; }) });\r\n    }\r\n\r\n}","export default class {\r\n\r\n    constructor(x, y)\r\n    {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.scoreText = null;\r\n        this.comboText = null;\r\n        this.score = 0;\r\n    }\r\n\r\n    create(context)\r\n    {\r\n        this.scoreText = context.add.text(this.x, this.y, this.score);\r\n        this.updateScore(this.score);\r\n\r\n        this.comboText = context.add.text(this.x, this.y + 20, '');\r\n    }\r\n\r\n    updateScore(score)\r\n    {\r\n        this.score = score;\r\n        this.scoreText.setText(score + ' dew drops');\r\n    }\r\n\r\n    updateCombo(text)\r\n    {\r\n        this.comboText.setText(text);\r\n    }\r\n}","export default class {\r\n\r\n    constructor(x, y, seconds)\r\n    {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.text = null;\r\n        this.seconds = seconds;\r\n        this.isPaused = true;\r\n    }\r\n\r\n    create(context)\r\n    {\r\n        this.text = context.add.text(this.x, this.y, this.score);\r\n        \r\n        this.tick();\r\n        context.time.addEvent({ delay: 1000, callback: this.tick, callbackScope: this, loop: true })\r\n    }\r\n\r\n    tick()\r\n    {\r\n        if(this.seconds <= 0 || this.isPaused)\r\n        {\r\n            return;\r\n        }\r\n\r\n        this.seconds--;\r\n\r\n        // Display the remaining time\r\n        const minutes = Math.floor(this.seconds / 60);\r\n\r\n        let seconds = (this.seconds % 60);\r\n        if(seconds < 10)\r\n        {\r\n            seconds = '0' + seconds;\r\n        }\r\n\r\n        this.text.setText(`${minutes}:${seconds}`);\r\n    }\r\n\r\n    start()\r\n    {\r\n        this.isPaused = false;\r\n    }\r\n}","import DialogScript from \"./DialogScript\";\r\n\r\nexport default class {\r\n\r\n    getScript(level)\r\n    {\r\n        const script = new DialogScript();\r\n\r\n        switch(level)\r\n        {\r\n            // Level 0 (Intro)\r\n            case 0:\r\n\r\n                script.introMessages = [\r\n                    `*Oh, doozle, you made it!* You're here! (Click or tap anywhere!)`,\r\n                    `The Dew Drop Kingdom is in trouble!`,\r\n                    `We lost all of our dew drops and now we'll starve!`,\r\n                    `But you can help us by collecting as many dew drops as you can!`,\r\n                    \"If you match three or more dew drops of the same color, we can collect them!\",\r\n                    \"To make a match, select two dew drops and swap their places!\"\r\n                ];\r\n\r\n                script.getDisplayTileMatchMessages = (data) => {\r\n\r\n                    if(data.totalMatches === 1)\r\n                    {\r\n                        return [\r\n                            \"You got it! That's it!\",\r\n                            \"You collect extra dew drops when you chain together matches in a combo!\",\r\n                            \"See if you can collect 100 dew drops!\"\r\n                        ];\r\n                    }\r\n\r\n                };\r\n\r\n                break;\r\n\r\n            // Level 1 (Timer Intro)\r\n            case 1:\r\n\r\n                script.introMessages = [\r\n                    \"*Oh, doozle!* You're so good at this!\",\r\n                    \"But, we'll have to hurry this time!\",\r\n                    \"We only have two minutes before the sun dries up all the dew drops!\",\r\n                    \"Collect at least 200 dew drops in two minutes!\"\r\n                ];\r\n\r\n                break;\r\n\r\n            // Level 2 (Breaking the Fourth Wall)\r\n            case 2:\r\n\r\n                script.introMessages = [\r\n                    \"Wow, we're so proud of you!\",\r\n                    \"This round you'll only have 30 seconds to collect at least 300 dew drops!\"\r\n                ];\r\n\r\n                script.getGameOverMessages = () => {\r\n                    return [\r\n                        \"Wait, wait, sorry, hold on.\",\r\n                        \"It's too early for the *\\\"Lose in a Panic\\\"* scenario.\",\r\n                        \"So sorry about that.\",\r\n                        \"You've been really great so far, honestly.\",\r\n                        \"You know, what, let's just go to the next round and we'll take it from the top.\"\r\n                    ];\r\n                };\r\n\r\n                break;\r\n\r\n            // Level 3 (Easy Win)\r\n            case 3:\r\n\r\n                script.introMessages = [\r\n                    \"Alright, I think we've got everything figured out.\",\r\n                    \"Okay, for this next round, let me set you up:\",\r\n                    \"Remember, you've been winning the last few rounds and you're gaining confidence.\",\r\n                    \"In this round, it's going to be easy for you to get combos.\",\r\n                    \"So the idea here is that you're going to get a little *too* confident, right?\",\r\n                    \"Like a little full of yourself, alright?\",\r\n                    \"Okay, great! Let's do this:\",\r\n                    \"...\",\r\n                    \"*Oh doozle woozle!*\",\r\n                    \"You're so amazing!\",\r\n                    \"You have two minutes again, but this time you'll have to collect 300 dew drops.\",\r\n                    \"Can you do it?\",\r\n                    \"Who am I kidding? Of course you can!\"\r\n                ];\r\n\r\n                break;\r\n\r\n            // Level 4 (Losing Confidence)\r\n            case 4:\r\n\r\n                script.introMessages = [\r\n                    \"Okay, okay, great stuff.\",\r\n                    \"For this round, you're bringing all of that pride, all of that hubris.\",\r\n                    \"And, when the round starts, things are still going your way.\",\r\n                    \"But guess what?\",\r\n                    \"Halfway through this round, things start getting a little harder.\",\r\n                    \"So this is where we begin to chip away at your pride as the player.\",\r\n                    \"Alright, that's your set up: now let me get into the right headspace.\",\r\n                    \"...oh doozle woo-\",\r\n                    \"...no, no, it's doozy-woozy here...\",\r\n                    \"...yeah, doozy-woozy, you're our hero, blah, blah...\",\r\n                    \"Alright! Got it!\",\r\n                    \"...\",\r\n                    \"*Doozy-woozy!*\",\r\n                    \"You're our hero!\",\r\n                    \"You've done so much for us, but we still need your help!\",\r\n                    \"We need you to collect 500 dew drops in five minutes!\" \r\n                ];\r\n\r\n                break;\r\n\r\n            // Level 5 (Fall From Grace)\r\n            case 5:\r\n\r\n                script.introMessages = [\r\n                    \"Wow, such moving work.\",\r\n                    \"It really feels so authentic.\",\r\n                    \"It's been a joy working with you.\",\r\n                    \"Okay, here we go, this is a pivotal scene:\",\r\n                    \"This round will not go your way at all. At all.\",\r\n                    \"This is your fall from grace.\",\r\n                    \"(Ahem)\",\r\n                    \"...\",\r\n                    \"*Doozle!*\",\r\n                    \"*Woozle!*\",\r\n                    \"I can't believe you did it!\",\r\n                    \"We've got a bigger challenge ahead, but I know you can do it!\",\r\n                    \"You can do anything!\",\r\n                    \"We need you to collect 1000 dew drops in five minutes!\"\r\n                ];\r\n\r\n                break;\r\n\r\n            // Level 6 (Wallowing)\r\n            case 6:\r\n\r\n                script.introMessages = [\r\n                    \"Okay, let's move right into the next scene:\",\r\n                    \"Here, you are wallowing, right?\",\r\n                    \"You are in the pit of despair and you can't see a way out.\",\r\n                    \"This round won't be particularly hard, but you can't seem to find any matches.\",\r\n                    \"Got it?\",\r\n                    \"Alright, great: let me find my place here...\",\r\n                    \"Yes, okay, I believed in you, but now my faith is faltering...\",\r\n                    \"I'm keeping a brave face, but I'm really starting to lose confidence...\",\r\n                    \"Okay, I'm ready!\",\r\n                    \"...\",\r\n                    \"Oh no!\",\r\n                    \"*Whoopsie whoozle!*\",\r\n                    \"Don't worry, that was a tough one!\",\r\n                    \"Let's try again! I know you can do it!\",\r\n                    \"We need you to collect 1000 dew drops in five minutes!\"\r\n                ];\r\n\r\n                script.getDisplayTileMatchMessages = (data) => {\r\n\r\n                    return [\r\n                        \"(Oh, hey: remember, you're not going to find any matches this round)\"\r\n                    ];\r\n\r\n                };\r\n\r\n                break;\r\n\r\n            // Level 7 (Pheonix Rises)\r\n            case 7:\r\n\r\n                script.introMessages = [\r\n                    \"Now, you've been wallowing. You've feeling really low.\",\r\n                    \"You're in such despair, that in this round...\",\r\n                    \"There's an obvious combo.\",\r\n                    \"Right there, right in front of your face.\",\r\n                    \"But you can't see it through the despair.\",\r\n                    \"But then, in the last ten seconds of the round, you see it.\",\r\n                    \"Boom, it's the perfect match.\",\r\n                    \"And the pheonix rises once again!\"\r\n                ];\r\n\r\n                break;\r\n\r\n            // Level 8 (Victory Lap)\r\n            case 8:\r\n\r\n                script.introMessages = [\r\n                    \"Our hero is back!\",\r\n                    \"This final scene is our victory lap.\",\r\n                    \"However, we don't want too many combos in this round, right?\",\r\n                    \"This is a round the player wins on their own.\",\r\n                    \"No assistance from the game.\",\r\n                    \"A true hero's victory!\",\r\n                    \"Alright, let's do this: I've got an appointment after this.\"\r\n                ];\r\n\r\n                break;\r\n\r\n        }\r\n\r\n        return script;\r\n    }\r\n\r\n}","export default class {\r\n\r\n    constructor()\r\n    {\r\n        this.introMessages = [];\r\n        this.getDisplayTileMatchMessages = () => {};\r\n    }\r\n}","import TagText from 'phaser3-rex-plugins/plugins/tagtext.js';\r\nimport TextTyping from 'phaser3-rex-plugins/plugins/texttyping.js';\r\n\r\nexport default class {\r\n\r\n    constructor(x, y, script)\r\n    {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.script = script;\r\n\r\n        this.queuedMessages = null;\r\n        this.isPaused = false;\r\n        this.isBlockingGameplay = false;\r\n\r\n        this.endDialogueMarkerGraphics = null;\r\n    }\r\n\r\n    create(context)\r\n    {\r\n        const self = this;\r\n\r\n        const speechBubbleWidth = 760;\r\n        const speechBubbleHeight = 130;\r\n\r\n        const endDialogueMarkerRadius = 10;\r\n        \r\n        const characterWidth = 250;\r\n        const characterHeight = 500;\r\n\r\n        const speechBubbleIntroOffset = 40;\r\n\r\n        // Speech Bubble\r\n        const speechBubbleGraphics = context.add.graphics({ fillStyle: { color: 0xffffff } }).setAlpha(0);\r\n        speechBubbleGraphics.fillRoundedRect(this.x, this.y - speechBubbleIntroOffset, speechBubbleWidth, speechBubbleHeight, 10);\r\n        speechBubbleGraphics.fillTriangle(\r\n            this.x + 120, this.y + speechBubbleHeight + 20 - speechBubbleIntroOffset,\r\n            this.x + 105, this.y + speechBubbleHeight - speechBubbleIntroOffset,\r\n            this.x + 135, this.y + speechBubbleHeight - speechBubbleIntroOffset\r\n        );\r\n\r\n        // End Dialogue Marker\r\n        this.endDialogueMarkerGraphics = context.add.graphics({ fillStyle: { color: 0xcccccc } });\r\n        this.hideEndDialogueMarker();\r\n        const endDialogueMarker = new Phaser.Geom.Circle(\r\n            this.x + speechBubbleWidth - endDialogueMarkerRadius - 15,\r\n            this.y + speechBubbleHeight - endDialogueMarkerRadius - 15,\r\n            endDialogueMarkerRadius);\r\n        this.endDialogueMarkerGraphics.fillCircleShape(endDialogueMarker);\r\n\r\n        context.tweens.add({\r\n            targets: this.endDialogueMarkerGraphics,\r\n            alpha: 0,\r\n            duration: 500,\r\n            repeat: -1,\r\n            yoyo: true\r\n        });\r\n\r\n        // Speech Bubble Text\r\n        const speechBubbleTextStyle = {\r\n            color: '#000',\r\n            fontFamily: '\"Baloo Thambi 2\"',\r\n            fontSize: '30px',\r\n            wrap: {\r\n                mode: 'word',\r\n                width: speechBubbleWidth\r\n            },\r\n            tags: {\r\n                exclamation: {\r\n                    fontStyle: 'bold'\r\n                }\r\n            }\r\n        };\r\n        \r\n        this.speechBubbleText = new TagText(context, this.x + 15, this.y + 15, '', speechBubbleTextStyle);\r\n        context.add.existing(this.speechBubbleText);\r\n\r\n        // Speech Bubble Text Typing\r\n        this.speechBubbleTextTyping = new TextTyping(this.speechBubbleText, { speed: 30 }); \r\n        this.speechBubbleTextTyping.on('complete', () => { self.onMessageComplete.call(self) });\r\n\r\n        // Character\r\n        context.add.image(this.x + (characterWidth/2), this.y + speechBubbleHeight + 230, 'guide_character');\r\n\r\n        // Speech Bubble Intro Animation\r\n        context.tweens.add({\r\n            targets: speechBubbleGraphics,\r\n            props: {\r\n                y: { value: `+=${speechBubbleIntroOffset}`, duration: 500, ease: 'Bounce.easeOut' },\r\n                alpha: { value: 1, duration: 300, ease: 'Linear' }\r\n            },\r\n            onComplete: () => {\r\n                self.queueMessages(context, this.script.introMessages);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    queueMessages(context, messages)\r\n    {\r\n        if(!messages)\r\n        {\r\n            return;\r\n        }\r\n\r\n        const self = this;\r\n\r\n        if(self.queuedMessages === null)\r\n        {\r\n            self.queuedMessages = [];\r\n        }\r\n\r\n        self.queuedMessages.push(...messages);\r\n\r\n        if(self.speechBubbleTextTyping.isTyping)\r\n        {\r\n            return;\r\n        }\r\n\r\n        self.isBlockingGameplay = true;\r\n        self.progressDialogue();\r\n    }\r\n\r\n    onMessageComplete()\r\n    {\r\n        this.showEndDialogueMarker();\r\n        if(this.queuedMessages.length === 0)\r\n        {\r\n            this.isBlockingGameplay = false;\r\n            return;\r\n        }\r\n    }\r\n\r\n    displayTileMatchMessage(context, data)\r\n    {\r\n        const messages = this.script.getDisplayTileMatchMessages(data);\r\n        this.queueMessages(context, messages);\r\n    }\r\n\r\n    displayGameOverMessage(context)\r\n    {\r\n        const messages = this.script.getGameOverMessages();\r\n\r\n        // Push in a placeholder message to force players to confirm the last\r\n        // message in the \"Game Over\" queue\r\n        messages.push(' ');\r\n\r\n        this.queueMessages(context, messages);\r\n    }\r\n\r\n    progressDialogue()\r\n    {\r\n        this.hideEndDialogueMarker();\r\n        if(this.queuedMessages.length > 0)\r\n        {\r\n            const message = this.convertDialogToTagText(this.queuedMessages.shift());\r\n            this.speechBubbleTextTyping.start(message);\r\n        }\r\n    }\r\n\r\n    showEndDialogueMarker()\r\n    {\r\n        this.endDialogueMarkerGraphics.setVisible(true);\r\n    }\r\n\r\n    hideEndDialogueMarker()\r\n    {\r\n        this.endDialogueMarkerGraphics.setVisible(false);\r\n    }\r\n\r\n    convertDialogToTagText(input)\r\n    {\r\n        const styles = [\r\n            { token: '*', className: 'exclamation' },\r\n            { token: '_', className: 'underline'}\r\n        ];    \r\n\r\n        let output = '';\r\n        let currClass = '';\r\n    \r\n        for(let i=0; i<input.length; i++)\r\n        {\r\n            const currChar = input[i];\r\n            const isStyleToken = styles.some(style => style.token === currChar);\r\n    \r\n            // If the first character isn't a style token, then\r\n            // we need to open a \"normal\" class tag\r\n            if(i === 0 && !isStyleToken)\r\n            {\r\n                output += '<class=\"normal\">';\r\n                currClass = 'normal';\r\n            }\r\n    \r\n            // If the last character is a style token, we ignore it\r\n            // since we'll always end with a closing class tag anyway\r\n            if(i === input.length - 1 && isStyleToken)\r\n            {\r\n                continue;\r\n            }\r\n    \r\n            if(isStyleToken)\r\n            {\r\n                const targetStyle = styles.find(style => style.token === currChar);\r\n    \r\n                // If we've encountered a token of the class we already have open,\r\n                // that means we need to close the class\r\n                if(currClass === targetStyle.className)\r\n                {\r\n                    output += '</class>';\r\n                    output += '<class=\"normal\">';\r\n                    currClass = 'normal';\r\n                }\r\n    \r\n                // Otherwise, we need to close the existing the class and\r\n                // open the new class\r\n                else\r\n                {\r\n                    if(i !== 0)\r\n                    {\r\n                        output += '</class>';\r\n                    }\r\n    \r\n                    output += `<class=\"${targetStyle.className}\">`;\r\n                    currClass = targetStyle.className;\r\n                }\r\n            }\r\n            else\r\n            {\r\n                output += input[i];\r\n            }\r\n        }\r\n    \r\n        output += '</class>';\r\n        return output;\r\n    }\r\n}","export default class extends Phaser.Scene {\r\n\r\n    constructor()\r\n    {\r\n        super('RoundTransitionScene');\r\n\r\n        this.nextLevel = 0;\r\n    }\r\n\r\n    init(data)\r\n    {\r\n        this.nextLevel = data.nextLevel;\r\n    }\r\n\r\n    create()\r\n    {\r\n        const self = this;\r\n\r\n        // Title\r\n        this.add.text(50, 50, `Round ${self.nextLevel}`);\r\n\r\n        this.time.addEvent({ delay: 1000, callback: function() { self.scene.start('RoundScene', { level: self.nextLevel }) }, callbackScope: this })\r\n    }\r\n    \r\n}","import TitleScene from './scenes/TitleScene';\r\nimport RoundScene from './scenes/RoundScene';\r\nimport RoundTransitionScene from './scenes/RoundTransitionScene';\r\n\r\nconst config = {\r\n    type: Phaser.AUTO,\r\n    width: 800,\r\n    height: 700,\r\n    scene: [TitleScene, RoundScene, RoundTransitionScene]\r\n};\r\n\r\nconst game = new Phaser.Game(config);"],"sourceRoot":""}