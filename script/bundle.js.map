{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/render/WebGLRenderer.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/render/CanvasRenderer.js","webpack:///./script/scenes/TitleScene.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/object/NOOP.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/render/Render.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/textstyle/MeasureText.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/const.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/textstyle/TextStyle.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/canvastext/DrawMethods.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/struct/Stack.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/pool.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/penmanger/Pen.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/object/Clear.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/object/Clone.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/penmanger/PenManager.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/hitareamanager/HitAreaManager.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/canvastext/SetInteractive.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/canvastext/WrapText.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/canvastext/CanvasText.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/imagemanager/ImageManager.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/imagemanager/GetGlobImageManager.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/Text.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/tagtext/Parser.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/tagtext/TagText.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/tagtext/Creator.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/tagtext.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/tagtext/Factory.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/eventemitter/EventEmitterMethods.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/system/IsSceneObject.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/system/GetSceneObject.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/behaviors/texttyping/TextTyping.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/texttyping.js","webpack:///./script/Utility.js","webpack:///./script/TileState.js","webpack:///./script/TileGenerationBehavior.js","webpack:///./script/TileType.js","webpack:///./script/TileGrid.js","webpack:///./script/Tile.js","webpack:///./script/scenes/RoundScene.js","webpack:///./script/ActionQueue.js","webpack:///./script/ScoreDisplay.js","webpack:///./script/Timer.js","webpack:///./script/DialogManager.js","webpack:///./script/DialogScript.js","webpack:///./script/Guide.js","webpack:///./script/scenes/RoundTransitionScene.js","webpack:///./script/scenes/GameOverScene.js","webpack:///./script/main.js"],"names":["enumerable","get","getter","value","key","bind","module","Object","prototype","hasOwnProperty","call","object","property","Utils","Phaser","Renderer","WebGL","exports","renderer","src","interpolationPercentage","camera","parentMatrix","width","height","frame","getTint","getTintAppendFloatAlpha","this","pipeline","batchTexture","glTexture","x","y","style","resolution","scaleX","scaleY","rotation","flipX","flipY","scrollFactorX","scrollFactorY","displayOriginX","displayOriginY","_tintTL","alpha","_alphaTL","_tintTR","_alphaTR","_tintBL","_alphaBL","_tintBR","_alphaBR","_isTinted","tintFill","batchSprite","super","self","add","text","startBtn","setInteractive","on","scene","start","level","renderWebGL","renderCanvas","CanvasPool","Display","Canvas","textStyle","canvas","create","context","getContext","syncFont","Math","ceil","measureText","testString","baselineX","baseline","baselineY","fillStyle","fillRect","font","_font","textBaseline","fillText","output","ascent","descent","fontSize","getImageData","remove","i","j","imagedata","data","pixels","length","line","idx","stop","NO_NEWLINE","RAW_NEWLINE","WRAPPED_NEWLINE","NO_WRAP","WORD_WRAP","CHAR_WRAP","SPLITREGEXP","GetAdvancedValue","Objects","GetValue","propertyMap","backgroundColor","fontFamily","fontStyle","color","stroke","strokeThickness","shadowOffsetX","shadowOffsetY","shadowColor","shadowBlur","shadowStroke","shadowFill","underlineColor","underlineThickness","underlineOffset","halign","valign","maxLines","fixedWidth","fixedHeight","lineSpacing","rtl","wrapMode","wrapWidth","WRAPMODE","none","word","char","character","parent","setStyle","metrics","updateText","undefined","wrap","mode","toString","fill","update","strokeStyle","lineWidth","lineCap","lineJoin","enabled","recalculateMetrics","newFont","family","size","string","thickness","blur","offset","toLowerCase","max","getTextMetrics","startX","startY","boxWidth","boxHeight","penManager","hitAreaManager","clear","save","drawBackground","defatultStyle","startXOffset","startYOffset","drawLinesNum","drawLineStartIdx","drawLineEndIdx","offsetX","offsetY","lineHeight","lines","totalLinesNum","floor","lineIdx","getLineWidth","pens","penIdx","pensLen","drawPen","restore","pen","curStyle","parser","propToContextStyle","prop","buildFont","syncStyle","drawUnderline","isTextPen","drawText","isImagePen","drawImage","img","hasAreaMarker","area","clearRect","autoRound","round","savedLineCap","beginPath","moveTo","lineTo","syncShadow","strokeText","imgKey","imageManager","imgData","getFrame","left","source","image","cutX","cutY","cutWidth","cutHeight","items","pop","l","push","arr","apply","config","resetFromJSON","o","newLineMode","startIndex","txt","len","rawTextLength","obj","Array","isArray","out","objIsArray","GetFastValue","PensPool","LinesPool","maxLinesWidth","tagToText","tagToTextScope","freePens","pushMultiple","PEN_CONFIG","addPen","addTextPen","previousPen","lastPen","lastX","endIndex","lastLine","targetPenManager","li","llen","pi","plen","getLineEndIndex","hasLastPen","w","maxW","result","plainText","end","penTxt","penStartIdx","penEndIdx","currentProp","previousProp","wrapText","substring","Rectangle","Geom","RectanglePool","hitAreas","rectangle","setTo","hitArea","cnt","contains","graphics","scaleCanvas","rotateCanvas","translateCanvas","lineStyle","strokeRect","FireEvent","eventName","pointer","localX","localY","emit","event","splitRegExp","WRAP_RESULT","newline","getTextWidth","retLines","remainWidth","split","linesLen","tokenArray","token","textWidth","currLineWidth","curLineText","lineText","tokenLen","pensPool","newPenManager","_tmpPenManager","destroy","curProp","wrapLines","cursorX","cursorY","match","splitText","tagTextToProp","imgWidth","getOuterWidth","addNewLinePen","addImagePen","n","jLen","linesCount","getMaxLineWidth","desplayLinesCount","linesHeight","propToTagText","retPenManager","copyPenManager","updatePenManager","getSliceTagText","tmpPenManager","ret","copy","methods","assign","DrawMethods","globImageManager","textureManager","images","_add","textureKey","frameKey","frameWidth","frameHeight","right","exists","AddToDOM","DOM","GameObject","GameObjects","RemoveFromDOM","PensPools","type","sys","game","setPosition","setOrigin","initPipeline","align","_text","padding","top","bottom","dirty","_crop","resetCropObject","texture","textures","addCanvas","gl","deleteTexture","canvasText","setPadding","setText","events","dir","direction","display","originX","join","setFont","setFontFamily","setFontSize","setFontStyle","setFixedSize","setBackgroundColor","setFill","setColor","setStroke","setShadow","setShadowOffset","setShadowColor","setShadowBlur","setShadowStroke","setShadowFill","setWrapMode","setWrapWidth","setHAlign","setLineSpacing","setResolution","setMaxLines","runWrap","textHeight","linesWidth","h","updateDisplayOrigin","setSize","scale","draw","canvasToTexture","input","customHitArea","Components","ToJSON","toJSON","shape","callback","dropZone","getText","getPlainText","getPenManager","GetGlobImageManager","drawBounds","Class","mixin","Alpha","BlendMode","ComputedSize","Crop","Depth","Flip","GetBounds","Mask","Origin","Pipeline","ScrollFactor","Tint","Transform","Visible","Render","GETPROP_RESULT","prevProp","STYLE_RESULT","styleToProp","s","k","v","slen","isEmpty","thinkness","parseInt","replace","shadow","u","RE_SPACE","RE_SPLITTEXT","RE_CLASS_HEADER","RE_CLASS","RE_STYLE_HEADER","RE_STYLE","tags","name","m","innerMatch","charIdx","totalLen","matchStart","exec","lastIndex","test","propOut","_class","_style","defaultStyle","underline","isTextTag","tagName","tag","Parser","addTag","preDestroy","BuildGameObject","GameObjectFactory","register","gameObject","existing","GameObjectCreator","content","addToScene","eventEmitter","EventEmitterClass","Events","EventEmitter","_privateEE","_eventEmitter","shutdown","arguments","once","off","addListener","removeListener","removeAllListeners","listenerCount","listeners","SceneClass","Scene","setEventEmitter","timer","boot","setTypeMode","setTypeSpeed","setTextCallback","setTextCallbackScope","typingIdx","transferText","textLen","insertIdx","elapsed","getTimer","typeMode","speed","destroyEventEmitter","freeTimer","TYPEMODE","startIdx","timerStartAt","setTypingContent","startTimer","newText","concat","isTyping","showAllText","paused","getTextLength","getTypingString","isLastChar","delay","typeIdx","endIdx","getSubString","midIdx","lowerResult","lowerLen","upperResult","upperLen","startAt","time","addEvent","loop","onTyping","callbackScope","slice","EventEmitterMethods","getRandomItem","random","imageKey","tileGridWidth","tileGridHeight","tileSize","onTileSelect","onTileMatch","queue","tileGrid","tileImageContainer","playAreaOffset","tileGenerationBehavior","TileGenerationBehavior","createTile","getTileType","container","forEachTile","tile","maskShape","make","mask","Masks","GeometryMask","matchedTiles","getMatches","destroys","forEach","t","Promise","all","state","TileState","drops","closestY","closestTile","getTileDrop","forEachPlayableTile","adjustedY","firstTile","secondTile","firstTileX","firstTileY","firstTileGridX","tileGridX","firstTileGridY","tileGridY","secondTileX","secondTileY","secondTileGridX","secondTileGridY","firstSwap","updatePosition","secondSwap","targetGridX","targetGridY","isPlayable","targetTileType","tileType","matchedXTiles","matchedYTiles","currX","currTile","currY","isActivated","setTintFill","clearTint","resolve","reject","tweens","targets","ease","duration","onComplete","getTileX","getTileY","behavior","aboveTile","belowTile","leftTile","rightTile","TileType","filter","map","score","selectedTiles","scoreDisplay","guide","comboCount","totalMatches","load","queuedActions","currentAction","shift","action","then","TileGrid","scoreText","comboText","updateScore","seconds","tick","minutes","script","introMessages","getDisplayTileMatchMessages","getScript","queuedMessages","isPaused","isBlockingGameplay","endDialogueMarkerGraphics","speechBubbleGraphics","speechBubble","fillRectShape","hideEndDialogueMarker","endDialogueMarker","Circle","fillCircleShape","repeat","yoyo","speechBubbleTextStyle","exclamation","speechBubbleText","speechBubbleTextTyping","onMessageComplete","characterGraphics","queueMessages","messages","progressDialogue","showEndDialogueMarker","message","convertDialogToTagText","setVisible","styles","className","currClass","currChar","isStyleToken","some","targetStyle","find","nextLevel","isActionRunning","hasActions","next","canSelect","deactivate","activate","selectedTile","xDiff","abs","yDiff","firstSelectedTile","secondSelectedTile","swapTiles","hasMatches","displayTileMatchMessage","updateCombo","finalScore","startOverBtn","AUTO","TitleScene","RoundScene","RoundTransitionScene","GameOverScene","Game"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Utils = Phaser.Renderer.WebGL.Utils;\r\n\r\n/**\r\n * Renders this Game Object with the WebGL Renderer to the given Camera.\r\n * The object will not render if any of its renderFlags are set or it is being actively filtered out by the Camera.\r\n * This method should not be called directly. It is a utility function of the Render module.\r\n *\r\n * @method Phaser.GameObjects.Text#renderWebGL\r\n * @since 3.0.0\r\n * @private\r\n *\r\n * @param {Phaser.Renderer.WebGL.WebGLRenderer} renderer - A reference to the current active WebGL renderer.\r\n * @param {Phaser.GameObjects.Text} src - The Game Object being rendered in this call.\r\n * @param {number} interpolationPercentage - Reserved for future use and custom pipelines.\r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The Camera that is rendering the Game Object.\r\n * @param {Phaser.GameObjects.Components.TransformMatrix} parentMatrix - This transform matrix is defined if the game object is nested\r\n */\r\nvar TextWebGLRenderer = function (renderer, src, interpolationPercentage, camera, parentMatrix) {\r\n    if ((src.width === 0) || (src.height === 0)) {\r\n        return;\r\n    }\r\n\r\n    var frame = src.frame;\r\n    var width = frame.width;\r\n    var height = frame.height;\r\n    var getTint = Utils.getTintAppendFloatAlpha;\r\n\r\n    this.pipeline.batchTexture(\r\n        src,\r\n        frame.glTexture,\r\n        width, height,\r\n        src.x, src.y,\r\n        width / src.style.resolution, height / src.style.resolution,\r\n        src.scaleX, src.scaleY,\r\n        src.rotation,\r\n        src.flipX, src.flipY,\r\n        src.scrollFactorX, src.scrollFactorY,\r\n        src.displayOriginX, src.displayOriginY,\r\n        0, 0, width, height,\r\n        getTint(src._tintTL, camera.alpha * src._alphaTL),\r\n        getTint(src._tintTR, camera.alpha * src._alphaTR),\r\n        getTint(src._tintBL, camera.alpha * src._alphaBL),\r\n        getTint(src._tintBR, camera.alpha * src._alphaBR),\r\n        (src._isTinted && src.tintFill),\r\n        0, 0,\r\n        camera,\r\n        parentMatrix\r\n    );\r\n};\r\n\r\nmodule.exports = TextWebGLRenderer;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Renders this Game Object with the Canvas Renderer to the given Camera.\r\n * The object will not render if any of its renderFlags are set or it is being actively filtered out by the Camera.\r\n * This method should not be called directly. It is a utility function of the Render module.\r\n *\r\n * @method Phaser.GameObjects.Text#renderCanvas\r\n * @since 3.0.0\r\n * @private\r\n *\r\n * @param {Phaser.Renderer.Canvas.CanvasRenderer} renderer - A reference to the current active Canvas renderer.\r\n * @param {Phaser.GameObjects.Text} src - The Game Object being rendered in this call.\r\n * @param {number} interpolationPercentage - Reserved for future use and custom pipelines.\r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The Camera that is rendering the Game Object.\r\n * @param {Phaser.GameObjects.Components.TransformMatrix} parentMatrix - This transform matrix is defined if the game object is nested\r\n */\r\nvar TextCanvasRenderer = function (renderer, src, interpolationPercentage, camera, parentMatrix) {\r\n    if ((src.width === 0) || (src.height === 0)) {\r\n        return;\r\n    }\r\n\r\n    renderer.batchSprite(src, src.frame, camera, parentMatrix);\r\n};\r\n\r\nmodule.exports = TextCanvasRenderer;\r\n","export default class extends Phaser.Scene {\r\n\r\n    constructor()\r\n    {\r\n        super('TitleScene');\r\n    }\r\n\r\n    create()\r\n    {\r\n        const self = this;\r\n\r\n        // Title\r\n        this.add.text(50, 50, 'Match Three!');\r\n\r\n        // \"Start\" Button\r\n        const startBtn = this.add.text(50, 70, 'Start Game');\r\n        startBtn.setInteractive();\r\n        startBtn.on('pointerdown', () => { self.scene.start('RoundScene', { level: 0 }); });\r\n    }\r\n    \r\n}","var NOOP = function () {\r\n    //  NOOP\r\n};\r\n\r\nexport default NOOP;","import WebGLRenderer from './WebGLRenderer.js';\r\nimport CanvasRenderer from './CanvasRenderer.js';\r\nimport NOOP from '../../../../utils/object/NOOP';\r\n\r\nvar renderWebGL = NOOP;\r\nvar renderCanvas = NOOP;\r\n\r\nif (WEBGL_RENDERER) {\r\n    renderWebGL = WebGLRenderer;\r\n}\r\n\r\nif (CANVAS_RENDERER) {\r\n    renderCanvas = CanvasRenderer;\r\n}\r\n\r\nexport default {\r\n    renderWebGL: renderWebGL,\r\n    renderCanvas: renderCanvas\r\n\r\n};","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nconst CanvasPool = Phaser.Display.Canvas.CanvasPool;\r\n\r\n/**\r\n * Calculates the ascent, descent and fontSize of a given font style.\r\n *\r\n * @function Phaser.GameObjects.Text.MeasureText\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.GameObjects.Text.TextStyle} textStyle - The TextStyle object to measure.\r\n *\r\n * @return {object} An object containing the ascent, descent and fontSize of the TextStyle.\r\n */\r\nvar MeasureText = function (textStyle) {\r\n    // @property {HTMLCanvasElement} canvas - The canvas element that the text is rendered.\r\n    var canvas = CanvasPool.create(this);\r\n\r\n    // @property {HTMLCanvasElement} context - The context of the canvas element that the text is rendered to.\r\n    var context = canvas.getContext('2d');\r\n\r\n    textStyle.syncFont(canvas, context);\r\n\r\n    var width = Math.ceil(context.measureText(textStyle.testString).width * textStyle.baselineX);\r\n    var baseline = width;\r\n    var height = 2 * baseline;\r\n\r\n    baseline = baseline * textStyle.baselineY | 0;\r\n\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n\r\n    context.fillStyle = '#f00';\r\n    context.fillRect(0, 0, width, height);\r\n\r\n    context.font = textStyle._font;\r\n\r\n    context.textBaseline = 'alphabetic';\r\n    context.fillStyle = '#000';\r\n    context.fillText(textStyle.testString, 0, baseline);\r\n\r\n    var output = {\r\n        ascent: 0,\r\n        descent: 0,\r\n        fontSize: 0\r\n    };\r\n\r\n    if (!context.getImageData(0, 0, width, height)) {\r\n        output.ascent = baseline;\r\n        output.descent = baseline + 6;\r\n        output.fontSize = output.ascent + output.descent;\r\n\r\n        CanvasPool.remove(canvas);\r\n\r\n        return output;\r\n    }\r\n\r\n    var imagedata = context.getImageData(0, 0, width, height).data;\r\n    var pixels = imagedata.length;\r\n    var line = width * 4;\r\n    var i;\r\n    var j;\r\n    var idx = 0;\r\n    var stop = false;\r\n\r\n    // ascent. scan from top to bottom until we find a non red pixel\r\n    for (i = 0; i < baseline; i++) {\r\n        for (j = 0; j < line; j += 4) {\r\n            if (imagedata[idx + j] !== 255) {\r\n                stop = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!stop) {\r\n            idx += line;\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n\r\n    output.ascent = baseline - i;\r\n\r\n    idx = pixels - line;\r\n    stop = false;\r\n\r\n    // descent. scan from bottom to top until we find a non red pixel\r\n    for (i = height; i > baseline; i--) {\r\n        for (j = 0; j < line; j += 4) {\r\n            if (imagedata[idx + j] !== 255) {\r\n                stop = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!stop) {\r\n            idx -= line;\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n\r\n    output.descent = (i - baseline);\r\n    output.fontSize = output.ascent + output.descent;\r\n\r\n    CanvasPool.remove(canvas);\r\n\r\n    return output;\r\n};\r\n\r\nexport default MeasureText;","var CONST = {\r\n    // new line mode\r\n    NO_NEWLINE: 0,\r\n    RAW_NEWLINE: 1,\r\n    WRAPPED_NEWLINE: 2,\r\n\r\n    // wrap mode\r\n    NO_WRAP: 0,\r\n    WORD_WRAP: 1,\r\n    CHAR_WRAP: 2,\r\n\r\n    // split lines\r\n    SPLITREGEXP: /(?:\\r\\n|\\r|\\n)/\r\n};\r\n\r\nexport default CONST;","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nimport MeasureText from './MeasureText.js';\r\nimport CONST from '../const.js';\r\n\r\nconst GetAdvancedValue = Phaser.Utils.Objects.GetAdvancedValue;\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\n\r\n//  Key: [ Object Key, Default Value ]\r\n\r\n/**\r\n * A custom function that will be responsible for wrapping the text.\r\n * @callback TextStyleWordWrapCallback\r\n *\r\n * @param {string} text - The string to wrap.\r\n * @param {Phaser.GameObjects.Text} textObject - The Text instance.\r\n *\r\n * @return {(string|string[])} Should return the wrapped lines either as an array of lines or as a string with\r\n * newline characters in place to indicate where breaks should happen.\r\n */\r\n\r\nvar propertyMap = {\r\n    // background\r\n    backgroundColor: ['backgroundColor', null],\r\n\r\n    // font\r\n    fontFamily: ['fontFamily', 'Courier'],\r\n    fontSize: ['fontSize', '16px'],\r\n    fontStyle: ['fontStyle', ''],\r\n    color: ['color', '#fff'],\r\n    stroke: ['stroke', '#fff'],\r\n    strokeThickness: ['strokeThickness', 0],\r\n    shadowOffsetX: ['shadow.offsetX', 0],\r\n    shadowOffsetY: ['shadow.offsetY', 0],\r\n    shadowColor: ['shadow.color', '#000'],\r\n    shadowBlur: ['shadow.blur', 0],\r\n    shadowStroke: ['shadow.stroke', false],\r\n    shadowFill: ['shadow.fill', false],\r\n\r\n    // underline\r\n    underlineColor: ['underline.color', '#000'],\r\n    underlineThickness: ['underline.thickness', 0],\r\n    underlineOffset: ['underline.offset', 0],\r\n\r\n    // align\r\n    halign: ['halign', 'left'],\r\n    valign: ['valign', 'top'],\r\n\r\n    // size\r\n    maxLines: ['maxLines', 0],\r\n    fixedWidth: ['fixedWidth', 0],\r\n    fixedHeight: ['fixedHeight', 0],\r\n    resolution: ['resolution', 0],\r\n    lineSpacing: ['lineSpacing', 0],\r\n\r\n    rtl: ['rtl', false],\r\n    testString: ['testString', '|MÃ‰qgy'],\r\n    baselineX: ['baselineX', 1.2],\r\n    baselineY: ['baselineY', 1.4],\r\n\r\n    // wrap\r\n    wrapMode: ['wrap.mode', 1],\r\n    wrapWidth: ['wrap.width', 0]\r\n    //wrapCallback: ['wrap.callback', null],\r\n    //wrapCallbackScope: ['wrap.callbackScope', null]\r\n};\r\n\r\nclass TextStyle {\r\n    constructor(text, style) {\r\n        this.parent = text;\r\n\r\n        this.backgroundColor;\r\n\r\n        this.fontFamily;\r\n        this.fontSize;\r\n        this.fontStyle;\r\n        this.color;\r\n        this.stroke;\r\n        this.strokeThickness;\r\n        this.shadowOffsetX;\r\n        this.shadowOffsetY;\r\n        this.shadowColor;\r\n        this.shadowBlur;\r\n        this.shadowStroke;\r\n        this.shadowFill;\r\n\r\n        this.underlineColor;\r\n        this.underlineThickness;\r\n        this.underlineOffset;\r\n\r\n        this.halign;\r\n        this.valign;\r\n\r\n        this.maxLines;\r\n        this.fixedWidth;\r\n        this.fixedHeight;\r\n        this.resolution;\r\n        this.lineSpacing;\r\n\r\n        this.rtl;\r\n        this.testString;\r\n\r\n\r\n        this.baselineX;\r\n        this.baselineY;\r\n\r\n        this._font;\r\n\r\n        //  Set to defaults + user style\r\n        this.setStyle(style, false);\r\n\r\n        var metrics = GetValue(style, 'metrics', false);\r\n\r\n        //  Provide optional TextMetrics in the style object to avoid the canvas look-up / scanning\r\n        //  Doing this is reset if you then change the font of this TextStyle after creation\r\n        if (metrics) {\r\n            this.metrics = {\r\n                ascent: GetValue(metrics, 'ascent', 0),\r\n                descent: GetValue(metrics, 'descent', 0),\r\n                fontSize: GetValue(metrics, 'fontSize', 0)\r\n            };\r\n        } else {\r\n            this.metrics = MeasureText(this);\r\n        }\r\n    }\r\n\r\n    setStyle(style, updateText) {\r\n        if (updateText === undefined) {\r\n            updateText = true;\r\n        }\r\n\r\n        if (style && style.hasOwnProperty('wrap')) {\r\n            var wrap = style.wrap;\r\n            if (wrap.hasOwnProperty('mode')) {\r\n                var mode = wrap.mode;\r\n                if (typeof mode === 'string') {\r\n                    wrap.mode = WRAPMODE[mode];\r\n                }\r\n            } else {\r\n                if (wrap.hasOwnProperty('width')) {\r\n                    wrap.mode = 1;\r\n                }\r\n            }\r\n        }\r\n\r\n        //  Avoid type mutation\r\n        if (style && style.hasOwnProperty('fontSize') && typeof style.fontSize === 'number') {\r\n            style.fontSize = style.fontSize.toString() + 'px';\r\n        }\r\n\r\n        for (var key in propertyMap) {\r\n            if (key === 'wrapCallback' || key === 'wrapCallbackScope') {\r\n                // Callback & scope should be set without processing the values\r\n                this[key] = GetValue(style, propertyMap[key][0], propertyMap[key][1]);\r\n            } else {\r\n                this[key] = GetAdvancedValue(style, propertyMap[key][0], propertyMap[key][1]);\r\n            }\r\n        }\r\n\r\n        //  Allow for 'font' override\r\n        var font = GetValue(style, 'font', null);\r\n\r\n        if (font === null) {\r\n            this._font = this.fontStyle + ' ' + this.fontSize + ' ' + this.fontFamily;\r\n        } else {\r\n            this._font = font;\r\n        }\r\n\r\n        //  Allow for 'fill' to be used in place of 'color'\r\n        var fill = GetValue(style, 'fill', null);\r\n\r\n        if (fill !== null) {\r\n            this.color = fill;\r\n        }\r\n\r\n        if (updateText) {\r\n            return this.update(true);\r\n        } else {\r\n            return this.parent;\r\n        }\r\n    }\r\n\r\n    syncFont(canvas, context) {\r\n        context.font = this._font;\r\n    }\r\n\r\n    syncStyle(canvas, context) {\r\n        context.textBaseline = 'alphabetic';\r\n\r\n        context.fillStyle = this.color;\r\n        context.strokeStyle = this.stroke;\r\n\r\n        context.lineWidth = this.strokeThickness;\r\n        context.lineCap = 'round';\r\n        context.lineJoin = 'round';\r\n    }\r\n\r\n    syncShadow(context, enabled) {\r\n        if (enabled) {\r\n            context.shadowOffsetX = this.shadowOffsetX;\r\n            context.shadowOffsetY = this.shadowOffsetY;\r\n            context.shadowColor = this.shadowColor;\r\n            context.shadowBlur = this.shadowBlur;\r\n        } else {\r\n            context.shadowOffsetX = 0;\r\n            context.shadowOffsetY = 0;\r\n            context.shadowColor = 0;\r\n            context.shadowBlur = 0;\r\n        }\r\n    }\r\n\r\n    update(recalculateMetrics) {\r\n        if (recalculateMetrics) {\r\n            this._font = this.fontStyle + ' ' + this.fontSize + ' ' + this.fontFamily;\r\n\r\n            this.metrics = MeasureText(this);\r\n        }\r\n\r\n        return this.parent.updateText(recalculateMetrics);\r\n    }\r\n\r\n    buildFont() {\r\n        var newFont = this.fontStyle + ' ' + this.fontSize + ' ' + this.fontFamily;\r\n        if (newFont !== this._font) {\r\n            this._font = newFont;\r\n            //this.metrics = MeasureText(this);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    setFont(font) {\r\n        if (typeof font === 'string') {\r\n            this.fontFamily = font;\r\n            this.fontSize = '';\r\n            this.fontStyle = '';\r\n        } else {\r\n            this.fontFamily = GetValue(font, 'fontFamily', 'Courier');\r\n            this.fontSize = GetValue(font, 'fontSize', '16px');\r\n            this.fontStyle = GetValue(font, 'fontStyle', '');\r\n        }\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setFontFamily(family) {\r\n        this.fontFamily = family;\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setFontStyle(style) {\r\n        this.fontStyle = style;\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setFontSize(size) {\r\n        if (typeof size === 'number') {\r\n            size = size.toString() + 'px';\r\n        }\r\n\r\n        this.fontSize = size;\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setTestString(string) {\r\n        this.testString = string;\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setFixedSize(width, height) {\r\n        this.fixedWidth = width;\r\n        this.fixedHeight = height;\r\n\r\n        if (width) {\r\n            this.parent.width = width;\r\n        }\r\n\r\n        if (height) {\r\n            this.parent.height = height;\r\n        }\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setResolution(value) {\r\n        this.resolution = value;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setLineSpacing(value) {\r\n        this.lineSpacing = value;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setBackgroundColor(color) {\r\n        this.backgroundColor = color;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setFill(color) {\r\n        this.color = color;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setColor(color) {\r\n        this.color = color;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setStroke(color, thickness) {\r\n        if (color === undefined) {\r\n            //  Reset the stroke to zero (disabling it)\r\n            this.strokeThickness = 0;\r\n        } else {\r\n            if (thickness === undefined) {\r\n                thickness = this.strokeThickness;\r\n            }\r\n\r\n            this.stroke = color;\r\n            this.strokeThickness = thickness;\r\n        }\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setShadow(x, y, color, blur, shadowStroke, shadowFill) {\r\n        if (x === undefined) {\r\n            x = 0;\r\n        }\r\n        if (y === undefined) {\r\n            y = 0;\r\n        }\r\n        if (color === undefined) {\r\n            color = '#000';\r\n        }\r\n        if (blur === undefined) {\r\n            blur = 0;\r\n        }\r\n        if (shadowStroke === undefined) {\r\n            shadowStroke = false;\r\n        }\r\n        if (shadowFill === undefined) {\r\n            shadowFill = true;\r\n        }\r\n\r\n        this.shadowOffsetX = x;\r\n        this.shadowOffsetY = y;\r\n        this.shadowColor = color;\r\n        this.shadowBlur = blur;\r\n        this.shadowStroke = shadowStroke;\r\n        this.shadowFill = shadowFill;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setShadowOffset(x, y) {\r\n        if (x === undefined) {\r\n            x = 0;\r\n        }\r\n        if (y === undefined) {\r\n            y = x;\r\n        }\r\n\r\n        this.shadowOffsetX = x;\r\n        this.shadowOffsetY = y;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setShadowColor(color) {\r\n        if (color === undefined) {\r\n            color = '#000';\r\n        }\r\n\r\n        this.shadowColor = color;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setShadowBlur(blur) {\r\n        if (blur === undefined) {\r\n            blur = 0;\r\n        }\r\n\r\n        this.shadowBlur = blur;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setShadowStroke(enabled) {\r\n        this.shadowStroke = enabled;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setShadowFill(enabled) {\r\n        this.shadowFill = enabled;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setUnderline(color, thickness, offset) {\r\n        if (color === undefined) {\r\n            color = '#000';\r\n        }\r\n        if (thickness === undefined) {\r\n            thickness = 0;\r\n        }\r\n        if (offset === undefined) {\r\n            offset = 0;\r\n        }\r\n\r\n        this.underlineColor = color;\r\n        this.underlineThickness = thickness;\r\n        this.underlineOffset = offset;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setUnderlineColor(color) {\r\n        if (color === undefined) {\r\n            color = '#000';\r\n        }\r\n\r\n        this.underlineColor = color;\r\n        return this.update(false);\r\n    }\r\n\r\n    setUnderlineThickness(thickness) {\r\n        if (thickness === undefined) {\r\n            thickness = 0;\r\n        }\r\n\r\n        this.underlineThickness = thickness;\r\n        return this.update(false);\r\n    }\r\n\r\n    setUnderlineOffset(offset) {\r\n        if (offset === undefined) {\r\n            offset = 0;\r\n        }\r\n\r\n        this.underlineOffset = offset;\r\n        return this.update(false);\r\n    }\r\n\r\n    setWrapMode(mode) {\r\n        if (typeof mode === 'string') {\r\n            mode = WRAPMODE[mode.toLowerCase()] || 0;\r\n        }\r\n        this.wrapMode = mode;\r\n        return this.update(true);\r\n    }\r\n\r\n    setWrapWidth(width) {\r\n        this.wrapWidth = width;\r\n        return this.update(false);\r\n    }\r\n\r\n    setAlign(halign, valign) {\r\n        if (halign === undefined) {\r\n            halign = 'left';\r\n        }\r\n        if (valign === undefined) {\r\n            valign = 'top';\r\n        }\r\n        this.halign = halign;\r\n        this.valign = valign;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setHAlign(halign) {\r\n        if (halign === undefined) {\r\n            halign = 'left';\r\n        }\r\n        this.halign = halign;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setVAlign(valign) {\r\n        if (valign === undefined) {\r\n            valign = 'top';\r\n        }\r\n        this.valign = valign;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setMaxLines(max) {\r\n        if (max === undefined) {\r\n            max = 0;\r\n        }\r\n\r\n        this.maxLines = max;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    getTextMetrics() {\r\n        var metrics = this.metrics;\r\n\r\n        return {\r\n            ascent: metrics.ascent,\r\n            descent: metrics.descent,\r\n            fontSize: metrics.fontSize\r\n        };\r\n    }\r\n\r\n    get lineHeight() {\r\n        return this.metrics.fontSize + this.strokeThickness + this.lineSpacing;\r\n    }\r\n\r\n    toJSON() {\r\n        var output = {};\r\n\r\n        for (var key in propertyMap) {\r\n            output[key] = this[key];\r\n        }\r\n\r\n        output.metrics = this.getTextMetrics();\r\n\r\n        return output;\r\n    }\r\n\r\n    destroy() {\r\n        this.parent = undefined;\r\n    }\r\n\r\n}\r\n\r\nconst HALIGNMODE = {\r\n    left: CONST.hleft,\r\n    center: CONST.hcenter,\r\n    right: CONST.hright,\r\n};\r\nconst VALIGNMODE = {\r\n    top: CONST.vtop,\r\n    center: CONST.vcenter,\r\n    bottom: CONST.vbottom,\r\n};\r\nconst WRAPMODE = {\r\n    none: CONST.NO_WRAP,\r\n    word: CONST.WORD_WRAP,\r\n    char: CONST.CHAR_WRAP,\r\n    character: CONST.CHAR_WRAP\r\n};\r\n\r\nexport default TextStyle;","import CONST from '../const.js';\r\n\r\nexport default {\r\n    draw(startX, startY, boxWidth, boxHeight) {\r\n        var penManager = this.penManager;\r\n        this.hitAreaManager.clear();\r\n\r\n        var context = this.context;\r\n        context.save();\r\n\r\n        // this.clear();\r\n        this.drawBackground(this.defatultStyle.backgroundColor);\r\n\r\n        // draw lines\r\n        var defatultStyle = this.defatultStyle;\r\n        startX += this.startXOffset;\r\n        startY += this.startYOffset;\r\n        var halign = defatultStyle.halign,\r\n            valign = defatultStyle.valign;\r\n\r\n        var lineWidth, lineHeight = defatultStyle.lineHeight;\r\n        var lines = penManager.lines;\r\n        var totalLinesNum = lines.length,\r\n            maxLines = defatultStyle.maxLines;\r\n        var drawLinesNum, drawLineStartIdx, drawLineEndIdx;\r\n        if ((maxLines > 0) && (totalLinesNum > maxLines)) {\r\n            drawLinesNum = maxLines;\r\n            if (valign === 'center') { // center\r\n                drawLineStartIdx = Math.floor((totalLinesNum - drawLinesNum) / 2);\r\n            } else if (valign === 'bottom') { // bottom\r\n                drawLineStartIdx = totalLinesNum - drawLinesNum;\r\n            } else {\r\n                drawLineStartIdx = 0;\r\n            }\r\n        } else {\r\n            drawLinesNum = totalLinesNum;\r\n            drawLineStartIdx = 0;\r\n        }\r\n        drawLineEndIdx = drawLineStartIdx + drawLinesNum;\r\n\r\n        var offsetX, offsetY;\r\n        if (valign === 'center') { // center\r\n            offsetY = Math.max((boxHeight - (drawLinesNum * lineHeight)) / 2, 0);\r\n        } else if (valign === 'bottom') { // bottom\r\n            offsetY = Math.max(boxHeight - (drawLinesNum * lineHeight) - 2, 0);\r\n        } else {\r\n            offsetY = 0;\r\n        }\r\n        offsetY += startY;\r\n        for (var lineIdx = drawLineStartIdx; lineIdx < drawLineEndIdx; lineIdx++) {\r\n            lineWidth = penManager.getLineWidth(lineIdx);\r\n            if (lineWidth === 0) {\r\n                continue;\r\n            }\r\n\r\n            if (halign === 'center') { // center\r\n                offsetX = (boxWidth - lineWidth) / 2;\r\n            } else if (halign === 'right') { // right\r\n                offsetX = boxWidth - lineWidth;\r\n            } else {\r\n                offsetX = 0;\r\n            }\r\n            offsetX += startX;\r\n\r\n            var pens = lines[lineIdx];\r\n            for (var penIdx = 0, pensLen = pens.length; penIdx < pensLen; penIdx++) {\r\n                this.drawPen(pens[penIdx], offsetX, offsetY);\r\n            }\r\n        }\r\n\r\n        context.restore();\r\n    },\r\n\r\n    drawPen(pen, offsetX, offsetY) {\r\n        offsetX += pen.x;\r\n        offsetY += pen.y;\r\n\r\n        var canvas = this.canvas;\r\n        var context = this.context;\r\n        context.save();\r\n\r\n        var curStyle = this.parser.propToContextStyle(\r\n            this.defatultStyle,\r\n            pen.prop\r\n        );\r\n        curStyle.buildFont();\r\n        curStyle.syncFont(canvas, context);\r\n        curStyle.syncStyle(canvas, context);\r\n\r\n        // Underline\r\n        if ((curStyle.underlineThickness > 0) && (pen.width > 0)) {\r\n            this.drawUnderline(offsetX, offsetY, pen.width, curStyle);\r\n        }\r\n\r\n        // Text\r\n        if (pen.isTextPen) {\r\n            this.drawText(offsetX, offsetY, pen.text, curStyle);\r\n        }\r\n\r\n        // Image\r\n        if (pen.isImagePen) {\r\n            this.drawImage(offsetX, offsetY, pen.prop.img, curStyle);\r\n        }\r\n\r\n        context.restore();\r\n\r\n        if (pen.hasAreaMarker && (pen.width > 0)) {\r\n            this.hitAreaManager.add(\r\n                pen.prop.area,\r\n                offsetX, (offsetY - this.startYOffset),\r\n                pen.width, this.defatultStyle.lineHeight);\r\n        }\r\n    },\r\n\r\n    clear() {\r\n        var canvas = this.canvas;\r\n        this.context.clearRect(0, 0, canvas.width, canvas.height);\r\n    },\r\n\r\n    drawBackground(color) {\r\n        if (color === null) {\r\n            return;\r\n        }\r\n        this.context.fillStyle = color;\r\n        this.context.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n    },\r\n\r\n    drawUnderline(x, y, width, style) {\r\n        y += style.underlineOffset - (style.underlineThickness / 2);\r\n        if (this.autoRound) {\r\n            x = Math.round(x);\r\n            y = Math.round(y);\r\n        }\r\n\r\n        var context = this.context;\r\n        var savedLineCap = context.lineCap;\r\n        context.lineCap = 'butt';\r\n        context.beginPath();\r\n        context.strokeStyle = style.underlineColor;\r\n        context.lineWidth = style.underlineThickness;\r\n        context.moveTo(x, y);\r\n        context.lineTo((x + width), y);\r\n        context.stroke();\r\n        context.lineCap = savedLineCap;\r\n    },\r\n\r\n    drawText(x, y, text, style) {\r\n        if (this.autoRound) {\r\n            x = Math.round(x);\r\n            y = Math.round(y);\r\n        }\r\n\r\n        var context = this.context;\r\n        if (style.strokeThickness) {\r\n            style.syncShadow(context, style.shadowStroke);\r\n            context.strokeText(text, x, y);\r\n        }\r\n\r\n        if (style.color && (style.color !== 'none')) {\r\n            style.syncShadow(context, style.shadowFill);\r\n            context.fillText(text, x, y);\r\n        }\r\n    },\r\n\r\n    drawImage(x, y, imgKey, style) {\r\n        var imageManager = this.parent.imageManager;\r\n        var imgData = imageManager.get(imgKey);\r\n        var frame = imageManager.getFrame(imgKey);\r\n\r\n        x += imgData.left;\r\n        y += - this.startYOffset + imgData.y;\r\n        if (this.autoRound) {\r\n            x = Math.round(x);\r\n            y = Math.round(y);\r\n        }\r\n\r\n        var context = this.context;\r\n        context.drawImage(\r\n            frame.source.image,\r\n            frame.cutX, frame.cutY, frame.cutWidth, frame.cutHeight,\r\n            x, y, imgData.width, imgData.height\r\n        );\r\n    }\r\n\r\n}","class Stack {\r\n    constructor() {\r\n        this.items = [];\r\n    }\r\n\r\n    destroy() {\r\n        this.items.length = 0;\r\n        this.items = undefined;\r\n    }\r\n\r\n    pop() {\r\n        return (this.items.length > 0) ? this.items.pop() : null;\r\n    }\r\n\r\n    push(l) {\r\n        this.items.push(l);\r\n        return this;\r\n    }\r\n\r\n    pushMultiple(arr) {\r\n        this.items.push.apply(this.items, arr);\r\n        arr.length = 0;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport default Stack;","import Pool from './utils/struct/Stack.js';\r\nexport default Pool;","import CONST from '../const.js';\r\n\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\nconst NO_NEWLINE = CONST.NO_NEWLINE;\r\nconst RAW_NEWLINE = CONST.RAW_NEWLINE;\r\n\r\nclass Pen {\r\n    constructor(config) {\r\n        this.prop = {};\r\n        this.resetFromJSON(config);\r\n    }\r\n\r\n    resetFromJSON(o) { // (txt, x, y, width, prop, newLineMode, startIndex)\r\n        this.text = GetValue(o, 'text', '');\r\n        this.x = GetValue(o, 'x', 0);\r\n        this.y = GetValue(o, 'y', 0);\r\n        this.width = GetValue(o, 'width', 0);\r\n\r\n        var prop = GetValue(o, 'prop', null);\r\n        if (prop === null) {\r\n            prop = {};\r\n        }\r\n        this.prop = prop;\r\n        this.newLineMode = GetValue(o, 'newLineMode', 0);\r\n        this.startIndex = GetValue(o, 'startIndex', 0);\r\n    }\r\n\r\n    get plainText() {\r\n        var txt = this.text\r\n        if (this.newLineMode === RAW_NEWLINE) {\r\n            txt += \"\\n\";\r\n        }\r\n\r\n        return txt;\r\n    }\r\n\r\n    get wrapText() {\r\n        var txt = this.text;\r\n        if (this.newLineMode !== NO_NEWLINE) {\r\n            txt += \"\\n\";\r\n        }\r\n\r\n        return txt;\r\n    }\r\n\r\n    get rawTextLength() {\r\n        var len = this.text.length;\r\n        if (this.newLineMode === RAW_NEWLINE) {\r\n            len += 1;\r\n        }\r\n        return len;\r\n    }\r\n\r\n    get endIndex() {\r\n        return this.startIndex + this.rawTextLength;\r\n    }\r\n\r\n    get lastX() {\r\n        return this.x + this.width;\r\n    }\r\n\r\n    get isTextPen() {\r\n        return (this.text !== '');\r\n    }\r\n\r\n    get isImagePen() {\r\n        return !!this.prop.img;\r\n    }\r\n\r\n    get hasAreaMarker() {\r\n        return !!this.prop.area;\r\n    }\r\n};\r\n\r\nexport default Pen;","var Clear = function (obj) {\r\n    if (Array.isArray(obj)) {\r\n        obj.length = 0;\r\n    } else {\r\n        for (var key in obj) {\r\n            delete obj[key];\r\n        }\r\n    }\r\n}\r\nexport default Clear;","import Clear from './Clear.js';\r\n\r\n/**\r\n * Shallow Object Clone. Will not out nested objects.\r\n * @param {object} obj JSON object\r\n * @param {object} ret JSON object to return, set null to return a new object\r\n * @returns {object} this object\r\n */\r\nvar Clone = function (obj, out) {\r\n    var objIsArray = Array.isArray(obj);\r\n\r\n    if (out === undefined) {\r\n        out = (objIsArray) ? [] : {};\r\n    } else {\r\n        Clear(out);\r\n    }\r\n\r\n    if (objIsArray) {\r\n        out.length = obj.length;\r\n    }\r\n    for (var key in obj) {\r\n        out[key] = obj[key];\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nexport default Clone;\r\n","import Pool from '../../../../pool.js';\r\nimport Pen from './Pen.js';\r\nimport CONST from '../const.js';\r\nimport Clone from '../../../../utils/object/Clone.js';\r\nimport NOOP from '../../../../utils/object/NOOP.js';\r\n\r\nconst GetFastValue = Phaser.Utils.Objects.GetFastValue;\r\nconst NO_NEWLINE = CONST.NO_NEWLINE;\r\nconst WRAPPED_NEWLINE = CONST.WRAPPED_NEWLINE;\r\n\r\nvar PensPool = new Pool(); // default pens pool\r\nvar LinesPool = new Pool(); // default lines pool\r\nclass PenManager {\r\n    constructor(config) {\r\n        this.pens = []; // all pens\r\n        this.lines = []; // pens in lines [ [],[],[],.. ]\r\n        this.maxLinesWidth = undefined;\r\n\r\n        this.PensPool = GetFastValue(config, 'pensPool', PensPool);\r\n        this.LinesPool = GetFastValue(config, 'linesPool', LinesPool);\r\n        this.tagToText = GetFastValue(config, 'tagToText', NOOP);\r\n        this.tagToTextScope = GetFastValue(config, 'tagToTextScope', undefined);\r\n    }\r\n\r\n    destroy() {\r\n        this.freePens();\r\n        this.tagToText = undefined;\r\n        this.tagToTextScope = undefined;\r\n    }\r\n\r\n    freePens() {\r\n        for (var i = 0, len = this.lines.length; i < len; i++)\r\n            this.lines[i].length = 0;\r\n\r\n        this.PensPool.pushMultiple(this.pens);\r\n        this.LinesPool.pushMultiple(this.lines);\r\n        this.maxLinesWidth = undefined;\r\n    }\r\n\r\n    addTextPen(text, x, y, width, prop, newLineMode) {\r\n        var pen = this.PensPool.pop();\r\n        if (pen == null) {\r\n            pen = new Pen();\r\n        }\r\n        PEN_CONFIG.text = text;\r\n        PEN_CONFIG.x = x;\r\n        PEN_CONFIG.y = y;\r\n        PEN_CONFIG.width = width;\r\n        PEN_CONFIG.prop = prop;\r\n        PEN_CONFIG.newLineMode = newLineMode;\r\n        pen.resetFromJSON(PEN_CONFIG);\r\n        this.addPen(pen);\r\n        return this;\r\n    }\r\n\r\n    addImagePen(x, y, width, prop) {\r\n        this.addTextPen('', x, y, width, prop, NO_NEWLINE);\r\n        return this;\r\n    }\r\n\r\n    addNewLinePen() {\r\n        var previousPen = this.lastPen;\r\n        var x = (previousPen) ? previousPen.lastX : 0;\r\n        var y = (previousPen) ? previousPen.y : 0;\r\n        var prop = (previousPen) ? Clone(previousPen.prop) : null;\r\n        this.addTextPen('', x, y, 0, prop, WRAPPED_NEWLINE);\r\n        return this;\r\n    }\r\n\r\n    addPen(pen) {\r\n        var previousPen = this.lastPen;\r\n        if (previousPen == null) {\r\n            pen.startIndex = 0;\r\n        } else {\r\n            pen.startIndex = previousPen.endIndex;\r\n        }\r\n        this.pens.push(pen);\r\n\r\n        // maintan lines\r\n        var line = this.lastLine;\r\n        if (line == null) {\r\n            line = this.LinesPool.pop() || [];\r\n            this.lines.push(line);\r\n        }\r\n        line.push(pen);\r\n\r\n        // new line, add an empty line\r\n        if (pen.newLineMode !== NO_NEWLINE) {\r\n            line = this.LinesPool.pop() || [];\r\n            this.lines.push(line);\r\n        }\r\n        this.maxLinesWidth = undefined;\r\n    }\r\n\r\n    clone(targetPenManager) {\r\n        if (targetPenManager == null)\r\n            targetPenManager = new PenManager();\r\n\r\n        targetPenManager.freePens();\r\n\r\n        for (var li = 0, llen = this.lines.length; li < llen; li++) {\r\n            var pens = this.lines[li];\r\n            for (var pi = 0, plen = pens.length; pi < plen; pi++) {\r\n                var pen = pens[pi];\r\n                targetPenManager.addPen(\r\n                    pen.text,\r\n                    pen.x,\r\n                    pen.y,\r\n                    pen.width,\r\n                    Clone(pen.prop),\r\n                    pen.newLineMode\r\n                );\r\n            }\r\n        }\r\n\r\n        return targetPenManager;\r\n    }\r\n\r\n    get lastPen() {\r\n        return this.pens[this.pens.length - 1];\r\n    }\r\n\r\n    get lastLine() {\r\n        return this.lines[this.lines.length - 1];\r\n    }\r\n\r\n    getLineStartIndex(i) {\r\n        if (i >= this.lines.length) {\r\n            return this.getLineEndIndex(i);\r\n        } else {\r\n            var line = this.lines[i];\r\n            return (line && line[0]) ? line[0].startIndex : 0;\r\n        }\r\n    }\r\n\r\n    getLineEndIndex(i) {\r\n        if (i >= this.lines.length) {\r\n            i = this.lines.length - 1;\r\n        }\r\n        var li, hasLastPen = false,\r\n            line;\r\n        for (li = i; li >= 0; li--) {\r\n            line = this.lines[li];\r\n            hasLastPen = (line != null) && (line.length > 0);\r\n            if (hasLastPen) {\r\n                break;\r\n            }\r\n        }\r\n        if (!hasLastPen) {\r\n            return 0;\r\n        }\r\n\r\n        var lastPen = line[line.length - 1];\r\n        return lastPen.endIndex;\r\n    }\r\n\r\n    getLineWidth(i) {\r\n        var line = this.lines[i];\r\n        if (!line) {\r\n            return 0;\r\n        }\r\n\r\n        var lastPen = line[line.length - 1];\r\n        if (lastPen == null) {\r\n            return 0;\r\n        }\r\n\r\n        var lineWidth = lastPen.lastX; // start from 0\r\n        return lineWidth;\r\n    }\r\n\r\n    getMaxLineWidth() {\r\n        if (this.maxLinesWidth !== undefined) {\r\n            return this.maxLinesWidth;\r\n        }\r\n        var w, maxW = 0;\r\n        for (var i = 0, len = this.lines.length; i < len; i++) {\r\n            w = this.getLineWidth(i);\r\n            if (w > maxW) {\r\n                maxW = w;\r\n            }\r\n        }\r\n        this.maxLinesWidth = maxW;\r\n        return maxW;\r\n    }\r\n\r\n    getLineWidths() {\r\n        var result = [];\r\n        for (var i = 0, len = this.lines.length; i < len; i++) {\r\n            result.push(this.getLineWidth(i));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    get linesCount() {\r\n        return this.lines.length;\r\n    }\r\n\r\n    get plainText() {\r\n        var txt = \"\",\r\n            pens = this.pens;\r\n        for (var i = 0, len = pens.length; i < len; i++) {\r\n            txt += pens[i].plainText;\r\n        }\r\n\r\n        return txt;\r\n    }\r\n\r\n    get rawTextLength() {\r\n        var l = 0,\r\n            pens = this.pens;\r\n        for (var i = 0, len = this.pens.length; i < len; i++) {\r\n            l += pens[i].rawTextLength;\r\n        }\r\n\r\n        return l;\r\n    }\r\n\r\n    getSliceTagText(start, end, wrap) {\r\n        if (start === undefined) {\r\n            start = 0;\r\n        }\r\n        if (end === undefined) {\r\n            var lastPen = this.lastPen;\r\n            if (lastPen == null) {\r\n                return \"\";\r\n            }\r\n\r\n            end = lastPen.endIndex;\r\n        }\r\n        if (wrap === undefined) {\r\n            wrap = false;\r\n        }\r\n\r\n        var txt = \"\",\r\n            formatTxt,\r\n            pen, penTxt, penStartIdx, penEndIdx, isInRange;\r\n        var currentProp, previousProp;\r\n        for (var i = 0, len = this.pens.length; i < len; i++) {\r\n            pen = this.pens[i];\r\n            penEndIdx = pen.endIndex;\r\n            if (penEndIdx <= start) {\r\n                continue;\r\n            }\r\n            pen = this.pens[i];\r\n            penTxt = (!wrap) ? pen.plainText : pen.wrapText;\r\n            currentProp = pen.prop;\r\n            penStartIdx = pen.startIndex;\r\n\r\n            isInRange = (penStartIdx >= start) && (penEndIdx <= end);\r\n            if (!isInRange) {\r\n                penTxt = penTxt.substring(start - penStartIdx, end - penStartIdx);\r\n            }\r\n\r\n            if (this.tagToTextScope) {\r\n                txt += this.tagToText.call(this.tagToTextScope, penTxt, currentProp, previousProp);\r\n            } else {\r\n                txt += this.tagToText(penTxt, currentProp, previousProp);\r\n            }\r\n\r\n            previousProp = currentProp;\r\n            if (penEndIdx >= end) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return txt;\r\n    }\r\n};\r\n\r\nvar PEN_CONFIG = {};\r\n\r\nexport default PenManager;","import Pool from '../../../../pool.js';\r\n\r\nconst Rectangle = Phaser.Geom.Rectangle;\r\n\r\nvar RectanglePool = new Pool();\r\nclass HitAreaManager {\r\n    constructor() {\r\n        this.hitAreas = [];\r\n    }\r\n\r\n    destroy() {\r\n        this.clear();\r\n    }\r\n\r\n    clear() {\r\n        RectanglePool.pushMultiple(this.hitAreas);\r\n        return this;\r\n    }\r\n\r\n    add(key, x, y, width, height) {\r\n        var rectangle = RectanglePool.pop();\r\n        if (rectangle === null) {\r\n            rectangle = new Rectangle(x, y, width, height);\r\n        } else {\r\n            rectangle.setTo(x, y, width, height);\r\n        }\r\n        rectangle.key = key;\r\n        this.hitAreas.push(rectangle);\r\n        return this;\r\n    }\r\n\r\n    contains(x, y) {\r\n        var hitAreas = this.hitAreas, hitArea;\r\n        for (var i = 0, cnt = hitAreas.length; i < cnt; i++) {\r\n            hitArea = hitAreas[i];\r\n            if (hitArea.contains(x, y)) {\r\n                return hitArea.key;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    drawBounds(graphics, color, parent) {\r\n        if (color === undefined) {\r\n            color = 0xffffff;\r\n        }\r\n\r\n        if (parent) {\r\n            graphics\r\n                .save()\r\n                .scaleCanvas(parent.scaleX, parent.scaleY)\r\n                .rotateCanvas(parent.rotation)\r\n                .translateCanvas(parent.x, parent.y)\r\n        }\r\n\r\n        var hitAreas = this.hitAreas, hitArea;\r\n        for (var i = 0, cnt = hitAreas.length; i < cnt; i++) {\r\n            hitArea = hitAreas[i];\r\n            graphics.lineStyle(1, color).strokeRect(hitArea.x, hitArea.y, hitArea.width, hitArea.height);\r\n        }\r\n\r\n        if (parent) {\r\n            graphics\r\n                .restore()\r\n        }\r\n        return this;\r\n    }\r\n}\r\nexport default HitAreaManager;","var SetInteractive = function () {\r\n    this.parent\r\n        .on('pointerdown', function (pointer, localX, localY, event) {\r\n            FireEvent.call(this, 'areadown', pointer, localX, localY);\r\n        }, this)\r\n        .on('pointerup', function (pointer, localX, localY, event) {\r\n            FireEvent.call(this, 'areaup', pointer, localX, localY);\r\n        }, this)\r\n}\r\n\r\nvar FireEvent = function (eventName, pointer, localX, localY) {\r\n    var key = this.hitAreaManager.contains(localX, localY);\r\n    if (key === false) {\r\n        return;\r\n    }\r\n    this.parent.emit(`${eventName}-${key}`, pointer, localX, localY)\r\n    this.parent.emit(eventName, key, pointer, localX, localY)\r\n}\r\nexport default SetInteractive;","import Pool from '../../../../pool.js';\r\nimport CONST from '../const.js';\r\n\r\nconst NO_NEWLINE = CONST.NO_NEWLINE;\r\nconst RAW_NEWLINE = CONST.RAW_NEWLINE;\r\nconst WRAPPED_NEWLINE = CONST.WRAPPED_NEWLINE;\r\nconst NO_WRAP = CONST.NO_WRAP;\r\nconst WORD_WRAP = CONST.WORD_WRAP;\r\nconst CHAR_WRAP = CONST.CHAR_WRAP;\r\nconst splitRegExp = CONST.SPLITREGEXP;\r\n\r\nvar WRAP_RESULT = [];\r\nvar WrapText = function (text, getTextWidth, wrapMode, wrapWidth, offset) {\r\n    if (wrapWidth <= 0) {\r\n        wrapMode = NO_WRAP;\r\n    }\r\n\r\n    var retLines = WRAP_RESULT;\r\n    LinesPool.pushMultiple(retLines);\r\n\r\n    if (!text || !text.length) {\r\n        return retLines;\r\n    }\r\n\r\n    var lines = text.split(splitRegExp),\r\n        line, remainWidth, isLaseLine, newLineMode;\r\n    for (var i = 0, linesLen = lines.length; i < linesLen; i++) {\r\n        line = lines[i];\r\n        newLineMode = (i === (linesLen - 1)) ? NO_NEWLINE : RAW_NEWLINE;\r\n\r\n        if (wrapMode === NO_WRAP) {\r\n            var textWidth = getTextWidth(line);\r\n            retLines.push(LinesPool.newline(line, textWidth, newLineMode));\r\n            continue;\r\n        } else {\r\n            if (i === 0) {\r\n                remainWidth = wrapWidth - offset;\r\n            } else {\r\n                remainWidth = wrapWidth;\r\n            }\r\n        }\r\n\r\n        // short string testing\r\n        if (line.length <= 100) {\r\n            var textWidth = getTextWidth(line);\r\n            if (textWidth <= remainWidth) {\r\n                retLines.push(LinesPool.newline(line, textWidth, newLineMode));\r\n                continue;\r\n            }\r\n        }\r\n\r\n        // character mode\r\n        var tokenArray;\r\n        if (wrapMode === WORD_WRAP) {\r\n            // word mode\r\n            tokenArray = line.split(' ');\r\n        } else {\r\n            tokenArray = line;\r\n        }\r\n        var token;\r\n        var curLineText = '',\r\n            lineText = '',\r\n            currLineWidth, lineWidth = 0;\r\n        for (var j = 0, tokenLen = tokenArray.length; j < tokenLen; j++) {\r\n            token = tokenArray[j];\r\n\r\n            if (wrapMode === WORD_WRAP) {\r\n                curLineText += token;\r\n\r\n                if (j < (tokenLen - 1)) {\r\n                    curLineText += ' ';\r\n                }\r\n            } else {\r\n                curLineText += token;\r\n            }\r\n\r\n            currLineWidth = getTextWidth(curLineText);\r\n            if (currLineWidth > remainWidth) {\r\n                // new line\r\n                if (j === 0) {\r\n                    retLines.push(LinesPool.newline('', 0, WRAPPED_NEWLINE));\r\n                } else {\r\n                    retLines.push(LinesPool.newline(lineText, lineWidth, WRAPPED_NEWLINE));\r\n                    curLineText = token;\r\n                    if (wrapMode === WORD_WRAP) {\r\n                        if (j < (tokenLen - 1)) {\r\n                            curLineText += ' ';\r\n                        }\r\n                    }\r\n                    currLineWidth = getTextWidth(curLineText);\r\n                }\r\n\r\n                remainWidth = wrapWidth;\r\n            }\r\n\r\n            lineText = curLineText;\r\n            lineWidth = currLineWidth;\r\n        } // for token in tokenArray\r\n\r\n        // flush remain text\r\n        retLines.push(LinesPool.newline(lineText, lineWidth, newLineMode));\r\n\r\n    } // for each line in lines\r\n\r\n    return retLines;\r\n};\r\n\r\nvar LinesPool = new Pool();\r\nLinesPool.newline = function (text, width, newLineMode) {\r\n    var l = this.pop();\r\n    if (l === null) {\r\n        l = {};\r\n    }\r\n    l.text = text;\r\n    l.width = width;\r\n    l.newLineMode = newLineMode;\r\n    return l;\r\n};\r\n\r\nexport default WrapText;","import DrawMethods from './DrawMethods.js';\r\nimport PenManager from '../penmanger/PenManager.js';\r\nimport HitAreaManager from '../hitareamanager/HitAreaManager.js';\r\nimport SetInteractive from './SetInteractive.js';\r\nimport CONST from '../const.js';\r\nimport WrapText from './WrapText.js';\r\nimport Clone from '../../../../utils/object/Clone.js';\r\n\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\nconst NO_WRAP = CONST.NO_WRAP;\r\nconst NO_NEWLINE = CONST.NO_NEWLINE;\r\n\r\nclass CanvasText {\r\n    constructor(config) {\r\n        this.parent = config.parent;\r\n        this.context = GetValue(config, 'context', null);\r\n        this.canvas = this.context.canvas;\r\n        this.parser = GetValue(config, 'parser', null);\r\n        this.defatultStyle = GetValue(config, 'style', null);\r\n        this.autoRound = true;\r\n\r\n        this.pensPool = GetValue(config, 'pensPool', null);\r\n        this.penManager = this.newPenManager();\r\n        this._tmpPenManager = null;\r\n\r\n        this.hitAreaManager = new HitAreaManager();\r\n\r\n        var context = this.context;\r\n        this.getTextWidth = function (text) {\r\n            return context.measureText(text).width;\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.context = undefined;\r\n        this.canvas = undefined;\r\n        this.parser = undefined;\r\n        this.defatultStyle = undefined;\r\n\r\n        if (this.penManager) {\r\n            this.penManager.destroy();\r\n            this.penManager = undefined;\r\n        }\r\n        if (this._tmpPenManager) {\r\n            this._tmpPenManager.destroy();\r\n            this._tmpPenManager = undefined;\r\n        }\r\n        if (this.hitAreaManager) {\r\n            this.hitAreaManager.destroy();\r\n            this.hitAreaManager = undefined;\r\n        }\r\n    }\r\n\r\n    updatePenManager(text, wrapMode, wrapWidth, lineHeight, penManager) {\r\n        if (penManager === undefined) {\r\n            penManager = this.penManager;\r\n        }\r\n        penManager.freePens();\r\n        if (text === \"\") {\r\n            return penManager;\r\n        }\r\n\r\n        var canvas = this.canvas;\r\n        var context = this.context;\r\n\r\n        var cursorX = 0,\r\n            cursorY = 0;\r\n\r\n        var plainText, curProp, curStyle;\r\n        var match = this.parser.splitText(text),\r\n            result, wrapLines;\r\n        for (var i = 0, len = match.length; i < len; i++) {\r\n            result = this.parser.tagTextToProp(match[i], curProp);\r\n            plainText = result.plainText;\r\n            curProp = result.prop;\r\n\r\n            if (curProp.img) { // Image tag                \r\n                var imgWidth = this.imageManager.getOuterWidth(curProp.img);\r\n                if ((wrapWidth > 0) && (wrapMode !== NO_WRAP)) {  // Wrap mode\r\n                    if (wrapWidth < (cursorX + imgWidth)) {\r\n                        penManager.addNewLinePen();\r\n                        cursorY += lineHeight;\r\n                        cursorX = 0;\r\n                    }\r\n                }\r\n                penManager.addImagePen(cursorX, cursorY, imgWidth, Clone(curProp));\r\n                cursorX += imgWidth;\r\n\r\n            } else if (plainText !== '') {\r\n                // wrap text to lines\r\n                // Save the current context.\r\n                this.context.save();\r\n                curStyle = this.parser.propToContextStyle(\r\n                    this.defatultStyle,\r\n                    curProp\r\n                );\r\n                curStyle.buildFont();\r\n                curStyle.syncFont(canvas, context);\r\n                curStyle.syncStyle(canvas, context);\r\n                wrapLines = WrapText(plainText, this.getTextWidth, wrapMode, wrapWidth, cursorX);\r\n\r\n                // add pens\r\n                var n;\r\n                for (var j = 0, jLen = wrapLines.length; j < jLen; j++) {\r\n                    n = wrapLines[j];\r\n                    penManager.addTextPen(n.text, cursorX, cursorY, n.width, Clone(curProp), n.newLineMode);\r\n\r\n                    if (n.newLineMode !== NO_NEWLINE) {\r\n                        cursorX = 0;\r\n                        cursorY += lineHeight;\r\n                    } else {\r\n                        cursorX += n.width;\r\n                    }\r\n\r\n                }\r\n                this.context.restore();\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return penManager;\r\n    }\r\n\r\n    get startXOffset() {\r\n        var defatultStyle = this.defatultStyle;\r\n        return (defatultStyle.strokeThickness / 2);\r\n    }\r\n\r\n    get startYOffset() {\r\n        var defatultStyle = this.defatultStyle;\r\n        return (defatultStyle.strokeThickness / 2) + defatultStyle.metrics.ascent;\r\n    }\r\n\r\n    get lines() {\r\n        return this.penManager.lines;\r\n    }\r\n\r\n    get desplayLinesCount() {\r\n        var linesCount = this.penManager.linesCount,\r\n            maxLines = this.defatultStyle.maxLines;\r\n        if ((maxLines > 0) && (linesCount > maxLines)) {\r\n            linesCount = maxLines;\r\n        }\r\n        return linesCount;\r\n    }\r\n\r\n    get linesWidth() {\r\n        return this.penManager.getMaxLineWidth();\r\n    }\r\n\r\n    get linesHeight() {\r\n        var linesCount = this.desplayLinesCount;\r\n        var linesHeight = (this.defatultStyle.lineHeight * linesCount);\r\n        if (linesCount > 0) {\r\n            linesHeight -= this.defatultStyle.lineSpacing;\r\n        }\r\n        return linesHeight;\r\n    }\r\n\r\n    get imageManager() {\r\n        return this.parent.imageManager;\r\n    }\r\n\r\n    newPenManager() {\r\n        return new PenManager({\r\n            pensPool: this.pensPool,\r\n            tagToText: this.parser.propToTagText,\r\n            tagToTextScope: this.parser\r\n        });\r\n    }\r\n\r\n    get tmpPenManager() {\r\n        if (this._tmpPenManager === null) {\r\n            this._tmpPenManager = this.newPenManager();\r\n        }\r\n        return this._tmpPenManager;\r\n    }\r\n\r\n    getPlainText(text, start, end) {\r\n        var plainText;\r\n        if (text == null) {\r\n            plainText = this.penManager.plainText;\r\n        } else {\r\n            var m, match = this.parser.splitText(text, 1); // PLAINTEXTONLY_MODE\r\n            plainText = \"\";\r\n            for (var i = 0, len = match.length; i < len; i++) {\r\n                plainText += match[i];\r\n            }\r\n        }\r\n\r\n        if ((start != null) || (end != null)) {\r\n            if (start == null) {\r\n                start = 0;\r\n            }\r\n            if (end == null) {\r\n                end = plainText.length;\r\n            }\r\n            plainText = plainText.substring(start, end);\r\n        }\r\n\r\n        return plainText;\r\n    }\r\n\r\n    getPenManager(text, retPenManager) {\r\n        if (text === undefined) {\r\n            return this.copyPenManager(retPenManager, this.penManager);\r\n        }\r\n\r\n        if (retPenManager === undefined) {\r\n            retPenManager = this.newPenManager();\r\n        }\r\n\r\n        var defatultStyle = this.defatultStyle;\r\n        this.updatePenManager(\r\n            text,\r\n            defatultStyle.wrapMode,\r\n            defatultStyle.wrapWidth,\r\n            defatultStyle.lineHeight,\r\n            retPenManager\r\n        );\r\n        return retPenManager;\r\n    }\r\n\r\n    getText(text, start, end, wrap) {\r\n        if (text == null) {\r\n            return this.penManager.getSliceTagText(start, end, wrap);\r\n        }\r\n\r\n        var penManager = this.tmpPenManager;\r\n        var defatultStyle = this.defatultStyle;\r\n        this.updatePenManager(\r\n            text,\r\n            defatultStyle.wrapMode,\r\n            defatultStyle.wrapWidth,\r\n            defatultStyle.lineHeight,\r\n            penManager\r\n        );\r\n\r\n        return penManager.getSliceTagText(start, end, wrap);\r\n    }\r\n\r\n    copyPenManager(ret, src) {\r\n        if (src === undefined) {\r\n            src = this.penManager;\r\n        }\r\n        return src.copy(ret);\r\n    }\r\n\r\n    getTextWidth(penManager) {\r\n        if (penManager === undefined) {\r\n            penManager = this.penManager;\r\n        }\r\n\r\n        return penManager.getMaxLineWidth();\r\n    }\r\n\r\n    getLastPen(penManager) {\r\n        if (penManager === undefined) {\r\n            penManager = this.penManager;\r\n        }\r\n\r\n        return penManager.lastPen;\r\n    }\r\n};\r\n\r\nvar methods = {\r\n    setInteractive: SetInteractive,\r\n}\r\n\r\nObject.assign(\r\n    CanvasText.prototype,\r\n    DrawMethods,\r\n    methods\r\n);\r\n\r\nexport default CanvasText;","const GetValue = Phaser.Utils.Objects.GetValue;\r\n\r\nclass ImageManager {\r\n    constructor(textureManager) {\r\n        this.textureManager = textureManager;\r\n        this.images = {};\r\n    }\r\n\r\n    add(key, config) {\r\n        if (typeof (key) === 'string') {\r\n            this._add(key, config);\r\n        } else if (Array.isArray(key)) {\r\n            var data = key;\r\n            for (var i = 0, cnt = data.length; i < cnt; i++) {\r\n                this._add(data[i]);\r\n            }\r\n        } else {\r\n            var data = key;\r\n            for (var key in data) {\r\n                this._add(key, data[key]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    _add(key, config) {\r\n        if (config === undefined) {\r\n            config = {\r\n                key: key\r\n            }\r\n        }\r\n\r\n        var textureKey = config.key, frameKey = config.frame;\r\n        var width = config.width, height = config.height;\r\n\r\n        if ((width === undefined) || (height === undefined)) {\r\n            var frame = this.textureManager.getFrame(textureKey, frameKey);\r\n            var frameWidth = (frame) ? frame.cutWidth : 0;\r\n            var frameHeight = (frame) ? frame.cutHeight : 0;\r\n            if ((width === undefined) && (height === undefined)) {\r\n                width = frameWidth;\r\n                height = frameHeight;\r\n            } else if (width === undefined) {\r\n                width = frameWidth * (height / frameHeight);\r\n            } else if (height === undefined) {\r\n                height = frameHeight * (width / frameWidth);\r\n            }\r\n        }\r\n\r\n        this.images[key] = {\r\n            key: textureKey,\r\n            frame: frameKey,\r\n            width: width,\r\n            height: height,\r\n            y: GetValue(config, 'y', 0),\r\n            left: GetValue(config, 'left', 0),\r\n            right: GetValue(config, 'right', 0)\r\n        }\r\n    }\r\n\r\n    remove(key) {\r\n        if (this.images.hasOwnProperty(key)) {\r\n            delete this.images[key];\r\n        }\r\n        return this;\r\n    }\r\n\r\n    get(key) {\r\n        if (!this.images.hasOwnProperty(key)) {\r\n            if (this.textureManager.exists(key)) {\r\n                this.add(key);\r\n            }\r\n        }\r\n        return this.images[key];\r\n    }\r\n\r\n    getOuterWidth(key) {\r\n        var data = this.get(key);\r\n        return (data) ? (data.width + data.left + data.right) : 0;\r\n    }\r\n\r\n    getFrame(key) {\r\n        var data = this.get(key);\r\n        return (data) ? this.textureManager.getFrame(data.key, data.frame) : undefined;\r\n    }\r\n\r\n    hasTexture(key) {\r\n        return !!this.getFrame(key);\r\n    }\r\n}\r\nexport default ImageManager;","import ImageManager from './ImageManager.js';\r\n\r\nvar globImageManager;\r\n\r\nexport default function(textureManager) {\r\n    if (globImageManager === undefined) {\r\n        globImageManager = new ImageManager(textureManager);\r\n    }\r\n    return globImageManager;\r\n}","import Render from './render/Render.js';\r\nimport TextStyle from './textstyle/TextStyle.js'; // extended\r\nimport CanvasTextKlass from './canvastext/CanvasText.js';\r\nimport Pool from '../../../pool.js';\r\nimport CONST from './const.js';\r\nimport GetGlobImageManager from './imagemanager/GetGlobImageManager.js';\r\n\r\nconst AddToDOM = Phaser.DOM.AddToDOM;\r\nconst CanvasPool = Phaser.Display.Canvas.CanvasPool;\r\nconst GameObject = Phaser.GameObjects.GameObject;\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\nconst RemoveFromDOM = Phaser.DOM.RemoveFromDOM;\r\nconst SPLITREGEXP = CONST.SPLITREGEXP;\r\n\r\nvar PensPools = {};\r\n\r\nclass Text extends GameObject {\r\n    constructor(scene, x, y, text, style, type, parser) {\r\n        if (x === undefined) {\r\n            x = 0;\r\n        }\r\n        if (y === undefined) {\r\n            y = 0;\r\n        }\r\n\r\n        super(scene, type);\r\n\r\n        this.renderer = scene.sys.game.renderer;\r\n\r\n        this.setPosition(x, y);\r\n        this.setOrigin(0, 0);\r\n        this.initPipeline();\r\n\r\n        this.canvas = CanvasPool.create(this);\r\n\r\n        this.context = this.canvas.getContext('2d');\r\n\r\n        if (style) {\r\n            // Override align\r\n            if (style.hasOwnProperty('align')) {\r\n                var halign = style.align;\r\n                delete style.align;\r\n                style.halign = halign;\r\n            }\r\n        }\r\n        this.style = new TextStyle(this, style);\r\n\r\n        this.autoRound = true;\r\n\r\n        this._text = undefined;\r\n\r\n        this.padding = {\r\n            left: 0,\r\n            right: 0,\r\n            top: 0,\r\n            bottom: 0\r\n        };\r\n\r\n        this.width = 1;\r\n\r\n        this.height = 1;\r\n\r\n        this.dirty = false;\r\n\r\n        //  If resolution wasn't set, then we get it from the game config\r\n        if (this.style.resolution === 0) {\r\n            this.style.resolution = scene.sys.game.config.resolution;\r\n        }\r\n\r\n        this._crop = this.resetCropObject();\r\n\r\n        //  Create a Texture for this Text object\r\n        this.texture = scene.sys.textures.addCanvas(null, this.canvas, true);\r\n\r\n        //  Get the frame\r\n        this.frame = this.texture.get();\r\n\r\n        //  Set the resolution\r\n        this.frame.source.resolution = this.style.resolution;\r\n\r\n        if (this.renderer && this.renderer.gl) {\r\n            //  Clear the default 1x1 glTexture, as we override it later\r\n\r\n            this.renderer.deleteTexture(this.frame.source.glTexture);\r\n\r\n            this.frame.source.glTexture = null;\r\n        }\r\n\r\n        if (!PensPools.hasOwnProperty(type)) {\r\n            PensPools[type] = new Pool();\r\n        }\r\n        this.canvasText = new CanvasTextKlass({\r\n            parent: this,\r\n            context: this.context,\r\n            parser: parser,\r\n            style: this.style,\r\n            pensPool: PensPools[type]\r\n        });\r\n\r\n        //this.initRTL();\r\n\r\n        if (style && style.padding) {\r\n            this.setPadding(style.padding);\r\n        }\r\n\r\n        this.setText(text);\r\n\r\n        scene.sys.game.events.on('contextrestored', function () {\r\n            this.dirty = true;\r\n        }, this);\r\n    }\r\n\r\n    set text(value) {\r\n        this.setText(value);\r\n    }\r\n    get text() {\r\n        return this._text;\r\n    }\r\n\r\n    initRTL() {\r\n        if (!this.style.rtl) {\r\n            return;\r\n        }\r\n\r\n        //  Here is where the crazy starts.\r\n        //\r\n        //  Due to browser implementation issues, you cannot fillText BiDi text to a canvas\r\n        //  that is not part of the DOM. It just completely ignores the direction property.\r\n\r\n        this.canvas.dir = 'rtl';\r\n\r\n        //  Experimental atm, but one day ...\r\n        this.context.direction = 'rtl';\r\n\r\n        //  Add it to the DOM, but hidden within the parent canvas.\r\n        this.canvas.style.display = 'none';\r\n\r\n        AddToDOM(this.canvas, this.scene.sys.canvas);\r\n\r\n        //  And finally we set the x origin\r\n        this.originX = 1;\r\n    }\r\n\r\n    setText(value) {\r\n        if (!value && value !== 0) {\r\n            value = '';\r\n        }\r\n\r\n        if (Array.isArray(value)) {\r\n            value = value.join('\\n');\r\n        }\r\n\r\n        if (value !== this._text) {\r\n            this._text = value.toString();\r\n\r\n            this.updateText();\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    setStyle(style) {\r\n        return this.style.setStyle(style);\r\n    }\r\n\r\n    setFont(font) {\r\n        return this.style.setFont(font);\r\n    }\r\n\r\n    setFontFamily(family) {\r\n        return this.style.setFontFamily(family);\r\n    }\r\n\r\n    setFontSize(size) {\r\n        return this.style.setFontSize(size);\r\n    }\r\n\r\n    setFontStyle(style) {\r\n        return this.style.setFontStyle(style);\r\n    }\r\n\r\n    setFixedSize(width, height) {\r\n        return this.style.setFixedSize(width, height);\r\n    }\r\n\r\n    setBackgroundColor(color) {\r\n        return this.style.setBackgroundColor(color);\r\n    }\r\n\r\n    setFill(color) {\r\n        return this.style.setFill(color);\r\n    }\r\n\r\n    setColor(color) {\r\n        return this.style.setColor(color);\r\n    }\r\n\r\n    setStroke(color, thickness) {\r\n        return this.style.setStroke(color, thickness);\r\n    }\r\n\r\n    setShadow(x, y, color, blur, shadowStroke, shadowFill) {\r\n        return this.style.setShadow(x, y, color, blur, shadowStroke, shadowFill);\r\n    }\r\n\r\n    setShadowOffset(x, y) {\r\n        return this.style.setShadowOffset(x, y);\r\n    }\r\n\r\n    setShadowColor(color) {\r\n        return this.style.setShadowColor(color);\r\n    }\r\n\r\n    setShadowBlur(blur) {\r\n        return this.style.setShadowBlur(blur);\r\n    }\r\n\r\n    setShadowStroke(enabled) {\r\n        return this.style.setShadowStroke(enabled);\r\n    }\r\n\r\n    setShadowFill(enabled) {\r\n        return this.style.setShadowFill(enabled);\r\n    }\r\n\r\n    setWrapMode(mode) {\r\n        return this.style.setWrapMode(mode);\r\n    }\r\n\r\n    setWrapWidth(width) {\r\n        return this.style.setWrapWidth(width);\r\n    }\r\n\r\n    setAlign(align) {\r\n        return this.style.setHAlign(align);\r\n    }\r\n\r\n    setLineSpacing(value) {\r\n        return this.style.setLineSpacing(value);\r\n    }\r\n\r\n    setPadding(left, top, right, bottom) {\r\n        if (typeof left === 'object') {\r\n            var config = left;\r\n\r\n            //  If they specify x and/or y this applies to all\r\n            var x = GetValue(config, 'x', null);\r\n\r\n            if (x !== null) {\r\n                left = x;\r\n                right = x;\r\n            } else {\r\n                left = GetValue(config, 'left', 0);\r\n                right = GetValue(config, 'right', left);\r\n            }\r\n\r\n            var y = GetValue(config, 'y', null);\r\n\r\n            if (y !== null) {\r\n                top = y;\r\n                bottom = y;\r\n            } else {\r\n                top = GetValue(config, 'top', 0);\r\n                bottom = GetValue(config, 'bottom', top);\r\n            }\r\n        } else {\r\n            if (left === undefined) {\r\n                left = 0;\r\n            }\r\n            if (top === undefined) {\r\n                top = left;\r\n            }\r\n            if (right === undefined) {\r\n                right = left;\r\n            }\r\n            if (bottom === undefined) {\r\n                bottom = top;\r\n            }\r\n        }\r\n\r\n        this.padding.left = left;\r\n        this.padding.top = top;\r\n        this.padding.right = right;\r\n        this.padding.bottom = bottom;\r\n\r\n        return this.updateText(false);\r\n    }\r\n\r\n    setResolution(value) {\r\n        return this.style.setResolution(value);\r\n    }\r\n\r\n    setMaxLines(max) {\r\n        return this.style.setMaxLines(max);\r\n    }\r\n\r\n    updateText(runWrap) {\r\n        if (runWrap === undefined) {\r\n            runWrap = true;\r\n        }\r\n        var canvasText = this.canvasText;\r\n\r\n        // wrap text to pens\r\n        var style = this.style;\r\n        if (runWrap) {\r\n            canvasText.updatePenManager(\r\n                this._text,\r\n                style.wrapMode,\r\n                style.wrapWidth,\r\n                style.lineHeight\r\n            );\r\n        }\r\n\r\n        // resize\r\n        var padding = this.padding;\r\n        var textWidth, textHeight;\r\n        if (style.fixedWidth === 0) {\r\n            this.width = canvasText.linesWidth + padding.left + padding.right;\r\n            textWidth = canvasText.linesWidth;\r\n        }\r\n        else {\r\n            this.width = style.fixedWidth;\r\n            textWidth = this.width - padding.left - padding.right;\r\n            if (textWidth < canvasText.linesWidth) {\r\n                textWidth = canvasText.linesWidth;\r\n            }\r\n        }\r\n        if (style.fixedHeight === 0) {\r\n            this.height = canvasText.linesHeight + padding.top + padding.bottom;\r\n            textHeight = canvasText.linesHeight;\r\n        }\r\n        else {\r\n            this.height = style.fixedHeight;\r\n            textHeight = this.height - padding.top - padding.bottom;\r\n            if (textHeight < canvasText.linesHeight) {\r\n                textHeight = canvasText.linesHeight;\r\n            }\r\n        }\r\n\r\n        var w = this.width;\r\n        var h = this.height;\r\n\r\n        this.updateDisplayOrigin();\r\n\r\n        var resolution = style.resolution;\r\n        w *= resolution;\r\n        h *= resolution;\r\n\r\n        w = Math.max(Math.ceil(w), 1);\r\n        h = Math.max(Math.ceil(h), 1);\r\n\r\n        var canvas = this.canvas;\r\n        var context = this.context;\r\n        if (canvas.width !== w || canvas.height !== h) {\r\n            canvas.width = w;\r\n            canvas.height = h;\r\n            this.frame.setSize(w, h);\r\n        } else {\r\n            context.clearRect(0, 0, w, h);\r\n        }\r\n\r\n        context.save();\r\n        context.scale(resolution, resolution);\r\n\r\n        // draw\r\n        canvasText.draw(\r\n            padding.left,\r\n            padding.top,\r\n            textWidth,\r\n            textHeight\r\n        );\r\n\r\n        context.restore();\r\n\r\n        if (this.renderer.gl) {\r\n            this.frame.source.glTexture = this.renderer.canvasToTexture(canvas, this.frame.source.glTexture, true);\r\n            this.frame.glTexture = this.frame.source.glTexture;\r\n        }\r\n\r\n        this.dirty = true;\r\n\r\n        var input = this.input;\r\n\r\n        if (input && !input.customHitArea) {\r\n            input.hitArea.width = this.width;\r\n            input.hitArea.height = this.height;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    getTextMetrics() {\r\n        return this.style.getTextMetrics();\r\n    }\r\n\r\n    toJSON() {\r\n        var out = Components.ToJSON(this);\r\n\r\n        //  Extra Text data is added here\r\n\r\n        var data = {\r\n            autoRound: this.autoRound,\r\n            text: this._text,\r\n            style: this.style.toJSON(),\r\n            resolution: this.resolution,\r\n            padding: {\r\n                left: this.padding.left,\r\n                right: this.padding.right,\r\n                top: this.padding.top,\r\n                bottom: this.padding.bottom\r\n            }\r\n        };\r\n\r\n        out.data = data;\r\n\r\n        return out;\r\n    }\r\n\r\n    preDestroy() {\r\n        if (this.style.rtl) {\r\n            RemoveFromDOM(this.canvas);\r\n        }\r\n\r\n        CanvasPool.remove(this.canvas);\r\n        this.canvasText.destroy();\r\n    }\r\n\r\n    setInteractive(shape, callback, dropZone) {\r\n        GameObject.prototype.setInteractive.call(this, shape, callback, dropZone);\r\n        this.canvasText.setInteractive();\r\n        return this;\r\n    }\r\n\r\n    getWrappedText(text, start, end) {\r\n        text = this.canvasText.getText(text, start, end, true);\r\n        return text.split(SPLITREGEXP);\r\n    }\r\n\r\n    getPlainText(text, start, end) {\r\n        return this.canvasText.getPlainText(text, start, end);\r\n    }\r\n\r\n    getText(text, start, end) {\r\n        return this.canvasText.getText(text, start, end, false);\r\n    }\r\n\r\n    getSubString(text, start, end) {\r\n        return this.getText(text, start, end);\r\n    }\r\n\r\n    copyPenManager(penManager) {\r\n        return this.canvasText.copyPenManager(penManager);\r\n    }\r\n\r\n    getPenManager(text, penManager) {\r\n        return this.canvasText.getPenManager(text, penManager);\r\n    }\r\n\r\n    setSize(width, height) {\r\n        return this.setFixedSize(width, height);\r\n    }\r\n\r\n    resize(width, height) {\r\n        return this.setFixedSize(width, height);\r\n    }\r\n\r\n    set lineSpacing(value) {\r\n        this.setLineSpacing(value);\r\n    }\r\n    get lineSpacing() {\r\n        return this.style.lineSpacing;\r\n    }\r\n\r\n    get imageManager() {\r\n        return GetGlobImageManager(this.scene.textures);\r\n    }\r\n\r\n    addImage(key, config) {\r\n        this.imageManager.add(key, config);\r\n        return this;\r\n    }\r\n\r\n    drawAreaBounds(graphics, color) {\r\n        this.canvasText.hitAreaManager.drawBounds(graphics, color, this);\r\n        return this;\r\n    }\r\n}\r\n\r\nconst Components = Phaser.GameObjects.Components;\r\nPhaser.Class.mixin(Text,\r\n    [\r\n        Components.Alpha,\r\n        Components.BlendMode,\r\n        Components.ComputedSize,\r\n        Components.Crop,\r\n        Components.Depth,\r\n        Components.Flip,\r\n        Components.GetBounds,\r\n        Components.Mask,\r\n        Components.Origin,\r\n        Components.Pipeline,\r\n        Components.ScrollFactor,\r\n        Components.Tint,\r\n        Components.Transform,\r\n        Components.Visible,\r\n        Render\r\n    ]\r\n);\r\n\r\nexport default Text;","import TextStyle from '../textbase/textstyle/TextStyle.js';\r\n\r\nvar GETPROP_RESULT = {\r\n    plainText: null,\r\n    prevProp: null\r\n};\r\n\r\nvar STYLE_RESULT = new TextStyle();\r\nvar PROPLIST = [];\r\n\r\nclass parser {\r\n    constructor(tags) {\r\n        if (tags === undefined) {\r\n            tags = {};\r\n        }\r\n        this.tags = tags;\r\n    }\r\n\r\n    addTag(name, prop) {\r\n        this.tags[name] = prop;\r\n    }\r\n\r\n    splitText(text, mode) {\r\n        var result = [];\r\n        var arr, m, charIdx = 0,\r\n            totalLen = text.length,\r\n            matchStart = totalLen;\r\n        var innerMatch;\r\n        while (true) {\r\n            arr = RE_SPLITTEXT.exec(text);\r\n            if (!arr) {\r\n                break;\r\n            }\r\n\r\n            m = arr[0];\r\n            matchStart = RE_SPLITTEXT.lastIndex - m.length;\r\n\r\n            if (charIdx < matchStart) {\r\n                result.push(text.substring(charIdx, matchStart));\r\n            }\r\n            if (mode === undefined) {\r\n                result.push(m);\r\n            } else if (mode === 1) { // RAWTEXTONLY_MODE\r\n                if (RE_CLASS_HEADER.test(m)) {\r\n                    innerMatch = m.match(RE_CLASS);\r\n                    result.push(innerMatch[2]);\r\n                } else if (RE_STYLE_HEADER.test(m)) {\r\n                    innerMatch = m.match(RE_STYLE);\r\n                    result.push(innerMatch[2]);\r\n                }\r\n            }\r\n\r\n            charIdx = RE_SPLITTEXT.lastIndex;\r\n        }\r\n\r\n\r\n        if (charIdx < totalLen) {\r\n            result.push(text.substring(charIdx, totalLen));\r\n        }\r\n        return result; // [text,...]\r\n    }\r\n\r\n    tagTextToProp(text, prevProp) {\r\n        var plainText, propOut;\r\n        if (RE_CLASS_HEADER.test(text)) {\r\n            var innerMatch = text.match(RE_CLASS);\r\n            if (innerMatch != null) {\r\n                var name = innerMatch[1];\r\n                var tags = this.tags;\r\n                if (tags.hasOwnProperty(name)) {\r\n                    propOut = tags[name];\r\n                } else {\r\n                    propOut = {};\r\n                }\r\n                propOut._class = name;\r\n                plainText = innerMatch[2];\r\n            }\r\n        } else if (RE_STYLE_HEADER.test(text)) {\r\n            var innerMatch = text.match(RE_STYLE);\r\n            if (innerMatch != null) {\r\n                var style = innerMatch[1];\r\n                propOut = styleToProp(style);\r\n                propOut._style = style;\r\n                plainText = innerMatch[2];\r\n            }\r\n        }\r\n\r\n        if (plainText == null) {\r\n            plainText = text;\r\n        }\r\n\r\n        if (propOut == null) {\r\n            propOut = {};\r\n        }\r\n\r\n        var result = GETPROP_RESULT;\r\n        result.plainText = plainText;\r\n        result.prop = propOut;\r\n        return result;\r\n    }\r\n\r\n    propToContextStyle(defaultStyle, prop) {\r\n        var result = STYLE_RESULT;\r\n        if (!prop.hasOwnProperty('img')) {\r\n            result.image = null;\r\n\r\n            if (prop.hasOwnProperty('family') || prop.hasOwnProperty('fontFamily') || prop.hasOwnProperty('font-family')) {\r\n                var family = (prop.hasOwnProperty('family')) ? prop.family :\r\n                    (prop.hasOwnProperty('fontFamily')) ? prop.fontFamily :\r\n                    prop['font-family'];\r\n                result.fontFamily = family;\r\n            } else {\r\n                result.fontFamily = defaultStyle.fontFamily;\r\n            }\r\n\r\n            if (prop.hasOwnProperty('size') || prop.hasOwnProperty('fontSize') || prop.hasOwnProperty('font-size')) {\r\n                var size = (prop.hasOwnProperty('size')) ? prop.size :\r\n                    (prop.hasOwnProperty('fontSize')) ? prop.fontSize :\r\n                    prop['font-size'];\r\n                if (typeof (size) === 'number') {\r\n                    size = size.toString() + 'px';\r\n                }\r\n                result.fontSize = size;\r\n            } else {\r\n                result.fontSize = defaultStyle.fontSize;\r\n            }\r\n\r\n            if (prop.hasOwnProperty('style') || prop.hasOwnProperty('fontStyle') || prop.hasOwnProperty('font-style')) {\r\n                var fontStyle = (prop.hasOwnProperty('style')) ? prop.style :\r\n                    (prop.hasOwnProperty('fontStyle')) ? prop.fontStyle :\r\n                    prop['font-style'];\r\n                result.fontStyle = fontStyle;\r\n            } else {\r\n                result.fontStyle = defaultStyle.fontStyle;\r\n            }\r\n\r\n            if (prop.hasOwnProperty('color') || prop.hasOwnProperty('font-color')) {\r\n                var color = (prop.hasOwnProperty('color')) ? prop.color : prop['font-color'];\r\n                result.color = prop.color;\r\n            } else {\r\n                result.color = defaultStyle.color;\r\n            }\r\n\r\n            if (prop.hasOwnProperty('stroke')) {\r\n                var stroke = prop.stroke; // {color, thinkness}\r\n                result.stroke = (stroke.hasOwnProperty('color')) ? stroke.color : defaultStyle.stroke;\r\n                result.strokeThickness = (stroke.hasOwnProperty('thinkness')) ? stroke.thinkness : defaultStyle.strokeThickness;\r\n            } else {\r\n                result.stroke = defaultStyle.stroke;\r\n                result.strokeThickness = defaultStyle.strokeThickness;\r\n            }\r\n        } else {\r\n            result.image = prop.img;\r\n        }\r\n\r\n        if (prop.hasOwnProperty('shadow')) {\r\n            var shadow = prop.shadow; // {color, offsetX, offsetY, blur}\r\n            result.shadowColor = (shadow.hasOwnProperty('color')) ? shadow.color : defaultStyle.shadowColor;\r\n            result.shadowOffsetX = (shadow.hasOwnProperty('offsetX')) ? shadow.offsetX : defaultStyle.shadowOffsetX;\r\n            result.shadowOffsetY = (shadow.hasOwnProperty('offsetY')) ? shadow.offsetY : defaultStyle.shadowOffsetY;\r\n            result.shadowBlur = (shadow.hasOwnProperty('blur')) ? shadow.blur : defaultStyle.shadowBlur;\r\n            result.shadowStroke = true;\r\n            result.shadowFill = true;\r\n        } else {\r\n            result.shadowColor = defaultStyle.shadowColor;\r\n            result.shadowOffsetX = defaultStyle.shadowOffsetX;\r\n            result.shadowOffsetY = defaultStyle.shadowOffsetY;\r\n            result.shadowBlur = defaultStyle.shadowBlur;\r\n            result.shadowStroke = defaultStyle.shadowStroke;\r\n            result.shadowFill = defaultStyle.shadowFill;\r\n        }\r\n\r\n        if (prop.hasOwnProperty('u') || prop.hasOwnProperty('underline')) {\r\n            var u = (prop.hasOwnProperty('u')) ? prop.u : prop.underline; // {color, thinkness, offset}\r\n            result.underlineColor = (u.hasOwnProperty('color')) ? u.color : defaultStyle.underlineColor;\r\n            result.underlineThickness = (u.hasOwnProperty('thinkness')) ? u.thinkness : defaultStyle.underlineThickness;\r\n            result.underlineOffset = (u.hasOwnProperty('offset')) ? u.offset : defaultStyle.underlineOffset;\r\n        } else {\r\n            result.underlineColor = defaultStyle.underlineColor;\r\n            result.underlineThickness = defaultStyle.underlineThickness;\r\n            result.underlineOffset = defaultStyle.underlineOffset;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    propToTagText(text, prop, prevProp) {\r\n        if (prop.hasOwnProperty('_class')) { // class mode\r\n            if (text === '') {\r\n                if (this.isTextTag(prop._class)) {\r\n                    return '';\r\n                }\r\n            }\r\n            return \"<class='\" + prop._class + \"'>\" + text + \"</class>\";\r\n        } else if (prop.hasOwnProperty('_style')) { // class mode\r\n            return \"<style='\" + prop._style + \"'>\" + text + \"</style>\";\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.tags = undefined;\r\n    }\r\n\r\n    isTextTag(tagName) {\r\n        var tag = this.tags[tagName];\r\n        if (tag) {\r\n            return (tag.img == null);\r\n        } else { // tag not found\r\n            return false;\r\n        }\r\n    }\r\n};\r\n\r\nvar styleToProp = function (s) {\r\n    s = s.split(\";\");\r\n\r\n    var result = {},\r\n        prop, k, v;\r\n    for (var i = 0, slen = s.length; i < slen; i++) {\r\n        prop = s[i].split(\":\");\r\n        k = prop[0], v = prop[1];\r\n        if (isEmpty(k) || isEmpty(v)) {\r\n            continue;\r\n        }\r\n\r\n        switch (k) {\r\n            case 'stroke':\r\n                var stroke = v.split(' '); // stroke:blue 1px\r\n                var len = stroke.length;\r\n                v = {};\r\n                if (len >= 1) {\r\n                    v.color = stroke[0];\r\n                }\r\n                if (len >= 2) {\r\n                    v.thinkness = parseInt(stroke[1].replace('px', ''));\r\n                }\r\n                break;\r\n            case 'shadow':\r\n                var shadow = v.split(' '); // shadow:blue 2px 2px 2px\r\n                var len = shadow.length;\r\n                v = {};\r\n                if (len >= 1) {\r\n                    v.color = shadow[0];\r\n                }\r\n                if (len >= 2) {\r\n                    v.offsetX = parseInt(shadow[1].replace('px', ''));\r\n                }\r\n                if (len >= 3) {\r\n                    v.offsetY = parseInt(shadow[2].replace('px', ''));\r\n                }\r\n                if (len >= 4) {\r\n                    v.blur = parseInt(shadow[3].replace('px', ''));\r\n                }\r\n                break;\r\n            case 'u':\r\n            case 'underline': // underline:blue 3px -1px\r\n                var u = v.split(' ');\r\n                var len = u.length;\r\n                v = {};\r\n                if (len >= 1) {\r\n                    v.color = u[0];\r\n                }\r\n                if (len >= 2) {\r\n                    v.thinkness = parseInt(u[1].replace('px', ''));\r\n                }\r\n                if (len >= 3) {\r\n                    v.offset = parseInt(u[2].replace('px', ''));\r\n                }\r\n                break;\r\n        }\r\n        result[k] = v;\r\n    }\r\n    return result;\r\n};\r\n\r\nvar isEmpty = function (s) {\r\n    // Remove white spaces.\r\n    s = s.replace(RE_SPACE, '');\r\n    return (s.length === 0);\r\n};\r\n\r\nvar RE_SPLITTEXT = /<\\s*class=[\"|']([^\"|']+)[\"|']\\s*\\>([\\s\\S]*?)<\\s*\\/class\\s*\\>|<\\s*style=[\"|']([^\"|']+)[\"|']\\s*\\>([\\s\\S]*?)<\\s*\\/style\\s*\\>/g;\r\nvar RE_CLASS_HEADER = /<\\s*class=/i;\r\nvar RE_CLASS = /<\\s*class=[\"|']([^\"|']+)[\"|']\\s*\\>([\\s\\S]*?)<\\s*\\/class\\s*\\>/;\r\nvar RE_STYLE_HEADER = /<\\s*style=/i;\r\nvar RE_STYLE = /<\\s*style=[\"|']([^\"|']+)[\"|']\\s*\\>([\\s\\S]*?)<\\s*\\/style\\s*\\>/;\r\nvar RE_SPACE = /^\\s+|\\s+$/;\r\n\r\nexport default parser;","import Text from '../textbase/Text.js';\r\nimport ParserKlass from './Parser.js';\r\n\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\n\r\nclass TagText extends Text {\r\n    constructor(scene, x, y, text, style) {\r\n        var tags = GetValue(style, 'tags', undefined);\r\n        var parser = new ParserKlass(tags);\r\n        super(scene, x, y, text, style, 'rexTagText', parser);\r\n        this.parser = parser;\r\n    }\r\n\r\n    addTag(name, prop) {\r\n        this.parser.addTag(name, prop);\r\n        return this.updateText(true);\r\n    }\r\n\r\n    addTags(tags) {\r\n        for(var name in tags){\r\n            this.parser.addTag(name, tags[name]);\r\n        }\r\n        return this.updateText(true);\r\n    }\r\n\r\n    preDestroy() {\r\n        super.preDestroy();\r\n        this.parser.destroy();\r\n        this.parser = undefined;\r\n    }\r\n}\r\n\r\nexport default TagText;","import TagText from './TagText.js';\r\n\r\nconst GetAdvancedValue = Phaser.Utils.Objects.GetAdvancedValue;\r\nconst BuildGameObject = Phaser.GameObjects.BuildGameObject;\r\n\r\nexport default function (config, addToScene) {\r\n    // style Object = {\r\n    //     font: [ 'font', '16px Courier' ],\r\n    //     backgroundColor: [ 'backgroundColor', null ],\r\n    //     fill: [ 'fill', '#fff' ],\r\n    //     stroke: [ 'stroke', '#fff' ],\r\n    //     strokeThickness: [ 'strokeThickness', 0 ],\r\n    //     shadowOffsetX: [ 'shadow.offsetX', 0 ],\r\n    //     shadowOffsetY: [ 'shadow.offsetY', 0 ],\r\n    //     shadowColor: [ 'shadow.color', '#000' ],\r\n    //     shadowBlur: [ 'shadow.blur', 0 ],\r\n    //     shadowStroke: [ 'shadow.stroke', false ],\r\n    //     shadowFill: [ 'shadow.fill', false ],\r\n    //     align: [ 'align', 'left' ],\r\n    //     maxLines: [ 'maxLines', 0 ],\r\n    //     fixedWidth: [ 'fixedWidth', false ],\r\n    //     fixedHeight: [ 'fixedHeight', false ]\r\n    // }\r\n\r\n    var content = GetAdvancedValue(config, 'text', '');\r\n    var style = GetAdvancedValue(config, 'style', null);\r\n\r\n    //  Padding\r\n    //      { padding: 2 }\r\n    //      { padding: { x: , y: }}\r\n    //      { padding: { left: , top: }}\r\n    //      { padding: { left: , right: , top: , bottom: }}  \r\n\r\n    var padding = GetAdvancedValue(config, 'padding', null);\r\n\r\n    if (padding !== null) {\r\n        style.padding = padding;\r\n    }\r\n\r\n    if (addToScene !== undefined) {\r\n        config.add = addToScene;\r\n    }\r\n\r\n    var gameObject = new TagText(this.scene, 0, 0, content, style);\r\n    BuildGameObject(this.scene, gameObject, config);\r\n\r\n    //  Text specific config options:\r\n\r\n    gameObject.autoRound = GetAdvancedValue(config, 'autoRound', true);\r\n    gameObject.resolution = GetAdvancedValue(config, 'resolution', 1);\r\n\r\n    return gameObject;\r\n};","import Factory from './gameobjects/text/tagtext/Factory.js';\r\nimport Creator from './gameobjects/text/tagtext/Creator.js';\r\nimport TagText from './gameobjects/text/tagtext/TagText.js';\r\n\r\nPhaser.GameObjects.GameObjectFactory.register('rexTagText', Factory);\r\nPhaser.GameObjects.GameObjectCreator.register('rexTagText', Creator);\r\n\r\nexport default TagText;","import TagText from './TagText.js';\r\n\r\nexport default function (x, y, text, style) {\r\n    var gameObject = new TagText(this.scene, x, y, text, style);\r\n    this.scene.add.existing(gameObject);\r\n    return gameObject;\r\n}","export default {\r\n    setEventEmitter(eventEmitter, EventEmitterClass) {\r\n        if (EventEmitterClass === undefined) {\r\n            EventEmitterClass = Phaser.Events.EventEmitter; // Use built-in EventEmitter class by default\r\n        }\r\n        this._privateEE = (eventEmitter === undefined);\r\n        this._eventEmitter = (this._privateEE) ? (new EventEmitterClass()) : eventEmitter;\r\n        return this;\r\n    },\r\n\r\n    destroyEventEmitter() {\r\n        if (this._eventEmitter && this._privateEE) {\r\n            this._eventEmitter.shutdown();\r\n        }\r\n        return this;\r\n    },\r\n\r\n    getEventEmitter() {\r\n        return this._eventEmitter;\r\n    },\r\n\r\n    on: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.on.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    once: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.once.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    off: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.off.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    emit: function (event) {\r\n        if (this._eventEmitter && event) {\r\n            this._eventEmitter.emit.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    addListener: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.addListener.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    removeListener: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.removeListener.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    removeAllListeners: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.removeAllListeners.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    listenerCount: function () {\r\n        if (this._eventEmitter) {\r\n            return this._eventEmitter.listenerCount.apply(this._eventEmitter, arguments);\r\n        }\r\n        return 0;\r\n    },\r\n\r\n    listeners: function () {\r\n        if (this._eventEmitter) {\r\n            return this._eventEmitter.listeners.apply(this._eventEmitter, arguments);\r\n        }\r\n        return [];\r\n    }\r\n};","const SceneClass = Phaser.Scene;\r\nvar IsSceneObject = function (object) {\r\n    return (object instanceof SceneClass);\r\n}\r\nexport default IsSceneObject;","import IsSceneObject from './IsSceneObject.js';\r\n\r\nvar GetSceneObject = function (object) {\r\n    if (IsSceneObject(object)) { // object = scene\r\n        return object;\r\n    } else if (object.scene && IsSceneObject(object.scene)) { // object = game object\r\n        return object.scene;\r\n    } else if (object.parent && object.parent.scene && IsSceneObject(object.parent.scene)) { // parent = bob object\r\n        return object.parent.scene;\r\n    }\r\n}\r\n\r\nexport default GetSceneObject;","import EventEmitterMethods from '../../utils/eventemitter/EventEmitterMethods.js';\r\nimport GetSceneObject from '../../utils/system/GetSceneObject.js';\r\n\r\nconst GetFastValue = Phaser.Utils.Objects.GetFastValue;\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\n\r\nclass TextTyping {\r\n    constructor(gameObject, config) {\r\n        this.gameObject = gameObject;\r\n        this.scene = GetSceneObject(gameObject);        \r\n        this.setEventEmitter(GetValue(config, 'eventEmitter', undefined));\r\n        \r\n        this.timer = null;\r\n        this.resetFromJSON(config);\r\n        this.boot();\r\n    }\r\n\r\n    /**\r\n     * Reset status by JSON object\r\n     * @param {object} o JSON object\r\n     * @returns {object} this object\r\n     */\r\n    resetFromJSON(o) {\r\n        this.setTypeMode(GetValue(o, 'typeMode', 0));\r\n        this.setTypeSpeed(GetValue(o, 'speed', 333));\r\n        this.setTextCallback = GetFastValue(o, 'setTextCallback', null);\r\n        this.setTextCallbackScope = GetFastValue(o, 'setTextCallbackScope', null);\r\n\r\n        this.typingIdx = GetFastValue(o, 'typingIdx', 0);\r\n        this.text = transferText(GetFastValue(o, 'text', ''));\r\n        this.textLen = GetFastValue(o, 'textLen', 0);\r\n        this.insertIdx = GetFastValue(o, 'insertIdx', null);\r\n\r\n        var elapsed = GetFastValue(o, 'elapsed', null);\r\n        if (elapsed !== null) {\r\n            this.start(undefined, undefined, this.typingIdx, elapsed);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Return status in JSON object\r\n     * @returns JSON object\r\n     */\r\n    toJSON() {\r\n        var elapsed;\r\n        var timer = this.getTimer();\r\n        if (timer) {\r\n            elapsed = timer.elapsed;\r\n        } else {\r\n            elapsed = null;\r\n        }\r\n\r\n        return {\r\n            typeMode: this.typeMode,\r\n            speed: this.speed,\r\n            setTextCallback: this.setTextCallback,\r\n            setTextCallbackScope: this.setTextCallbackScope,\r\n\r\n            typingIdx: this.typingIdx,\r\n            text: this.text,\r\n            textLen: this.textLen,\r\n            insertIdx: this.insertIdx,\r\n            elapsed: elapsed\r\n        };\r\n    }\r\n\r\n    boot() {\r\n        if (this.gameObject.once) { // oops, bob object does not have event emitter\r\n            this.gameObject.once('destroy', this.destroy, this);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    shutdown() {\r\n        this.destroyEventEmitter();\r\n        this.freeTimer();\r\n        this.gameObject = undefined;\r\n        this.scene = undefined;\r\n        return this;\r\n    }\r\n\r\n    destroy() {\r\n        this.shutdown();\r\n        return this;\r\n    }\r\n\r\n    setTypeMode(m) {\r\n        if (typeof (m) === 'string') {\r\n            m = TYPEMODE[m];\r\n        }\r\n        this.typeMode = m;\r\n        return this;\r\n    }\r\n\r\n    setTypeSpeed(speed) {\r\n        this.speed = speed;\r\n        return this;\r\n    }\r\n\r\n    get isTyping() {\r\n        return (this.getTimer() !== null);\r\n    }\r\n\r\n    get isLastChar() {\r\n        return (this.typingIdx === this.textLen);\r\n    }\r\n\r\n    start(text, speed, startIdx, timerStartAt) {\r\n        if (text !== undefined) {\r\n            this.setTypingContent(text);\r\n        }\r\n        if (speed !== undefined) {\r\n            this.speed = speed;\r\n        }\r\n        if (startIdx === undefined) {\r\n            startIdx = 0;\r\n        }\r\n\r\n        this.typingIdx = startIdx + 1;\r\n        if (this.speed === 0) {\r\n            this.stop(true);\r\n        } else {\r\n            this.startTimer(timerStartAt);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    appendText(text) {\r\n        var newText = this.text.concat(transferText(text));\r\n        if (this.isTyping) {\r\n            this.setTypingContent(newText);\r\n        } else {\r\n            this.start(newText, undefined, this.textLen);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    stop(showAllText) {\r\n        var timer = this.getTimer();\r\n        if (timer) {\r\n            this.freeTimer();\r\n        }\r\n        if (showAllText) {\r\n            this.typingIdx = this.textLen;\r\n            this.setText(this.text);\r\n            this.emit('type');\r\n            this.emit('complete', this, this.gameObject);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    pause() {\r\n        var timer = this.getTimer();\r\n        if (timer) {\r\n            timer.paused = true;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    resume() {\r\n        var timer = this.getTimer();\r\n        if (timer) {\r\n            timer.paused = false;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    setTypingContent(text) {\r\n        this.text = transferText(text);\r\n        this.textLen = this.getTextLength(this.text);\r\n        return this;\r\n    }\r\n\r\n    onTyping() {\r\n        var newText = this.getTypingString(this.text, this.typingIdx, this.textLen, this.typeMode);\r\n        this.setText(newText);\r\n        this.emit('type');\r\n\r\n        if (this.isLastChar) {\r\n            this.freeTimer();\r\n            this.emit('complete', this, this.gameObject);\r\n        } else {\r\n            this.timer.delay = this.speed; // delay of next typing            \r\n            this.typingIdx++;\r\n        }\r\n    }\r\n\r\n    getTypingString(text, typeIdx, textLen, typeMode) {\r\n        var result;\r\n        if (typeMode === 0) { //left-to-right\r\n            var startIdx = 0;\r\n            var endIdx = typeIdx;\r\n            this.insertIdx = endIdx;\r\n            result = this.getSubString(text, startIdx, endIdx);\r\n\r\n        } else if (typeMode === 1) { //right-to-left\r\n            var endIdx = textLen;\r\n            var startIdx = endIdx - typeIdx;\r\n            this.insertIdx = 0;\r\n            result = this.getSubString(text, startIdx, endIdx);\r\n\r\n        } else if (typeMode === 2) { //middle-to-sides\r\n            var midIdx = textLen / 2;\r\n            var startIdx = Math.floor(midIdx - (typeIdx / 2));\r\n            var endIdx = startIdx + typeIdx;\r\n            this.insertIdx = (typeIdx % 2) ? typeIdx : 0;\r\n            result = this.getSubString(text, startIdx, endIdx);\r\n\r\n        } else if (typeMode === 3) { //sides-to-middle\r\n            var lowerLen = Math.floor(typeIdx / 2);\r\n            var lowerResult;\r\n            if (lowerLen > 0) {\r\n                var endIdx = textLen;\r\n                var startIdx = endIdx - lowerLen;\r\n                lowerResult = this.getSubString(text, startIdx, endIdx);\r\n            } else {\r\n                lowerResult = \"\";\r\n            }\r\n\r\n            var upperLen = typeIdx - lowerLen;\r\n            var upperResult;\r\n            if (upperLen > 0) {\r\n                var startIdx = 0;\r\n                var endIdx = startIdx + upperLen;\r\n                this.insertIdx = endIdx;\r\n                upperResult = this.getSubString(text, startIdx, endIdx);\r\n            } else {\r\n                upperResult = \"\";\r\n                this.insertIdx = 0;\r\n            }\r\n            result = upperResult + lowerResult;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    startTimer(timerStartAt) {\r\n        if (this.timer) {\r\n            this.freeTimer();\r\n        }\r\n        var delay, startAt;\r\n        if (timerStartAt === undefined) {\r\n            delay = 0;\r\n            startAt = 0;\r\n        } else {\r\n            delay = this.speed;\r\n            startAt = timerStartAt;\r\n        }\r\n\r\n        this.timer = this.scene.time.addEvent({\r\n            delay: 0,\r\n            startAt: startAt,\r\n            loop: true,\r\n            callback: this.onTyping,\r\n            callbackScope: this\r\n        });\r\n        return this;\r\n    }\r\n\r\n    getTimer() {\r\n        return this.timer;\r\n    }\r\n\r\n    freeTimer() {\r\n        if (this.timer) {\r\n            this.timer.remove();\r\n            this.timer = null;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    setText(text) {\r\n        if (this.setTextCallback) {\r\n            if (this.setTextCallbackScope) {\r\n                text = this.setTextCallback.call(this.setTextCallbackScope, text, this.isLastChar, this.insertIdx);\r\n            } else {\r\n                text = this.setTextCallback(text, this.isLastChar, this.insertIdx);\r\n            }\r\n        }\r\n        this.gameObject.setText(text);\r\n    }\r\n\r\n    getTextLength(text) {\r\n        var gameObject = this.gameObject;\r\n        var len;\r\n        if (gameObject.getPlainText) {\r\n            len = gameObject.getPlainText(text).length;\r\n        } else {\r\n            len = text.length;\r\n        }\r\n\r\n        return len;\r\n    }\r\n\r\n    getSubString(text, startIdx, endIdx) {\r\n        var gameObject = this.gameObject;\r\n        var result;\r\n        if (gameObject.getSubString) {\r\n            result = gameObject.getSubString(text, startIdx, endIdx);\r\n        } else {\r\n            result = text.slice(startIdx, endIdx);\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nObject.assign(\r\n    TextTyping.prototype,\r\n    EventEmitterMethods\r\n);\r\n\r\nvar transferText = function (text) {\r\n    if (Array.isArray(text)) {\r\n        text = text.join('\\n');\r\n    } else if (typeof (text) === 'number') {\r\n        text = text.toString();\r\n    }\r\n    return text;\r\n}\r\n\r\n/** @private */\r\nconst TYPEMODE = {\r\n    'left-to-right': 0,\r\n    'right-to-left': 1,\r\n    'middle-to-sides': 2,\r\n    'sides-to-middle': 3\r\n};\r\n\r\n\r\nexport default TextTyping;","import TextTyping from './behaviors/texttyping/TextTyping.js';\r\nexport default TextTyping;","// Source: https://stackoverflow.com/questions/5915096/get-random-item-from-javascript-array\r\nconst getRandomItem = (items) => {\r\n    return items[Math.floor(Math.random() * items.length)];\r\n}\r\n\r\nexport {\r\n    getRandomItem\r\n}","export default {\r\n    Active: 0,\r\n    Destroyed: 1\r\n};","export default {\r\n    None: 0,\r\n    EasyWin: 1\r\n};","export default [\r\n    { name: 'Blue', imageKey: 'tile_01' },\r\n    { name: 'Green', imageKey: 'tile_02' },\r\n    { name: 'Red', imageKey: 'tile_03' },\r\n    { name: 'Yellow', imageKey: 'tile_04' }\r\n];","import { getRandomItem } from './Utility';\r\nimport Tile from './Tile';\r\nimport TileGenerationBehavior from './TileGenerationBehavior';\r\nimport TileState from './TileState';\r\nimport TileType from './TileType';\r\n\r\nexport default class {\r\n\r\n    constructor(tileGridWidth, tileGridHeight, tileSize, offsetX, offsetY, onTileSelect, onTileMatch, queue)\r\n    {\r\n        this.offsetX = offsetX;\r\n        this.offsetY = offsetY;\r\n        this.tileSize = tileSize;\r\n        this.tileGridHeight = tileGridHeight;\r\n        this.tileGridWidth = tileGridWidth;\r\n        this.tileGrid = [];\r\n        this.tileImageContainer = null;\r\n        this.playAreaOffset = (this.tileGridHeight * this.tileSize);\r\n\r\n        this.onTileSelect = onTileSelect;\r\n        this.onTileMatch = onTileMatch;\r\n\r\n        this.tileGenerationBehavior = TileGenerationBehavior.None;\r\n\r\n        this.queue = queue;\r\n\r\n        // We're going to generate a grid that's twice the height of\r\n        // the desired tile grid height since we'll use the hidden, upper\r\n        // region to stage the bricks that will fall into the play area\r\n        for(let y = 0; y < tileGridHeight * 2; y++)\r\n        {\r\n            this.tileGrid[y] = [];\r\n            for(let x = 0; x < tileGridWidth; x++)\r\n            {\r\n                this.tileGrid[y][x] = (y < tileGridHeight)\r\n                    ? null\r\n                    : this.createTile(this.getTileType(x, y, this.tileGenerationBehavior), x, y);\r\n            }\r\n        }\r\n    }\r\n\r\n    create(context)\r\n    {\r\n        this.tileImageContainer = context.add.container();\r\n\r\n        // Create all of the tiles\r\n        this.forEachTile(tile => {\r\n\r\n            if(tile === null)\r\n            {\r\n                return;\r\n            }\r\n\r\n            tile.create(context);\r\n            this.tileImageContainer.add(tile.image);\r\n\r\n        });\r\n\r\n        // Create a mask to only show the play area\r\n        const maskShape = context.make.graphics();\r\n        maskShape.fillStyle(0xffffff, 1);\r\n        maskShape.fillRect(this.offsetX/2, this.offsetY/2 + (this.tileGridHeight * this.tileSize), this.tileGridWidth * this.tileSize, this.tileGridHeight * this.tileSize);\r\n        \r\n        this.tileImageContainer.mask = new Phaser.Display.Masks.GeometryMask(context, maskShape);\r\n    }\r\n\r\n    update(context)\r\n    {\r\n        const self = this;\r\n\r\n        if(self.queue.length > 0)\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Detect and destroy any matches\r\n        const matchedTiles = self.getMatches();\r\n\r\n        if(matchedTiles.length > 0)\r\n        {\r\n            self.onTileMatch(context, matchedTiles);\r\n        }\r\n\r\n        let destroys = [];\r\n        matchedTiles.forEach(t => { destroys.push(t.destroy(context, this.tileImageContainer)); });\r\n\r\n        if(destroys.length > 0)\r\n        {\r\n            self.queue.push(() => { return Promise.all(destroys); });\r\n        }\r\n\r\n        // Remove any destroyed tiles\r\n        self.forEachTile((tile, x, y) => {\r\n\r\n            if(tile === null)\r\n            {\r\n                return;\r\n            }\r\n\r\n            if(tile.state === TileState.Destroyed)\r\n            {\r\n                self.tileGrid[y][x] = null;\r\n            }\r\n\r\n        });\r\n\r\n        // Shift all of the tiles downward to fill empty spots\r\n        let drops = [];\r\n        for(let x = 0; x < this.tileGridWidth; x++)\r\n        {\r\n            let y = (this.tileGridHeight * 2) - 1;\r\n            while(y >= 0)\r\n            {\r\n                // If the tile is null...\r\n                if(self.tileGrid[y][x] === null)\r\n                {\r\n                    // ...find the closest tile that's not null...\r\n                    let closestY = y - 1;\r\n                    while(closestY >= 0)\r\n                    {\r\n                        let closestTile = self.tileGrid[closestY][x];\r\n                        if(closestTile !== null)\r\n                        {\r\n                            // ...and shift it downward\r\n                            self.tileGrid[y][x] = closestTile;\r\n                            self.tileGrid[closestY][x] = null;\r\n                            drops.push(this.getTileDrop(context, closestTile, x, y));\r\n                            y--;\r\n                        }\r\n                        closestY--;\r\n                    }\r\n                }\r\n\r\n                y--;\r\n            }\r\n        }\r\n\r\n        // Fill in all of the empty tiles\r\n        self.forEachPlayableTile((tile, x, y) => {\r\n            if(tile === null)\r\n            {\r\n                const adjustedY = y - self.tileGridHeight;\r\n\r\n                const tile = self.createTile(self.getTileType(x, y, self.tileGenerationBehavior), x, adjustedY);\r\n                self.tileGrid[adjustedY][x] = tile;\r\n                tile.create(context);\r\n                self.tileImageContainer.add(tile.image);\r\n            }\r\n        });\r\n\r\n        if(drops.length > 0)\r\n        {\r\n            self.queue.push(() => { return Promise.all(drops); });\r\n        }\r\n    }\r\n\r\n    swapTiles(context, firstTile, secondTile)\r\n    {\r\n        let self = this;\r\n\r\n        self.queue.push(() => {\r\n            \r\n            let firstTileX = firstTile.x;\r\n            let firstTileY = firstTile.y;\r\n            let firstTileGridX = firstTile.tileGridX;\r\n            let firstTileGridY = firstTile.tileGridY;\r\n    \r\n            let secondTileX = secondTile.x;\r\n            let secondTileY = secondTile.y;\r\n            let secondTileGridX = secondTile.tileGridX;\r\n            let secondTileGridY = secondTile.tileGridY;\r\n    \r\n            let firstSwap = secondTile.updatePosition(context, firstTileX, firstTileY, firstTileGridX, firstTileGridY);\r\n            self.tileGrid[firstTileGridY][firstTileGridX] = secondTile;\r\n    \r\n            let secondSwap = firstTile.updatePosition(context, secondTileX, secondTileY, secondTileGridX, secondTileGridY);\r\n            self.tileGrid[secondTileGridY][secondTileGridX] = firstTile;\r\n\r\n            return Promise.all([firstSwap, secondSwap]);\r\n\r\n        });\r\n    }\r\n\r\n    hasMatches(targetGridX, targetGridY)\r\n    {\r\n        return this.getMatches(targetGridX, targetGridY).length > 0;\r\n    }\r\n\r\n    getMatches(targetGridX, targetGridY)\r\n    {\r\n        const self = this;\r\n        const matchedTiles = [];\r\n\r\n        self.forEachTile((tile, x, y) => {\r\n\r\n            if(\r\n                (typeof targetGridX !== 'undefined' && x !== targetGridX) &&\r\n                (typeof targetGridY !== 'undefined' && y !== targetGridY)\r\n              )\r\n            {\r\n                return;\r\n            }\r\n\r\n            if(!this.isPlayable(tile))\r\n            {\r\n                return;\r\n            }\r\n\r\n            const targetTileType = tile.tileType;\r\n            const matchedXTiles = [];\r\n            const matchedYTiles = [];\r\n\r\n            // Check for matches to the right\r\n            let currX = (x + 1);\r\n            while(currX < self.tileGridWidth)\r\n            {\r\n                const currTile = self.tileGrid[y][currX];\r\n\r\n                if(currTile != null && targetTileType.name === currTile.tileType.name)\r\n                {\r\n                    matchedXTiles.push(currTile);\r\n                }\r\n                else\r\n                {\r\n                    break;\r\n                }\r\n\r\n                currX++;\r\n            }\r\n\r\n            // Check for matches to the left\r\n            currX = (x - 1);\r\n            while(currX > 0)\r\n            {\r\n                const currTile = self.tileGrid[y][currX];\r\n\r\n                if(currTile != null && targetTileType.name === currTile.tileType.name)\r\n                {\r\n                    matchedXTiles.push(currTile);\r\n                }\r\n                else\r\n                {\r\n                    break;\r\n                }\r\n\r\n                currX--;\r\n            }\r\n\r\n            // Check matches downwards\r\n            let currY = (y + 1);\r\n            while(currY < self.tileGridHeight)\r\n            {\r\n                const currTile = self.tileGrid[currY][x];\r\n\r\n                if(currTile != null && targetTileType.name === currTile.tileType.name)\r\n                {\r\n                    matchedYTiles.push(currTile);\r\n                }\r\n                else\r\n                {\r\n                    break;\r\n                }\r\n\r\n                currY++;\r\n            }\r\n\r\n            // Check matches upwards\r\n            currY = (y - 1);\r\n            while(currY > 0)\r\n            {\r\n                const currTile = self.tileGrid[currY][x];\r\n\r\n                if(currTile != null && targetTileType === currTile.tileType)\r\n                {\r\n                    matchedYTiles.push(currTile);\r\n                }\r\n                else\r\n                {\r\n                    break;\r\n                }\r\n\r\n                currY--;\r\n            }\r\n            \r\n            if(matchedYTiles.length > 1)\r\n            {\r\n                matchedTiles.push(...matchedYTiles);\r\n            }\r\n            \r\n            if(matchedXTiles.length > 1)\r\n            {\r\n                matchedTiles.push(...matchedXTiles);\r\n            }\r\n\r\n            if(matchedYTiles.length > 1 || matchedXTiles.length > 1)\r\n            {\r\n                matchedTiles.push(tile);\r\n            }\r\n        });\r\n\r\n        return matchedTiles;\r\n    }\r\n\r\n    forEachTile(callback)\r\n    {\r\n        for(let y = 0; y < this.tileGridHeight * 2; y++)\r\n        {\r\n            for(let x = 0; x < this.tileGridWidth; x++)\r\n            {\r\n                callback(this.tileGrid[y][x], x, y);\r\n            }\r\n        }\r\n    }\r\n\r\n    forEachPlayableTile(callback)\r\n    {\r\n        for(let y = this.tileGridHeight; y < this.tileGridHeight * 2; y++)\r\n        {\r\n            for(let x = 0; x < this.tileGridWidth; x++)\r\n            {\r\n                callback(this.tileGrid[y][x], x, y);\r\n            }\r\n        }\r\n    }\r\n\r\n    createTile(tileType, x, y)\r\n    {\r\n        return new Tile(tileType, this.getTileX(x), this.getTileY(y), x, y, this.onTileSelect);\r\n    }\r\n\r\n    getTileDrop(context, tile, x, y)\r\n    {\r\n        return tile.updatePosition(context, this.getTileX(x), this.getTileY(y), x, y);\r\n    }\r\n\r\n    getTileX(x)\r\n    {\r\n        return this.offsetX + (this.tileSize * x);\r\n    }\r\n\r\n    getTileY(y)\r\n    {\r\n        return this.offsetY + (this.tileSize * y);\r\n    }\r\n\r\n    canSelect(tile)\r\n    {\r\n        return this.isPlayable(tile);\r\n    }\r\n\r\n    isPlayable(tile)\r\n    {\r\n        return (tile != null) && (tile.tileGridY > (this.tileGridHeight - 1));\r\n    }\r\n\r\n    getTileType(x, y, behavior)\r\n    {\r\n        const aboveTile = (y < 1) ? null : this.tileGrid[y - 1][x];\r\n        const belowTile = (y > self.tileGridHeight - 1 || !this.tileGrid[y + 1]) ? null : this.tileGrid[y + 1][x];\r\n\r\n        const leftTile = (x < 1) ? null : this.tileGrid[y][x - 1];\r\n        const rightTile = (x > self.tileGridWidth - 1) ? null : this.tileGrid[y][x + 1];\r\n\r\n        if(behavior == TileGenerationBehavior.EasyWin && (aboveTile != null || belowTile != null || leftTile != null || rightTile != null))\r\n        {\r\n            return getRandomItem([aboveTile, belowTile, leftTile, rightTile].filter(t => t != null).map(t => t.tileType));\r\n        }\r\n        else\r\n        {\r\n            return getRandomItem(TileType.filter(t =>\r\n                (aboveTile === null || t.name !== aboveTile.tileType.name) &&\r\n                (leftTile === null || t.name !== leftTile.tileType.name)\r\n            ));\r\n        }\r\n    }\r\n}","import TileState from './TileState';\r\n\r\nexport default class {\r\n\r\n    constructor(tileType, x, y, tileGridX, tileGridY, onTileSelect)\r\n    {\r\n        this.tileType = tileType;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.tileGridX = tileGridX;\r\n        this.tileGridY = tileGridY;\r\n        this.onTileSelect = onTileSelect;\r\n        this.image = null;\r\n        this.state = TileState.Active;\r\n        this.isActivated = false;\r\n    }\r\n\r\n    create(context)\r\n    {\r\n        this.image = context.add.image(this.x, this.y, this.tileType.imageKey);\r\n        this.image.setInteractive();\r\n        this.image.on('pointerdown', () => { this.onTileSelect(context, this); });\r\n    }\r\n\r\n    activate()\r\n    {\r\n        this.isActivated = true;\r\n        this.image.setTintFill(0xffffff);\r\n    }\r\n\r\n    deactivate()\r\n    {\r\n        this.isActivated = false;\r\n        this.image.clearTint();\r\n    }\r\n\r\n    updatePosition(context, x, y, tileGridX, tileGridY)\r\n    {\r\n        let self = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            self.x = x;\r\n            self.y = y;\r\n            self.tileGridX = tileGridX;\r\n            self.tileGridY = tileGridY;\r\n\r\n            context.tweens.add({\r\n                targets: self.image,\r\n                x: x,\r\n                y: y,\r\n                ease: 'Power1',\r\n                duration: 500,\r\n                onComplete: () => { resolve() }\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n    destroy(context, container)\r\n    {\r\n        let self = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            context.tweens.add({\r\n                targets: self.image,\r\n                alpha: 0,\r\n                ease: 'Power1',\r\n                duration: 500,\r\n                onComplete: () => {\r\n\r\n                    container.remove(self.image);\r\n                    self.image.destroy();\r\n                    self.state = TileState.Destroyed;\r\n                    resolve();\r\n\r\n                }\r\n            });\r\n\r\n        });\r\n    }\r\n}","import ActionQueue from '../ActionQueue';\r\nimport DialogManager from '../DialogManager';\r\nimport Guide from '../Guide';\r\nimport ScoreDisplay from '../ScoreDisplay';\r\nimport TileGrid from '../TileGrid';\r\nimport Timer from '../Timer';\r\n\r\nexport default class extends Phaser.Scene {\r\n\r\n    constructor()\r\n    {\r\n        super('RoundScene');\r\n\r\n        this.score = null;\r\n        this.queue = null;\r\n        this.selectedTiles = null;\r\n        this.tileGrid = null;\r\n        this.scoreDisplay = null;\r\n        this.timer = null;\r\n \r\n        this.guide = null;\r\n        this.level = null;\r\n\r\n        this.comboCount = null;\r\n        this.totalMatches = null;\r\n    }\r\n\r\n    preload()\r\n    {\r\n        this.load.image('tile_01', 'assets/tile_01.png');\r\n        this.load.image('tile_02', 'assets/tile_02.png');\r\n        this.load.image('tile_03', 'assets/tile_03.png');\r\n        this.load.image('tile_04', 'assets/tile_04.png');\r\n    }\r\n\r\n    init(data)\r\n    {\r\n        this.level = data.level;\r\n    }\r\n\r\n    create()\r\n    {\r\n        this.score = 0;\r\n        this.comboCount = 0;\r\n        this.totalMatches = 0;\r\n\r\n        this.queue = new ActionQueue();\r\n\r\n        this.selectedTiles = [];\r\n        this.tileGrid = new TileGrid(6, 6, 50, 50, 50, this.onTileSelect, this.onTileMatch, this.queue);\r\n        this.scoreDisplay = new ScoreDisplay(5, 5);\r\n        this.timer = new Timer(500, 5, 300);\r\n\r\n        const dialogManager = new DialogManager();\r\n        const script = dialogManager.getScript(this.level);\r\n        this.guide = new Guide(100, 100, script);\r\n\r\n        this.tileGrid.create(this);\r\n        this.scoreDisplay.create(this);\r\n        this.timer.create(this);\r\n        this.guide.create(this);\r\n\r\n        const self = this;\r\n        this.input.on('pointerdown', () => { self.guide.progressDialogue(); });\r\n    }\r\n\r\n    update()\r\n    {\r\n        // Have we run out of time?\r\n        if(this.timer.seconds <= 0)\r\n        {\r\n            this.scene.start('GameOverScene', { score: this.score });\r\n            return;\r\n        }\r\n\r\n        // Did we reach the end of the round?\r\n        if(this.score > 10)\r\n        {\r\n            this.scene.start('RoundTransitionScene', { nextLevel: (this.level + 1) });\r\n            return;\r\n        }\r\n\r\n        // Are we currently executing a queued action?\r\n        if(this.queue.isActionRunning())\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Do we have any queued actions on the stack?\r\n        if(this.queue.hasActions())\r\n        {\r\n            this.queue.next();\r\n            return;\r\n        }\r\n\r\n        // If nothing's left in the queue, we can move the game's state forward\r\n        this.tileGrid.update(this);\r\n    }\r\n\r\n    onTileSelect(context, tile)\r\n    {\r\n        // Are we currently executing a queued action?\r\n        if(context.queue.isActionRunning())\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Is the guide currently blocking gameplay?\r\n        if(context.guide.isBlockingGameplay)\r\n        {\r\n            return;\r\n        }\r\n    \r\n        // Can we select this tile?\r\n        if(!context.tileGrid.canSelect(tile))\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Is this tile already selected?\r\n        if(tile.isActivated)\r\n        {\r\n            context.selectedTiles = [];\r\n            tile.deactivate();\r\n            return;\r\n        }\r\n    \r\n        if(context.selectedTiles.length === 0)\r\n        {\r\n            context.selectedTiles.push(tile);\r\n            tile.activate();\r\n            return;\r\n        }\r\n    \r\n        if(context.selectedTiles.length === 1)\r\n        {\r\n            const selectedTile = context.selectedTiles[0];\r\n            const xDiff = Math.abs(selectedTile.tileGridX - tile.tileGridX);\r\n            const yDiff = Math.abs(selectedTile.tileGridY - tile.tileGridY);\r\n    \r\n            if((xDiff === 1 && yDiff === 0) || (xDiff === 0 && yDiff === 1))\r\n            {\r\n                context.selectedTiles.push(tile);\r\n    \r\n                let firstSelectedTile = context.selectedTiles[0];\r\n                let secondSelectedTile = context.selectedTiles[1];\r\n    \r\n                context.tileGrid.swapTiles(context, firstSelectedTile, secondSelectedTile);\r\n    \r\n                context.queue.push(() => {\r\n    \r\n                    // If there are no matches, swap the tiles back\r\n                    if(\r\n                        !context.tileGrid.hasMatches(firstSelectedTile.tileGridX, firstSelectedTile.tileGridY) &&\r\n                        !context.tileGrid.hasMatches(secondSelectedTile.tileGridX, secondSelectedTile.tileGridY)\r\n                    )\r\n                    {\r\n                        context.tileGrid.swapTiles(context, firstSelectedTile, secondSelectedTile);\r\n                    }\r\n    \r\n                    return Promise.resolve();\r\n    \r\n                });\r\n    \r\n                context.selectedTiles.forEach((tile) => { tile.deactivate(); });\r\n                context.selectedTiles = [];\r\n                \r\n                context.comboCount = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    onTileMatch(context, matchedTiles)\r\n    {\r\n        context.comboCount++;\r\n        context.totalMatches++;\r\n\r\n        context.score += (matchedTiles.length * context.comboCount);\r\n        context.scoreDisplay.updateScore(context.score);\r\n\r\n        context.guide.displayTileMatchMessage(context, {\r\n            comboCount: context.comboCount,\r\n            totalMatches: context.totalMatches\r\n        });\r\n\r\n        if(context.comboCount > 1)\r\n        {\r\n            context.scoreDisplay.updateCombo(`${context.comboCount}x multiplier!`);\r\n        }\r\n        else\r\n        {\r\n            context.scoreDisplay.updateCombo('');\r\n        }\r\n    }\r\n    \r\n}","export default class {\r\n\r\n    constructor()\r\n    {\r\n        this.queuedActions = [];\r\n        this.currentAction = null;\r\n    }\r\n\r\n    isActionRunning()\r\n    {\r\n        return this.currentAction != null;\r\n    }\r\n\r\n    hasActions()\r\n    {\r\n        return this.queuedActions.length > 0;\r\n    }\r\n\r\n    next()\r\n    {\r\n        this.currentAction = this.queuedActions.shift();\r\n        this.currentAction();\r\n    }\r\n\r\n    push(action)\r\n    {\r\n        var self = this;\r\n        self.queuedActions.push(() => { action().then(() => { self.currentAction = null; }) });\r\n    }\r\n\r\n}","export default class {\r\n\r\n    constructor(x, y)\r\n    {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.scoreText = null;\r\n        this.comboText = null;\r\n        this.score = 0;\r\n    }\r\n\r\n    create(context)\r\n    {\r\n        this.scoreText = context.add.text(this.x, this.y, this.score);\r\n        this.updateScore(this.score);\r\n\r\n        this.comboText = context.add.text(this.x, this.y + 20, '');\r\n    }\r\n\r\n    updateScore(score)\r\n    {\r\n        this.score = score;\r\n        this.scoreText.setText(score + ' dew drops');\r\n    }\r\n\r\n    updateCombo(text)\r\n    {\r\n        this.comboText.setText(text);\r\n    }\r\n}","export default class {\r\n\r\n    constructor(x, y, seconds)\r\n    {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.text = null;\r\n        this.seconds = seconds;\r\n    }\r\n\r\n    create(context)\r\n    {\r\n        this.text = context.add.text(this.x, this.y, this.score);\r\n        \r\n        this.tick();\r\n        context.time.addEvent({ delay: 1000, callback: this.tick, callbackScope: this, loop: true })\r\n    }\r\n\r\n    tick()\r\n    {\r\n        if(this.seconds <= 0)\r\n        {\r\n            return;\r\n        }\r\n\r\n        this.seconds--;\r\n\r\n        // Display the remaining time\r\n        const minutes = Math.floor(this.seconds / 60);\r\n\r\n        let seconds = (this.seconds % 60);\r\n        if(seconds < 10)\r\n        {\r\n            seconds = '0' + seconds;\r\n        }\r\n\r\n        this.text.setText(`${minutes}:${seconds}`);\r\n    }\r\n}","import DialogScript from \"./DialogScript\";\r\n\r\nexport default class {\r\n\r\n    getScript(level)\r\n    {\r\n        const script = new DialogScript();\r\n\r\n        switch(level)\r\n        {\r\n            // Level 0 (Intro)\r\n            case 0:\r\n\r\n                script.introMessages = [\r\n                    `*Oh, doozle, you made it!* You're here! (Click or tap anywhere!)`,\r\n                    `We need your help collecting dew drops!`,\r\n                    \"If you match three or more dew drops of the same color, we can collect them!\",\r\n                    \"To make a match, select two dew drops to swap their places!\"\r\n                ];\r\n\r\n                script.getDisplayTileMatchMessages = (data) => {\r\n\r\n                    if(data.totalMatches === 1)\r\n                    {\r\n                        return [\r\n                            \"You got it! That's it!\",\r\n                            \"You collect extra dew drops when you chain together matches in a combo!\",\r\n                            \"See if you can collect X dew drops!\"\r\n                        ];\r\n                    }\r\n\r\n                };\r\n\r\n                break;\r\n\r\n            // Level 1 (Timer Intro)\r\n            case 1:\r\n\r\n                script.introMessages = [\r\n                    \"You're so good at this!\",\r\n                    \"We'll have to hurry this time!\",\r\n                    \"We only have one minute before the sun dries up all the dew drops!\",\r\n                    \"Collect at least X dew drops in one minute!\"\r\n                ];\r\n\r\n                break;\r\n\r\n            // Level 2 (Breaking the Fourth Wall)\r\n            case 2:\r\n\r\n                script.introMessages = [\r\n                    \"Wow, we're so proud of you!\",\r\n                    \"This round you'll only have 30 seconds to collect at least X dew drops!\"\r\n                ];\r\n\r\n                // \"Wait, wait, sorry, hold on.\"\r\n                // \"It's too early for the \\\"Lose in a Panic\\\" scenario.\"\r\n                // \"So sorry about that.\"\r\n                // \"You've been really great so far, honestly.\"\r\n                // \"You know, what, let's just go to the next round and we'll take it from the top.\"\r\n\r\n                break;\r\n\r\n            // Level 3 (Easy Win)\r\n            case 3:\r\n\r\n                script.introMessages = [\r\n                    \"Alright, I think we've got everything figured out.\",\r\n                    \"Okay, for this next round, let me set you up:\",\r\n                    \"Remember, you've been winnig the last few rounds and you're gaining confidence.\",\r\n                    \"In this round, it's going to be easy for you to get combos.\",\r\n                    \"So the idea here is that you're going to get a little too confident, right?\",\r\n                    \"Like a little full of yourself, alright?\",\r\n                    \"Okay, great! Let's do this:\"\r\n                ];\r\n\r\n                break;\r\n\r\n            // Level 4 (Losing Confidence)\r\n            case 4:\r\n\r\n                script.introMessages = [\r\n                    \"Okay, okay, great stuff.\",\r\n                    \"For this round, you're bringing all of that pride, all of that hubris.\",\r\n                    \"And, when the round starts, things are still going your way.\",\r\n                    \"But guess what?\",\r\n                    \"Halfway through this round, things start getting a little harder.\",\r\n                    \"This is where we to start your chip away at your pride as the player.\"\r\n                ];\r\n\r\n                break;\r\n\r\n            // Level 5 (Fall From Grace)\r\n            case 5:\r\n\r\n                script.introMessages = [\r\n                    \"Wow, really moving work. It feels so authentic.\",\r\n                    \"It's been a joy working with you.\",\r\n                    \"Okay, here we go, this is a pivotal scene:\",\r\n                    \"This round will not go your way at all. At all.\",\r\n                    \"This is your fall from grace.\",\r\n                ];\r\n\r\n                break;\r\n\r\n            // Level 6 (Wallowing)\r\n            case 6:\r\n\r\n                script.introMessages = [\r\n                    \"Okay, let's move right into the next scene:\",\r\n                    \"Here, you are wallowing, right?\",\r\n                    \"You are in the pit of despair and you can't see a way out.\",\r\n                    \"This round won't be particularly hard, but you can't seem to find any matches.\"\r\n                ];\r\n\r\n                break;\r\n\r\n            // Level 7 (Pheonix Rises)\r\n            case 7:\r\n\r\n                script.introMessages = [\r\n                    \"Now, you've been wallowing. You've feeling really low.\",\r\n                    \"You're in such despair, that in this round...\",\r\n                    \"There's an obvious combo.\",\r\n                    \"Right there, right in front of your face.\",\r\n                    \"But you can't see it through the despair.\",\r\n                    \"But then, in the last ten seconds of the round, you see it.\",\r\n                    \"Boom, it's the perfect match.\",\r\n                    \"And the pheonix rises once again!\"\r\n                ];\r\n\r\n                break;\r\n\r\n            // Level 8 (Victory Lap)\r\n            case 8:\r\n\r\n                script.introMessages = [\r\n                    \"Our hero is back!\",\r\n                    \"This final scene is our victory lap.\",\r\n                    \"However, we don't want too many combos in this round, right?\",\r\n                    \"This is a round the player wins on their own.\",\r\n                    \"No assistance from the game.\",\r\n                    \"A true hero's victory!\",\r\n                    \"Alright, let's do this: I've got an appointment after this.\"\r\n                ];\r\n\r\n                break;\r\n\r\n        }\r\n\r\n        return script;\r\n    }\r\n\r\n}","export default class {\r\n\r\n    constructor()\r\n    {\r\n        this.introMessages = [];\r\n        this.getDisplayTileMatchMessages = () => {};\r\n    }\r\n}","import TagText from 'phaser3-rex-plugins/plugins/tagtext.js';\r\nimport TextTyping from 'phaser3-rex-plugins/plugins/texttyping.js';\r\n\r\nexport default class {\r\n\r\n    constructor(x, y, script)\r\n    {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.script = script;\r\n\r\n        this.queuedMessages = null;\r\n        this.isPaused = false;\r\n        this.isBlockingGameplay = false;\r\n\r\n        this.endDialogueMarkerGraphics = null;\r\n    }\r\n\r\n    create(context)\r\n    {\r\n        const self = this;\r\n\r\n        const speechBubbleWidth = 500;\r\n        const speechBubbleHeight = 100;\r\n\r\n        const endDialogueMarkerRadius = 10;\r\n        \r\n        const characterWidth = 100;\r\n        const characterHeight = 500;\r\n\r\n        // Speech Bubble\r\n        const speechBubbleGraphics = context.add.graphics({ fillStyle: { color: 0xffffff } });\r\n        const speechBubble = new Phaser.Geom.Rectangle(this.x, this.y, speechBubbleWidth, speechBubbleHeight);\r\n        speechBubbleGraphics.fillRectShape(speechBubble);\r\n\r\n        // End Dialogue Marker\r\n        this.endDialogueMarkerGraphics = context.add.graphics({ fillStyle: { color: 0xcccccc } });\r\n        this.hideEndDialogueMarker();\r\n        const endDialogueMarker = new Phaser.Geom.Circle(\r\n            this.x + speechBubbleWidth - endDialogueMarkerRadius,\r\n            this.y + speechBubbleHeight - endDialogueMarkerRadius,\r\n            endDialogueMarkerRadius);\r\n        this.endDialogueMarkerGraphics.fillCircleShape(endDialogueMarker);\r\n\r\n        context.tweens.add({\r\n            targets: this.endDialogueMarkerGraphics,\r\n            alpha: 0,\r\n            duration: 500,\r\n            repeat: -1,\r\n            yoyo: true\r\n        });\r\n\r\n        // Speech Bubble Text\r\n        const speechBubbleTextStyle = {\r\n            color: '#000',\r\n            wrap: {\r\n                mode: 'word',\r\n                width: speechBubbleWidth\r\n            },\r\n            tags: {\r\n                exclamation: {\r\n                    fontStyle: 'bold'\r\n                }\r\n            }\r\n        };\r\n        \r\n        this.speechBubbleText = new TagText(context, this.x, this.y, '', speechBubbleTextStyle);\r\n        context.add.existing(this.speechBubbleText);\r\n\r\n        // Speech Bubble Text Typing\r\n        this.speechBubbleTextTyping = new TextTyping(this.speechBubbleText, { speed: 30 }); \r\n        this.speechBubbleTextTyping.on('complete', () => { self.onMessageComplete.call(self) });\r\n\r\n        // Character\r\n        const characterGraphics = context.add.graphics({ fillStyle: { color: 0xff0000 } });\r\n        const character = new Phaser.Geom.Rectangle(\r\n            this.x + speechBubbleWidth - characterWidth,\r\n            this.y + speechBubbleHeight + 20,\r\n            characterWidth,\r\n            characterHeight);\r\n        characterGraphics.fillRectShape(character);\r\n\r\n        self.queueMessages(context, this.script.introMessages);\r\n    }\r\n\r\n    queueMessages(context, messages)\r\n    {\r\n        if(!messages)\r\n        {\r\n            return;\r\n        }\r\n\r\n        const self = this;\r\n\r\n        if(self.queuedMessages === null)\r\n        {\r\n            self.queuedMessages = [];\r\n        }\r\n\r\n        self.queuedMessages.push(...messages);\r\n\r\n        if(self.speechBubbleTextTyping.isTyping)\r\n        {\r\n            return;\r\n        }\r\n\r\n        self.isBlockingGameplay = true;\r\n        self.progressDialogue();\r\n    }\r\n\r\n    onMessageComplete()\r\n    {\r\n        this.showEndDialogueMarker();\r\n        if(this.queuedMessages.length === 0)\r\n        {\r\n            this.isBlockingGameplay = false;\r\n            return;\r\n        }\r\n    }\r\n\r\n    displayTileMatchMessage(context, data)\r\n    {\r\n        const messages = this.script.getDisplayTileMatchMessages(data);\r\n        this.queueMessages(context, messages);\r\n    }\r\n\r\n    progressDialogue()\r\n    {\r\n        this.hideEndDialogueMarker();\r\n        if(this.queuedMessages.length > 0)\r\n        {\r\n            const message = this.convertDialogToTagText(this.queuedMessages.shift());\r\n            this.speechBubbleTextTyping.start(message);\r\n        }\r\n    }\r\n\r\n    showEndDialogueMarker()\r\n    {\r\n        this.endDialogueMarkerGraphics.setVisible(true);\r\n    }\r\n\r\n    hideEndDialogueMarker()\r\n    {\r\n        this.endDialogueMarkerGraphics.setVisible(false);\r\n    }\r\n\r\n    convertDialogToTagText(input)\r\n    {\r\n        const styles = [\r\n            { token: '*', className: 'exclamation' },\r\n            { token: '_', className: 'underline'}\r\n        ];    \r\n\r\n        let output = '';\r\n        let currClass = '';\r\n    \r\n        for(let i=0; i<input.length; i++)\r\n        {\r\n            const currChar = input[i];\r\n            const isStyleToken = styles.some(style => style.token === currChar);\r\n    \r\n            // If the first character isn't a style token, then\r\n            // we need to open a \"normal\" class tag\r\n            if(i === 0 && !isStyleToken)\r\n            {\r\n                output += '<class=\"normal\">';\r\n                currClass = 'normal';\r\n            }\r\n    \r\n            // If the last character is a style token, we ignore it\r\n            // since we'll always end with a closing class tag anyway\r\n            if(i === input.length - 1 && isStyleToken)\r\n            {\r\n                continue;\r\n            }\r\n    \r\n            if(isStyleToken)\r\n            {\r\n                const targetStyle = styles.find(style => style.token === currChar);\r\n    \r\n                // If we've encountered a token of the class we already have open,\r\n                // that means we need to close the class\r\n                if(currClass === targetStyle.className)\r\n                {\r\n                    output += '</class>';\r\n                    output += '<class=\"normal\">';\r\n                    currClass = 'normal';\r\n                }\r\n    \r\n                // Otherwise, we need to close the existing the class and\r\n                // open the new class\r\n                else\r\n                {\r\n                    if(i !== 0)\r\n                    {\r\n                        output += '</class>';\r\n                    }\r\n    \r\n                    output += `<class=\"${targetStyle.className}\">`;\r\n                    currClass = targetStyle.className;\r\n                }\r\n            }\r\n            else\r\n            {\r\n                output += input[i];\r\n            }\r\n        }\r\n    \r\n        output += '</class>';\r\n        return output;\r\n    }\r\n}","export default class extends Phaser.Scene {\r\n\r\n    constructor()\r\n    {\r\n        super('RoundTransitionScene');\r\n\r\n        this.nextLevel = 0;\r\n    }\r\n\r\n    init(data)\r\n    {\r\n        this.nextLevel = data.nextLevel;\r\n    }\r\n\r\n    create()\r\n    {\r\n        const self = this;\r\n\r\n        // Title\r\n        this.add.text(50, 50, `Round ${self.nextLevel}`);\r\n\r\n        this.time.addEvent({ delay: 1000, callback: function() { self.scene.start('RoundScene', { level: self.nextLevel }) }, callbackScope: this })\r\n    }\r\n    \r\n}","export default class extends Phaser.Scene {\r\n\r\n    constructor()\r\n    {\r\n        super('GameOverScene');\r\n\r\n        this.finalScore = 0;\r\n    }\r\n\r\n    init(data)\r\n    {\r\n        this.finalScore = data.score;\r\n    }\r\n\r\n    create()\r\n    {\r\n        const self = this;\r\n\r\n        // Title\r\n        this.add.text(50, 50, 'Game Over!');\r\n\r\n        // Score\r\n        this.add.text(50, 100, `Final Score: ${this.finalScore}`);\r\n\r\n        // \"Return to Main Menu\" Button\r\n        const startOverBtn = this.add.text(50, 150, 'Return to Main Menu');\r\n        startOverBtn.setInteractive();\r\n        startOverBtn.on('pointerdown', () => { self.scene.start('TitleScene'); });\r\n    }\r\n    \r\n}","import TitleScene from './scenes/TitleScene';\r\nimport RoundScene from './scenes/RoundScene';\r\nimport RoundTransitionScene from './scenes/RoundTransitionScene';\r\nimport GameOverScene from './scenes/GameOverScene';\r\n\r\nconst config = {\r\n    type: Phaser.AUTO,\r\n    width: 800,\r\n    height: 1200,\r\n    scene: [TitleScene, RoundScene, RoundTransitionScene, GameOverScene]\r\n};\r\n\r\nconst game = new Phaser.Game(config);"],"sourceRoot":""}