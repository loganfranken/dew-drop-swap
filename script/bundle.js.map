{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/render/WebGLRenderer.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/render/CanvasRenderer.js","webpack:///./script/scenes/TitleScene.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/object/NOOP.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/render/Render.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/textstyle/MeasureText.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/const.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/textstyle/TextStyle.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/canvastext/DrawMethods.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/struct/Stack.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/pool.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/penmanger/Pen.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/object/Clear.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/object/Clone.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/penmanger/PenManager.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/hitareamanager/HitAreaManager.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/canvastext/SetInteractive.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/canvastext/WrapText.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/canvastext/CanvasText.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/imagemanager/ImageManager.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/imagemanager/GetGlobImageManager.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/Text.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/tagtext/Parser.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/tagtext/TagText.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/tagtext/Creator.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/tagtext.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/tagtext/Factory.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/eventemitter/EventEmitterMethods.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/system/IsSceneObject.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/system/GetSceneObject.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/behaviors/texttyping/TextTyping.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/texttyping.js","webpack:///./script/TileGenerationBehavior.js","webpack:///./script/LevelManifest.js","webpack:///./script/Utility.js","webpack:///./script/TileState.js","webpack:///./script/TileType.js","webpack:///./script/TileGrid.js","webpack:///./script/Tile.js","webpack:///./script/scenes/RoundScene.js","webpack:///./script/ActionQueue.js","webpack:///./script/ScoreDisplay.js","webpack:///./script/Timer.js","webpack:///./script/DialogManager.js","webpack:///./script/DialogScript.js","webpack:///./script/Guide.js","webpack:///./script/scenes/RoundTransitionScene.js","webpack:///./script/scenes/GameOverScene.js","webpack:///./script/main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Utils","Phaser","Renderer","WebGL","renderer","src","interpolationPercentage","camera","parentMatrix","width","height","frame","getTint","getTintAppendFloatAlpha","this","pipeline","batchTexture","glTexture","x","y","style","resolution","scaleX","scaleY","rotation","flipX","flipY","scrollFactorX","scrollFactorY","displayOriginX","displayOriginY","_tintTL","alpha","_alphaTL","_tintTR","_alphaTR","_tintBL","_alphaBL","_tintBR","_alphaBR","_isTinted","tintFill","batchSprite","super","load","image","self","add","startBtn","setInteractive","on","setTintFill","clearTint","scene","start","level","renderWebGL","renderCanvas","CanvasPool","Display","Canvas","textStyle","canvas","context","getContext","syncFont","Math","ceil","measureText","testString","baselineX","baseline","baselineY","fillStyle","fillRect","font","_font","textBaseline","fillText","output","ascent","descent","fontSize","getImageData","remove","j","imagedata","data","pixels","length","line","idx","stop","NO_NEWLINE","RAW_NEWLINE","WRAPPED_NEWLINE","NO_WRAP","WORD_WRAP","CHAR_WRAP","SPLITREGEXP","GetAdvancedValue","Objects","GetValue","propertyMap","backgroundColor","fontFamily","fontStyle","color","stroke","strokeThickness","shadowOffsetX","shadowOffsetY","shadowColor","shadowBlur","shadowStroke","shadowFill","underlineColor","underlineThickness","underlineOffset","halign","valign","maxLines","fixedWidth","fixedHeight","lineSpacing","rtl","wrapMode","wrapWidth","WRAPMODE","none","word","char","character","text","parent","setStyle","metrics","updateText","undefined","wrap","toString","fill","update","strokeStyle","lineWidth","lineCap","lineJoin","enabled","recalculateMetrics","newFont","family","size","string","thickness","blur","offset","toLowerCase","max","getTextMetrics","startX","startY","boxWidth","boxHeight","penManager","hitAreaManager","clear","save","drawBackground","defatultStyle","startXOffset","startYOffset","drawLinesNum","drawLineStartIdx","drawLineEndIdx","offsetX","offsetY","lineHeight","lines","totalLinesNum","floor","lineIdx","getLineWidth","pens","penIdx","pensLen","drawPen","restore","pen","curStyle","parser","propToContextStyle","prop","buildFont","syncStyle","drawUnderline","isTextPen","drawText","isImagePen","drawImage","img","hasAreaMarker","area","clearRect","autoRound","round","savedLineCap","beginPath","moveTo","lineTo","syncShadow","strokeText","imgKey","imageManager","imgData","getFrame","left","source","cutX","cutY","cutWidth","cutHeight","items","pop","push","arr","apply","config","resetFromJSON","newLineMode","startIndex","txt","len","rawTextLength","obj","Array","isArray","out","objIsArray","GetFastValue","PensPool","LinesPool","maxLinesWidth","tagToText","tagToTextScope","freePens","pushMultiple","PEN_CONFIG","addPen","addTextPen","previousPen","lastPen","lastX","endIndex","lastLine","targetPenManager","li","llen","pi","plen","getLineEndIndex","hasLastPen","w","maxW","result","plainText","end","penTxt","penStartIdx","penEndIdx","currentProp","previousProp","wrapText","substring","Rectangle","Geom","RectanglePool","hitAreas","rectangle","setTo","hitArea","cnt","contains","graphics","scaleCanvas","rotateCanvas","translateCanvas","lineStyle","strokeRect","FireEvent","eventName","pointer","localX","localY","emit","event","splitRegExp","WRAP_RESULT","newline","getTextWidth","retLines","remainWidth","split","linesLen","tokenArray","token","textWidth","currLineWidth","curLineText","lineText","tokenLen","pensPool","newPenManager","_tmpPenManager","destroy","curProp","wrapLines","cursorX","cursorY","match","splitText","tagTextToProp","imgWidth","getOuterWidth","addNewLinePen","addImagePen","jLen","linesCount","getMaxLineWidth","desplayLinesCount","linesHeight","propToTagText","retPenManager","copyPenManager","updatePenManager","getSliceTagText","tmpPenManager","ret","copy","methods","assign","DrawMethods","globImageManager","textureManager","images","_add","textureKey","frameKey","frameWidth","frameHeight","right","exists","AddToDOM","DOM","GameObject","GameObjects","RemoveFromDOM","PensPools","type","sys","game","setPosition","setOrigin","initPipeline","align","_text","padding","top","bottom","dirty","_crop","resetCropObject","texture","textures","addCanvas","gl","deleteTexture","canvasText","setPadding","setText","events","dir","direction","display","originX","join","setFont","setFontFamily","setFontSize","setFontStyle","setFixedSize","setBackgroundColor","setFill","setColor","setStroke","setShadow","setShadowOffset","setShadowColor","setShadowBlur","setShadowStroke","setShadowFill","setWrapMode","setWrapWidth","setHAlign","setLineSpacing","setResolution","setMaxLines","runWrap","textHeight","linesWidth","h","updateDisplayOrigin","setSize","scale","draw","canvasToTexture","input","customHitArea","Components","ToJSON","toJSON","shape","callback","dropZone","getText","getPlainText","getPenManager","drawBounds","Class","mixin","Alpha","BlendMode","ComputedSize","Crop","Depth","Flip","GetBounds","Mask","Origin","Pipeline","ScrollFactor","Tint","Transform","Visible","Render","GETPROP_RESULT","prevProp","STYLE_RESULT","styleToProp","k","v","slen","isEmpty","thinkness","parseInt","replace","shadow","u","RE_SPACE","RE_SPLITTEXT","RE_CLASS_HEADER","RE_CLASS","RE_STYLE_HEADER","RE_STYLE","tags","innerMatch","charIdx","totalLen","matchStart","exec","lastIndex","test","propOut","_class","_style","defaultStyle","underline","isTextTag","tagName","tag","Parser","addTag","preDestroy","BuildGameObject","GameObjectFactory","register","gameObject","existing","GameObjectCreator","content","addToScene","eventEmitter","EventEmitterClass","Events","EventEmitter","_privateEE","_eventEmitter","shutdown","arguments","once","off","addListener","removeListener","removeAllListeners","listenerCount","listeners","SceneClass","Scene","setEventEmitter","timer","boot","setTypeMode","setTypeSpeed","setTextCallback","setTextCallbackScope","typingIdx","transferText","textLen","insertIdx","elapsed","getTimer","typeMode","speed","destroyEventEmitter","freeTimer","TYPEMODE","startIdx","timerStartAt","setTypingContent","startTimer","newText","concat","isTyping","showAllText","paused","getTextLength","getTypingString","isLastChar","delay","typeIdx","endIdx","getSubString","midIdx","lowerResult","lowerLen","upperResult","upperLen","startAt","time","addEvent","loop","onTyping","callbackScope","slice","EventEmitterMethods","score","behavior","TileGenerationBehavior","getRandomItem","random","imageKey","tileGridWidth","tileGridHeight","tileSize","onTileSelect","onTileMatch","tileGenerationBehavior","queue","tileGrid","tileImageContainer","playAreaOffset","createTile","getTileType","container","forEachTile","tile","maskShape","make","mask","Masks","GeometryMask","matchedTiles","getMatches","destroys","forEach","Promise","all","state","TileState","drops","closestY","closestTile","getTileDrop","forEachPlayableTile","adjustedY","firstTile","secondTile","firstTileX","firstTileY","firstTileGridX","tileGridX","firstTileGridY","tileGridY","secondTileX","secondTileY","secondTileGridX","secondTileGridY","firstSwap","updatePosition","secondSwap","targetGridX","targetGridY","isPlayable","targetTileType","tileType","matchedXTiles","matchedYTiles","currX","currTile","currY","isActivated","resolve","reject","tweens","targets","ease","duration","onComplete","getTileX","getTileY","aboveTile","belowTile","leftTile","rightTile","TileType","filter","map","isAwaitingRoundTransition","selectedTiles","scoreDisplay","guide","comboCount","totalMatches","queuedActions","currentAction","shift","action","then","LevelManifest","TileGrid","scoreText","comboText","updateScore","timerSeconds","seconds","isPaused","tick","minutes","script","introMessages","getDisplayTileMatchMessages","getGameOverMessages","getScript","queuedMessages","isBlockingGameplay","endDialogueMarkerGraphics","speechBubbleGraphics","fillRoundedRect","fillTriangle","hideEndDialogueMarker","endDialogueMarker","Circle","fillCircleShape","repeat","yoyo","speechBubbleTextStyle","exclamation","speechBubbleText","speechBubbleTextTyping","onMessageComplete","queueMessages","messages","progressDialogue","showEndDialogueMarker","message","convertDialogToTagText","setVisible","styles","className","currClass","currChar","isStyleToken","some","targetStyle","find","nextLevel","console","log","displayGameOverMessage","isLevelComplete","isActionRunning","hasActions","next","canSelect","deactivate","activate","selectedTile","xDiff","abs","yDiff","firstSelectedTile","secondSelectedTile","swapTiles","hasMatches","displayTileMatchMessage","updateCombo","finalScore","startOverBtn","AUTO","TitleScene","RoundScene","RoundTransitionScene","GameOverScene","Game"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Utils = Phaser.Renderer.WebGL.Utils;\r\n\r\n/**\r\n * Renders this Game Object with the WebGL Renderer to the given Camera.\r\n * The object will not render if any of its renderFlags are set or it is being actively filtered out by the Camera.\r\n * This method should not be called directly. It is a utility function of the Render module.\r\n *\r\n * @method Phaser.GameObjects.Text#renderWebGL\r\n * @since 3.0.0\r\n * @private\r\n *\r\n * @param {Phaser.Renderer.WebGL.WebGLRenderer} renderer - A reference to the current active WebGL renderer.\r\n * @param {Phaser.GameObjects.Text} src - The Game Object being rendered in this call.\r\n * @param {number} interpolationPercentage - Reserved for future use and custom pipelines.\r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The Camera that is rendering the Game Object.\r\n * @param {Phaser.GameObjects.Components.TransformMatrix} parentMatrix - This transform matrix is defined if the game object is nested\r\n */\r\nvar TextWebGLRenderer = function (renderer, src, interpolationPercentage, camera, parentMatrix) {\r\n    if ((src.width === 0) || (src.height === 0)) {\r\n        return;\r\n    }\r\n\r\n    var frame = src.frame;\r\n    var width = frame.width;\r\n    var height = frame.height;\r\n    var getTint = Utils.getTintAppendFloatAlpha;\r\n\r\n    this.pipeline.batchTexture(\r\n        src,\r\n        frame.glTexture,\r\n        width, height,\r\n        src.x, src.y,\r\n        width / src.style.resolution, height / src.style.resolution,\r\n        src.scaleX, src.scaleY,\r\n        src.rotation,\r\n        src.flipX, src.flipY,\r\n        src.scrollFactorX, src.scrollFactorY,\r\n        src.displayOriginX, src.displayOriginY,\r\n        0, 0, width, height,\r\n        getTint(src._tintTL, camera.alpha * src._alphaTL),\r\n        getTint(src._tintTR, camera.alpha * src._alphaTR),\r\n        getTint(src._tintBL, camera.alpha * src._alphaBL),\r\n        getTint(src._tintBR, camera.alpha * src._alphaBR),\r\n        (src._isTinted && src.tintFill),\r\n        0, 0,\r\n        camera,\r\n        parentMatrix\r\n    );\r\n};\r\n\r\nmodule.exports = TextWebGLRenderer;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Renders this Game Object with the Canvas Renderer to the given Camera.\r\n * The object will not render if any of its renderFlags are set or it is being actively filtered out by the Camera.\r\n * This method should not be called directly. It is a utility function of the Render module.\r\n *\r\n * @method Phaser.GameObjects.Text#renderCanvas\r\n * @since 3.0.0\r\n * @private\r\n *\r\n * @param {Phaser.Renderer.Canvas.CanvasRenderer} renderer - A reference to the current active Canvas renderer.\r\n * @param {Phaser.GameObjects.Text} src - The Game Object being rendered in this call.\r\n * @param {number} interpolationPercentage - Reserved for future use and custom pipelines.\r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The Camera that is rendering the Game Object.\r\n * @param {Phaser.GameObjects.Components.TransformMatrix} parentMatrix - This transform matrix is defined if the game object is nested\r\n */\r\nvar TextCanvasRenderer = function (renderer, src, interpolationPercentage, camera, parentMatrix) {\r\n    if ((src.width === 0) || (src.height === 0)) {\r\n        return;\r\n    }\r\n\r\n    renderer.batchSprite(src, src.frame, camera, parentMatrix);\r\n};\r\n\r\nmodule.exports = TextCanvasRenderer;\r\n","export default class extends Phaser.Scene {\r\n\r\n    constructor()\r\n    {\r\n        super('TitleScene');\r\n    }\r\n\r\n    preload()\r\n    {\r\n        this.load.image('background', 'assets/background.png');\r\n        this.load.image('title', 'assets/title.png');\r\n        this.load.image('start', 'assets/start.png');\r\n    }\r\n\r\n    create()\r\n    {\r\n        const self = this;\r\n\r\n        // Background\r\n        this.add.image(400, 400, 'background');\r\n\r\n        // Title\r\n        this.add.image(400, 200, 'title');\r\n\r\n        // \"Start\" Button\r\n        const startBtn = this.add.image(400, 600, 'start');\r\n        startBtn.setInteractive();\r\n\r\n        startBtn.on('pointerover', () => { startBtn.setTintFill(0xffffff); });\r\n        startBtn.on('pointerout', () => { startBtn.clearTint(); });\r\n\r\n        startBtn.on('pointerdown', () => { self.scene.start('RoundScene', { level: 0 }); });\r\n    }\r\n    \r\n}","var NOOP = function () {\r\n    //  NOOP\r\n};\r\n\r\nexport default NOOP;","import WebGLRenderer from './WebGLRenderer.js';\r\nimport CanvasRenderer from './CanvasRenderer.js';\r\nimport NOOP from '../../../../utils/object/NOOP';\r\n\r\nvar renderWebGL = NOOP;\r\nvar renderCanvas = NOOP;\r\n\r\nif (WEBGL_RENDERER) {\r\n    renderWebGL = WebGLRenderer;\r\n}\r\n\r\nif (CANVAS_RENDERER) {\r\n    renderCanvas = CanvasRenderer;\r\n}\r\n\r\nexport default {\r\n    renderWebGL: renderWebGL,\r\n    renderCanvas: renderCanvas\r\n\r\n};","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nconst CanvasPool = Phaser.Display.Canvas.CanvasPool;\r\n\r\n/**\r\n * Calculates the ascent, descent and fontSize of a given font style.\r\n *\r\n * @function Phaser.GameObjects.Text.MeasureText\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.GameObjects.Text.TextStyle} textStyle - The TextStyle object to measure.\r\n *\r\n * @return {object} An object containing the ascent, descent and fontSize of the TextStyle.\r\n */\r\nvar MeasureText = function (textStyle) {\r\n    // @property {HTMLCanvasElement} canvas - The canvas element that the text is rendered.\r\n    var canvas = CanvasPool.create(this);\r\n\r\n    // @property {HTMLCanvasElement} context - The context of the canvas element that the text is rendered to.\r\n    var context = canvas.getContext('2d');\r\n\r\n    textStyle.syncFont(canvas, context);\r\n\r\n    var width = Math.ceil(context.measureText(textStyle.testString).width * textStyle.baselineX);\r\n    var baseline = width;\r\n    var height = 2 * baseline;\r\n\r\n    baseline = baseline * textStyle.baselineY | 0;\r\n\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n\r\n    context.fillStyle = '#f00';\r\n    context.fillRect(0, 0, width, height);\r\n\r\n    context.font = textStyle._font;\r\n\r\n    context.textBaseline = 'alphabetic';\r\n    context.fillStyle = '#000';\r\n    context.fillText(textStyle.testString, 0, baseline);\r\n\r\n    var output = {\r\n        ascent: 0,\r\n        descent: 0,\r\n        fontSize: 0\r\n    };\r\n\r\n    if (!context.getImageData(0, 0, width, height)) {\r\n        output.ascent = baseline;\r\n        output.descent = baseline + 6;\r\n        output.fontSize = output.ascent + output.descent;\r\n\r\n        CanvasPool.remove(canvas);\r\n\r\n        return output;\r\n    }\r\n\r\n    var imagedata = context.getImageData(0, 0, width, height).data;\r\n    var pixels = imagedata.length;\r\n    var line = width * 4;\r\n    var i;\r\n    var j;\r\n    var idx = 0;\r\n    var stop = false;\r\n\r\n    // ascent. scan from top to bottom until we find a non red pixel\r\n    for (i = 0; i < baseline; i++) {\r\n        for (j = 0; j < line; j += 4) {\r\n            if (imagedata[idx + j] !== 255) {\r\n                stop = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!stop) {\r\n            idx += line;\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n\r\n    output.ascent = baseline - i;\r\n\r\n    idx = pixels - line;\r\n    stop = false;\r\n\r\n    // descent. scan from bottom to top until we find a non red pixel\r\n    for (i = height; i > baseline; i--) {\r\n        for (j = 0; j < line; j += 4) {\r\n            if (imagedata[idx + j] !== 255) {\r\n                stop = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!stop) {\r\n            idx -= line;\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n\r\n    output.descent = (i - baseline);\r\n    output.fontSize = output.ascent + output.descent;\r\n\r\n    CanvasPool.remove(canvas);\r\n\r\n    return output;\r\n};\r\n\r\nexport default MeasureText;","var CONST = {\r\n    // new line mode\r\n    NO_NEWLINE: 0,\r\n    RAW_NEWLINE: 1,\r\n    WRAPPED_NEWLINE: 2,\r\n\r\n    // wrap mode\r\n    NO_WRAP: 0,\r\n    WORD_WRAP: 1,\r\n    CHAR_WRAP: 2,\r\n\r\n    // split lines\r\n    SPLITREGEXP: /(?:\\r\\n|\\r|\\n)/\r\n};\r\n\r\nexport default CONST;","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nimport MeasureText from './MeasureText.js';\r\nimport CONST from '../const.js';\r\n\r\nconst GetAdvancedValue = Phaser.Utils.Objects.GetAdvancedValue;\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\n\r\n//  Key: [ Object Key, Default Value ]\r\n\r\n/**\r\n * A custom function that will be responsible for wrapping the text.\r\n * @callback TextStyleWordWrapCallback\r\n *\r\n * @param {string} text - The string to wrap.\r\n * @param {Phaser.GameObjects.Text} textObject - The Text instance.\r\n *\r\n * @return {(string|string[])} Should return the wrapped lines either as an array of lines or as a string with\r\n * newline characters in place to indicate where breaks should happen.\r\n */\r\n\r\nvar propertyMap = {\r\n    // background\r\n    backgroundColor: ['backgroundColor', null],\r\n\r\n    // font\r\n    fontFamily: ['fontFamily', 'Courier'],\r\n    fontSize: ['fontSize', '16px'],\r\n    fontStyle: ['fontStyle', ''],\r\n    color: ['color', '#fff'],\r\n    stroke: ['stroke', '#fff'],\r\n    strokeThickness: ['strokeThickness', 0],\r\n    shadowOffsetX: ['shadow.offsetX', 0],\r\n    shadowOffsetY: ['shadow.offsetY', 0],\r\n    shadowColor: ['shadow.color', '#000'],\r\n    shadowBlur: ['shadow.blur', 0],\r\n    shadowStroke: ['shadow.stroke', false],\r\n    shadowFill: ['shadow.fill', false],\r\n\r\n    // underline\r\n    underlineColor: ['underline.color', '#000'],\r\n    underlineThickness: ['underline.thickness', 0],\r\n    underlineOffset: ['underline.offset', 0],\r\n\r\n    // align\r\n    halign: ['halign', 'left'],\r\n    valign: ['valign', 'top'],\r\n\r\n    // size\r\n    maxLines: ['maxLines', 0],\r\n    fixedWidth: ['fixedWidth', 0],\r\n    fixedHeight: ['fixedHeight', 0],\r\n    resolution: ['resolution', 0],\r\n    lineSpacing: ['lineSpacing', 0],\r\n\r\n    rtl: ['rtl', false],\r\n    testString: ['testString', '|MÃ‰qgy'],\r\n    baselineX: ['baselineX', 1.2],\r\n    baselineY: ['baselineY', 1.4],\r\n\r\n    // wrap\r\n    wrapMode: ['wrap.mode', 1],\r\n    wrapWidth: ['wrap.width', 0]\r\n    //wrapCallback: ['wrap.callback', null],\r\n    //wrapCallbackScope: ['wrap.callbackScope', null]\r\n};\r\n\r\nclass TextStyle {\r\n    constructor(text, style) {\r\n        this.parent = text;\r\n\r\n        this.backgroundColor;\r\n\r\n        this.fontFamily;\r\n        this.fontSize;\r\n        this.fontStyle;\r\n        this.color;\r\n        this.stroke;\r\n        this.strokeThickness;\r\n        this.shadowOffsetX;\r\n        this.shadowOffsetY;\r\n        this.shadowColor;\r\n        this.shadowBlur;\r\n        this.shadowStroke;\r\n        this.shadowFill;\r\n\r\n        this.underlineColor;\r\n        this.underlineThickness;\r\n        this.underlineOffset;\r\n\r\n        this.halign;\r\n        this.valign;\r\n\r\n        this.maxLines;\r\n        this.fixedWidth;\r\n        this.fixedHeight;\r\n        this.resolution;\r\n        this.lineSpacing;\r\n\r\n        this.rtl;\r\n        this.testString;\r\n\r\n\r\n        this.baselineX;\r\n        this.baselineY;\r\n\r\n        this._font;\r\n\r\n        //  Set to defaults + user style\r\n        this.setStyle(style, false);\r\n\r\n        var metrics = GetValue(style, 'metrics', false);\r\n\r\n        //  Provide optional TextMetrics in the style object to avoid the canvas look-up / scanning\r\n        //  Doing this is reset if you then change the font of this TextStyle after creation\r\n        if (metrics) {\r\n            this.metrics = {\r\n                ascent: GetValue(metrics, 'ascent', 0),\r\n                descent: GetValue(metrics, 'descent', 0),\r\n                fontSize: GetValue(metrics, 'fontSize', 0)\r\n            };\r\n        } else {\r\n            this.metrics = MeasureText(this);\r\n        }\r\n    }\r\n\r\n    setStyle(style, updateText) {\r\n        if (updateText === undefined) {\r\n            updateText = true;\r\n        }\r\n\r\n        if (style && style.hasOwnProperty('wrap')) {\r\n            var wrap = style.wrap;\r\n            if (wrap.hasOwnProperty('mode')) {\r\n                var mode = wrap.mode;\r\n                if (typeof mode === 'string') {\r\n                    wrap.mode = WRAPMODE[mode];\r\n                }\r\n            } else {\r\n                if (wrap.hasOwnProperty('width')) {\r\n                    wrap.mode = 1;\r\n                }\r\n            }\r\n        }\r\n\r\n        //  Avoid type mutation\r\n        if (style && style.hasOwnProperty('fontSize') && typeof style.fontSize === 'number') {\r\n            style.fontSize = style.fontSize.toString() + 'px';\r\n        }\r\n\r\n        for (var key in propertyMap) {\r\n            if (key === 'wrapCallback' || key === 'wrapCallbackScope') {\r\n                // Callback & scope should be set without processing the values\r\n                this[key] = GetValue(style, propertyMap[key][0], propertyMap[key][1]);\r\n            } else {\r\n                this[key] = GetAdvancedValue(style, propertyMap[key][0], propertyMap[key][1]);\r\n            }\r\n        }\r\n\r\n        //  Allow for 'font' override\r\n        var font = GetValue(style, 'font', null);\r\n\r\n        if (font === null) {\r\n            this._font = this.fontStyle + ' ' + this.fontSize + ' ' + this.fontFamily;\r\n        } else {\r\n            this._font = font;\r\n        }\r\n\r\n        //  Allow for 'fill' to be used in place of 'color'\r\n        var fill = GetValue(style, 'fill', null);\r\n\r\n        if (fill !== null) {\r\n            this.color = fill;\r\n        }\r\n\r\n        if (updateText) {\r\n            return this.update(true);\r\n        } else {\r\n            return this.parent;\r\n        }\r\n    }\r\n\r\n    syncFont(canvas, context) {\r\n        context.font = this._font;\r\n    }\r\n\r\n    syncStyle(canvas, context) {\r\n        context.textBaseline = 'alphabetic';\r\n\r\n        context.fillStyle = this.color;\r\n        context.strokeStyle = this.stroke;\r\n\r\n        context.lineWidth = this.strokeThickness;\r\n        context.lineCap = 'round';\r\n        context.lineJoin = 'round';\r\n    }\r\n\r\n    syncShadow(context, enabled) {\r\n        if (enabled) {\r\n            context.shadowOffsetX = this.shadowOffsetX;\r\n            context.shadowOffsetY = this.shadowOffsetY;\r\n            context.shadowColor = this.shadowColor;\r\n            context.shadowBlur = this.shadowBlur;\r\n        } else {\r\n            context.shadowOffsetX = 0;\r\n            context.shadowOffsetY = 0;\r\n            context.shadowColor = 0;\r\n            context.shadowBlur = 0;\r\n        }\r\n    }\r\n\r\n    update(recalculateMetrics) {\r\n        if (recalculateMetrics) {\r\n            this._font = this.fontStyle + ' ' + this.fontSize + ' ' + this.fontFamily;\r\n\r\n            this.metrics = MeasureText(this);\r\n        }\r\n\r\n        return this.parent.updateText(recalculateMetrics);\r\n    }\r\n\r\n    buildFont() {\r\n        var newFont = this.fontStyle + ' ' + this.fontSize + ' ' + this.fontFamily;\r\n        if (newFont !== this._font) {\r\n            this._font = newFont;\r\n            //this.metrics = MeasureText(this);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    setFont(font) {\r\n        if (typeof font === 'string') {\r\n            this.fontFamily = font;\r\n            this.fontSize = '';\r\n            this.fontStyle = '';\r\n        } else {\r\n            this.fontFamily = GetValue(font, 'fontFamily', 'Courier');\r\n            this.fontSize = GetValue(font, 'fontSize', '16px');\r\n            this.fontStyle = GetValue(font, 'fontStyle', '');\r\n        }\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setFontFamily(family) {\r\n        this.fontFamily = family;\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setFontStyle(style) {\r\n        this.fontStyle = style;\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setFontSize(size) {\r\n        if (typeof size === 'number') {\r\n            size = size.toString() + 'px';\r\n        }\r\n\r\n        this.fontSize = size;\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setTestString(string) {\r\n        this.testString = string;\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setFixedSize(width, height) {\r\n        this.fixedWidth = width;\r\n        this.fixedHeight = height;\r\n\r\n        if (width) {\r\n            this.parent.width = width;\r\n        }\r\n\r\n        if (height) {\r\n            this.parent.height = height;\r\n        }\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setResolution(value) {\r\n        this.resolution = value;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setLineSpacing(value) {\r\n        this.lineSpacing = value;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setBackgroundColor(color) {\r\n        this.backgroundColor = color;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setFill(color) {\r\n        this.color = color;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setColor(color) {\r\n        this.color = color;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setStroke(color, thickness) {\r\n        if (color === undefined) {\r\n            //  Reset the stroke to zero (disabling it)\r\n            this.strokeThickness = 0;\r\n        } else {\r\n            if (thickness === undefined) {\r\n                thickness = this.strokeThickness;\r\n            }\r\n\r\n            this.stroke = color;\r\n            this.strokeThickness = thickness;\r\n        }\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setShadow(x, y, color, blur, shadowStroke, shadowFill) {\r\n        if (x === undefined) {\r\n            x = 0;\r\n        }\r\n        if (y === undefined) {\r\n            y = 0;\r\n        }\r\n        if (color === undefined) {\r\n            color = '#000';\r\n        }\r\n        if (blur === undefined) {\r\n            blur = 0;\r\n        }\r\n        if (shadowStroke === undefined) {\r\n            shadowStroke = false;\r\n        }\r\n        if (shadowFill === undefined) {\r\n            shadowFill = true;\r\n        }\r\n\r\n        this.shadowOffsetX = x;\r\n        this.shadowOffsetY = y;\r\n        this.shadowColor = color;\r\n        this.shadowBlur = blur;\r\n        this.shadowStroke = shadowStroke;\r\n        this.shadowFill = shadowFill;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setShadowOffset(x, y) {\r\n        if (x === undefined) {\r\n            x = 0;\r\n        }\r\n        if (y === undefined) {\r\n            y = x;\r\n        }\r\n\r\n        this.shadowOffsetX = x;\r\n        this.shadowOffsetY = y;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setShadowColor(color) {\r\n        if (color === undefined) {\r\n            color = '#000';\r\n        }\r\n\r\n        this.shadowColor = color;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setShadowBlur(blur) {\r\n        if (blur === undefined) {\r\n            blur = 0;\r\n        }\r\n\r\n        this.shadowBlur = blur;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setShadowStroke(enabled) {\r\n        this.shadowStroke = enabled;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setShadowFill(enabled) {\r\n        this.shadowFill = enabled;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setUnderline(color, thickness, offset) {\r\n        if (color === undefined) {\r\n            color = '#000';\r\n        }\r\n        if (thickness === undefined) {\r\n            thickness = 0;\r\n        }\r\n        if (offset === undefined) {\r\n            offset = 0;\r\n        }\r\n\r\n        this.underlineColor = color;\r\n        this.underlineThickness = thickness;\r\n        this.underlineOffset = offset;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setUnderlineColor(color) {\r\n        if (color === undefined) {\r\n            color = '#000';\r\n        }\r\n\r\n        this.underlineColor = color;\r\n        return this.update(false);\r\n    }\r\n\r\n    setUnderlineThickness(thickness) {\r\n        if (thickness === undefined) {\r\n            thickness = 0;\r\n        }\r\n\r\n        this.underlineThickness = thickness;\r\n        return this.update(false);\r\n    }\r\n\r\n    setUnderlineOffset(offset) {\r\n        if (offset === undefined) {\r\n            offset = 0;\r\n        }\r\n\r\n        this.underlineOffset = offset;\r\n        return this.update(false);\r\n    }\r\n\r\n    setWrapMode(mode) {\r\n        if (typeof mode === 'string') {\r\n            mode = WRAPMODE[mode.toLowerCase()] || 0;\r\n        }\r\n        this.wrapMode = mode;\r\n        return this.update(true);\r\n    }\r\n\r\n    setWrapWidth(width) {\r\n        this.wrapWidth = width;\r\n        return this.update(false);\r\n    }\r\n\r\n    setAlign(halign, valign) {\r\n        if (halign === undefined) {\r\n            halign = 'left';\r\n        }\r\n        if (valign === undefined) {\r\n            valign = 'top';\r\n        }\r\n        this.halign = halign;\r\n        this.valign = valign;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setHAlign(halign) {\r\n        if (halign === undefined) {\r\n            halign = 'left';\r\n        }\r\n        this.halign = halign;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setVAlign(valign) {\r\n        if (valign === undefined) {\r\n            valign = 'top';\r\n        }\r\n        this.valign = valign;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setMaxLines(max) {\r\n        if (max === undefined) {\r\n            max = 0;\r\n        }\r\n\r\n        this.maxLines = max;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    getTextMetrics() {\r\n        var metrics = this.metrics;\r\n\r\n        return {\r\n            ascent: metrics.ascent,\r\n            descent: metrics.descent,\r\n            fontSize: metrics.fontSize\r\n        };\r\n    }\r\n\r\n    get lineHeight() {\r\n        return this.metrics.fontSize + this.strokeThickness + this.lineSpacing;\r\n    }\r\n\r\n    toJSON() {\r\n        var output = {};\r\n\r\n        for (var key in propertyMap) {\r\n            output[key] = this[key];\r\n        }\r\n\r\n        output.metrics = this.getTextMetrics();\r\n\r\n        return output;\r\n    }\r\n\r\n    destroy() {\r\n        this.parent = undefined;\r\n    }\r\n\r\n}\r\n\r\nconst HALIGNMODE = {\r\n    left: CONST.hleft,\r\n    center: CONST.hcenter,\r\n    right: CONST.hright,\r\n};\r\nconst VALIGNMODE = {\r\n    top: CONST.vtop,\r\n    center: CONST.vcenter,\r\n    bottom: CONST.vbottom,\r\n};\r\nconst WRAPMODE = {\r\n    none: CONST.NO_WRAP,\r\n    word: CONST.WORD_WRAP,\r\n    char: CONST.CHAR_WRAP,\r\n    character: CONST.CHAR_WRAP\r\n};\r\n\r\nexport default TextStyle;","import CONST from '../const.js';\r\n\r\nexport default {\r\n    draw(startX, startY, boxWidth, boxHeight) {\r\n        var penManager = this.penManager;\r\n        this.hitAreaManager.clear();\r\n\r\n        var context = this.context;\r\n        context.save();\r\n\r\n        // this.clear();\r\n        this.drawBackground(this.defatultStyle.backgroundColor);\r\n\r\n        // draw lines\r\n        var defatultStyle = this.defatultStyle;\r\n        startX += this.startXOffset;\r\n        startY += this.startYOffset;\r\n        var halign = defatultStyle.halign,\r\n            valign = defatultStyle.valign;\r\n\r\n        var lineWidth, lineHeight = defatultStyle.lineHeight;\r\n        var lines = penManager.lines;\r\n        var totalLinesNum = lines.length,\r\n            maxLines = defatultStyle.maxLines;\r\n        var drawLinesNum, drawLineStartIdx, drawLineEndIdx;\r\n        if ((maxLines > 0) && (totalLinesNum > maxLines)) {\r\n            drawLinesNum = maxLines;\r\n            if (valign === 'center') { // center\r\n                drawLineStartIdx = Math.floor((totalLinesNum - drawLinesNum) / 2);\r\n            } else if (valign === 'bottom') { // bottom\r\n                drawLineStartIdx = totalLinesNum - drawLinesNum;\r\n            } else {\r\n                drawLineStartIdx = 0;\r\n            }\r\n        } else {\r\n            drawLinesNum = totalLinesNum;\r\n            drawLineStartIdx = 0;\r\n        }\r\n        drawLineEndIdx = drawLineStartIdx + drawLinesNum;\r\n\r\n        var offsetX, offsetY;\r\n        if (valign === 'center') { // center\r\n            offsetY = Math.max((boxHeight - (drawLinesNum * lineHeight)) / 2, 0);\r\n        } else if (valign === 'bottom') { // bottom\r\n            offsetY = Math.max(boxHeight - (drawLinesNum * lineHeight) - 2, 0);\r\n        } else {\r\n            offsetY = 0;\r\n        }\r\n        offsetY += startY;\r\n        for (var lineIdx = drawLineStartIdx; lineIdx < drawLineEndIdx; lineIdx++) {\r\n            lineWidth = penManager.getLineWidth(lineIdx);\r\n            if (lineWidth === 0) {\r\n                continue;\r\n            }\r\n\r\n            if (halign === 'center') { // center\r\n                offsetX = (boxWidth - lineWidth) / 2;\r\n            } else if (halign === 'right') { // right\r\n                offsetX = boxWidth - lineWidth;\r\n            } else {\r\n                offsetX = 0;\r\n            }\r\n            offsetX += startX;\r\n\r\n            var pens = lines[lineIdx];\r\n            for (var penIdx = 0, pensLen = pens.length; penIdx < pensLen; penIdx++) {\r\n                this.drawPen(pens[penIdx], offsetX, offsetY);\r\n            }\r\n        }\r\n\r\n        context.restore();\r\n    },\r\n\r\n    drawPen(pen, offsetX, offsetY) {\r\n        offsetX += pen.x;\r\n        offsetY += pen.y;\r\n\r\n        var canvas = this.canvas;\r\n        var context = this.context;\r\n        context.save();\r\n\r\n        var curStyle = this.parser.propToContextStyle(\r\n            this.defatultStyle,\r\n            pen.prop\r\n        );\r\n        curStyle.buildFont();\r\n        curStyle.syncFont(canvas, context);\r\n        curStyle.syncStyle(canvas, context);\r\n\r\n        // Underline\r\n        if ((curStyle.underlineThickness > 0) && (pen.width > 0)) {\r\n            this.drawUnderline(offsetX, offsetY, pen.width, curStyle);\r\n        }\r\n\r\n        // Text\r\n        if (pen.isTextPen) {\r\n            this.drawText(offsetX, offsetY, pen.text, curStyle);\r\n        }\r\n\r\n        // Image\r\n        if (pen.isImagePen) {\r\n            this.drawImage(offsetX, offsetY, pen.prop.img, curStyle);\r\n        }\r\n\r\n        context.restore();\r\n\r\n        if (pen.hasAreaMarker && (pen.width > 0)) {\r\n            this.hitAreaManager.add(\r\n                pen.prop.area,\r\n                offsetX, (offsetY - this.startYOffset),\r\n                pen.width, this.defatultStyle.lineHeight);\r\n        }\r\n    },\r\n\r\n    clear() {\r\n        var canvas = this.canvas;\r\n        this.context.clearRect(0, 0, canvas.width, canvas.height);\r\n    },\r\n\r\n    drawBackground(color) {\r\n        if (color === null) {\r\n            return;\r\n        }\r\n        this.context.fillStyle = color;\r\n        this.context.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n    },\r\n\r\n    drawUnderline(x, y, width, style) {\r\n        y += style.underlineOffset - (style.underlineThickness / 2);\r\n        if (this.autoRound) {\r\n            x = Math.round(x);\r\n            y = Math.round(y);\r\n        }\r\n\r\n        var context = this.context;\r\n        var savedLineCap = context.lineCap;\r\n        context.lineCap = 'butt';\r\n        context.beginPath();\r\n        context.strokeStyle = style.underlineColor;\r\n        context.lineWidth = style.underlineThickness;\r\n        context.moveTo(x, y);\r\n        context.lineTo((x + width), y);\r\n        context.stroke();\r\n        context.lineCap = savedLineCap;\r\n    },\r\n\r\n    drawText(x, y, text, style) {\r\n        if (this.autoRound) {\r\n            x = Math.round(x);\r\n            y = Math.round(y);\r\n        }\r\n\r\n        var context = this.context;\r\n        if (style.strokeThickness) {\r\n            style.syncShadow(context, style.shadowStroke);\r\n            context.strokeText(text, x, y);\r\n        }\r\n\r\n        if (style.color && (style.color !== 'none')) {\r\n            style.syncShadow(context, style.shadowFill);\r\n            context.fillText(text, x, y);\r\n        }\r\n    },\r\n\r\n    drawImage(x, y, imgKey, style) {\r\n        var imageManager = this.parent.imageManager;\r\n        var imgData = imageManager.get(imgKey);\r\n        var frame = imageManager.getFrame(imgKey);\r\n\r\n        x += imgData.left;\r\n        y += - this.startYOffset + imgData.y;\r\n        if (this.autoRound) {\r\n            x = Math.round(x);\r\n            y = Math.round(y);\r\n        }\r\n\r\n        var context = this.context;\r\n        context.drawImage(\r\n            frame.source.image,\r\n            frame.cutX, frame.cutY, frame.cutWidth, frame.cutHeight,\r\n            x, y, imgData.width, imgData.height\r\n        );\r\n    }\r\n\r\n}","class Stack {\r\n    constructor() {\r\n        this.items = [];\r\n    }\r\n\r\n    destroy() {\r\n        this.items.length = 0;\r\n        this.items = undefined;\r\n    }\r\n\r\n    pop() {\r\n        return (this.items.length > 0) ? this.items.pop() : null;\r\n    }\r\n\r\n    push(l) {\r\n        this.items.push(l);\r\n        return this;\r\n    }\r\n\r\n    pushMultiple(arr) {\r\n        this.items.push.apply(this.items, arr);\r\n        arr.length = 0;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport default Stack;","import Pool from './utils/struct/Stack.js';\r\nexport default Pool;","import CONST from '../const.js';\r\n\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\nconst NO_NEWLINE = CONST.NO_NEWLINE;\r\nconst RAW_NEWLINE = CONST.RAW_NEWLINE;\r\n\r\nclass Pen {\r\n    constructor(config) {\r\n        this.prop = {};\r\n        this.resetFromJSON(config);\r\n    }\r\n\r\n    resetFromJSON(o) { // (txt, x, y, width, prop, newLineMode, startIndex)\r\n        this.text = GetValue(o, 'text', '');\r\n        this.x = GetValue(o, 'x', 0);\r\n        this.y = GetValue(o, 'y', 0);\r\n        this.width = GetValue(o, 'width', 0);\r\n\r\n        var prop = GetValue(o, 'prop', null);\r\n        if (prop === null) {\r\n            prop = {};\r\n        }\r\n        this.prop = prop;\r\n        this.newLineMode = GetValue(o, 'newLineMode', 0);\r\n        this.startIndex = GetValue(o, 'startIndex', 0);\r\n    }\r\n\r\n    get plainText() {\r\n        var txt = this.text\r\n        if (this.newLineMode === RAW_NEWLINE) {\r\n            txt += \"\\n\";\r\n        }\r\n\r\n        return txt;\r\n    }\r\n\r\n    get wrapText() {\r\n        var txt = this.text;\r\n        if (this.newLineMode !== NO_NEWLINE) {\r\n            txt += \"\\n\";\r\n        }\r\n\r\n        return txt;\r\n    }\r\n\r\n    get rawTextLength() {\r\n        var len = this.text.length;\r\n        if (this.newLineMode === RAW_NEWLINE) {\r\n            len += 1;\r\n        }\r\n        return len;\r\n    }\r\n\r\n    get endIndex() {\r\n        return this.startIndex + this.rawTextLength;\r\n    }\r\n\r\n    get lastX() {\r\n        return this.x + this.width;\r\n    }\r\n\r\n    get isTextPen() {\r\n        return (this.text !== '');\r\n    }\r\n\r\n    get isImagePen() {\r\n        return !!this.prop.img;\r\n    }\r\n\r\n    get hasAreaMarker() {\r\n        return !!this.prop.area;\r\n    }\r\n};\r\n\r\nexport default Pen;","var Clear = function (obj) {\r\n    if (Array.isArray(obj)) {\r\n        obj.length = 0;\r\n    } else {\r\n        for (var key in obj) {\r\n            delete obj[key];\r\n        }\r\n    }\r\n}\r\nexport default Clear;","import Clear from './Clear.js';\r\n\r\n/**\r\n * Shallow Object Clone. Will not out nested objects.\r\n * @param {object} obj JSON object\r\n * @param {object} ret JSON object to return, set null to return a new object\r\n * @returns {object} this object\r\n */\r\nvar Clone = function (obj, out) {\r\n    var objIsArray = Array.isArray(obj);\r\n\r\n    if (out === undefined) {\r\n        out = (objIsArray) ? [] : {};\r\n    } else {\r\n        Clear(out);\r\n    }\r\n\r\n    if (objIsArray) {\r\n        out.length = obj.length;\r\n    }\r\n    for (var key in obj) {\r\n        out[key] = obj[key];\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nexport default Clone;\r\n","import Pool from '../../../../pool.js';\r\nimport Pen from './Pen.js';\r\nimport CONST from '../const.js';\r\nimport Clone from '../../../../utils/object/Clone.js';\r\nimport NOOP from '../../../../utils/object/NOOP.js';\r\n\r\nconst GetFastValue = Phaser.Utils.Objects.GetFastValue;\r\nconst NO_NEWLINE = CONST.NO_NEWLINE;\r\nconst WRAPPED_NEWLINE = CONST.WRAPPED_NEWLINE;\r\n\r\nvar PensPool = new Pool(); // default pens pool\r\nvar LinesPool = new Pool(); // default lines pool\r\nclass PenManager {\r\n    constructor(config) {\r\n        this.pens = []; // all pens\r\n        this.lines = []; // pens in lines [ [],[],[],.. ]\r\n        this.maxLinesWidth = undefined;\r\n\r\n        this.PensPool = GetFastValue(config, 'pensPool', PensPool);\r\n        this.LinesPool = GetFastValue(config, 'linesPool', LinesPool);\r\n        this.tagToText = GetFastValue(config, 'tagToText', NOOP);\r\n        this.tagToTextScope = GetFastValue(config, 'tagToTextScope', undefined);\r\n    }\r\n\r\n    destroy() {\r\n        this.freePens();\r\n        this.tagToText = undefined;\r\n        this.tagToTextScope = undefined;\r\n    }\r\n\r\n    freePens() {\r\n        for (var i = 0, len = this.lines.length; i < len; i++)\r\n            this.lines[i].length = 0;\r\n\r\n        this.PensPool.pushMultiple(this.pens);\r\n        this.LinesPool.pushMultiple(this.lines);\r\n        this.maxLinesWidth = undefined;\r\n    }\r\n\r\n    addTextPen(text, x, y, width, prop, newLineMode) {\r\n        var pen = this.PensPool.pop();\r\n        if (pen == null) {\r\n            pen = new Pen();\r\n        }\r\n        PEN_CONFIG.text = text;\r\n        PEN_CONFIG.x = x;\r\n        PEN_CONFIG.y = y;\r\n        PEN_CONFIG.width = width;\r\n        PEN_CONFIG.prop = prop;\r\n        PEN_CONFIG.newLineMode = newLineMode;\r\n        pen.resetFromJSON(PEN_CONFIG);\r\n        this.addPen(pen);\r\n        return this;\r\n    }\r\n\r\n    addImagePen(x, y, width, prop) {\r\n        this.addTextPen('', x, y, width, prop, NO_NEWLINE);\r\n        return this;\r\n    }\r\n\r\n    addNewLinePen() {\r\n        var previousPen = this.lastPen;\r\n        var x = (previousPen) ? previousPen.lastX : 0;\r\n        var y = (previousPen) ? previousPen.y : 0;\r\n        var prop = (previousPen) ? Clone(previousPen.prop) : null;\r\n        this.addTextPen('', x, y, 0, prop, WRAPPED_NEWLINE);\r\n        return this;\r\n    }\r\n\r\n    addPen(pen) {\r\n        var previousPen = this.lastPen;\r\n        if (previousPen == null) {\r\n            pen.startIndex = 0;\r\n        } else {\r\n            pen.startIndex = previousPen.endIndex;\r\n        }\r\n        this.pens.push(pen);\r\n\r\n        // maintan lines\r\n        var line = this.lastLine;\r\n        if (line == null) {\r\n            line = this.LinesPool.pop() || [];\r\n            this.lines.push(line);\r\n        }\r\n        line.push(pen);\r\n\r\n        // new line, add an empty line\r\n        if (pen.newLineMode !== NO_NEWLINE) {\r\n            line = this.LinesPool.pop() || [];\r\n            this.lines.push(line);\r\n        }\r\n        this.maxLinesWidth = undefined;\r\n    }\r\n\r\n    clone(targetPenManager) {\r\n        if (targetPenManager == null)\r\n            targetPenManager = new PenManager();\r\n\r\n        targetPenManager.freePens();\r\n\r\n        for (var li = 0, llen = this.lines.length; li < llen; li++) {\r\n            var pens = this.lines[li];\r\n            for (var pi = 0, plen = pens.length; pi < plen; pi++) {\r\n                var pen = pens[pi];\r\n                targetPenManager.addPen(\r\n                    pen.text,\r\n                    pen.x,\r\n                    pen.y,\r\n                    pen.width,\r\n                    Clone(pen.prop),\r\n                    pen.newLineMode\r\n                );\r\n            }\r\n        }\r\n\r\n        return targetPenManager;\r\n    }\r\n\r\n    get lastPen() {\r\n        return this.pens[this.pens.length - 1];\r\n    }\r\n\r\n    get lastLine() {\r\n        return this.lines[this.lines.length - 1];\r\n    }\r\n\r\n    getLineStartIndex(i) {\r\n        if (i >= this.lines.length) {\r\n            return this.getLineEndIndex(i);\r\n        } else {\r\n            var line = this.lines[i];\r\n            return (line && line[0]) ? line[0].startIndex : 0;\r\n        }\r\n    }\r\n\r\n    getLineEndIndex(i) {\r\n        if (i >= this.lines.length) {\r\n            i = this.lines.length - 1;\r\n        }\r\n        var li, hasLastPen = false,\r\n            line;\r\n        for (li = i; li >= 0; li--) {\r\n            line = this.lines[li];\r\n            hasLastPen = (line != null) && (line.length > 0);\r\n            if (hasLastPen) {\r\n                break;\r\n            }\r\n        }\r\n        if (!hasLastPen) {\r\n            return 0;\r\n        }\r\n\r\n        var lastPen = line[line.length - 1];\r\n        return lastPen.endIndex;\r\n    }\r\n\r\n    getLineWidth(i) {\r\n        var line = this.lines[i];\r\n        if (!line) {\r\n            return 0;\r\n        }\r\n\r\n        var lastPen = line[line.length - 1];\r\n        if (lastPen == null) {\r\n            return 0;\r\n        }\r\n\r\n        var lineWidth = lastPen.lastX; // start from 0\r\n        return lineWidth;\r\n    }\r\n\r\n    getMaxLineWidth() {\r\n        if (this.maxLinesWidth !== undefined) {\r\n            return this.maxLinesWidth;\r\n        }\r\n        var w, maxW = 0;\r\n        for (var i = 0, len = this.lines.length; i < len; i++) {\r\n            w = this.getLineWidth(i);\r\n            if (w > maxW) {\r\n                maxW = w;\r\n            }\r\n        }\r\n        this.maxLinesWidth = maxW;\r\n        return maxW;\r\n    }\r\n\r\n    getLineWidths() {\r\n        var result = [];\r\n        for (var i = 0, len = this.lines.length; i < len; i++) {\r\n            result.push(this.getLineWidth(i));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    get linesCount() {\r\n        return this.lines.length;\r\n    }\r\n\r\n    get plainText() {\r\n        var txt = \"\",\r\n            pens = this.pens;\r\n        for (var i = 0, len = pens.length; i < len; i++) {\r\n            txt += pens[i].plainText;\r\n        }\r\n\r\n        return txt;\r\n    }\r\n\r\n    get rawTextLength() {\r\n        var l = 0,\r\n            pens = this.pens;\r\n        for (var i = 0, len = this.pens.length; i < len; i++) {\r\n            l += pens[i].rawTextLength;\r\n        }\r\n\r\n        return l;\r\n    }\r\n\r\n    getSliceTagText(start, end, wrap) {\r\n        if (start === undefined) {\r\n            start = 0;\r\n        }\r\n        if (end === undefined) {\r\n            var lastPen = this.lastPen;\r\n            if (lastPen == null) {\r\n                return \"\";\r\n            }\r\n\r\n            end = lastPen.endIndex;\r\n        }\r\n        if (wrap === undefined) {\r\n            wrap = false;\r\n        }\r\n\r\n        var txt = \"\",\r\n            formatTxt,\r\n            pen, penTxt, penStartIdx, penEndIdx, isInRange;\r\n        var currentProp, previousProp;\r\n        for (var i = 0, len = this.pens.length; i < len; i++) {\r\n            pen = this.pens[i];\r\n            penEndIdx = pen.endIndex;\r\n            if (penEndIdx <= start) {\r\n                continue;\r\n            }\r\n            pen = this.pens[i];\r\n            penTxt = (!wrap) ? pen.plainText : pen.wrapText;\r\n            currentProp = pen.prop;\r\n            penStartIdx = pen.startIndex;\r\n\r\n            isInRange = (penStartIdx >= start) && (penEndIdx <= end);\r\n            if (!isInRange) {\r\n                penTxt = penTxt.substring(start - penStartIdx, end - penStartIdx);\r\n            }\r\n\r\n            if (this.tagToTextScope) {\r\n                txt += this.tagToText.call(this.tagToTextScope, penTxt, currentProp, previousProp);\r\n            } else {\r\n                txt += this.tagToText(penTxt, currentProp, previousProp);\r\n            }\r\n\r\n            previousProp = currentProp;\r\n            if (penEndIdx >= end) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return txt;\r\n    }\r\n};\r\n\r\nvar PEN_CONFIG = {};\r\n\r\nexport default PenManager;","import Pool from '../../../../pool.js';\r\n\r\nconst Rectangle = Phaser.Geom.Rectangle;\r\n\r\nvar RectanglePool = new Pool();\r\nclass HitAreaManager {\r\n    constructor() {\r\n        this.hitAreas = [];\r\n    }\r\n\r\n    destroy() {\r\n        this.clear();\r\n    }\r\n\r\n    clear() {\r\n        RectanglePool.pushMultiple(this.hitAreas);\r\n        return this;\r\n    }\r\n\r\n    add(key, x, y, width, height) {\r\n        var rectangle = RectanglePool.pop();\r\n        if (rectangle === null) {\r\n            rectangle = new Rectangle(x, y, width, height);\r\n        } else {\r\n            rectangle.setTo(x, y, width, height);\r\n        }\r\n        rectangle.key = key;\r\n        this.hitAreas.push(rectangle);\r\n        return this;\r\n    }\r\n\r\n    contains(x, y) {\r\n        var hitAreas = this.hitAreas, hitArea;\r\n        for (var i = 0, cnt = hitAreas.length; i < cnt; i++) {\r\n            hitArea = hitAreas[i];\r\n            if (hitArea.contains(x, y)) {\r\n                return hitArea.key;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    drawBounds(graphics, color, parent) {\r\n        if (color === undefined) {\r\n            color = 0xffffff;\r\n        }\r\n\r\n        if (parent) {\r\n            graphics\r\n                .save()\r\n                .scaleCanvas(parent.scaleX, parent.scaleY)\r\n                .rotateCanvas(parent.rotation)\r\n                .translateCanvas(parent.x, parent.y)\r\n        }\r\n\r\n        var hitAreas = this.hitAreas, hitArea;\r\n        for (var i = 0, cnt = hitAreas.length; i < cnt; i++) {\r\n            hitArea = hitAreas[i];\r\n            graphics.lineStyle(1, color).strokeRect(hitArea.x, hitArea.y, hitArea.width, hitArea.height);\r\n        }\r\n\r\n        if (parent) {\r\n            graphics\r\n                .restore()\r\n        }\r\n        return this;\r\n    }\r\n}\r\nexport default HitAreaManager;","var SetInteractive = function () {\r\n    this.parent\r\n        .on('pointerdown', function (pointer, localX, localY, event) {\r\n            FireEvent.call(this, 'areadown', pointer, localX, localY);\r\n        }, this)\r\n        .on('pointerup', function (pointer, localX, localY, event) {\r\n            FireEvent.call(this, 'areaup', pointer, localX, localY);\r\n        }, this)\r\n}\r\n\r\nvar FireEvent = function (eventName, pointer, localX, localY) {\r\n    var key = this.hitAreaManager.contains(localX, localY);\r\n    if (key === false) {\r\n        return;\r\n    }\r\n    this.parent.emit(`${eventName}-${key}`, pointer, localX, localY)\r\n    this.parent.emit(eventName, key, pointer, localX, localY)\r\n}\r\nexport default SetInteractive;","import Pool from '../../../../pool.js';\r\nimport CONST from '../const.js';\r\n\r\nconst NO_NEWLINE = CONST.NO_NEWLINE;\r\nconst RAW_NEWLINE = CONST.RAW_NEWLINE;\r\nconst WRAPPED_NEWLINE = CONST.WRAPPED_NEWLINE;\r\nconst NO_WRAP = CONST.NO_WRAP;\r\nconst WORD_WRAP = CONST.WORD_WRAP;\r\nconst CHAR_WRAP = CONST.CHAR_WRAP;\r\nconst splitRegExp = CONST.SPLITREGEXP;\r\n\r\nvar WRAP_RESULT = [];\r\nvar WrapText = function (text, getTextWidth, wrapMode, wrapWidth, offset) {\r\n    if (wrapWidth <= 0) {\r\n        wrapMode = NO_WRAP;\r\n    }\r\n\r\n    var retLines = WRAP_RESULT;\r\n    LinesPool.pushMultiple(retLines);\r\n\r\n    if (!text || !text.length) {\r\n        return retLines;\r\n    }\r\n\r\n    var lines = text.split(splitRegExp),\r\n        line, remainWidth, isLaseLine, newLineMode;\r\n    for (var i = 0, linesLen = lines.length; i < linesLen; i++) {\r\n        line = lines[i];\r\n        newLineMode = (i === (linesLen - 1)) ? NO_NEWLINE : RAW_NEWLINE;\r\n\r\n        if (wrapMode === NO_WRAP) {\r\n            var textWidth = getTextWidth(line);\r\n            retLines.push(LinesPool.newline(line, textWidth, newLineMode));\r\n            continue;\r\n        } else {\r\n            if (i === 0) {\r\n                remainWidth = wrapWidth - offset;\r\n            } else {\r\n                remainWidth = wrapWidth;\r\n            }\r\n        }\r\n\r\n        // short string testing\r\n        if (line.length <= 100) {\r\n            var textWidth = getTextWidth(line);\r\n            if (textWidth <= remainWidth) {\r\n                retLines.push(LinesPool.newline(line, textWidth, newLineMode));\r\n                continue;\r\n            }\r\n        }\r\n\r\n        // character mode\r\n        var tokenArray;\r\n        if (wrapMode === WORD_WRAP) {\r\n            // word mode\r\n            tokenArray = line.split(' ');\r\n        } else {\r\n            tokenArray = line;\r\n        }\r\n        var token;\r\n        var curLineText = '',\r\n            lineText = '',\r\n            currLineWidth, lineWidth = 0;\r\n        for (var j = 0, tokenLen = tokenArray.length; j < tokenLen; j++) {\r\n            token = tokenArray[j];\r\n\r\n            if (wrapMode === WORD_WRAP) {\r\n                curLineText += token;\r\n\r\n                if (j < (tokenLen - 1)) {\r\n                    curLineText += ' ';\r\n                }\r\n            } else {\r\n                curLineText += token;\r\n            }\r\n\r\n            currLineWidth = getTextWidth(curLineText);\r\n            if (currLineWidth > remainWidth) {\r\n                // new line\r\n                if (j === 0) {\r\n                    retLines.push(LinesPool.newline('', 0, WRAPPED_NEWLINE));\r\n                } else {\r\n                    retLines.push(LinesPool.newline(lineText, lineWidth, WRAPPED_NEWLINE));\r\n                    curLineText = token;\r\n                    if (wrapMode === WORD_WRAP) {\r\n                        if (j < (tokenLen - 1)) {\r\n                            curLineText += ' ';\r\n                        }\r\n                    }\r\n                    currLineWidth = getTextWidth(curLineText);\r\n                }\r\n\r\n                remainWidth = wrapWidth;\r\n            }\r\n\r\n            lineText = curLineText;\r\n            lineWidth = currLineWidth;\r\n        } // for token in tokenArray\r\n\r\n        // flush remain text\r\n        retLines.push(LinesPool.newline(lineText, lineWidth, newLineMode));\r\n\r\n    } // for each line in lines\r\n\r\n    return retLines;\r\n};\r\n\r\nvar LinesPool = new Pool();\r\nLinesPool.newline = function (text, width, newLineMode) {\r\n    var l = this.pop();\r\n    if (l === null) {\r\n        l = {};\r\n    }\r\n    l.text = text;\r\n    l.width = width;\r\n    l.newLineMode = newLineMode;\r\n    return l;\r\n};\r\n\r\nexport default WrapText;","import DrawMethods from './DrawMethods.js';\r\nimport PenManager from '../penmanger/PenManager.js';\r\nimport HitAreaManager from '../hitareamanager/HitAreaManager.js';\r\nimport SetInteractive from './SetInteractive.js';\r\nimport CONST from '../const.js';\r\nimport WrapText from './WrapText.js';\r\nimport Clone from '../../../../utils/object/Clone.js';\r\n\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\nconst NO_WRAP = CONST.NO_WRAP;\r\nconst NO_NEWLINE = CONST.NO_NEWLINE;\r\n\r\nclass CanvasText {\r\n    constructor(config) {\r\n        this.parent = config.parent;\r\n        this.context = GetValue(config, 'context', null);\r\n        this.canvas = this.context.canvas;\r\n        this.parser = GetValue(config, 'parser', null);\r\n        this.defatultStyle = GetValue(config, 'style', null);\r\n        this.autoRound = true;\r\n\r\n        this.pensPool = GetValue(config, 'pensPool', null);\r\n        this.penManager = this.newPenManager();\r\n        this._tmpPenManager = null;\r\n\r\n        this.hitAreaManager = new HitAreaManager();\r\n\r\n        var context = this.context;\r\n        this.getTextWidth = function (text) {\r\n            return context.measureText(text).width;\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.context = undefined;\r\n        this.canvas = undefined;\r\n        this.parser = undefined;\r\n        this.defatultStyle = undefined;\r\n\r\n        if (this.penManager) {\r\n            this.penManager.destroy();\r\n            this.penManager = undefined;\r\n        }\r\n        if (this._tmpPenManager) {\r\n            this._tmpPenManager.destroy();\r\n            this._tmpPenManager = undefined;\r\n        }\r\n        if (this.hitAreaManager) {\r\n            this.hitAreaManager.destroy();\r\n            this.hitAreaManager = undefined;\r\n        }\r\n    }\r\n\r\n    updatePenManager(text, wrapMode, wrapWidth, lineHeight, penManager) {\r\n        if (penManager === undefined) {\r\n            penManager = this.penManager;\r\n        }\r\n        penManager.freePens();\r\n        if (text === \"\") {\r\n            return penManager;\r\n        }\r\n\r\n        var canvas = this.canvas;\r\n        var context = this.context;\r\n\r\n        var cursorX = 0,\r\n            cursorY = 0;\r\n\r\n        var plainText, curProp, curStyle;\r\n        var match = this.parser.splitText(text),\r\n            result, wrapLines;\r\n        for (var i = 0, len = match.length; i < len; i++) {\r\n            result = this.parser.tagTextToProp(match[i], curProp);\r\n            plainText = result.plainText;\r\n            curProp = result.prop;\r\n\r\n            if (curProp.img) { // Image tag                \r\n                var imgWidth = this.imageManager.getOuterWidth(curProp.img);\r\n                if ((wrapWidth > 0) && (wrapMode !== NO_WRAP)) {  // Wrap mode\r\n                    if (wrapWidth < (cursorX + imgWidth)) {\r\n                        penManager.addNewLinePen();\r\n                        cursorY += lineHeight;\r\n                        cursorX = 0;\r\n                    }\r\n                }\r\n                penManager.addImagePen(cursorX, cursorY, imgWidth, Clone(curProp));\r\n                cursorX += imgWidth;\r\n\r\n            } else if (plainText !== '') {\r\n                // wrap text to lines\r\n                // Save the current context.\r\n                this.context.save();\r\n                curStyle = this.parser.propToContextStyle(\r\n                    this.defatultStyle,\r\n                    curProp\r\n                );\r\n                curStyle.buildFont();\r\n                curStyle.syncFont(canvas, context);\r\n                curStyle.syncStyle(canvas, context);\r\n                wrapLines = WrapText(plainText, this.getTextWidth, wrapMode, wrapWidth, cursorX);\r\n\r\n                // add pens\r\n                var n;\r\n                for (var j = 0, jLen = wrapLines.length; j < jLen; j++) {\r\n                    n = wrapLines[j];\r\n                    penManager.addTextPen(n.text, cursorX, cursorY, n.width, Clone(curProp), n.newLineMode);\r\n\r\n                    if (n.newLineMode !== NO_NEWLINE) {\r\n                        cursorX = 0;\r\n                        cursorY += lineHeight;\r\n                    } else {\r\n                        cursorX += n.width;\r\n                    }\r\n\r\n                }\r\n                this.context.restore();\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return penManager;\r\n    }\r\n\r\n    get startXOffset() {\r\n        var defatultStyle = this.defatultStyle;\r\n        return (defatultStyle.strokeThickness / 2);\r\n    }\r\n\r\n    get startYOffset() {\r\n        var defatultStyle = this.defatultStyle;\r\n        return (defatultStyle.strokeThickness / 2) + defatultStyle.metrics.ascent;\r\n    }\r\n\r\n    get lines() {\r\n        return this.penManager.lines;\r\n    }\r\n\r\n    get desplayLinesCount() {\r\n        var linesCount = this.penManager.linesCount,\r\n            maxLines = this.defatultStyle.maxLines;\r\n        if ((maxLines > 0) && (linesCount > maxLines)) {\r\n            linesCount = maxLines;\r\n        }\r\n        return linesCount;\r\n    }\r\n\r\n    get linesWidth() {\r\n        return this.penManager.getMaxLineWidth();\r\n    }\r\n\r\n    get linesHeight() {\r\n        var linesCount = this.desplayLinesCount;\r\n        var linesHeight = (this.defatultStyle.lineHeight * linesCount);\r\n        if (linesCount > 0) {\r\n            linesHeight -= this.defatultStyle.lineSpacing;\r\n        }\r\n        return linesHeight;\r\n    }\r\n\r\n    get imageManager() {\r\n        return this.parent.imageManager;\r\n    }\r\n\r\n    newPenManager() {\r\n        return new PenManager({\r\n            pensPool: this.pensPool,\r\n            tagToText: this.parser.propToTagText,\r\n            tagToTextScope: this.parser\r\n        });\r\n    }\r\n\r\n    get tmpPenManager() {\r\n        if (this._tmpPenManager === null) {\r\n            this._tmpPenManager = this.newPenManager();\r\n        }\r\n        return this._tmpPenManager;\r\n    }\r\n\r\n    getPlainText(text, start, end) {\r\n        var plainText;\r\n        if (text == null) {\r\n            plainText = this.penManager.plainText;\r\n        } else {\r\n            var m, match = this.parser.splitText(text, 1); // PLAINTEXTONLY_MODE\r\n            plainText = \"\";\r\n            for (var i = 0, len = match.length; i < len; i++) {\r\n                plainText += match[i];\r\n            }\r\n        }\r\n\r\n        if ((start != null) || (end != null)) {\r\n            if (start == null) {\r\n                start = 0;\r\n            }\r\n            if (end == null) {\r\n                end = plainText.length;\r\n            }\r\n            plainText = plainText.substring(start, end);\r\n        }\r\n\r\n        return plainText;\r\n    }\r\n\r\n    getPenManager(text, retPenManager) {\r\n        if (text === undefined) {\r\n            return this.copyPenManager(retPenManager, this.penManager);\r\n        }\r\n\r\n        if (retPenManager === undefined) {\r\n            retPenManager = this.newPenManager();\r\n        }\r\n\r\n        var defatultStyle = this.defatultStyle;\r\n        this.updatePenManager(\r\n            text,\r\n            defatultStyle.wrapMode,\r\n            defatultStyle.wrapWidth,\r\n            defatultStyle.lineHeight,\r\n            retPenManager\r\n        );\r\n        return retPenManager;\r\n    }\r\n\r\n    getText(text, start, end, wrap) {\r\n        if (text == null) {\r\n            return this.penManager.getSliceTagText(start, end, wrap);\r\n        }\r\n\r\n        var penManager = this.tmpPenManager;\r\n        var defatultStyle = this.defatultStyle;\r\n        this.updatePenManager(\r\n            text,\r\n            defatultStyle.wrapMode,\r\n            defatultStyle.wrapWidth,\r\n            defatultStyle.lineHeight,\r\n            penManager\r\n        );\r\n\r\n        return penManager.getSliceTagText(start, end, wrap);\r\n    }\r\n\r\n    copyPenManager(ret, src) {\r\n        if (src === undefined) {\r\n            src = this.penManager;\r\n        }\r\n        return src.copy(ret);\r\n    }\r\n\r\n    getTextWidth(penManager) {\r\n        if (penManager === undefined) {\r\n            penManager = this.penManager;\r\n        }\r\n\r\n        return penManager.getMaxLineWidth();\r\n    }\r\n\r\n    getLastPen(penManager) {\r\n        if (penManager === undefined) {\r\n            penManager = this.penManager;\r\n        }\r\n\r\n        return penManager.lastPen;\r\n    }\r\n};\r\n\r\nvar methods = {\r\n    setInteractive: SetInteractive,\r\n}\r\n\r\nObject.assign(\r\n    CanvasText.prototype,\r\n    DrawMethods,\r\n    methods\r\n);\r\n\r\nexport default CanvasText;","const GetValue = Phaser.Utils.Objects.GetValue;\r\n\r\nclass ImageManager {\r\n    constructor(textureManager) {\r\n        this.textureManager = textureManager;\r\n        this.images = {};\r\n    }\r\n\r\n    add(key, config) {\r\n        if (typeof (key) === 'string') {\r\n            this._add(key, config);\r\n        } else if (Array.isArray(key)) {\r\n            var data = key;\r\n            for (var i = 0, cnt = data.length; i < cnt; i++) {\r\n                this._add(data[i]);\r\n            }\r\n        } else {\r\n            var data = key;\r\n            for (var key in data) {\r\n                this._add(key, data[key]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    _add(key, config) {\r\n        if (config === undefined) {\r\n            config = {\r\n                key: key\r\n            }\r\n        }\r\n\r\n        var textureKey = config.key, frameKey = config.frame;\r\n        var width = config.width, height = config.height;\r\n\r\n        if ((width === undefined) || (height === undefined)) {\r\n            var frame = this.textureManager.getFrame(textureKey, frameKey);\r\n            var frameWidth = (frame) ? frame.cutWidth : 0;\r\n            var frameHeight = (frame) ? frame.cutHeight : 0;\r\n            if ((width === undefined) && (height === undefined)) {\r\n                width = frameWidth;\r\n                height = frameHeight;\r\n            } else if (width === undefined) {\r\n                width = frameWidth * (height / frameHeight);\r\n            } else if (height === undefined) {\r\n                height = frameHeight * (width / frameWidth);\r\n            }\r\n        }\r\n\r\n        this.images[key] = {\r\n            key: textureKey,\r\n            frame: frameKey,\r\n            width: width,\r\n            height: height,\r\n            y: GetValue(config, 'y', 0),\r\n            left: GetValue(config, 'left', 0),\r\n            right: GetValue(config, 'right', 0)\r\n        }\r\n    }\r\n\r\n    remove(key) {\r\n        if (this.images.hasOwnProperty(key)) {\r\n            delete this.images[key];\r\n        }\r\n        return this;\r\n    }\r\n\r\n    get(key) {\r\n        if (!this.images.hasOwnProperty(key)) {\r\n            if (this.textureManager.exists(key)) {\r\n                this.add(key);\r\n            }\r\n        }\r\n        return this.images[key];\r\n    }\r\n\r\n    getOuterWidth(key) {\r\n        var data = this.get(key);\r\n        return (data) ? (data.width + data.left + data.right) : 0;\r\n    }\r\n\r\n    getFrame(key) {\r\n        var data = this.get(key);\r\n        return (data) ? this.textureManager.getFrame(data.key, data.frame) : undefined;\r\n    }\r\n\r\n    hasTexture(key) {\r\n        return !!this.getFrame(key);\r\n    }\r\n}\r\nexport default ImageManager;","import ImageManager from './ImageManager.js';\r\n\r\nvar globImageManager;\r\n\r\nexport default function(textureManager) {\r\n    if (globImageManager === undefined) {\r\n        globImageManager = new ImageManager(textureManager);\r\n    }\r\n    return globImageManager;\r\n}","import Render from './render/Render.js';\r\nimport TextStyle from './textstyle/TextStyle.js'; // extended\r\nimport CanvasTextKlass from './canvastext/CanvasText.js';\r\nimport Pool from '../../../pool.js';\r\nimport CONST from './const.js';\r\nimport GetGlobImageManager from './imagemanager/GetGlobImageManager.js';\r\n\r\nconst AddToDOM = Phaser.DOM.AddToDOM;\r\nconst CanvasPool = Phaser.Display.Canvas.CanvasPool;\r\nconst GameObject = Phaser.GameObjects.GameObject;\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\nconst RemoveFromDOM = Phaser.DOM.RemoveFromDOM;\r\nconst SPLITREGEXP = CONST.SPLITREGEXP;\r\n\r\nvar PensPools = {};\r\n\r\nclass Text extends GameObject {\r\n    constructor(scene, x, y, text, style, type, parser) {\r\n        if (x === undefined) {\r\n            x = 0;\r\n        }\r\n        if (y === undefined) {\r\n            y = 0;\r\n        }\r\n\r\n        super(scene, type);\r\n\r\n        this.renderer = scene.sys.game.renderer;\r\n\r\n        this.setPosition(x, y);\r\n        this.setOrigin(0, 0);\r\n        this.initPipeline();\r\n\r\n        this.canvas = CanvasPool.create(this);\r\n\r\n        this.context = this.canvas.getContext('2d');\r\n\r\n        if (style) {\r\n            // Override align\r\n            if (style.hasOwnProperty('align')) {\r\n                var halign = style.align;\r\n                delete style.align;\r\n                style.halign = halign;\r\n            }\r\n        }\r\n        this.style = new TextStyle(this, style);\r\n\r\n        this.autoRound = true;\r\n\r\n        this._text = undefined;\r\n\r\n        this.padding = {\r\n            left: 0,\r\n            right: 0,\r\n            top: 0,\r\n            bottom: 0\r\n        };\r\n\r\n        this.width = 1;\r\n\r\n        this.height = 1;\r\n\r\n        this.dirty = false;\r\n\r\n        //  If resolution wasn't set, then we get it from the game config\r\n        if (this.style.resolution === 0) {\r\n            this.style.resolution = scene.sys.game.config.resolution;\r\n        }\r\n\r\n        this._crop = this.resetCropObject();\r\n\r\n        //  Create a Texture for this Text object\r\n        this.texture = scene.sys.textures.addCanvas(null, this.canvas, true);\r\n\r\n        //  Get the frame\r\n        this.frame = this.texture.get();\r\n\r\n        //  Set the resolution\r\n        this.frame.source.resolution = this.style.resolution;\r\n\r\n        if (this.renderer && this.renderer.gl) {\r\n            //  Clear the default 1x1 glTexture, as we override it later\r\n\r\n            this.renderer.deleteTexture(this.frame.source.glTexture);\r\n\r\n            this.frame.source.glTexture = null;\r\n        }\r\n\r\n        if (!PensPools.hasOwnProperty(type)) {\r\n            PensPools[type] = new Pool();\r\n        }\r\n        this.canvasText = new CanvasTextKlass({\r\n            parent: this,\r\n            context: this.context,\r\n            parser: parser,\r\n            style: this.style,\r\n            pensPool: PensPools[type]\r\n        });\r\n\r\n        //this.initRTL();\r\n\r\n        if (style && style.padding) {\r\n            this.setPadding(style.padding);\r\n        }\r\n\r\n        this.setText(text);\r\n\r\n        scene.sys.game.events.on('contextrestored', function () {\r\n            this.dirty = true;\r\n        }, this);\r\n    }\r\n\r\n    set text(value) {\r\n        this.setText(value);\r\n    }\r\n    get text() {\r\n        return this._text;\r\n    }\r\n\r\n    initRTL() {\r\n        if (!this.style.rtl) {\r\n            return;\r\n        }\r\n\r\n        //  Here is where the crazy starts.\r\n        //\r\n        //  Due to browser implementation issues, you cannot fillText BiDi text to a canvas\r\n        //  that is not part of the DOM. It just completely ignores the direction property.\r\n\r\n        this.canvas.dir = 'rtl';\r\n\r\n        //  Experimental atm, but one day ...\r\n        this.context.direction = 'rtl';\r\n\r\n        //  Add it to the DOM, but hidden within the parent canvas.\r\n        this.canvas.style.display = 'none';\r\n\r\n        AddToDOM(this.canvas, this.scene.sys.canvas);\r\n\r\n        //  And finally we set the x origin\r\n        this.originX = 1;\r\n    }\r\n\r\n    setText(value) {\r\n        if (!value && value !== 0) {\r\n            value = '';\r\n        }\r\n\r\n        if (Array.isArray(value)) {\r\n            value = value.join('\\n');\r\n        }\r\n\r\n        if (value !== this._text) {\r\n            this._text = value.toString();\r\n\r\n            this.updateText();\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    setStyle(style) {\r\n        return this.style.setStyle(style);\r\n    }\r\n\r\n    setFont(font) {\r\n        return this.style.setFont(font);\r\n    }\r\n\r\n    setFontFamily(family) {\r\n        return this.style.setFontFamily(family);\r\n    }\r\n\r\n    setFontSize(size) {\r\n        return this.style.setFontSize(size);\r\n    }\r\n\r\n    setFontStyle(style) {\r\n        return this.style.setFontStyle(style);\r\n    }\r\n\r\n    setFixedSize(width, height) {\r\n        return this.style.setFixedSize(width, height);\r\n    }\r\n\r\n    setBackgroundColor(color) {\r\n        return this.style.setBackgroundColor(color);\r\n    }\r\n\r\n    setFill(color) {\r\n        return this.style.setFill(color);\r\n    }\r\n\r\n    setColor(color) {\r\n        return this.style.setColor(color);\r\n    }\r\n\r\n    setStroke(color, thickness) {\r\n        return this.style.setStroke(color, thickness);\r\n    }\r\n\r\n    setShadow(x, y, color, blur, shadowStroke, shadowFill) {\r\n        return this.style.setShadow(x, y, color, blur, shadowStroke, shadowFill);\r\n    }\r\n\r\n    setShadowOffset(x, y) {\r\n        return this.style.setShadowOffset(x, y);\r\n    }\r\n\r\n    setShadowColor(color) {\r\n        return this.style.setShadowColor(color);\r\n    }\r\n\r\n    setShadowBlur(blur) {\r\n        return this.style.setShadowBlur(blur);\r\n    }\r\n\r\n    setShadowStroke(enabled) {\r\n        return this.style.setShadowStroke(enabled);\r\n    }\r\n\r\n    setShadowFill(enabled) {\r\n        return this.style.setShadowFill(enabled);\r\n    }\r\n\r\n    setWrapMode(mode) {\r\n        return this.style.setWrapMode(mode);\r\n    }\r\n\r\n    setWrapWidth(width) {\r\n        return this.style.setWrapWidth(width);\r\n    }\r\n\r\n    setAlign(align) {\r\n        return this.style.setHAlign(align);\r\n    }\r\n\r\n    setLineSpacing(value) {\r\n        return this.style.setLineSpacing(value);\r\n    }\r\n\r\n    setPadding(left, top, right, bottom) {\r\n        if (typeof left === 'object') {\r\n            var config = left;\r\n\r\n            //  If they specify x and/or y this applies to all\r\n            var x = GetValue(config, 'x', null);\r\n\r\n            if (x !== null) {\r\n                left = x;\r\n                right = x;\r\n            } else {\r\n                left = GetValue(config, 'left', 0);\r\n                right = GetValue(config, 'right', left);\r\n            }\r\n\r\n            var y = GetValue(config, 'y', null);\r\n\r\n            if (y !== null) {\r\n                top = y;\r\n                bottom = y;\r\n            } else {\r\n                top = GetValue(config, 'top', 0);\r\n                bottom = GetValue(config, 'bottom', top);\r\n            }\r\n        } else {\r\n            if (left === undefined) {\r\n                left = 0;\r\n            }\r\n            if (top === undefined) {\r\n                top = left;\r\n            }\r\n            if (right === undefined) {\r\n                right = left;\r\n            }\r\n            if (bottom === undefined) {\r\n                bottom = top;\r\n            }\r\n        }\r\n\r\n        this.padding.left = left;\r\n        this.padding.top = top;\r\n        this.padding.right = right;\r\n        this.padding.bottom = bottom;\r\n\r\n        return this.updateText(false);\r\n    }\r\n\r\n    setResolution(value) {\r\n        return this.style.setResolution(value);\r\n    }\r\n\r\n    setMaxLines(max) {\r\n        return this.style.setMaxLines(max);\r\n    }\r\n\r\n    updateText(runWrap) {\r\n        if (runWrap === undefined) {\r\n            runWrap = true;\r\n        }\r\n        var canvasText = this.canvasText;\r\n\r\n        // wrap text to pens\r\n        var style = this.style;\r\n        if (runWrap) {\r\n            canvasText.updatePenManager(\r\n                this._text,\r\n                style.wrapMode,\r\n                style.wrapWidth,\r\n                style.lineHeight\r\n            );\r\n        }\r\n\r\n        // resize\r\n        var padding = this.padding;\r\n        var textWidth, textHeight;\r\n        if (style.fixedWidth === 0) {\r\n            this.width = canvasText.linesWidth + padding.left + padding.right;\r\n            textWidth = canvasText.linesWidth;\r\n        }\r\n        else {\r\n            this.width = style.fixedWidth;\r\n            textWidth = this.width - padding.left - padding.right;\r\n            if (textWidth < canvasText.linesWidth) {\r\n                textWidth = canvasText.linesWidth;\r\n            }\r\n        }\r\n        if (style.fixedHeight === 0) {\r\n            this.height = canvasText.linesHeight + padding.top + padding.bottom;\r\n            textHeight = canvasText.linesHeight;\r\n        }\r\n        else {\r\n            this.height = style.fixedHeight;\r\n            textHeight = this.height - padding.top - padding.bottom;\r\n            if (textHeight < canvasText.linesHeight) {\r\n                textHeight = canvasText.linesHeight;\r\n            }\r\n        }\r\n\r\n        var w = this.width;\r\n        var h = this.height;\r\n\r\n        this.updateDisplayOrigin();\r\n\r\n        var resolution = style.resolution;\r\n        w *= resolution;\r\n        h *= resolution;\r\n\r\n        w = Math.max(Math.ceil(w), 1);\r\n        h = Math.max(Math.ceil(h), 1);\r\n\r\n        var canvas = this.canvas;\r\n        var context = this.context;\r\n        if (canvas.width !== w || canvas.height !== h) {\r\n            canvas.width = w;\r\n            canvas.height = h;\r\n            this.frame.setSize(w, h);\r\n        } else {\r\n            context.clearRect(0, 0, w, h);\r\n        }\r\n\r\n        context.save();\r\n        context.scale(resolution, resolution);\r\n\r\n        // draw\r\n        canvasText.draw(\r\n            padding.left,\r\n            padding.top,\r\n            textWidth,\r\n            textHeight\r\n        );\r\n\r\n        context.restore();\r\n\r\n        if (this.renderer.gl) {\r\n            this.frame.source.glTexture = this.renderer.canvasToTexture(canvas, this.frame.source.glTexture, true);\r\n            this.frame.glTexture = this.frame.source.glTexture;\r\n        }\r\n\r\n        this.dirty = true;\r\n\r\n        var input = this.input;\r\n\r\n        if (input && !input.customHitArea) {\r\n            input.hitArea.width = this.width;\r\n            input.hitArea.height = this.height;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    getTextMetrics() {\r\n        return this.style.getTextMetrics();\r\n    }\r\n\r\n    toJSON() {\r\n        var out = Components.ToJSON(this);\r\n\r\n        //  Extra Text data is added here\r\n\r\n        var data = {\r\n            autoRound: this.autoRound,\r\n            text: this._text,\r\n            style: this.style.toJSON(),\r\n            resolution: this.resolution,\r\n            padding: {\r\n                left: this.padding.left,\r\n                right: this.padding.right,\r\n                top: this.padding.top,\r\n                bottom: this.padding.bottom\r\n            }\r\n        };\r\n\r\n        out.data = data;\r\n\r\n        return out;\r\n    }\r\n\r\n    preDestroy() {\r\n        if (this.style.rtl) {\r\n            RemoveFromDOM(this.canvas);\r\n        }\r\n\r\n        CanvasPool.remove(this.canvas);\r\n        this.canvasText.destroy();\r\n    }\r\n\r\n    setInteractive(shape, callback, dropZone) {\r\n        GameObject.prototype.setInteractive.call(this, shape, callback, dropZone);\r\n        this.canvasText.setInteractive();\r\n        return this;\r\n    }\r\n\r\n    getWrappedText(text, start, end) {\r\n        text = this.canvasText.getText(text, start, end, true);\r\n        return text.split(SPLITREGEXP);\r\n    }\r\n\r\n    getPlainText(text, start, end) {\r\n        return this.canvasText.getPlainText(text, start, end);\r\n    }\r\n\r\n    getText(text, start, end) {\r\n        return this.canvasText.getText(text, start, end, false);\r\n    }\r\n\r\n    getSubString(text, start, end) {\r\n        return this.getText(text, start, end);\r\n    }\r\n\r\n    copyPenManager(penManager) {\r\n        return this.canvasText.copyPenManager(penManager);\r\n    }\r\n\r\n    getPenManager(text, penManager) {\r\n        return this.canvasText.getPenManager(text, penManager);\r\n    }\r\n\r\n    setSize(width, height) {\r\n        return this.setFixedSize(width, height);\r\n    }\r\n\r\n    resize(width, height) {\r\n        return this.setFixedSize(width, height);\r\n    }\r\n\r\n    set lineSpacing(value) {\r\n        this.setLineSpacing(value);\r\n    }\r\n    get lineSpacing() {\r\n        return this.style.lineSpacing;\r\n    }\r\n\r\n    get imageManager() {\r\n        return GetGlobImageManager(this.scene.textures);\r\n    }\r\n\r\n    addImage(key, config) {\r\n        this.imageManager.add(key, config);\r\n        return this;\r\n    }\r\n\r\n    drawAreaBounds(graphics, color) {\r\n        this.canvasText.hitAreaManager.drawBounds(graphics, color, this);\r\n        return this;\r\n    }\r\n}\r\n\r\nconst Components = Phaser.GameObjects.Components;\r\nPhaser.Class.mixin(Text,\r\n    [\r\n        Components.Alpha,\r\n        Components.BlendMode,\r\n        Components.ComputedSize,\r\n        Components.Crop,\r\n        Components.Depth,\r\n        Components.Flip,\r\n        Components.GetBounds,\r\n        Components.Mask,\r\n        Components.Origin,\r\n        Components.Pipeline,\r\n        Components.ScrollFactor,\r\n        Components.Tint,\r\n        Components.Transform,\r\n        Components.Visible,\r\n        Render\r\n    ]\r\n);\r\n\r\nexport default Text;","import TextStyle from '../textbase/textstyle/TextStyle.js';\r\n\r\nvar GETPROP_RESULT = {\r\n    plainText: null,\r\n    prevProp: null\r\n};\r\n\r\nvar STYLE_RESULT = new TextStyle();\r\nvar PROPLIST = [];\r\n\r\nclass parser {\r\n    constructor(tags) {\r\n        if (tags === undefined) {\r\n            tags = {};\r\n        }\r\n        this.tags = tags;\r\n    }\r\n\r\n    addTag(name, prop) {\r\n        this.tags[name] = prop;\r\n    }\r\n\r\n    splitText(text, mode) {\r\n        var result = [];\r\n        var arr, m, charIdx = 0,\r\n            totalLen = text.length,\r\n            matchStart = totalLen;\r\n        var innerMatch;\r\n        while (true) {\r\n            arr = RE_SPLITTEXT.exec(text);\r\n            if (!arr) {\r\n                break;\r\n            }\r\n\r\n            m = arr[0];\r\n            matchStart = RE_SPLITTEXT.lastIndex - m.length;\r\n\r\n            if (charIdx < matchStart) {\r\n                result.push(text.substring(charIdx, matchStart));\r\n            }\r\n            if (mode === undefined) {\r\n                result.push(m);\r\n            } else if (mode === 1) { // RAWTEXTONLY_MODE\r\n                if (RE_CLASS_HEADER.test(m)) {\r\n                    innerMatch = m.match(RE_CLASS);\r\n                    result.push(innerMatch[2]);\r\n                } else if (RE_STYLE_HEADER.test(m)) {\r\n                    innerMatch = m.match(RE_STYLE);\r\n                    result.push(innerMatch[2]);\r\n                }\r\n            }\r\n\r\n            charIdx = RE_SPLITTEXT.lastIndex;\r\n        }\r\n\r\n\r\n        if (charIdx < totalLen) {\r\n            result.push(text.substring(charIdx, totalLen));\r\n        }\r\n        return result; // [text,...]\r\n    }\r\n\r\n    tagTextToProp(text, prevProp) {\r\n        var plainText, propOut;\r\n        if (RE_CLASS_HEADER.test(text)) {\r\n            var innerMatch = text.match(RE_CLASS);\r\n            if (innerMatch != null) {\r\n                var name = innerMatch[1];\r\n                var tags = this.tags;\r\n                if (tags.hasOwnProperty(name)) {\r\n                    propOut = tags[name];\r\n                } else {\r\n                    propOut = {};\r\n                }\r\n                propOut._class = name;\r\n                plainText = innerMatch[2];\r\n            }\r\n        } else if (RE_STYLE_HEADER.test(text)) {\r\n            var innerMatch = text.match(RE_STYLE);\r\n            if (innerMatch != null) {\r\n                var style = innerMatch[1];\r\n                propOut = styleToProp(style);\r\n                propOut._style = style;\r\n                plainText = innerMatch[2];\r\n            }\r\n        }\r\n\r\n        if (plainText == null) {\r\n            plainText = text;\r\n        }\r\n\r\n        if (propOut == null) {\r\n            propOut = {};\r\n        }\r\n\r\n        var result = GETPROP_RESULT;\r\n        result.plainText = plainText;\r\n        result.prop = propOut;\r\n        return result;\r\n    }\r\n\r\n    propToContextStyle(defaultStyle, prop) {\r\n        var result = STYLE_RESULT;\r\n        if (!prop.hasOwnProperty('img')) {\r\n            result.image = null;\r\n\r\n            if (prop.hasOwnProperty('family') || prop.hasOwnProperty('fontFamily') || prop.hasOwnProperty('font-family')) {\r\n                var family = (prop.hasOwnProperty('family')) ? prop.family :\r\n                    (prop.hasOwnProperty('fontFamily')) ? prop.fontFamily :\r\n                    prop['font-family'];\r\n                result.fontFamily = family;\r\n            } else {\r\n                result.fontFamily = defaultStyle.fontFamily;\r\n            }\r\n\r\n            if (prop.hasOwnProperty('size') || prop.hasOwnProperty('fontSize') || prop.hasOwnProperty('font-size')) {\r\n                var size = (prop.hasOwnProperty('size')) ? prop.size :\r\n                    (prop.hasOwnProperty('fontSize')) ? prop.fontSize :\r\n                    prop['font-size'];\r\n                if (typeof (size) === 'number') {\r\n                    size = size.toString() + 'px';\r\n                }\r\n                result.fontSize = size;\r\n            } else {\r\n                result.fontSize = defaultStyle.fontSize;\r\n            }\r\n\r\n            if (prop.hasOwnProperty('style') || prop.hasOwnProperty('fontStyle') || prop.hasOwnProperty('font-style')) {\r\n                var fontStyle = (prop.hasOwnProperty('style')) ? prop.style :\r\n                    (prop.hasOwnProperty('fontStyle')) ? prop.fontStyle :\r\n                    prop['font-style'];\r\n                result.fontStyle = fontStyle;\r\n            } else {\r\n                result.fontStyle = defaultStyle.fontStyle;\r\n            }\r\n\r\n            if (prop.hasOwnProperty('color') || prop.hasOwnProperty('font-color')) {\r\n                var color = (prop.hasOwnProperty('color')) ? prop.color : prop['font-color'];\r\n                result.color = prop.color;\r\n            } else {\r\n                result.color = defaultStyle.color;\r\n            }\r\n\r\n            if (prop.hasOwnProperty('stroke')) {\r\n                var stroke = prop.stroke; // {color, thinkness}\r\n                result.stroke = (stroke.hasOwnProperty('color')) ? stroke.color : defaultStyle.stroke;\r\n                result.strokeThickness = (stroke.hasOwnProperty('thinkness')) ? stroke.thinkness : defaultStyle.strokeThickness;\r\n            } else {\r\n                result.stroke = defaultStyle.stroke;\r\n                result.strokeThickness = defaultStyle.strokeThickness;\r\n            }\r\n        } else {\r\n            result.image = prop.img;\r\n        }\r\n\r\n        if (prop.hasOwnProperty('shadow')) {\r\n            var shadow = prop.shadow; // {color, offsetX, offsetY, blur}\r\n            result.shadowColor = (shadow.hasOwnProperty('color')) ? shadow.color : defaultStyle.shadowColor;\r\n            result.shadowOffsetX = (shadow.hasOwnProperty('offsetX')) ? shadow.offsetX : defaultStyle.shadowOffsetX;\r\n            result.shadowOffsetY = (shadow.hasOwnProperty('offsetY')) ? shadow.offsetY : defaultStyle.shadowOffsetY;\r\n            result.shadowBlur = (shadow.hasOwnProperty('blur')) ? shadow.blur : defaultStyle.shadowBlur;\r\n            result.shadowStroke = true;\r\n            result.shadowFill = true;\r\n        } else {\r\n            result.shadowColor = defaultStyle.shadowColor;\r\n            result.shadowOffsetX = defaultStyle.shadowOffsetX;\r\n            result.shadowOffsetY = defaultStyle.shadowOffsetY;\r\n            result.shadowBlur = defaultStyle.shadowBlur;\r\n            result.shadowStroke = defaultStyle.shadowStroke;\r\n            result.shadowFill = defaultStyle.shadowFill;\r\n        }\r\n\r\n        if (prop.hasOwnProperty('u') || prop.hasOwnProperty('underline')) {\r\n            var u = (prop.hasOwnProperty('u')) ? prop.u : prop.underline; // {color, thinkness, offset}\r\n            result.underlineColor = (u.hasOwnProperty('color')) ? u.color : defaultStyle.underlineColor;\r\n            result.underlineThickness = (u.hasOwnProperty('thinkness')) ? u.thinkness : defaultStyle.underlineThickness;\r\n            result.underlineOffset = (u.hasOwnProperty('offset')) ? u.offset : defaultStyle.underlineOffset;\r\n        } else {\r\n            result.underlineColor = defaultStyle.underlineColor;\r\n            result.underlineThickness = defaultStyle.underlineThickness;\r\n            result.underlineOffset = defaultStyle.underlineOffset;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    propToTagText(text, prop, prevProp) {\r\n        if (prop.hasOwnProperty('_class')) { // class mode\r\n            if (text === '') {\r\n                if (this.isTextTag(prop._class)) {\r\n                    return '';\r\n                }\r\n            }\r\n            return \"<class='\" + prop._class + \"'>\" + text + \"</class>\";\r\n        } else if (prop.hasOwnProperty('_style')) { // class mode\r\n            return \"<style='\" + prop._style + \"'>\" + text + \"</style>\";\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.tags = undefined;\r\n    }\r\n\r\n    isTextTag(tagName) {\r\n        var tag = this.tags[tagName];\r\n        if (tag) {\r\n            return (tag.img == null);\r\n        } else { // tag not found\r\n            return false;\r\n        }\r\n    }\r\n};\r\n\r\nvar styleToProp = function (s) {\r\n    s = s.split(\";\");\r\n\r\n    var result = {},\r\n        prop, k, v;\r\n    for (var i = 0, slen = s.length; i < slen; i++) {\r\n        prop = s[i].split(\":\");\r\n        k = prop[0], v = prop[1];\r\n        if (isEmpty(k) || isEmpty(v)) {\r\n            continue;\r\n        }\r\n\r\n        switch (k) {\r\n            case 'stroke':\r\n                var stroke = v.split(' '); // stroke:blue 1px\r\n                var len = stroke.length;\r\n                v = {};\r\n                if (len >= 1) {\r\n                    v.color = stroke[0];\r\n                }\r\n                if (len >= 2) {\r\n                    v.thinkness = parseInt(stroke[1].replace('px', ''));\r\n                }\r\n                break;\r\n            case 'shadow':\r\n                var shadow = v.split(' '); // shadow:blue 2px 2px 2px\r\n                var len = shadow.length;\r\n                v = {};\r\n                if (len >= 1) {\r\n                    v.color = shadow[0];\r\n                }\r\n                if (len >= 2) {\r\n                    v.offsetX = parseInt(shadow[1].replace('px', ''));\r\n                }\r\n                if (len >= 3) {\r\n                    v.offsetY = parseInt(shadow[2].replace('px', ''));\r\n                }\r\n                if (len >= 4) {\r\n                    v.blur = parseInt(shadow[3].replace('px', ''));\r\n                }\r\n                break;\r\n            case 'u':\r\n            case 'underline': // underline:blue 3px -1px\r\n                var u = v.split(' ');\r\n                var len = u.length;\r\n                v = {};\r\n                if (len >= 1) {\r\n                    v.color = u[0];\r\n                }\r\n                if (len >= 2) {\r\n                    v.thinkness = parseInt(u[1].replace('px', ''));\r\n                }\r\n                if (len >= 3) {\r\n                    v.offset = parseInt(u[2].replace('px', ''));\r\n                }\r\n                break;\r\n        }\r\n        result[k] = v;\r\n    }\r\n    return result;\r\n};\r\n\r\nvar isEmpty = function (s) {\r\n    // Remove white spaces.\r\n    s = s.replace(RE_SPACE, '');\r\n    return (s.length === 0);\r\n};\r\n\r\nvar RE_SPLITTEXT = /<\\s*class=[\"|']([^\"|']+)[\"|']\\s*\\>([\\s\\S]*?)<\\s*\\/class\\s*\\>|<\\s*style=[\"|']([^\"|']+)[\"|']\\s*\\>([\\s\\S]*?)<\\s*\\/style\\s*\\>/g;\r\nvar RE_CLASS_HEADER = /<\\s*class=/i;\r\nvar RE_CLASS = /<\\s*class=[\"|']([^\"|']+)[\"|']\\s*\\>([\\s\\S]*?)<\\s*\\/class\\s*\\>/;\r\nvar RE_STYLE_HEADER = /<\\s*style=/i;\r\nvar RE_STYLE = /<\\s*style=[\"|']([^\"|']+)[\"|']\\s*\\>([\\s\\S]*?)<\\s*\\/style\\s*\\>/;\r\nvar RE_SPACE = /^\\s+|\\s+$/;\r\n\r\nexport default parser;","import Text from '../textbase/Text.js';\r\nimport ParserKlass from './Parser.js';\r\n\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\n\r\nclass TagText extends Text {\r\n    constructor(scene, x, y, text, style) {\r\n        var tags = GetValue(style, 'tags', undefined);\r\n        var parser = new ParserKlass(tags);\r\n        super(scene, x, y, text, style, 'rexTagText', parser);\r\n        this.parser = parser;\r\n    }\r\n\r\n    addTag(name, prop) {\r\n        this.parser.addTag(name, prop);\r\n        return this.updateText(true);\r\n    }\r\n\r\n    addTags(tags) {\r\n        for(var name in tags){\r\n            this.parser.addTag(name, tags[name]);\r\n        }\r\n        return this.updateText(true);\r\n    }\r\n\r\n    preDestroy() {\r\n        super.preDestroy();\r\n        this.parser.destroy();\r\n        this.parser = undefined;\r\n    }\r\n}\r\n\r\nexport default TagText;","import TagText from './TagText.js';\r\n\r\nconst GetAdvancedValue = Phaser.Utils.Objects.GetAdvancedValue;\r\nconst BuildGameObject = Phaser.GameObjects.BuildGameObject;\r\n\r\nexport default function (config, addToScene) {\r\n    // style Object = {\r\n    //     font: [ 'font', '16px Courier' ],\r\n    //     backgroundColor: [ 'backgroundColor', null ],\r\n    //     fill: [ 'fill', '#fff' ],\r\n    //     stroke: [ 'stroke', '#fff' ],\r\n    //     strokeThickness: [ 'strokeThickness', 0 ],\r\n    //     shadowOffsetX: [ 'shadow.offsetX', 0 ],\r\n    //     shadowOffsetY: [ 'shadow.offsetY', 0 ],\r\n    //     shadowColor: [ 'shadow.color', '#000' ],\r\n    //     shadowBlur: [ 'shadow.blur', 0 ],\r\n    //     shadowStroke: [ 'shadow.stroke', false ],\r\n    //     shadowFill: [ 'shadow.fill', false ],\r\n    //     align: [ 'align', 'left' ],\r\n    //     maxLines: [ 'maxLines', 0 ],\r\n    //     fixedWidth: [ 'fixedWidth', false ],\r\n    //     fixedHeight: [ 'fixedHeight', false ]\r\n    // }\r\n\r\n    var content = GetAdvancedValue(config, 'text', '');\r\n    var style = GetAdvancedValue(config, 'style', null);\r\n\r\n    //  Padding\r\n    //      { padding: 2 }\r\n    //      { padding: { x: , y: }}\r\n    //      { padding: { left: , top: }}\r\n    //      { padding: { left: , right: , top: , bottom: }}  \r\n\r\n    var padding = GetAdvancedValue(config, 'padding', null);\r\n\r\n    if (padding !== null) {\r\n        style.padding = padding;\r\n    }\r\n\r\n    if (addToScene !== undefined) {\r\n        config.add = addToScene;\r\n    }\r\n\r\n    var gameObject = new TagText(this.scene, 0, 0, content, style);\r\n    BuildGameObject(this.scene, gameObject, config);\r\n\r\n    //  Text specific config options:\r\n\r\n    gameObject.autoRound = GetAdvancedValue(config, 'autoRound', true);\r\n    gameObject.resolution = GetAdvancedValue(config, 'resolution', 1);\r\n\r\n    return gameObject;\r\n};","import Factory from './gameobjects/text/tagtext/Factory.js';\r\nimport Creator from './gameobjects/text/tagtext/Creator.js';\r\nimport TagText from './gameobjects/text/tagtext/TagText.js';\r\n\r\nPhaser.GameObjects.GameObjectFactory.register('rexTagText', Factory);\r\nPhaser.GameObjects.GameObjectCreator.register('rexTagText', Creator);\r\n\r\nexport default TagText;","import TagText from './TagText.js';\r\n\r\nexport default function (x, y, text, style) {\r\n    var gameObject = new TagText(this.scene, x, y, text, style);\r\n    this.scene.add.existing(gameObject);\r\n    return gameObject;\r\n}","export default {\r\n    setEventEmitter(eventEmitter, EventEmitterClass) {\r\n        if (EventEmitterClass === undefined) {\r\n            EventEmitterClass = Phaser.Events.EventEmitter; // Use built-in EventEmitter class by default\r\n        }\r\n        this._privateEE = (eventEmitter === undefined);\r\n        this._eventEmitter = (this._privateEE) ? (new EventEmitterClass()) : eventEmitter;\r\n        return this;\r\n    },\r\n\r\n    destroyEventEmitter() {\r\n        if (this._eventEmitter && this._privateEE) {\r\n            this._eventEmitter.shutdown();\r\n        }\r\n        return this;\r\n    },\r\n\r\n    getEventEmitter() {\r\n        return this._eventEmitter;\r\n    },\r\n\r\n    on: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.on.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    once: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.once.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    off: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.off.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    emit: function (event) {\r\n        if (this._eventEmitter && event) {\r\n            this._eventEmitter.emit.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    addListener: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.addListener.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    removeListener: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.removeListener.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    removeAllListeners: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.removeAllListeners.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    listenerCount: function () {\r\n        if (this._eventEmitter) {\r\n            return this._eventEmitter.listenerCount.apply(this._eventEmitter, arguments);\r\n        }\r\n        return 0;\r\n    },\r\n\r\n    listeners: function () {\r\n        if (this._eventEmitter) {\r\n            return this._eventEmitter.listeners.apply(this._eventEmitter, arguments);\r\n        }\r\n        return [];\r\n    }\r\n};","const SceneClass = Phaser.Scene;\r\nvar IsSceneObject = function (object) {\r\n    return (object instanceof SceneClass);\r\n}\r\nexport default IsSceneObject;","import IsSceneObject from './IsSceneObject.js';\r\n\r\nvar GetSceneObject = function (object) {\r\n    if (IsSceneObject(object)) { // object = scene\r\n        return object;\r\n    } else if (object.scene && IsSceneObject(object.scene)) { // object = game object\r\n        return object.scene;\r\n    } else if (object.parent && object.parent.scene && IsSceneObject(object.parent.scene)) { // parent = bob object\r\n        return object.parent.scene;\r\n    }\r\n}\r\n\r\nexport default GetSceneObject;","import EventEmitterMethods from '../../utils/eventemitter/EventEmitterMethods.js';\r\nimport GetSceneObject from '../../utils/system/GetSceneObject.js';\r\n\r\nconst GetFastValue = Phaser.Utils.Objects.GetFastValue;\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\n\r\nclass TextTyping {\r\n    constructor(gameObject, config) {\r\n        this.gameObject = gameObject;\r\n        this.scene = GetSceneObject(gameObject);        \r\n        this.setEventEmitter(GetValue(config, 'eventEmitter', undefined));\r\n        \r\n        this.timer = null;\r\n        this.resetFromJSON(config);\r\n        this.boot();\r\n    }\r\n\r\n    /**\r\n     * Reset status by JSON object\r\n     * @param {object} o JSON object\r\n     * @returns {object} this object\r\n     */\r\n    resetFromJSON(o) {\r\n        this.setTypeMode(GetValue(o, 'typeMode', 0));\r\n        this.setTypeSpeed(GetValue(o, 'speed', 333));\r\n        this.setTextCallback = GetFastValue(o, 'setTextCallback', null);\r\n        this.setTextCallbackScope = GetFastValue(o, 'setTextCallbackScope', null);\r\n\r\n        this.typingIdx = GetFastValue(o, 'typingIdx', 0);\r\n        this.text = transferText(GetFastValue(o, 'text', ''));\r\n        this.textLen = GetFastValue(o, 'textLen', 0);\r\n        this.insertIdx = GetFastValue(o, 'insertIdx', null);\r\n\r\n        var elapsed = GetFastValue(o, 'elapsed', null);\r\n        if (elapsed !== null) {\r\n            this.start(undefined, undefined, this.typingIdx, elapsed);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Return status in JSON object\r\n     * @returns JSON object\r\n     */\r\n    toJSON() {\r\n        var elapsed;\r\n        var timer = this.getTimer();\r\n        if (timer) {\r\n            elapsed = timer.elapsed;\r\n        } else {\r\n            elapsed = null;\r\n        }\r\n\r\n        return {\r\n            typeMode: this.typeMode,\r\n            speed: this.speed,\r\n            setTextCallback: this.setTextCallback,\r\n            setTextCallbackScope: this.setTextCallbackScope,\r\n\r\n            typingIdx: this.typingIdx,\r\n            text: this.text,\r\n            textLen: this.textLen,\r\n            insertIdx: this.insertIdx,\r\n            elapsed: elapsed\r\n        };\r\n    }\r\n\r\n    boot() {\r\n        if (this.gameObject.once) { // oops, bob object does not have event emitter\r\n            this.gameObject.once('destroy', this.destroy, this);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    shutdown() {\r\n        this.destroyEventEmitter();\r\n        this.freeTimer();\r\n        this.gameObject = undefined;\r\n        this.scene = undefined;\r\n        return this;\r\n    }\r\n\r\n    destroy() {\r\n        this.shutdown();\r\n        return this;\r\n    }\r\n\r\n    setTypeMode(m) {\r\n        if (typeof (m) === 'string') {\r\n            m = TYPEMODE[m];\r\n        }\r\n        this.typeMode = m;\r\n        return this;\r\n    }\r\n\r\n    setTypeSpeed(speed) {\r\n        this.speed = speed;\r\n        return this;\r\n    }\r\n\r\n    get isTyping() {\r\n        return (this.getTimer() !== null);\r\n    }\r\n\r\n    get isLastChar() {\r\n        return (this.typingIdx === this.textLen);\r\n    }\r\n\r\n    start(text, speed, startIdx, timerStartAt) {\r\n        if (text !== undefined) {\r\n            this.setTypingContent(text);\r\n        }\r\n        if (speed !== undefined) {\r\n            this.speed = speed;\r\n        }\r\n        if (startIdx === undefined) {\r\n            startIdx = 0;\r\n        }\r\n\r\n        this.typingIdx = startIdx + 1;\r\n        if (this.speed === 0) {\r\n            this.stop(true);\r\n        } else {\r\n            this.startTimer(timerStartAt);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    appendText(text) {\r\n        var newText = this.text.concat(transferText(text));\r\n        if (this.isTyping) {\r\n            this.setTypingContent(newText);\r\n        } else {\r\n            this.start(newText, undefined, this.textLen);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    stop(showAllText) {\r\n        var timer = this.getTimer();\r\n        if (timer) {\r\n            this.freeTimer();\r\n        }\r\n        if (showAllText) {\r\n            this.typingIdx = this.textLen;\r\n            this.setText(this.text);\r\n            this.emit('type');\r\n            this.emit('complete', this, this.gameObject);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    pause() {\r\n        var timer = this.getTimer();\r\n        if (timer) {\r\n            timer.paused = true;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    resume() {\r\n        var timer = this.getTimer();\r\n        if (timer) {\r\n            timer.paused = false;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    setTypingContent(text) {\r\n        this.text = transferText(text);\r\n        this.textLen = this.getTextLength(this.text);\r\n        return this;\r\n    }\r\n\r\n    onTyping() {\r\n        var newText = this.getTypingString(this.text, this.typingIdx, this.textLen, this.typeMode);\r\n        this.setText(newText);\r\n        this.emit('type');\r\n\r\n        if (this.isLastChar) {\r\n            this.freeTimer();\r\n            this.emit('complete', this, this.gameObject);\r\n        } else {\r\n            this.timer.delay = this.speed; // delay of next typing            \r\n            this.typingIdx++;\r\n        }\r\n    }\r\n\r\n    getTypingString(text, typeIdx, textLen, typeMode) {\r\n        var result;\r\n        if (typeMode === 0) { //left-to-right\r\n            var startIdx = 0;\r\n            var endIdx = typeIdx;\r\n            this.insertIdx = endIdx;\r\n            result = this.getSubString(text, startIdx, endIdx);\r\n\r\n        } else if (typeMode === 1) { //right-to-left\r\n            var endIdx = textLen;\r\n            var startIdx = endIdx - typeIdx;\r\n            this.insertIdx = 0;\r\n            result = this.getSubString(text, startIdx, endIdx);\r\n\r\n        } else if (typeMode === 2) { //middle-to-sides\r\n            var midIdx = textLen / 2;\r\n            var startIdx = Math.floor(midIdx - (typeIdx / 2));\r\n            var endIdx = startIdx + typeIdx;\r\n            this.insertIdx = (typeIdx % 2) ? typeIdx : 0;\r\n            result = this.getSubString(text, startIdx, endIdx);\r\n\r\n        } else if (typeMode === 3) { //sides-to-middle\r\n            var lowerLen = Math.floor(typeIdx / 2);\r\n            var lowerResult;\r\n            if (lowerLen > 0) {\r\n                var endIdx = textLen;\r\n                var startIdx = endIdx - lowerLen;\r\n                lowerResult = this.getSubString(text, startIdx, endIdx);\r\n            } else {\r\n                lowerResult = \"\";\r\n            }\r\n\r\n            var upperLen = typeIdx - lowerLen;\r\n            var upperResult;\r\n            if (upperLen > 0) {\r\n                var startIdx = 0;\r\n                var endIdx = startIdx + upperLen;\r\n                this.insertIdx = endIdx;\r\n                upperResult = this.getSubString(text, startIdx, endIdx);\r\n            } else {\r\n                upperResult = \"\";\r\n                this.insertIdx = 0;\r\n            }\r\n            result = upperResult + lowerResult;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    startTimer(timerStartAt) {\r\n        if (this.timer) {\r\n            this.freeTimer();\r\n        }\r\n        var delay, startAt;\r\n        if (timerStartAt === undefined) {\r\n            delay = 0;\r\n            startAt = 0;\r\n        } else {\r\n            delay = this.speed;\r\n            startAt = timerStartAt;\r\n        }\r\n\r\n        this.timer = this.scene.time.addEvent({\r\n            delay: 0,\r\n            startAt: startAt,\r\n            loop: true,\r\n            callback: this.onTyping,\r\n            callbackScope: this\r\n        });\r\n        return this;\r\n    }\r\n\r\n    getTimer() {\r\n        return this.timer;\r\n    }\r\n\r\n    freeTimer() {\r\n        if (this.timer) {\r\n            this.timer.remove();\r\n            this.timer = null;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    setText(text) {\r\n        if (this.setTextCallback) {\r\n            if (this.setTextCallbackScope) {\r\n                text = this.setTextCallback.call(this.setTextCallbackScope, text, this.isLastChar, this.insertIdx);\r\n            } else {\r\n                text = this.setTextCallback(text, this.isLastChar, this.insertIdx);\r\n            }\r\n        }\r\n        this.gameObject.setText(text);\r\n    }\r\n\r\n    getTextLength(text) {\r\n        var gameObject = this.gameObject;\r\n        var len;\r\n        if (gameObject.getPlainText) {\r\n            len = gameObject.getPlainText(text).length;\r\n        } else {\r\n            len = text.length;\r\n        }\r\n\r\n        return len;\r\n    }\r\n\r\n    getSubString(text, startIdx, endIdx) {\r\n        var gameObject = this.gameObject;\r\n        var result;\r\n        if (gameObject.getSubString) {\r\n            result = gameObject.getSubString(text, startIdx, endIdx);\r\n        } else {\r\n            result = text.slice(startIdx, endIdx);\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nObject.assign(\r\n    TextTyping.prototype,\r\n    EventEmitterMethods\r\n);\r\n\r\nvar transferText = function (text) {\r\n    if (Array.isArray(text)) {\r\n        text = text.join('\\n');\r\n    } else if (typeof (text) === 'number') {\r\n        text = text.toString();\r\n    }\r\n    return text;\r\n}\r\n\r\n/** @private */\r\nconst TYPEMODE = {\r\n    'left-to-right': 0,\r\n    'right-to-left': 1,\r\n    'middle-to-sides': 2,\r\n    'sides-to-middle': 3\r\n};\r\n\r\n\r\nexport default TextTyping;","import TextTyping from './behaviors/texttyping/TextTyping.js';\r\nexport default TextTyping;","export default {\r\n    None: 0,\r\n    EasyWin: 1,\r\n    Hard: 2\r\n};","import TileGenerationBehavior from \"./TileGenerationBehavior\";\r\n\r\nexport default [\r\n\r\n    // 0\r\n    {\r\n        score: 100,\r\n        timer: 0,\r\n        behavior: TileGenerationBehavior.None\r\n    },\r\n\r\n    // 1\r\n    {\r\n        score: 200,\r\n        timer: 120,\r\n        behavior: TileGenerationBehavior.None\r\n    },\r\n\r\n    // 2\r\n    {\r\n        score: 300,\r\n        timer: 30,\r\n        behavior: TileGenerationBehavior.Hard\r\n    },\r\n\r\n    // 3\r\n    {\r\n        score: 300,\r\n        timer: 120,\r\n        behavior: TileGenerationBehavior.EasyWin\r\n    },\r\n\r\n    // 4\r\n    {\r\n        score: 400,\r\n        timer: 300,\r\n        behavior: TileGenerationBehavior.EasyWin\r\n    },\r\n\r\n    // 5\r\n    {\r\n        score: 1000,\r\n        timer: 300,\r\n        behavior: TileGenerationBehavior.Hard\r\n    },\r\n];","// Source: https://stackoverflow.com/questions/5915096/get-random-item-from-javascript-array\r\nconst getRandomItem = (items) => {\r\n    return items[Math.floor(Math.random() * items.length)];\r\n}\r\n\r\nexport {\r\n    getRandomItem\r\n}","export default {\r\n    Active: 0,\r\n    Destroyed: 1\r\n};","export default [\r\n    { name: 'Blue', imageKey: 'tile_01' },\r\n    { name: 'Green', imageKey: 'tile_02' },\r\n    { name: 'Red', imageKey: 'tile_03' },\r\n    { name: 'Yellow', imageKey: 'tile_04' }\r\n];","import { getRandomItem } from './Utility';\r\nimport Tile from './Tile';\r\nimport TileGenerationBehavior from './TileGenerationBehavior';\r\nimport TileState from './TileState';\r\nimport TileType from './TileType';\r\n\r\nexport default class {\r\n\r\n    constructor(tileGridWidth, tileGridHeight, tileSize, offsetX, offsetY, onTileSelect, onTileMatch, tileGenerationBehavior, queue)\r\n    {\r\n        this.offsetX = offsetX;\r\n        this.offsetY = offsetY;\r\n        this.tileSize = tileSize;\r\n        this.tileGridHeight = tileGridHeight;\r\n        this.tileGridWidth = tileGridWidth;\r\n        this.tileGrid = [];\r\n        this.tileImageContainer = null;\r\n        this.playAreaOffset = (this.tileGridHeight * this.tileSize);\r\n\r\n        this.onTileSelect = onTileSelect;\r\n        this.onTileMatch = onTileMatch;\r\n\r\n        this.tileGenerationBehavior = tileGenerationBehavior;\r\n\r\n        this.queue = queue;\r\n\r\n        // We're going to generate a grid that's twice the height of\r\n        // the desired tile grid height since we'll use the hidden, upper\r\n        // region to stage the bricks that will fall into the play area\r\n        for(let y = 0; y < tileGridHeight * 2; y++)\r\n        {\r\n            this.tileGrid[y] = [];\r\n            for(let x = 0; x < tileGridWidth; x++)\r\n            {\r\n                this.tileGrid[y][x] = (y < tileGridHeight)\r\n                    ? null\r\n                    : this.createTile(this.getTileType(x, y, TileGenerationBehavior.None), x, y);\r\n\r\n                // When we're generating the grid, we start with the default tile generation\r\n                // behavior since the \"Easy Win\" behavior will create a grid with identical\r\n                // tiles\r\n            }\r\n        }\r\n    }\r\n\r\n    create(context)\r\n    {\r\n        this.tileImageContainer = context.add.container();\r\n\r\n        // Create all of the tiles\r\n        this.forEachTile(tile => {\r\n\r\n            if(tile === null)\r\n            {\r\n                return;\r\n            }\r\n\r\n            tile.create(context);\r\n            this.tileImageContainer.add(tile.image);\r\n\r\n        });\r\n\r\n        // Create a mask to only show the play area\r\n        const maskShape = context.make.graphics();\r\n        maskShape.fillStyle(0xffffff, 1);\r\n        maskShape.fillRect(this.offsetX - (this.tileSize/2), this.offsetY + (this.tileGridHeight * this.tileSize) - (this.tileSize/2), this.tileGridWidth * this.tileSize, this.tileGridHeight * this.tileSize);\r\n        \r\n        this.tileImageContainer.mask = new Phaser.Display.Masks.GeometryMask(context, maskShape);\r\n    }\r\n\r\n    update(context)\r\n    {\r\n        const self = this;\r\n\r\n        if(self.queue.length > 0)\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Detect and destroy any matches\r\n        const matchedTiles = self.getMatches();\r\n\r\n        if(matchedTiles.length > 0)\r\n        {\r\n            self.onTileMatch(context, matchedTiles);\r\n        }\r\n\r\n        let destroys = [];\r\n        matchedTiles.forEach(t => { destroys.push(t.destroy(context, this.tileImageContainer)); });\r\n\r\n        if(destroys.length > 0)\r\n        {\r\n            self.queue.push(() => { return Promise.all(destroys); });\r\n        }\r\n\r\n        // Remove any destroyed tiles\r\n        self.forEachTile((tile, x, y) => {\r\n\r\n            if(tile === null)\r\n            {\r\n                return;\r\n            }\r\n\r\n            if(tile.state === TileState.Destroyed)\r\n            {\r\n                self.tileGrid[y][x] = null;\r\n            }\r\n\r\n        });\r\n\r\n        // Shift all of the tiles downward to fill empty spots\r\n        let drops = [];\r\n        for(let x = 0; x < this.tileGridWidth; x++)\r\n        {\r\n            let y = (this.tileGridHeight * 2) - 1;\r\n            while(y >= 0)\r\n            {\r\n                // If the tile is null...\r\n                if(self.tileGrid[y][x] === null)\r\n                {\r\n                    // ...find the closest tile that's not null...\r\n                    let closestY = y - 1;\r\n                    while(closestY >= 0)\r\n                    {\r\n                        let closestTile = self.tileGrid[closestY][x];\r\n                        if(closestTile !== null)\r\n                        {\r\n                            // ...and shift it downward\r\n                            self.tileGrid[y][x] = closestTile;\r\n                            self.tileGrid[closestY][x] = null;\r\n                            drops.push(this.getTileDrop(context, closestTile, x, y));\r\n                            y--;\r\n                        }\r\n                        closestY--;\r\n                    }\r\n                }\r\n\r\n                y--;\r\n            }\r\n        }\r\n\r\n        // Fill in all of the empty tiles\r\n        self.forEachPlayableTile((tile, x, y) => {\r\n            if(tile === null)\r\n            {\r\n                const adjustedY = y - self.tileGridHeight;\r\n\r\n                const tile = self.createTile(self.getTileType(x, y, self.tileGenerationBehavior), x, adjustedY);\r\n                self.tileGrid[adjustedY][x] = tile;\r\n                tile.create(context);\r\n                self.tileImageContainer.add(tile.image);\r\n            }\r\n        });\r\n\r\n        if(drops.length > 0)\r\n        {\r\n            self.queue.push(() => { return Promise.all(drops); });\r\n        }\r\n    }\r\n\r\n    swapTiles(context, firstTile, secondTile)\r\n    {\r\n        let self = this;\r\n\r\n        self.queue.push(() => {\r\n            \r\n            let firstTileX = firstTile.x;\r\n            let firstTileY = firstTile.y;\r\n            let firstTileGridX = firstTile.tileGridX;\r\n            let firstTileGridY = firstTile.tileGridY;\r\n    \r\n            let secondTileX = secondTile.x;\r\n            let secondTileY = secondTile.y;\r\n            let secondTileGridX = secondTile.tileGridX;\r\n            let secondTileGridY = secondTile.tileGridY;\r\n    \r\n            let firstSwap = secondTile.updatePosition(context, firstTileX, firstTileY, firstTileGridX, firstTileGridY);\r\n            self.tileGrid[firstTileGridY][firstTileGridX] = secondTile;\r\n    \r\n            let secondSwap = firstTile.updatePosition(context, secondTileX, secondTileY, secondTileGridX, secondTileGridY);\r\n            self.tileGrid[secondTileGridY][secondTileGridX] = firstTile;\r\n\r\n            return Promise.all([firstSwap, secondSwap]);\r\n\r\n        });\r\n    }\r\n\r\n    hasMatches(targetGridX, targetGridY)\r\n    {\r\n        return this.getMatches(targetGridX, targetGridY).length > 0;\r\n    }\r\n\r\n    getMatches(targetGridX, targetGridY)\r\n    {\r\n        const self = this;\r\n        const matchedTiles = [];\r\n\r\n        self.forEachTile((tile, x, y) => {\r\n\r\n            if(\r\n                (typeof targetGridX !== 'undefined' && x !== targetGridX) &&\r\n                (typeof targetGridY !== 'undefined' && y !== targetGridY)\r\n              )\r\n            {\r\n                return;\r\n            }\r\n\r\n            if(!this.isPlayable(tile))\r\n            {\r\n                return;\r\n            }\r\n\r\n            const targetTileType = tile.tileType;\r\n            const matchedXTiles = [];\r\n            const matchedYTiles = [];\r\n\r\n            // Check for matches to the right\r\n            let currX = (x + 1);\r\n            while(currX < self.tileGridWidth)\r\n            {\r\n                const currTile = self.tileGrid[y][currX];\r\n\r\n                if(currTile != null && targetTileType.name === currTile.tileType.name)\r\n                {\r\n                    matchedXTiles.push(currTile);\r\n                }\r\n                else\r\n                {\r\n                    break;\r\n                }\r\n\r\n                currX++;\r\n            }\r\n\r\n            // Check for matches to the left\r\n            currX = (x - 1);\r\n            while(currX > 0)\r\n            {\r\n                const currTile = self.tileGrid[y][currX];\r\n\r\n                if(currTile != null && targetTileType.name === currTile.tileType.name)\r\n                {\r\n                    matchedXTiles.push(currTile);\r\n                }\r\n                else\r\n                {\r\n                    break;\r\n                }\r\n\r\n                currX--;\r\n            }\r\n\r\n            // Check matches downwards\r\n            let currY = (y + 1);\r\n            while(currY < self.tileGridHeight)\r\n            {\r\n                const currTile = self.tileGrid[currY][x];\r\n\r\n                if(currTile != null && targetTileType.name === currTile.tileType.name)\r\n                {\r\n                    matchedYTiles.push(currTile);\r\n                }\r\n                else\r\n                {\r\n                    break;\r\n                }\r\n\r\n                currY++;\r\n            }\r\n\r\n            // Check matches upwards\r\n            currY = (y - 1);\r\n            while(currY > 0)\r\n            {\r\n                const currTile = self.tileGrid[currY][x];\r\n\r\n                if(currTile != null && targetTileType === currTile.tileType)\r\n                {\r\n                    matchedYTiles.push(currTile);\r\n                }\r\n                else\r\n                {\r\n                    break;\r\n                }\r\n\r\n                currY--;\r\n            }\r\n            \r\n            if(matchedYTiles.length > 1)\r\n            {\r\n                matchedTiles.push(...matchedYTiles);\r\n            }\r\n            \r\n            if(matchedXTiles.length > 1)\r\n            {\r\n                matchedTiles.push(...matchedXTiles);\r\n            }\r\n\r\n            if(matchedYTiles.length > 1 || matchedXTiles.length > 1)\r\n            {\r\n                matchedTiles.push(tile);\r\n            }\r\n        });\r\n\r\n        return matchedTiles;\r\n    }\r\n\r\n    forEachTile(callback)\r\n    {\r\n        for(let y = 0; y < this.tileGridHeight * 2; y++)\r\n        {\r\n            for(let x = 0; x < this.tileGridWidth; x++)\r\n            {\r\n                callback(this.tileGrid[y][x], x, y);\r\n            }\r\n        }\r\n    }\r\n\r\n    forEachPlayableTile(callback)\r\n    {\r\n        for(let y = this.tileGridHeight; y < this.tileGridHeight * 2; y++)\r\n        {\r\n            for(let x = 0; x < this.tileGridWidth; x++)\r\n            {\r\n                callback(this.tileGrid[y][x], x, y);\r\n            }\r\n        }\r\n    }\r\n\r\n    createTile(tileType, x, y)\r\n    {\r\n        return new Tile(tileType, this.getTileX(x), this.getTileY(y), x, y, this.onTileSelect);\r\n    }\r\n\r\n    getTileDrop(context, tile, x, y)\r\n    {\r\n        return tile.updatePosition(context, this.getTileX(x), this.getTileY(y), x, y);\r\n    }\r\n\r\n    getTileX(x)\r\n    {\r\n        return this.offsetX + (this.tileSize * x);\r\n    }\r\n\r\n    getTileY(y)\r\n    {\r\n        return this.offsetY + (this.tileSize * y);\r\n    }\r\n\r\n    canSelect(tile)\r\n    {\r\n        return this.isPlayable(tile);\r\n    }\r\n\r\n    isPlayable(tile)\r\n    {\r\n        return (tile != null) && (tile.tileGridY > (this.tileGridHeight - 1));\r\n    }\r\n\r\n    getTileType(x, y, behavior)\r\n    {\r\n        const aboveTile = (y < 1) ? null : this.tileGrid[y - 1][x];\r\n        const belowTile = (y > self.tileGridHeight - 1 || !this.tileGrid[y + 1]) ? null : this.tileGrid[y + 1][x];\r\n\r\n        const leftTile = (x < 1) ? null : this.tileGrid[y][x - 1];\r\n        const rightTile = (x > self.tileGridWidth - 1) ? null : this.tileGrid[y][x + 1];\r\n\r\n        if(behavior === TileGenerationBehavior.EasyWin && (aboveTile != null || belowTile != null || leftTile != null || rightTile != null))\r\n        {\r\n            return getRandomItem([aboveTile, belowTile, leftTile, rightTile].filter(t => t != null).map(t => t.tileType));\r\n        }\r\n        \r\n        if(behavior === TileGenerationBehavior.Hard)\r\n        {\r\n            return getRandomItem(TileType.filter(t =>\r\n                (belowTile === null || t.name !== belowTile.tileType.name) &&\r\n                (rightTile === null || t.name !== rightTile.tileType.name) &&\r\n                (leftTile === null || t.name !== leftTile.tileType.name)\r\n            ));\r\n        }\r\n\r\n        return getRandomItem(TileType.filter(t =>\r\n            (aboveTile === null || t.name !== aboveTile.tileType.name) &&\r\n            (leftTile === null || t.name !== leftTile.tileType.name)\r\n        ));\r\n    }\r\n}","import TileState from './TileState';\r\n\r\nexport default class {\r\n\r\n    constructor(tileType, x, y, tileGridX, tileGridY, onTileSelect)\r\n    {\r\n        this.tileType = tileType;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.tileGridX = tileGridX;\r\n        this.tileGridY = tileGridY;\r\n        this.onTileSelect = onTileSelect;\r\n        this.image = null;\r\n        this.state = TileState.Active;\r\n        this.isActivated = false;\r\n    }\r\n\r\n    create(context)\r\n    {\r\n        this.image = context.add.image(this.x, this.y, this.tileType.imageKey);\r\n        this.image.setInteractive();\r\n        this.image.on('pointerdown', () => { this.onTileSelect(context, this); });\r\n    }\r\n\r\n    activate()\r\n    {\r\n        this.isActivated = true;\r\n        this.image.setTintFill(0xffffff);\r\n    }\r\n\r\n    deactivate()\r\n    {\r\n        this.isActivated = false;\r\n        this.image.clearTint();\r\n    }\r\n\r\n    updatePosition(context, x, y, tileGridX, tileGridY)\r\n    {\r\n        let self = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            self.x = x;\r\n            self.y = y;\r\n            self.tileGridX = tileGridX;\r\n            self.tileGridY = tileGridY;\r\n\r\n            context.tweens.add({\r\n                targets: self.image,\r\n                x: x,\r\n                y: y,\r\n                ease: 'Power1',\r\n                duration: 500,\r\n                onComplete: () => { resolve() }\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n    destroy(context, container)\r\n    {\r\n        let self = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            context.tweens.add({\r\n                targets: self.image,\r\n                alpha: 0,\r\n                ease: 'Power1',\r\n                duration: 500,\r\n                onComplete: () => {\r\n\r\n                    container.remove(self.image);\r\n                    self.image.destroy();\r\n                    self.state = TileState.Destroyed;\r\n                    resolve();\r\n\r\n                }\r\n            });\r\n\r\n        });\r\n    }\r\n}","import ActionQueue from '../ActionQueue';\r\nimport DialogManager from '../DialogManager';\r\nimport Guide from '../Guide';\r\nimport LevelManifest from '../LevelManifest';\r\nimport ScoreDisplay from '../ScoreDisplay';\r\nimport TileGrid from '../TileGrid';\r\nimport Timer from '../Timer';\r\nimport TileGenerationBehavior from '../TileGenerationBehavior';\r\n\r\nexport default class extends Phaser.Scene {\r\n\r\n    constructor()\r\n    {\r\n        super('RoundScene');\r\n\r\n        this.isAwaitingRoundTransition = false;\r\n\r\n        this.score = null;\r\n        this.queue = null;\r\n        this.selectedTiles = null;\r\n        this.tileGrid = null;\r\n        this.scoreDisplay = null;\r\n        this.timer = null;\r\n \r\n        this.guide = null;\r\n        this.level = null;\r\n\r\n        this.comboCount = null;\r\n        this.totalMatches = null;\r\n    }\r\n\r\n    preload()\r\n    {\r\n        // Images: Tiles\r\n        this.load.image('tile_01', 'assets/tile_01.png');\r\n        this.load.image('tile_02', 'assets/tile_02.png');\r\n        this.load.image('tile_03', 'assets/tile_03.png');\r\n        this.load.image('tile_04', 'assets/tile_04.png');\r\n\r\n        // Images: Guide\r\n        this.load.image('guide_character', 'assets/guide.png');\r\n\r\n        // Images: Background\r\n        this.load.image('background', 'assets/background.png');\r\n    }\r\n\r\n    init(data)\r\n    {\r\n        this.level = data.level;\r\n    }\r\n\r\n    create()\r\n    {\r\n        this.isAwaitingRoundTransition = false;\r\n\r\n        this.score = 0;\r\n        this.comboCount = 0;\r\n        this.totalMatches = 0;\r\n\r\n        this.queue = new ActionQueue();\r\n\r\n        this.add.image(400, 400, 'background');\r\n\r\n        const tileGenerationBehavior = LevelManifest[this.level].behavior;\r\n\r\n        this.selectedTiles = [];\r\n        this.tileGrid = new TileGrid(6, 6, 80, 325, -265, this.onTileSelect, this.onTileMatch, tileGenerationBehavior, this.queue);\r\n        this.scoreDisplay = new ScoreDisplay(100, 580);\r\n\r\n        const timerSeconds = LevelManifest[this.level].timer;\r\n        this.timer = (timerSeconds > 0) ? new Timer(5, 570, timerSeconds) : null;\r\n\r\n        const dialogManager = new DialogManager();\r\n        const script = dialogManager.getScript(this.level);\r\n        this.guide = new Guide(20, 20, script);\r\n\r\n        this.tileGrid.create(this);\r\n        this.scoreDisplay.create(this);\r\n        this.timer && this.timer.create(this);\r\n        this.guide.create(this);\r\n\r\n        const self = this;\r\n        this.input.on('pointerdown', () => { self.guide.progressDialogue(); });\r\n    }\r\n\r\n    update()\r\n    {\r\n        if(this.isAwaitingRoundTransition)\r\n        {\r\n            if(!this.guide.isBlockingGameplay)\r\n            {\r\n                this.scene.start('RoundTransitionScene', { nextLevel: (this.level + 1) });\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        // Level 4: Tile generation behavior switches halfway through\r\n        if(this.level === 4\r\n                && this.tileGrid.TileGenerationBehavior !== TileGenerationBehavior.Hard\r\n                && this.score > (LevelManifest[this.level]/2))\r\n        {\r\n            console.log('Switched tile generation behavior!');\r\n            this.tileGrid.tileGenerationBehavior = TileGenerationBehavior.Hard;\r\n        }\r\n        \r\n        // Start the timer if the guide has stopped talking\r\n        if(!this.guide.isBlockingGameplay && this.timer && this.timer.isPaused)\r\n        {\r\n            this.timer.start();\r\n        }\r\n\r\n        // Have we run out of time?\r\n        if(this.timer != null && this.timer.seconds <= 0)\r\n        {\r\n            this.guide.displayGameOverMessage();\r\n            this.isAwaitingRoundTransition = true;\r\n            return;\r\n        }\r\n\r\n        if(this.isLevelComplete())\r\n        {\r\n            this.scene.start('RoundTransitionScene', { nextLevel: (this.level + 1) });\r\n            return;\r\n        }\r\n\r\n        // Are we currently executing a queued action?\r\n        if(this.queue.isActionRunning())\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Do we have any queued actions on the stack?\r\n        if(this.queue.hasActions())\r\n        {\r\n            this.queue.next();\r\n            return;\r\n        }\r\n\r\n        // If nothing's left in the queue, we can move the game's state forward\r\n        this.tileGrid.update(this);\r\n    }\r\n\r\n    onTileSelect(context, tile)\r\n    {\r\n        // Are we currently executing a queued action?\r\n        if(context.queue.isActionRunning())\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Is the guide currently blocking gameplay?\r\n        if(context.guide.isBlockingGameplay)\r\n        {\r\n            return;\r\n        }\r\n    \r\n        // Can we select this tile?\r\n        if(!context.tileGrid.canSelect(tile))\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Is this tile already selected?\r\n        if(tile.isActivated)\r\n        {\r\n            context.selectedTiles = [];\r\n            tile.deactivate();\r\n            return;\r\n        }\r\n    \r\n        if(context.selectedTiles.length === 0)\r\n        {\r\n            context.selectedTiles.push(tile);\r\n            tile.activate();\r\n            return;\r\n        }\r\n    \r\n        if(context.selectedTiles.length === 1)\r\n        {\r\n            const selectedTile = context.selectedTiles[0];\r\n            const xDiff = Math.abs(selectedTile.tileGridX - tile.tileGridX);\r\n            const yDiff = Math.abs(selectedTile.tileGridY - tile.tileGridY);\r\n    \r\n            if((xDiff === 1 && yDiff === 0) || (xDiff === 0 && yDiff === 1))\r\n            {\r\n                context.selectedTiles.push(tile);\r\n    \r\n                let firstSelectedTile = context.selectedTiles[0];\r\n                let secondSelectedTile = context.selectedTiles[1];\r\n    \r\n                context.tileGrid.swapTiles(context, firstSelectedTile, secondSelectedTile);\r\n    \r\n                context.queue.push(() => {\r\n    \r\n                    // If there are no matches, swap the tiles back\r\n                    if(\r\n                        !context.tileGrid.hasMatches(firstSelectedTile.tileGridX, firstSelectedTile.tileGridY) &&\r\n                        !context.tileGrid.hasMatches(secondSelectedTile.tileGridX, secondSelectedTile.tileGridY)\r\n                    )\r\n                    {\r\n                        context.tileGrid.swapTiles(context, firstSelectedTile, secondSelectedTile);\r\n                    }\r\n    \r\n                    return Promise.resolve();\r\n    \r\n                });\r\n    \r\n                context.selectedTiles.forEach((tile) => { tile.deactivate(); });\r\n                context.selectedTiles = [];\r\n                \r\n                context.comboCount = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    onTileMatch(context, matchedTiles)\r\n    {\r\n        context.comboCount++;\r\n        context.totalMatches++;\r\n\r\n        context.score += (matchedTiles.length * context.comboCount);\r\n        context.scoreDisplay.updateScore(context.score);\r\n\r\n        context.guide.displayTileMatchMessage(context, {\r\n            comboCount: context.comboCount,\r\n            totalMatches: context.totalMatches\r\n        });\r\n\r\n        if(context.comboCount > 1)\r\n        {\r\n            context.scoreDisplay.updateCombo(`${context.comboCount}x multiplier!`);\r\n        }\r\n        else\r\n        {\r\n            context.scoreDisplay.updateCombo('');\r\n        }\r\n    }\r\n\r\n    isLevelComplete()\r\n    {\r\n        return this.score >= LevelManifest[this.level].score;\r\n    }\r\n    \r\n}","export default class {\r\n\r\n    constructor()\r\n    {\r\n        this.queuedActions = [];\r\n        this.currentAction = null;\r\n    }\r\n\r\n    isActionRunning()\r\n    {\r\n        return this.currentAction != null;\r\n    }\r\n\r\n    hasActions()\r\n    {\r\n        return this.queuedActions.length > 0;\r\n    }\r\n\r\n    next()\r\n    {\r\n        this.currentAction = this.queuedActions.shift();\r\n        this.currentAction();\r\n    }\r\n\r\n    push(action)\r\n    {\r\n        var self = this;\r\n        self.queuedActions.push(() => { action().then(() => { self.currentAction = null; }) });\r\n    }\r\n\r\n}","export default class {\r\n\r\n    constructor(x, y)\r\n    {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.scoreText = null;\r\n        this.comboText = null;\r\n        this.score = 0;\r\n    }\r\n\r\n    create(context)\r\n    {\r\n        this.scoreText = context.add.text(this.x, this.y, this.score);\r\n        this.updateScore(this.score);\r\n\r\n        this.comboText = context.add.text(this.x, this.y + 20, '');\r\n    }\r\n\r\n    updateScore(score)\r\n    {\r\n        this.score = score;\r\n        this.scoreText.setText(score + ' dew drops');\r\n    }\r\n\r\n    updateCombo(text)\r\n    {\r\n        this.comboText.setText(text);\r\n    }\r\n}","export default class {\r\n\r\n    constructor(x, y, seconds)\r\n    {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.text = null;\r\n        this.seconds = seconds;\r\n        this.isPaused = true;\r\n    }\r\n\r\n    create(context)\r\n    {\r\n        this.text = context.add.text(this.x, this.y, this.score);\r\n        \r\n        this.tick();\r\n        context.time.addEvent({ delay: 1000, callback: this.tick, callbackScope: this, loop: true })\r\n    }\r\n\r\n    tick()\r\n    {\r\n        if(this.seconds <= 0 || this.isPaused)\r\n        {\r\n            return;\r\n        }\r\n\r\n        this.seconds--;\r\n\r\n        // Display the remaining time\r\n        const minutes = Math.floor(this.seconds / 60);\r\n\r\n        let seconds = (this.seconds % 60);\r\n        if(seconds < 10)\r\n        {\r\n            seconds = '0' + seconds;\r\n        }\r\n\r\n        this.text.setText(`${minutes}:${seconds}`);\r\n    }\r\n\r\n    start()\r\n    {\r\n        this.isPaused = false;\r\n    }\r\n}","import DialogScript from \"./DialogScript\";\r\n\r\nexport default class {\r\n\r\n    getScript(level)\r\n    {\r\n        const script = new DialogScript();\r\n\r\n        switch(level)\r\n        {\r\n            // Level 0 (Intro)\r\n            case 0:\r\n\r\n                script.introMessages = [\r\n                    `*Oh, doozle, you made it!* You're here! (Click or tap anywhere!)`,\r\n                    `The Dew Drop Kingdom is in trouble!`,\r\n                    `We lost all of our dew drops and now we'll starve!`,\r\n                    `But you can help us by collecting as many dew drops as you can!`,\r\n                    \"If you match three or more dew drops of the same color, we can collect them!\",\r\n                    \"To make a match, select two dew drops and swap their places!\"\r\n                ];\r\n\r\n                script.getDisplayTileMatchMessages = (data) => {\r\n\r\n                    if(data.totalMatches === 1)\r\n                    {\r\n                        return [\r\n                            \"You got it! That's it!\",\r\n                            \"You collect extra dew drops when you chain together matches in a combo!\",\r\n                            \"See if you can collect 100 dew drops!\"\r\n                        ];\r\n                    }\r\n\r\n                };\r\n\r\n                break;\r\n\r\n            // Level 1 (Timer Intro)\r\n            case 1:\r\n\r\n                script.introMessages = [\r\n                    \"*Oh, doozle!* You're so good at this!\",\r\n                    \"But, we'll have to hurry this time!\",\r\n                    \"We only have two minutes before the sun dries up all the dew drops!\",\r\n                    \"Collect at least 200 dew drops in two minutes!\"\r\n                ];\r\n\r\n                break;\r\n\r\n            // Level 2 (Breaking the Fourth Wall)\r\n            case 2:\r\n\r\n                script.introMessages = [\r\n                    \"Wow, we're so proud of you!\",\r\n                    \"This round you'll only have 30 seconds to collect at least 300 dew drops!\"\r\n                ];\r\n\r\n                script.getGameOverMessages = () => {\r\n                    return [\r\n                        \"Wait, wait, sorry, hold on.\",\r\n                        \"It's too early for the *\\\"Lose in a Panic\\\"* scenario.\",\r\n                        \"So sorry about that.\",\r\n                        \"You've been really great so far, honestly.\",\r\n                        \"You know, what, let's just go to the next round and we'll take it from the top.\"\r\n                    ];\r\n                };\r\n\r\n                break;\r\n\r\n            // Level 3 (Easy Win)\r\n            case 3:\r\n\r\n                script.introMessages = [\r\n                    \"Alright, I think we've got everything figured out.\",\r\n                    \"Okay, for this next round, let me set you up:\",\r\n                    \"Remember, you've been winning the last few rounds and you're gaining confidence.\",\r\n                    \"In this round, it's going to be easy for you to get combos.\",\r\n                    \"So the idea here is that you're going to get a little *too* confident, right?\",\r\n                    \"Like a little full of yourself, alright?\",\r\n                    \"Okay, great! Let's do this:\",\r\n                    \"...\",\r\n                    \"*Oh doozle woozle!*\",\r\n                    \"You're so amazing!\",\r\n                    \"You have two minutes again, but this time you'll have to collect 300 dew drops.\",\r\n                    \"Can you do it?\",\r\n                    \"Who am I kidding? Of course you can!\"\r\n                ];\r\n\r\n                break;\r\n\r\n            // Level 4 (Losing Confidence)\r\n            case 4:\r\n\r\n                script.introMessages = [\r\n                    \"Okay, okay, great stuff.\",\r\n                    \"For this round, you're bringing all of that pride, all of that hubris.\",\r\n                    \"And, when the round starts, things are still going your way.\",\r\n                    \"But guess what?\",\r\n                    \"Halfway through this round, things start getting a little harder.\",\r\n                    \"So this is where we begin to chip away at your pride as the player.\",\r\n                    \"Alright, that's your set up: now let me get into the right headspace.\",\r\n                    \"...oh doozle woo-\",\r\n                    \"...no, no, it's doozy-woozy here...\",\r\n                    \"...yeah, doozy-woozy, you're our hero, blah, blah...\",\r\n                    \"Alright! Got it!\",\r\n                    \"...\",\r\n                    \"*Doozy-woozy!*\",\r\n                    \"You're our hero!\",\r\n                    \"You've done so much for us, but we still need your help!\",\r\n                    \"We need you to collect 500 dew drops in five minutes!\" \r\n                ];\r\n\r\n                break;\r\n\r\n            // Level 5 (Fall From Grace)\r\n            case 5:\r\n\r\n                script.introMessages = [\r\n                    \"Wow, such moving work.\",\r\n                    \"It really feels so authentic.\",\r\n                    \"It's been a joy working with you.\",\r\n                    \"Okay, here we go, this is a pivotal scene:\",\r\n                    \"This round will not go your way at all. At all.\",\r\n                    \"This is your fall from grace.\",\r\n                    \"(Ahem)\",\r\n                    \"...\",\r\n                    \"*Doozle!*\",\r\n                    \"*Woozle!*\",\r\n                    \"I can't believe you did it!\",\r\n                    \"We've got a bigger challenge ahead, but I know you can do it!\",\r\n                    \"You can do anything!\",\r\n                    \"We need you to collect 1000 dew drops in five minutes!\"\r\n                ];\r\n\r\n                break;\r\n\r\n            // Level 6 (Wallowing)\r\n            case 6:\r\n\r\n                script.introMessages = [\r\n                    \"Okay, let's move right into the next scene:\",\r\n                    \"Here, you are wallowing, right?\",\r\n                    \"You are in the pit of despair and you can't see a way out.\",\r\n                    \"This round won't be particularly hard, but you can't seem to find any matches.\"\r\n                ];\r\n\r\n                break;\r\n\r\n            // Level 7 (Pheonix Rises)\r\n            case 7:\r\n\r\n                script.introMessages = [\r\n                    \"Now, you've been wallowing. You've feeling really low.\",\r\n                    \"You're in such despair, that in this round...\",\r\n                    \"There's an obvious combo.\",\r\n                    \"Right there, right in front of your face.\",\r\n                    \"But you can't see it through the despair.\",\r\n                    \"But then, in the last ten seconds of the round, you see it.\",\r\n                    \"Boom, it's the perfect match.\",\r\n                    \"And the pheonix rises once again!\"\r\n                ];\r\n\r\n                break;\r\n\r\n            // Level 8 (Victory Lap)\r\n            case 8:\r\n\r\n                script.introMessages = [\r\n                    \"Our hero is back!\",\r\n                    \"This final scene is our victory lap.\",\r\n                    \"However, we don't want too many combos in this round, right?\",\r\n                    \"This is a round the player wins on their own.\",\r\n                    \"No assistance from the game.\",\r\n                    \"A true hero's victory!\",\r\n                    \"Alright, let's do this: I've got an appointment after this.\"\r\n                ];\r\n\r\n                break;\r\n\r\n        }\r\n\r\n        return script;\r\n    }\r\n\r\n}","export default class {\r\n\r\n    constructor()\r\n    {\r\n        this.introMessages = [];\r\n        this.getDisplayTileMatchMessages = () => {};\r\n    }\r\n}","import TagText from 'phaser3-rex-plugins/plugins/tagtext.js';\r\nimport TextTyping from 'phaser3-rex-plugins/plugins/texttyping.js';\r\n\r\nexport default class {\r\n\r\n    constructor(x, y, script)\r\n    {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.script = script;\r\n\r\n        this.queuedMessages = null;\r\n        this.isPaused = false;\r\n        this.isBlockingGameplay = false;\r\n\r\n        this.endDialogueMarkerGraphics = null;\r\n    }\r\n\r\n    create(context)\r\n    {\r\n        const self = this;\r\n\r\n        const speechBubbleWidth = 760;\r\n        const speechBubbleHeight = 130;\r\n\r\n        const endDialogueMarkerRadius = 10;\r\n        \r\n        const characterWidth = 250;\r\n        const characterHeight = 500;\r\n\r\n        // Speech Bubble\r\n        const speechBubbleGraphics = context.add.graphics({ fillStyle: { color: 0xffffff } });\r\n        speechBubbleGraphics.fillRoundedRect(this.x, this.y, speechBubbleWidth, speechBubbleHeight, 10);\r\n        speechBubbleGraphics.fillTriangle(\r\n            this.x + 120, this.y + speechBubbleHeight + 20,\r\n            this.x + 105, this.y + speechBubbleHeight,\r\n            this.x + 135, this.y + speechBubbleHeight\r\n        );\r\n\r\n        // End Dialogue Marker\r\n        this.endDialogueMarkerGraphics = context.add.graphics({ fillStyle: { color: 0xcccccc } });\r\n        this.hideEndDialogueMarker();\r\n        const endDialogueMarker = new Phaser.Geom.Circle(\r\n            this.x + speechBubbleWidth - endDialogueMarkerRadius - 15,\r\n            this.y + speechBubbleHeight - endDialogueMarkerRadius - 15,\r\n            endDialogueMarkerRadius);\r\n        this.endDialogueMarkerGraphics.fillCircleShape(endDialogueMarker);\r\n\r\n        context.tweens.add({\r\n            targets: this.endDialogueMarkerGraphics,\r\n            alpha: 0,\r\n            duration: 500,\r\n            repeat: -1,\r\n            yoyo: true\r\n        });\r\n\r\n        // Speech Bubble Text\r\n        const speechBubbleTextStyle = {\r\n            color: '#000',\r\n            wrap: {\r\n                mode: 'word',\r\n                width: speechBubbleWidth\r\n            },\r\n            tags: {\r\n                exclamation: {\r\n                    fontStyle: 'bold'\r\n                }\r\n            }\r\n        };\r\n        \r\n        this.speechBubbleText = new TagText(context, this.x + 15, this.y + 15, '', speechBubbleTextStyle);\r\n        context.add.existing(this.speechBubbleText);\r\n\r\n        // Speech Bubble Text Typing\r\n        this.speechBubbleTextTyping = new TextTyping(this.speechBubbleText, { speed: 30 }); \r\n        this.speechBubbleTextTyping.on('complete', () => { self.onMessageComplete.call(self) });\r\n\r\n        // Character\r\n        context.add.image(this.x + (characterWidth/2), this.y + speechBubbleHeight + 230, 'guide_character');\r\n\r\n        self.queueMessages(context, this.script.introMessages);\r\n    }\r\n\r\n    queueMessages(context, messages)\r\n    {\r\n        if(!messages)\r\n        {\r\n            return;\r\n        }\r\n\r\n        const self = this;\r\n\r\n        if(self.queuedMessages === null)\r\n        {\r\n            self.queuedMessages = [];\r\n        }\r\n\r\n        self.queuedMessages.push(...messages);\r\n\r\n        if(self.speechBubbleTextTyping.isTyping)\r\n        {\r\n            return;\r\n        }\r\n\r\n        self.isBlockingGameplay = true;\r\n        self.progressDialogue();\r\n    }\r\n\r\n    onMessageComplete()\r\n    {\r\n        this.showEndDialogueMarker();\r\n        if(this.queuedMessages.length === 0)\r\n        {\r\n            this.isBlockingGameplay = false;\r\n            return;\r\n        }\r\n    }\r\n\r\n    displayTileMatchMessage(context, data)\r\n    {\r\n        const messages = this.script.getDisplayTileMatchMessages(data);\r\n        this.queueMessages(context, messages);\r\n    }\r\n\r\n    displayGameOverMessage(context)\r\n    {\r\n        const messages = this.script.getGameOverMessages();\r\n\r\n        // Push in a placeholder message to force players to confirm the last\r\n        // message in the \"Game Over\" queue\r\n        messages.push(' ');\r\n\r\n        this.queueMessages(context, messages);\r\n    }\r\n\r\n    progressDialogue()\r\n    {\r\n        this.hideEndDialogueMarker();\r\n        if(this.queuedMessages.length > 0)\r\n        {\r\n            const message = this.convertDialogToTagText(this.queuedMessages.shift());\r\n            this.speechBubbleTextTyping.start(message);\r\n        }\r\n    }\r\n\r\n    showEndDialogueMarker()\r\n    {\r\n        this.endDialogueMarkerGraphics.setVisible(true);\r\n    }\r\n\r\n    hideEndDialogueMarker()\r\n    {\r\n        this.endDialogueMarkerGraphics.setVisible(false);\r\n    }\r\n\r\n    convertDialogToTagText(input)\r\n    {\r\n        const styles = [\r\n            { token: '*', className: 'exclamation' },\r\n            { token: '_', className: 'underline'}\r\n        ];    \r\n\r\n        let output = '';\r\n        let currClass = '';\r\n    \r\n        for(let i=0; i<input.length; i++)\r\n        {\r\n            const currChar = input[i];\r\n            const isStyleToken = styles.some(style => style.token === currChar);\r\n    \r\n            // If the first character isn't a style token, then\r\n            // we need to open a \"normal\" class tag\r\n            if(i === 0 && !isStyleToken)\r\n            {\r\n                output += '<class=\"normal\">';\r\n                currClass = 'normal';\r\n            }\r\n    \r\n            // If the last character is a style token, we ignore it\r\n            // since we'll always end with a closing class tag anyway\r\n            if(i === input.length - 1 && isStyleToken)\r\n            {\r\n                continue;\r\n            }\r\n    \r\n            if(isStyleToken)\r\n            {\r\n                const targetStyle = styles.find(style => style.token === currChar);\r\n    \r\n                // If we've encountered a token of the class we already have open,\r\n                // that means we need to close the class\r\n                if(currClass === targetStyle.className)\r\n                {\r\n                    output += '</class>';\r\n                    output += '<class=\"normal\">';\r\n                    currClass = 'normal';\r\n                }\r\n    \r\n                // Otherwise, we need to close the existing the class and\r\n                // open the new class\r\n                else\r\n                {\r\n                    if(i !== 0)\r\n                    {\r\n                        output += '</class>';\r\n                    }\r\n    \r\n                    output += `<class=\"${targetStyle.className}\">`;\r\n                    currClass = targetStyle.className;\r\n                }\r\n            }\r\n            else\r\n            {\r\n                output += input[i];\r\n            }\r\n        }\r\n    \r\n        output += '</class>';\r\n        return output;\r\n    }\r\n}","export default class extends Phaser.Scene {\r\n\r\n    constructor()\r\n    {\r\n        super('RoundTransitionScene');\r\n\r\n        this.nextLevel = 0;\r\n    }\r\n\r\n    init(data)\r\n    {\r\n        this.nextLevel = data.nextLevel;\r\n    }\r\n\r\n    create()\r\n    {\r\n        const self = this;\r\n\r\n        // Title\r\n        this.add.text(50, 50, `Round ${self.nextLevel}`);\r\n\r\n        this.time.addEvent({ delay: 1000, callback: function() { self.scene.start('RoundScene', { level: self.nextLevel }) }, callbackScope: this })\r\n    }\r\n    \r\n}","export default class extends Phaser.Scene {\r\n\r\n    constructor()\r\n    {\r\n        super('GameOverScene');\r\n\r\n        this.finalScore = 0;\r\n    }\r\n\r\n    init(data)\r\n    {\r\n        this.finalScore = data.score;\r\n    }\r\n\r\n    create()\r\n    {\r\n        const self = this;\r\n\r\n        // Title\r\n        this.add.text(50, 50, 'Game Over!');\r\n\r\n        // Score\r\n        this.add.text(50, 100, `Final Score: ${this.finalScore}`);\r\n\r\n        // \"Return to Main Menu\" Button\r\n        const startOverBtn = this.add.text(50, 150, 'Return to Main Menu');\r\n        startOverBtn.setInteractive();\r\n        startOverBtn.on('pointerdown', () => { self.scene.start('TitleScene'); });\r\n    }\r\n    \r\n}","import TitleScene from './scenes/TitleScene';\r\nimport RoundScene from './scenes/RoundScene';\r\nimport RoundTransitionScene from './scenes/RoundTransitionScene';\r\nimport GameOverScene from './scenes/GameOverScene';\r\n\r\nconst config = {\r\n    type: Phaser.AUTO,\r\n    width: 800,\r\n    height: 800,\r\n    scene: [TitleScene, RoundScene, RoundTransitionScene, GameOverScene]\r\n};\r\n\r\nconst game = new Phaser.Game(config);"],"sourceRoot":""}