{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/render/WebGLRenderer.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/render/CanvasRenderer.js","webpack:///./script/scenes/TitleScene.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/object/NOOP.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/render/Render.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/textstyle/MeasureText.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/const.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/textstyle/TextStyle.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/canvastext/DrawMethods.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/struct/Stack.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/pool.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/penmanger/Pen.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/object/Clear.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/object/Clone.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/penmanger/PenManager.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/hitareamanager/HitAreaManager.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/canvastext/SetInteractive.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/canvastext/WrapText.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/canvastext/CanvasText.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/imagemanager/ImageManager.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/imagemanager/GetGlobImageManager.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/Text.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/tagtext/Parser.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/tagtext/TagText.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/tagtext/Creator.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/tagtext.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/tagtext/Factory.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/eventemitter/EventEmitterMethods.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/system/IsSceneObject.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/system/GetSceneObject.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/behaviors/texttyping/TextTyping.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/texttyping.js","webpack:///./script/TileGenerationBehavior.js","webpack:///./script/TileState.js","webpack:///./script/LevelManifest.js","webpack:///./script/Utility.js","webpack:///./script/TileType.js","webpack:///./script/TileGrid.js","webpack:///./script/Tile.js","webpack:///./script/scenes/RoundScene.js","webpack:///./script/ActionQueue.js","webpack:///./script/ScoreDisplay.js","webpack:///./script/Timer.js","webpack:///./script/DialogManager.js","webpack:///./script/DialogScript.js","webpack:///./script/Guide.js","webpack:///./script/scenes/RoundTransitionScene.js","webpack:///./script/main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Utils","Phaser","Renderer","WebGL","renderer","src","interpolationPercentage","camera","parentMatrix","width","height","frame","getTint","getTintAppendFloatAlpha","this","pipeline","batchTexture","glTexture","x","y","style","resolution","scaleX","scaleY","rotation","flipX","flipY","scrollFactorX","scrollFactorY","displayOriginX","displayOriginY","_tintTL","alpha","_alphaTL","_tintTR","_alphaTR","_tintBL","_alphaBL","_tintBR","_alphaBR","_isTinted","tintFill","batchSprite","super","load","image","self","add","flashBackdropGraphics","graphics","fillStyle","color","setAlpha","flashBackdrop","Geom","Rectangle","fillRectShape","title","setScale","startBtnGlow","startBtn","setInteractive","cursor","startBtnOverlay","on","tweens","targets","duration","ease","scene","start","level","introTimeline","createTimeline","delay","repeat","yoyo","play","renderWebGL","renderCanvas","CanvasPool","Display","Canvas","textStyle","canvas","context","getContext","syncFont","Math","ceil","measureText","testString","baselineX","baseline","baselineY","fillRect","font","_font","textBaseline","fillText","output","ascent","descent","fontSize","getImageData","remove","j","imagedata","data","pixels","length","line","idx","stop","NO_NEWLINE","RAW_NEWLINE","WRAPPED_NEWLINE","NO_WRAP","WORD_WRAP","CHAR_WRAP","SPLITREGEXP","GetAdvancedValue","Objects","GetValue","propertyMap","backgroundColor","fontFamily","fontStyle","stroke","strokeThickness","shadowOffsetX","shadowOffsetY","shadowColor","shadowBlur","shadowStroke","shadowFill","underlineColor","underlineThickness","underlineOffset","halign","valign","maxLines","fixedWidth","fixedHeight","lineSpacing","rtl","wrapMode","wrapWidth","WRAPMODE","none","word","char","character","text","parent","setStyle","metrics","updateText","undefined","wrap","toString","fill","update","strokeStyle","lineWidth","lineCap","lineJoin","enabled","recalculateMetrics","newFont","family","size","string","thickness","blur","offset","toLowerCase","max","getTextMetrics","startX","startY","boxWidth","boxHeight","penManager","hitAreaManager","clear","save","drawBackground","defatultStyle","startXOffset","startYOffset","drawLinesNum","drawLineStartIdx","drawLineEndIdx","offsetX","offsetY","lineHeight","lines","totalLinesNum","floor","lineIdx","getLineWidth","pens","penIdx","pensLen","drawPen","restore","pen","curStyle","parser","propToContextStyle","prop","buildFont","syncStyle","drawUnderline","isTextPen","drawText","isImagePen","drawImage","img","hasAreaMarker","area","clearRect","autoRound","round","savedLineCap","beginPath","moveTo","lineTo","syncShadow","strokeText","imgKey","imageManager","imgData","getFrame","left","source","cutX","cutY","cutWidth","cutHeight","items","pop","push","arr","apply","config","resetFromJSON","newLineMode","startIndex","txt","len","rawTextLength","obj","Array","isArray","out","objIsArray","GetFastValue","PensPool","LinesPool","maxLinesWidth","tagToText","tagToTextScope","freePens","pushMultiple","PEN_CONFIG","addPen","addTextPen","previousPen","lastPen","lastX","endIndex","lastLine","targetPenManager","li","llen","pi","plen","getLineEndIndex","hasLastPen","w","maxW","result","plainText","end","penTxt","penStartIdx","penEndIdx","currentProp","previousProp","wrapText","substring","RectanglePool","hitAreas","rectangle","setTo","hitArea","cnt","contains","scaleCanvas","rotateCanvas","translateCanvas","lineStyle","strokeRect","FireEvent","eventName","pointer","localX","localY","emit","event","splitRegExp","WRAP_RESULT","newline","getTextWidth","retLines","remainWidth","split","linesLen","tokenArray","token","textWidth","currLineWidth","curLineText","lineText","tokenLen","pensPool","newPenManager","_tmpPenManager","destroy","curProp","wrapLines","cursorX","cursorY","match","splitText","tagTextToProp","imgWidth","getOuterWidth","addNewLinePen","addImagePen","jLen","linesCount","getMaxLineWidth","desplayLinesCount","linesHeight","propToTagText","retPenManager","copyPenManager","updatePenManager","getSliceTagText","tmpPenManager","ret","copy","methods","assign","DrawMethods","globImageManager","textureManager","images","_add","textureKey","frameKey","frameWidth","frameHeight","right","exists","AddToDOM","DOM","GameObject","GameObjects","RemoveFromDOM","PensPools","type","sys","game","setPosition","setOrigin","initPipeline","align","_text","padding","top","bottom","dirty","_crop","resetCropObject","texture","textures","addCanvas","gl","deleteTexture","canvasText","setPadding","setText","events","dir","direction","display","originX","join","setFont","setFontFamily","setFontSize","setFontStyle","setFixedSize","setBackgroundColor","setFill","setColor","setStroke","setShadow","setShadowOffset","setShadowColor","setShadowBlur","setShadowStroke","setShadowFill","setWrapMode","setWrapWidth","setHAlign","setLineSpacing","setResolution","setMaxLines","runWrap","textHeight","linesWidth","h","updateDisplayOrigin","setSize","scale","draw","canvasToTexture","input","customHitArea","Components","ToJSON","toJSON","shape","callback","dropZone","getText","getPlainText","getPenManager","drawBounds","Class","mixin","Alpha","BlendMode","ComputedSize","Crop","Depth","Flip","GetBounds","Mask","Origin","Pipeline","ScrollFactor","Tint","Transform","Visible","Render","GETPROP_RESULT","prevProp","STYLE_RESULT","styleToProp","k","v","slen","isEmpty","thinkness","parseInt","replace","shadow","u","RE_SPACE","RE_SPLITTEXT","RE_CLASS_HEADER","RE_CLASS","RE_STYLE_HEADER","RE_STYLE","tags","innerMatch","charIdx","totalLen","matchStart","exec","lastIndex","test","propOut","_class","_style","defaultStyle","underline","isTextTag","tagName","tag","Parser","addTag","preDestroy","BuildGameObject","GameObjectFactory","register","gameObject","existing","GameObjectCreator","content","addToScene","eventEmitter","EventEmitterClass","Events","EventEmitter","_privateEE","_eventEmitter","shutdown","arguments","once","off","addListener","removeListener","removeAllListeners","listenerCount","listeners","SceneClass","Scene","setEventEmitter","timer","boot","setTypeMode","setTypeSpeed","setTextCallback","setTextCallbackScope","typingIdx","transferText","textLen","insertIdx","elapsed","getTimer","typeMode","speed","destroyEventEmitter","freeTimer","TYPEMODE","startIdx","timerStartAt","setTypingContent","startTimer","newText","concat","isTyping","showAllText","paused","getTextLength","getTypingString","isLastChar","typeIdx","endIdx","getSubString","midIdx","lowerResult","lowerLen","upperResult","upperLen","startAt","time","addEvent","loop","onTyping","callbackScope","slice","EventEmitterMethods","score","behavior","TileGenerationBehavior","handler","state","tileGrid","LevelManifest","tileGenerationBehavior","getRandomItem","random","imageKey","tileGridWidth","tileGridHeight","tileSize","onTileSelect","onTileMatch","queue","tileImageContainer","playAreaOffset","createTile","getTileType","container","forEachTile","tile","maskShape","make","mask","Masks","GeometryMask","matchedTiles","getMatches","destroys","forEach","Promise","all","TileState","drops","closestY","closestTile","getTileDrop","forEachPlayableTile","adjustedY","firstTile","secondTile","firstTileX","firstTileY","firstTileGridX","tileGridX","firstTileGridY","tileGridY","secondTileX","secondTileY","secondTileGridX","secondTileGridY","firstSwap","updatePosition","secondSwap","targetGridX","targetGridY","isPlayable","targetTileType","tileType","matchedXTiles","matchedYTiles","currX","currTile","currY","isActivated","isDestroying","setTintFill","clearTint","resolve","reject","onComplete","fadeOutCover","particleGraphics","explodeParticleGraphics","explodeParticle","Circle","Between","fillCircleShape","index","xSign","ySign","getTileX","getTileY","aboveTile","belowTile","leftTile","rightTile","TileType","filter","map","isAwaitingRoundTransition","selectedTiles","scoreDisplay","guide","comboCount","totalMatches","queuedActions","currentAction","shift","action","then","TileGrid","scoreText","comboText","updateScore","timerSeconds","seconds","isPaused","tick","minutes","script","introMessages","getDisplayTileMatchMessages","getGameOverMessages","getScript","queuedMessages","isBlockingGameplay","endDialogueMarkerGraphics","speechBubbleGraphics","fillRoundedRect","fillTriangle","hideEndDialogueMarker","endDialogueMarker","speechBubbleTextStyle","exclamation","speechBubbleText","speechBubbleTextTyping","onMessageComplete","props","queueMessages","messages","progressDialogue","showEndDialogueMarker","message","convertDialogToTagText","setVisible","styles","className","currClass","currChar","isStyleToken","some","targetStyle","find","nextLevel","handleSpecialLevelBehavior","displayGameOverMessage","isLevelComplete","isActionRunning","hasActions","next","canSelect","deactivate","activate","selectedTile","xDiff","abs","yDiff","firstSelectedTile","secondSelectedTile","swapTiles","hasMatches","updateCombo","AUTO","TitleScene","RoundScene","RoundTransitionScene","Game"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Utils = Phaser.Renderer.WebGL.Utils;\r\n\r\n/**\r\n * Renders this Game Object with the WebGL Renderer to the given Camera.\r\n * The object will not render if any of its renderFlags are set or it is being actively filtered out by the Camera.\r\n * This method should not be called directly. It is a utility function of the Render module.\r\n *\r\n * @method Phaser.GameObjects.Text#renderWebGL\r\n * @since 3.0.0\r\n * @private\r\n *\r\n * @param {Phaser.Renderer.WebGL.WebGLRenderer} renderer - A reference to the current active WebGL renderer.\r\n * @param {Phaser.GameObjects.Text} src - The Game Object being rendered in this call.\r\n * @param {number} interpolationPercentage - Reserved for future use and custom pipelines.\r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The Camera that is rendering the Game Object.\r\n * @param {Phaser.GameObjects.Components.TransformMatrix} parentMatrix - This transform matrix is defined if the game object is nested\r\n */\r\nvar TextWebGLRenderer = function (renderer, src, interpolationPercentage, camera, parentMatrix) {\r\n    if ((src.width === 0) || (src.height === 0)) {\r\n        return;\r\n    }\r\n\r\n    var frame = src.frame;\r\n    var width = frame.width;\r\n    var height = frame.height;\r\n    var getTint = Utils.getTintAppendFloatAlpha;\r\n\r\n    this.pipeline.batchTexture(\r\n        src,\r\n        frame.glTexture,\r\n        width, height,\r\n        src.x, src.y,\r\n        width / src.style.resolution, height / src.style.resolution,\r\n        src.scaleX, src.scaleY,\r\n        src.rotation,\r\n        src.flipX, src.flipY,\r\n        src.scrollFactorX, src.scrollFactorY,\r\n        src.displayOriginX, src.displayOriginY,\r\n        0, 0, width, height,\r\n        getTint(src._tintTL, camera.alpha * src._alphaTL),\r\n        getTint(src._tintTR, camera.alpha * src._alphaTR),\r\n        getTint(src._tintBL, camera.alpha * src._alphaBL),\r\n        getTint(src._tintBR, camera.alpha * src._alphaBR),\r\n        (src._isTinted && src.tintFill),\r\n        0, 0,\r\n        camera,\r\n        parentMatrix\r\n    );\r\n};\r\n\r\nmodule.exports = TextWebGLRenderer;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Renders this Game Object with the Canvas Renderer to the given Camera.\r\n * The object will not render if any of its renderFlags are set or it is being actively filtered out by the Camera.\r\n * This method should not be called directly. It is a utility function of the Render module.\r\n *\r\n * @method Phaser.GameObjects.Text#renderCanvas\r\n * @since 3.0.0\r\n * @private\r\n *\r\n * @param {Phaser.Renderer.Canvas.CanvasRenderer} renderer - A reference to the current active Canvas renderer.\r\n * @param {Phaser.GameObjects.Text} src - The Game Object being rendered in this call.\r\n * @param {number} interpolationPercentage - Reserved for future use and custom pipelines.\r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The Camera that is rendering the Game Object.\r\n * @param {Phaser.GameObjects.Components.TransformMatrix} parentMatrix - This transform matrix is defined if the game object is nested\r\n */\r\nvar TextCanvasRenderer = function (renderer, src, interpolationPercentage, camera, parentMatrix) {\r\n    if ((src.width === 0) || (src.height === 0)) {\r\n        return;\r\n    }\r\n\r\n    renderer.batchSprite(src, src.frame, camera, parentMatrix);\r\n};\r\n\r\nmodule.exports = TextCanvasRenderer;\r\n","export default class extends Phaser.Scene {\r\n\r\n    constructor()\r\n    {\r\n        super('TitleScene');\r\n    }\r\n\r\n    preload()\r\n    {\r\n        this.load.image('background', 'assets/background.png');\r\n        this.load.image('title', 'assets/title.png');\r\n        this.load.image('start', 'assets/start.png');\r\n        this.load.image('start-glow', 'assets/start_glow.png');\r\n        this.load.image('start-active', 'assets/start_active.png');\r\n    }\r\n\r\n    create()\r\n    {\r\n        const self = this;\r\n\r\n        // Background\r\n        this.add.image(400, 400, 'background');\r\n\r\n        // Flash Backdrop\r\n        const flashBackdropGraphics = this.add.graphics({ fillStyle: { color: 0xffffff } });\r\n        flashBackdropGraphics.setAlpha(0);\r\n        const flashBackdrop = new Phaser.Geom.Rectangle(0, 0, 800, 700);\r\n        flashBackdropGraphics.fillRectShape(flashBackdrop);\r\n\r\n        // Title\r\n        const title = this.add.image(400, 200, 'title');\r\n        title.setAlpha(0);\r\n        title.setScale(2, 2);\r\n\r\n        // \"Start\" Button\r\n        const startBtnGlow = this.add.image(400, 550, 'start-glow');\r\n        startBtnGlow.setAlpha(0);\r\n\r\n        const startBtn = this.add.image(400, 550, 'start');\r\n        startBtn.setInteractive({ cursor: 'pointer' });\r\n        startBtn.setAlpha(0);\r\n\r\n        const startBtnOverlay = this.add.image(400, 550, 'start-active');\r\n        startBtnOverlay.setAlpha(0);\r\n\r\n        startBtn.on('pointerover', () => {\r\n            self.tweens.add({\r\n                targets: startBtnOverlay,\r\n                alpha: 1,\r\n                duration: 100,\r\n                ease: 'Sine.easeInOut'\r\n            });\r\n        });\r\n\r\n        startBtn.on('pointerout', () => {\r\n            self.tweens.add({\r\n                targets: startBtnOverlay,\r\n                alpha: 0,\r\n                duration: 100,\r\n                ease: 'Sine.easeInOut'\r\n            });\r\n        });\r\n\r\n        startBtn.on('pointerdown', () => { self.scene.start('RoundScene', { level: 0 }); });\r\n\r\n        // Intro Timeline\r\n        const introTimeline = this.tweens.createTimeline();\r\n\r\n        introTimeline.add({\r\n            delay: 400,\r\n            targets: title,\r\n            alpha: 1,\r\n            scaleX: 1,\r\n            scaleY: 1,\r\n            duration: 500,\r\n            ease: 'Quad.easeIn'\r\n        });\r\n\r\n        introTimeline.add({\r\n            targets: flashBackdropGraphics,\r\n            alpha: 1,\r\n            duration: 30\r\n        });\r\n\r\n        introTimeline.add({\r\n            targets: flashBackdropGraphics,\r\n            alpha: 0,\r\n            duration: 700,\r\n            ease: 'Quad.easeIn'\r\n        });\r\n\r\n        introTimeline.add({\r\n            targets: startBtn,\r\n            alpha: 1,\r\n            duration: 100\r\n        });\r\n\r\n        introTimeline.add({\r\n            targets: startBtnGlow,\r\n            alpha: 1,\r\n            duration: 1000,\r\n            repeat: -1,\r\n            yoyo: true,\r\n            ease: 'Sine.easeInOut'\r\n        });\r\n\r\n        introTimeline.play();\r\n    }\r\n    \r\n}","var NOOP = function () {\r\n    //  NOOP\r\n};\r\n\r\nexport default NOOP;","import WebGLRenderer from './WebGLRenderer.js';\r\nimport CanvasRenderer from './CanvasRenderer.js';\r\nimport NOOP from '../../../../utils/object/NOOP';\r\n\r\nvar renderWebGL = NOOP;\r\nvar renderCanvas = NOOP;\r\n\r\nif (WEBGL_RENDERER) {\r\n    renderWebGL = WebGLRenderer;\r\n}\r\n\r\nif (CANVAS_RENDERER) {\r\n    renderCanvas = CanvasRenderer;\r\n}\r\n\r\nexport default {\r\n    renderWebGL: renderWebGL,\r\n    renderCanvas: renderCanvas\r\n\r\n};","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nconst CanvasPool = Phaser.Display.Canvas.CanvasPool;\r\n\r\n/**\r\n * Calculates the ascent, descent and fontSize of a given font style.\r\n *\r\n * @function Phaser.GameObjects.Text.MeasureText\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.GameObjects.Text.TextStyle} textStyle - The TextStyle object to measure.\r\n *\r\n * @return {object} An object containing the ascent, descent and fontSize of the TextStyle.\r\n */\r\nvar MeasureText = function (textStyle) {\r\n    // @property {HTMLCanvasElement} canvas - The canvas element that the text is rendered.\r\n    var canvas = CanvasPool.create(this);\r\n\r\n    // @property {HTMLCanvasElement} context - The context of the canvas element that the text is rendered to.\r\n    var context = canvas.getContext('2d');\r\n\r\n    textStyle.syncFont(canvas, context);\r\n\r\n    var width = Math.ceil(context.measureText(textStyle.testString).width * textStyle.baselineX);\r\n    var baseline = width;\r\n    var height = 2 * baseline;\r\n\r\n    baseline = baseline * textStyle.baselineY | 0;\r\n\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n\r\n    context.fillStyle = '#f00';\r\n    context.fillRect(0, 0, width, height);\r\n\r\n    context.font = textStyle._font;\r\n\r\n    context.textBaseline = 'alphabetic';\r\n    context.fillStyle = '#000';\r\n    context.fillText(textStyle.testString, 0, baseline);\r\n\r\n    var output = {\r\n        ascent: 0,\r\n        descent: 0,\r\n        fontSize: 0\r\n    };\r\n\r\n    if (!context.getImageData(0, 0, width, height)) {\r\n        output.ascent = baseline;\r\n        output.descent = baseline + 6;\r\n        output.fontSize = output.ascent + output.descent;\r\n\r\n        CanvasPool.remove(canvas);\r\n\r\n        return output;\r\n    }\r\n\r\n    var imagedata = context.getImageData(0, 0, width, height).data;\r\n    var pixels = imagedata.length;\r\n    var line = width * 4;\r\n    var i;\r\n    var j;\r\n    var idx = 0;\r\n    var stop = false;\r\n\r\n    // ascent. scan from top to bottom until we find a non red pixel\r\n    for (i = 0; i < baseline; i++) {\r\n        for (j = 0; j < line; j += 4) {\r\n            if (imagedata[idx + j] !== 255) {\r\n                stop = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!stop) {\r\n            idx += line;\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n\r\n    output.ascent = baseline - i;\r\n\r\n    idx = pixels - line;\r\n    stop = false;\r\n\r\n    // descent. scan from bottom to top until we find a non red pixel\r\n    for (i = height; i > baseline; i--) {\r\n        for (j = 0; j < line; j += 4) {\r\n            if (imagedata[idx + j] !== 255) {\r\n                stop = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!stop) {\r\n            idx -= line;\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n\r\n    output.descent = (i - baseline);\r\n    output.fontSize = output.ascent + output.descent;\r\n\r\n    CanvasPool.remove(canvas);\r\n\r\n    return output;\r\n};\r\n\r\nexport default MeasureText;","var CONST = {\r\n    // new line mode\r\n    NO_NEWLINE: 0,\r\n    RAW_NEWLINE: 1,\r\n    WRAPPED_NEWLINE: 2,\r\n\r\n    // wrap mode\r\n    NO_WRAP: 0,\r\n    WORD_WRAP: 1,\r\n    CHAR_WRAP: 2,\r\n\r\n    // split lines\r\n    SPLITREGEXP: /(?:\\r\\n|\\r|\\n)/\r\n};\r\n\r\nexport default CONST;","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nimport MeasureText from './MeasureText.js';\r\nimport CONST from '../const.js';\r\n\r\nconst GetAdvancedValue = Phaser.Utils.Objects.GetAdvancedValue;\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\n\r\n//  Key: [ Object Key, Default Value ]\r\n\r\n/**\r\n * A custom function that will be responsible for wrapping the text.\r\n * @callback TextStyleWordWrapCallback\r\n *\r\n * @param {string} text - The string to wrap.\r\n * @param {Phaser.GameObjects.Text} textObject - The Text instance.\r\n *\r\n * @return {(string|string[])} Should return the wrapped lines either as an array of lines or as a string with\r\n * newline characters in place to indicate where breaks should happen.\r\n */\r\n\r\nvar propertyMap = {\r\n    // background\r\n    backgroundColor: ['backgroundColor', null],\r\n\r\n    // font\r\n    fontFamily: ['fontFamily', 'Courier'],\r\n    fontSize: ['fontSize', '16px'],\r\n    fontStyle: ['fontStyle', ''],\r\n    color: ['color', '#fff'],\r\n    stroke: ['stroke', '#fff'],\r\n    strokeThickness: ['strokeThickness', 0],\r\n    shadowOffsetX: ['shadow.offsetX', 0],\r\n    shadowOffsetY: ['shadow.offsetY', 0],\r\n    shadowColor: ['shadow.color', '#000'],\r\n    shadowBlur: ['shadow.blur', 0],\r\n    shadowStroke: ['shadow.stroke', false],\r\n    shadowFill: ['shadow.fill', false],\r\n\r\n    // underline\r\n    underlineColor: ['underline.color', '#000'],\r\n    underlineThickness: ['underline.thickness', 0],\r\n    underlineOffset: ['underline.offset', 0],\r\n\r\n    // align\r\n    halign: ['halign', 'left'],\r\n    valign: ['valign', 'top'],\r\n\r\n    // size\r\n    maxLines: ['maxLines', 0],\r\n    fixedWidth: ['fixedWidth', 0],\r\n    fixedHeight: ['fixedHeight', 0],\r\n    resolution: ['resolution', 0],\r\n    lineSpacing: ['lineSpacing', 0],\r\n\r\n    rtl: ['rtl', false],\r\n    testString: ['testString', '|MÃ‰qgy'],\r\n    baselineX: ['baselineX', 1.2],\r\n    baselineY: ['baselineY', 1.4],\r\n\r\n    // wrap\r\n    wrapMode: ['wrap.mode', 1],\r\n    wrapWidth: ['wrap.width', 0]\r\n    //wrapCallback: ['wrap.callback', null],\r\n    //wrapCallbackScope: ['wrap.callbackScope', null]\r\n};\r\n\r\nclass TextStyle {\r\n    constructor(text, style) {\r\n        this.parent = text;\r\n\r\n        this.backgroundColor;\r\n\r\n        this.fontFamily;\r\n        this.fontSize;\r\n        this.fontStyle;\r\n        this.color;\r\n        this.stroke;\r\n        this.strokeThickness;\r\n        this.shadowOffsetX;\r\n        this.shadowOffsetY;\r\n        this.shadowColor;\r\n        this.shadowBlur;\r\n        this.shadowStroke;\r\n        this.shadowFill;\r\n\r\n        this.underlineColor;\r\n        this.underlineThickness;\r\n        this.underlineOffset;\r\n\r\n        this.halign;\r\n        this.valign;\r\n\r\n        this.maxLines;\r\n        this.fixedWidth;\r\n        this.fixedHeight;\r\n        this.resolution;\r\n        this.lineSpacing;\r\n\r\n        this.rtl;\r\n        this.testString;\r\n\r\n\r\n        this.baselineX;\r\n        this.baselineY;\r\n\r\n        this._font;\r\n\r\n        //  Set to defaults + user style\r\n        this.setStyle(style, false);\r\n\r\n        var metrics = GetValue(style, 'metrics', false);\r\n\r\n        //  Provide optional TextMetrics in the style object to avoid the canvas look-up / scanning\r\n        //  Doing this is reset if you then change the font of this TextStyle after creation\r\n        if (metrics) {\r\n            this.metrics = {\r\n                ascent: GetValue(metrics, 'ascent', 0),\r\n                descent: GetValue(metrics, 'descent', 0),\r\n                fontSize: GetValue(metrics, 'fontSize', 0)\r\n            };\r\n        } else {\r\n            this.metrics = MeasureText(this);\r\n        }\r\n    }\r\n\r\n    setStyle(style, updateText) {\r\n        if (updateText === undefined) {\r\n            updateText = true;\r\n        }\r\n\r\n        if (style && style.hasOwnProperty('wrap')) {\r\n            var wrap = style.wrap;\r\n            if (wrap.hasOwnProperty('mode')) {\r\n                var mode = wrap.mode;\r\n                if (typeof mode === 'string') {\r\n                    wrap.mode = WRAPMODE[mode];\r\n                }\r\n            } else {\r\n                if (wrap.hasOwnProperty('width')) {\r\n                    wrap.mode = 1;\r\n                }\r\n            }\r\n        }\r\n\r\n        //  Avoid type mutation\r\n        if (style && style.hasOwnProperty('fontSize') && typeof style.fontSize === 'number') {\r\n            style.fontSize = style.fontSize.toString() + 'px';\r\n        }\r\n\r\n        for (var key in propertyMap) {\r\n            if (key === 'wrapCallback' || key === 'wrapCallbackScope') {\r\n                // Callback & scope should be set without processing the values\r\n                this[key] = GetValue(style, propertyMap[key][0], propertyMap[key][1]);\r\n            } else {\r\n                this[key] = GetAdvancedValue(style, propertyMap[key][0], propertyMap[key][1]);\r\n            }\r\n        }\r\n\r\n        //  Allow for 'font' override\r\n        var font = GetValue(style, 'font', null);\r\n\r\n        if (font === null) {\r\n            this._font = this.fontStyle + ' ' + this.fontSize + ' ' + this.fontFamily;\r\n        } else {\r\n            this._font = font;\r\n        }\r\n\r\n        //  Allow for 'fill' to be used in place of 'color'\r\n        var fill = GetValue(style, 'fill', null);\r\n\r\n        if (fill !== null) {\r\n            this.color = fill;\r\n        }\r\n\r\n        if (updateText) {\r\n            return this.update(true);\r\n        } else {\r\n            return this.parent;\r\n        }\r\n    }\r\n\r\n    syncFont(canvas, context) {\r\n        context.font = this._font;\r\n    }\r\n\r\n    syncStyle(canvas, context) {\r\n        context.textBaseline = 'alphabetic';\r\n\r\n        context.fillStyle = this.color;\r\n        context.strokeStyle = this.stroke;\r\n\r\n        context.lineWidth = this.strokeThickness;\r\n        context.lineCap = 'round';\r\n        context.lineJoin = 'round';\r\n    }\r\n\r\n    syncShadow(context, enabled) {\r\n        if (enabled) {\r\n            context.shadowOffsetX = this.shadowOffsetX;\r\n            context.shadowOffsetY = this.shadowOffsetY;\r\n            context.shadowColor = this.shadowColor;\r\n            context.shadowBlur = this.shadowBlur;\r\n        } else {\r\n            context.shadowOffsetX = 0;\r\n            context.shadowOffsetY = 0;\r\n            context.shadowColor = 0;\r\n            context.shadowBlur = 0;\r\n        }\r\n    }\r\n\r\n    update(recalculateMetrics) {\r\n        if (recalculateMetrics) {\r\n            this._font = this.fontStyle + ' ' + this.fontSize + ' ' + this.fontFamily;\r\n\r\n            this.metrics = MeasureText(this);\r\n        }\r\n\r\n        return this.parent.updateText(recalculateMetrics);\r\n    }\r\n\r\n    buildFont() {\r\n        var newFont = this.fontStyle + ' ' + this.fontSize + ' ' + this.fontFamily;\r\n        if (newFont !== this._font) {\r\n            this._font = newFont;\r\n            //this.metrics = MeasureText(this);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    setFont(font) {\r\n        if (typeof font === 'string') {\r\n            this.fontFamily = font;\r\n            this.fontSize = '';\r\n            this.fontStyle = '';\r\n        } else {\r\n            this.fontFamily = GetValue(font, 'fontFamily', 'Courier');\r\n            this.fontSize = GetValue(font, 'fontSize', '16px');\r\n            this.fontStyle = GetValue(font, 'fontStyle', '');\r\n        }\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setFontFamily(family) {\r\n        this.fontFamily = family;\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setFontStyle(style) {\r\n        this.fontStyle = style;\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setFontSize(size) {\r\n        if (typeof size === 'number') {\r\n            size = size.toString() + 'px';\r\n        }\r\n\r\n        this.fontSize = size;\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setTestString(string) {\r\n        this.testString = string;\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setFixedSize(width, height) {\r\n        this.fixedWidth = width;\r\n        this.fixedHeight = height;\r\n\r\n        if (width) {\r\n            this.parent.width = width;\r\n        }\r\n\r\n        if (height) {\r\n            this.parent.height = height;\r\n        }\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setResolution(value) {\r\n        this.resolution = value;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setLineSpacing(value) {\r\n        this.lineSpacing = value;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setBackgroundColor(color) {\r\n        this.backgroundColor = color;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setFill(color) {\r\n        this.color = color;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setColor(color) {\r\n        this.color = color;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setStroke(color, thickness) {\r\n        if (color === undefined) {\r\n            //  Reset the stroke to zero (disabling it)\r\n            this.strokeThickness = 0;\r\n        } else {\r\n            if (thickness === undefined) {\r\n                thickness = this.strokeThickness;\r\n            }\r\n\r\n            this.stroke = color;\r\n            this.strokeThickness = thickness;\r\n        }\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setShadow(x, y, color, blur, shadowStroke, shadowFill) {\r\n        if (x === undefined) {\r\n            x = 0;\r\n        }\r\n        if (y === undefined) {\r\n            y = 0;\r\n        }\r\n        if (color === undefined) {\r\n            color = '#000';\r\n        }\r\n        if (blur === undefined) {\r\n            blur = 0;\r\n        }\r\n        if (shadowStroke === undefined) {\r\n            shadowStroke = false;\r\n        }\r\n        if (shadowFill === undefined) {\r\n            shadowFill = true;\r\n        }\r\n\r\n        this.shadowOffsetX = x;\r\n        this.shadowOffsetY = y;\r\n        this.shadowColor = color;\r\n        this.shadowBlur = blur;\r\n        this.shadowStroke = shadowStroke;\r\n        this.shadowFill = shadowFill;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setShadowOffset(x, y) {\r\n        if (x === undefined) {\r\n            x = 0;\r\n        }\r\n        if (y === undefined) {\r\n            y = x;\r\n        }\r\n\r\n        this.shadowOffsetX = x;\r\n        this.shadowOffsetY = y;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setShadowColor(color) {\r\n        if (color === undefined) {\r\n            color = '#000';\r\n        }\r\n\r\n        this.shadowColor = color;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setShadowBlur(blur) {\r\n        if (blur === undefined) {\r\n            blur = 0;\r\n        }\r\n\r\n        this.shadowBlur = blur;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setShadowStroke(enabled) {\r\n        this.shadowStroke = enabled;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setShadowFill(enabled) {\r\n        this.shadowFill = enabled;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setUnderline(color, thickness, offset) {\r\n        if (color === undefined) {\r\n            color = '#000';\r\n        }\r\n        if (thickness === undefined) {\r\n            thickness = 0;\r\n        }\r\n        if (offset === undefined) {\r\n            offset = 0;\r\n        }\r\n\r\n        this.underlineColor = color;\r\n        this.underlineThickness = thickness;\r\n        this.underlineOffset = offset;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setUnderlineColor(color) {\r\n        if (color === undefined) {\r\n            color = '#000';\r\n        }\r\n\r\n        this.underlineColor = color;\r\n        return this.update(false);\r\n    }\r\n\r\n    setUnderlineThickness(thickness) {\r\n        if (thickness === undefined) {\r\n            thickness = 0;\r\n        }\r\n\r\n        this.underlineThickness = thickness;\r\n        return this.update(false);\r\n    }\r\n\r\n    setUnderlineOffset(offset) {\r\n        if (offset === undefined) {\r\n            offset = 0;\r\n        }\r\n\r\n        this.underlineOffset = offset;\r\n        return this.update(false);\r\n    }\r\n\r\n    setWrapMode(mode) {\r\n        if (typeof mode === 'string') {\r\n            mode = WRAPMODE[mode.toLowerCase()] || 0;\r\n        }\r\n        this.wrapMode = mode;\r\n        return this.update(true);\r\n    }\r\n\r\n    setWrapWidth(width) {\r\n        this.wrapWidth = width;\r\n        return this.update(false);\r\n    }\r\n\r\n    setAlign(halign, valign) {\r\n        if (halign === undefined) {\r\n            halign = 'left';\r\n        }\r\n        if (valign === undefined) {\r\n            valign = 'top';\r\n        }\r\n        this.halign = halign;\r\n        this.valign = valign;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setHAlign(halign) {\r\n        if (halign === undefined) {\r\n            halign = 'left';\r\n        }\r\n        this.halign = halign;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setVAlign(valign) {\r\n        if (valign === undefined) {\r\n            valign = 'top';\r\n        }\r\n        this.valign = valign;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setMaxLines(max) {\r\n        if (max === undefined) {\r\n            max = 0;\r\n        }\r\n\r\n        this.maxLines = max;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    getTextMetrics() {\r\n        var metrics = this.metrics;\r\n\r\n        return {\r\n            ascent: metrics.ascent,\r\n            descent: metrics.descent,\r\n            fontSize: metrics.fontSize\r\n        };\r\n    }\r\n\r\n    get lineHeight() {\r\n        return this.metrics.fontSize + this.strokeThickness + this.lineSpacing;\r\n    }\r\n\r\n    toJSON() {\r\n        var output = {};\r\n\r\n        for (var key in propertyMap) {\r\n            output[key] = this[key];\r\n        }\r\n\r\n        output.metrics = this.getTextMetrics();\r\n\r\n        return output;\r\n    }\r\n\r\n    destroy() {\r\n        this.parent = undefined;\r\n    }\r\n\r\n}\r\n\r\nconst HALIGNMODE = {\r\n    left: CONST.hleft,\r\n    center: CONST.hcenter,\r\n    right: CONST.hright,\r\n};\r\nconst VALIGNMODE = {\r\n    top: CONST.vtop,\r\n    center: CONST.vcenter,\r\n    bottom: CONST.vbottom,\r\n};\r\nconst WRAPMODE = {\r\n    none: CONST.NO_WRAP,\r\n    word: CONST.WORD_WRAP,\r\n    char: CONST.CHAR_WRAP,\r\n    character: CONST.CHAR_WRAP\r\n};\r\n\r\nexport default TextStyle;","import CONST from '../const.js';\r\n\r\nexport default {\r\n    draw(startX, startY, boxWidth, boxHeight) {\r\n        var penManager = this.penManager;\r\n        this.hitAreaManager.clear();\r\n\r\n        var context = this.context;\r\n        context.save();\r\n\r\n        // this.clear();\r\n        this.drawBackground(this.defatultStyle.backgroundColor);\r\n\r\n        // draw lines\r\n        var defatultStyle = this.defatultStyle;\r\n        startX += this.startXOffset;\r\n        startY += this.startYOffset;\r\n        var halign = defatultStyle.halign,\r\n            valign = defatultStyle.valign;\r\n\r\n        var lineWidth, lineHeight = defatultStyle.lineHeight;\r\n        var lines = penManager.lines;\r\n        var totalLinesNum = lines.length,\r\n            maxLines = defatultStyle.maxLines;\r\n        var drawLinesNum, drawLineStartIdx, drawLineEndIdx;\r\n        if ((maxLines > 0) && (totalLinesNum > maxLines)) {\r\n            drawLinesNum = maxLines;\r\n            if (valign === 'center') { // center\r\n                drawLineStartIdx = Math.floor((totalLinesNum - drawLinesNum) / 2);\r\n            } else if (valign === 'bottom') { // bottom\r\n                drawLineStartIdx = totalLinesNum - drawLinesNum;\r\n            } else {\r\n                drawLineStartIdx = 0;\r\n            }\r\n        } else {\r\n            drawLinesNum = totalLinesNum;\r\n            drawLineStartIdx = 0;\r\n        }\r\n        drawLineEndIdx = drawLineStartIdx + drawLinesNum;\r\n\r\n        var offsetX, offsetY;\r\n        if (valign === 'center') { // center\r\n            offsetY = Math.max((boxHeight - (drawLinesNum * lineHeight)) / 2, 0);\r\n        } else if (valign === 'bottom') { // bottom\r\n            offsetY = Math.max(boxHeight - (drawLinesNum * lineHeight) - 2, 0);\r\n        } else {\r\n            offsetY = 0;\r\n        }\r\n        offsetY += startY;\r\n        for (var lineIdx = drawLineStartIdx; lineIdx < drawLineEndIdx; lineIdx++) {\r\n            lineWidth = penManager.getLineWidth(lineIdx);\r\n            if (lineWidth === 0) {\r\n                continue;\r\n            }\r\n\r\n            if (halign === 'center') { // center\r\n                offsetX = (boxWidth - lineWidth) / 2;\r\n            } else if (halign === 'right') { // right\r\n                offsetX = boxWidth - lineWidth;\r\n            } else {\r\n                offsetX = 0;\r\n            }\r\n            offsetX += startX;\r\n\r\n            var pens = lines[lineIdx];\r\n            for (var penIdx = 0, pensLen = pens.length; penIdx < pensLen; penIdx++) {\r\n                this.drawPen(pens[penIdx], offsetX, offsetY);\r\n            }\r\n        }\r\n\r\n        context.restore();\r\n    },\r\n\r\n    drawPen(pen, offsetX, offsetY) {\r\n        offsetX += pen.x;\r\n        offsetY += pen.y;\r\n\r\n        var canvas = this.canvas;\r\n        var context = this.context;\r\n        context.save();\r\n\r\n        var curStyle = this.parser.propToContextStyle(\r\n            this.defatultStyle,\r\n            pen.prop\r\n        );\r\n        curStyle.buildFont();\r\n        curStyle.syncFont(canvas, context);\r\n        curStyle.syncStyle(canvas, context);\r\n\r\n        // Underline\r\n        if ((curStyle.underlineThickness > 0) && (pen.width > 0)) {\r\n            this.drawUnderline(offsetX, offsetY, pen.width, curStyle);\r\n        }\r\n\r\n        // Text\r\n        if (pen.isTextPen) {\r\n            this.drawText(offsetX, offsetY, pen.text, curStyle);\r\n        }\r\n\r\n        // Image\r\n        if (pen.isImagePen) {\r\n            this.drawImage(offsetX, offsetY, pen.prop.img, curStyle);\r\n        }\r\n\r\n        context.restore();\r\n\r\n        if (pen.hasAreaMarker && (pen.width > 0)) {\r\n            this.hitAreaManager.add(\r\n                pen.prop.area,\r\n                offsetX, (offsetY - this.startYOffset),\r\n                pen.width, this.defatultStyle.lineHeight);\r\n        }\r\n    },\r\n\r\n    clear() {\r\n        var canvas = this.canvas;\r\n        this.context.clearRect(0, 0, canvas.width, canvas.height);\r\n    },\r\n\r\n    drawBackground(color) {\r\n        if (color === null) {\r\n            return;\r\n        }\r\n        this.context.fillStyle = color;\r\n        this.context.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n    },\r\n\r\n    drawUnderline(x, y, width, style) {\r\n        y += style.underlineOffset - (style.underlineThickness / 2);\r\n        if (this.autoRound) {\r\n            x = Math.round(x);\r\n            y = Math.round(y);\r\n        }\r\n\r\n        var context = this.context;\r\n        var savedLineCap = context.lineCap;\r\n        context.lineCap = 'butt';\r\n        context.beginPath();\r\n        context.strokeStyle = style.underlineColor;\r\n        context.lineWidth = style.underlineThickness;\r\n        context.moveTo(x, y);\r\n        context.lineTo((x + width), y);\r\n        context.stroke();\r\n        context.lineCap = savedLineCap;\r\n    },\r\n\r\n    drawText(x, y, text, style) {\r\n        if (this.autoRound) {\r\n            x = Math.round(x);\r\n            y = Math.round(y);\r\n        }\r\n\r\n        var context = this.context;\r\n        if (style.strokeThickness) {\r\n            style.syncShadow(context, style.shadowStroke);\r\n            context.strokeText(text, x, y);\r\n        }\r\n\r\n        if (style.color && (style.color !== 'none')) {\r\n            style.syncShadow(context, style.shadowFill);\r\n            context.fillText(text, x, y);\r\n        }\r\n    },\r\n\r\n    drawImage(x, y, imgKey, style) {\r\n        var imageManager = this.parent.imageManager;\r\n        var imgData = imageManager.get(imgKey);\r\n        var frame = imageManager.getFrame(imgKey);\r\n\r\n        x += imgData.left;\r\n        y += - this.startYOffset + imgData.y;\r\n        if (this.autoRound) {\r\n            x = Math.round(x);\r\n            y = Math.round(y);\r\n        }\r\n\r\n        var context = this.context;\r\n        context.drawImage(\r\n            frame.source.image,\r\n            frame.cutX, frame.cutY, frame.cutWidth, frame.cutHeight,\r\n            x, y, imgData.width, imgData.height\r\n        );\r\n    }\r\n\r\n}","class Stack {\r\n    constructor() {\r\n        this.items = [];\r\n    }\r\n\r\n    destroy() {\r\n        this.items.length = 0;\r\n        this.items = undefined;\r\n    }\r\n\r\n    pop() {\r\n        return (this.items.length > 0) ? this.items.pop() : null;\r\n    }\r\n\r\n    push(l) {\r\n        this.items.push(l);\r\n        return this;\r\n    }\r\n\r\n    pushMultiple(arr) {\r\n        this.items.push.apply(this.items, arr);\r\n        arr.length = 0;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport default Stack;","import Pool from './utils/struct/Stack.js';\r\nexport default Pool;","import CONST from '../const.js';\r\n\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\nconst NO_NEWLINE = CONST.NO_NEWLINE;\r\nconst RAW_NEWLINE = CONST.RAW_NEWLINE;\r\n\r\nclass Pen {\r\n    constructor(config) {\r\n        this.prop = {};\r\n        this.resetFromJSON(config);\r\n    }\r\n\r\n    resetFromJSON(o) { // (txt, x, y, width, prop, newLineMode, startIndex)\r\n        this.text = GetValue(o, 'text', '');\r\n        this.x = GetValue(o, 'x', 0);\r\n        this.y = GetValue(o, 'y', 0);\r\n        this.width = GetValue(o, 'width', 0);\r\n\r\n        var prop = GetValue(o, 'prop', null);\r\n        if (prop === null) {\r\n            prop = {};\r\n        }\r\n        this.prop = prop;\r\n        this.newLineMode = GetValue(o, 'newLineMode', 0);\r\n        this.startIndex = GetValue(o, 'startIndex', 0);\r\n    }\r\n\r\n    get plainText() {\r\n        var txt = this.text\r\n        if (this.newLineMode === RAW_NEWLINE) {\r\n            txt += \"\\n\";\r\n        }\r\n\r\n        return txt;\r\n    }\r\n\r\n    get wrapText() {\r\n        var txt = this.text;\r\n        if (this.newLineMode !== NO_NEWLINE) {\r\n            txt += \"\\n\";\r\n        }\r\n\r\n        return txt;\r\n    }\r\n\r\n    get rawTextLength() {\r\n        var len = this.text.length;\r\n        if (this.newLineMode === RAW_NEWLINE) {\r\n            len += 1;\r\n        }\r\n        return len;\r\n    }\r\n\r\n    get endIndex() {\r\n        return this.startIndex + this.rawTextLength;\r\n    }\r\n\r\n    get lastX() {\r\n        return this.x + this.width;\r\n    }\r\n\r\n    get isTextPen() {\r\n        return (this.text !== '');\r\n    }\r\n\r\n    get isImagePen() {\r\n        return !!this.prop.img;\r\n    }\r\n\r\n    get hasAreaMarker() {\r\n        return !!this.prop.area;\r\n    }\r\n};\r\n\r\nexport default Pen;","var Clear = function (obj) {\r\n    if (Array.isArray(obj)) {\r\n        obj.length = 0;\r\n    } else {\r\n        for (var key in obj) {\r\n            delete obj[key];\r\n        }\r\n    }\r\n}\r\nexport default Clear;","import Clear from './Clear.js';\r\n\r\n/**\r\n * Shallow Object Clone. Will not out nested objects.\r\n * @param {object} obj JSON object\r\n * @param {object} ret JSON object to return, set null to return a new object\r\n * @returns {object} this object\r\n */\r\nvar Clone = function (obj, out) {\r\n    var objIsArray = Array.isArray(obj);\r\n\r\n    if (out === undefined) {\r\n        out = (objIsArray) ? [] : {};\r\n    } else {\r\n        Clear(out);\r\n    }\r\n\r\n    if (objIsArray) {\r\n        out.length = obj.length;\r\n    }\r\n    for (var key in obj) {\r\n        out[key] = obj[key];\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nexport default Clone;\r\n","import Pool from '../../../../pool.js';\r\nimport Pen from './Pen.js';\r\nimport CONST from '../const.js';\r\nimport Clone from '../../../../utils/object/Clone.js';\r\nimport NOOP from '../../../../utils/object/NOOP.js';\r\n\r\nconst GetFastValue = Phaser.Utils.Objects.GetFastValue;\r\nconst NO_NEWLINE = CONST.NO_NEWLINE;\r\nconst WRAPPED_NEWLINE = CONST.WRAPPED_NEWLINE;\r\n\r\nvar PensPool = new Pool(); // default pens pool\r\nvar LinesPool = new Pool(); // default lines pool\r\nclass PenManager {\r\n    constructor(config) {\r\n        this.pens = []; // all pens\r\n        this.lines = []; // pens in lines [ [],[],[],.. ]\r\n        this.maxLinesWidth = undefined;\r\n\r\n        this.PensPool = GetFastValue(config, 'pensPool', PensPool);\r\n        this.LinesPool = GetFastValue(config, 'linesPool', LinesPool);\r\n        this.tagToText = GetFastValue(config, 'tagToText', NOOP);\r\n        this.tagToTextScope = GetFastValue(config, 'tagToTextScope', undefined);\r\n    }\r\n\r\n    destroy() {\r\n        this.freePens();\r\n        this.tagToText = undefined;\r\n        this.tagToTextScope = undefined;\r\n    }\r\n\r\n    freePens() {\r\n        for (var i = 0, len = this.lines.length; i < len; i++)\r\n            this.lines[i].length = 0;\r\n\r\n        this.PensPool.pushMultiple(this.pens);\r\n        this.LinesPool.pushMultiple(this.lines);\r\n        this.maxLinesWidth = undefined;\r\n    }\r\n\r\n    addTextPen(text, x, y, width, prop, newLineMode) {\r\n        var pen = this.PensPool.pop();\r\n        if (pen == null) {\r\n            pen = new Pen();\r\n        }\r\n        PEN_CONFIG.text = text;\r\n        PEN_CONFIG.x = x;\r\n        PEN_CONFIG.y = y;\r\n        PEN_CONFIG.width = width;\r\n        PEN_CONFIG.prop = prop;\r\n        PEN_CONFIG.newLineMode = newLineMode;\r\n        pen.resetFromJSON(PEN_CONFIG);\r\n        this.addPen(pen);\r\n        return this;\r\n    }\r\n\r\n    addImagePen(x, y, width, prop) {\r\n        this.addTextPen('', x, y, width, prop, NO_NEWLINE);\r\n        return this;\r\n    }\r\n\r\n    addNewLinePen() {\r\n        var previousPen = this.lastPen;\r\n        var x = (previousPen) ? previousPen.lastX : 0;\r\n        var y = (previousPen) ? previousPen.y : 0;\r\n        var prop = (previousPen) ? Clone(previousPen.prop) : null;\r\n        this.addTextPen('', x, y, 0, prop, WRAPPED_NEWLINE);\r\n        return this;\r\n    }\r\n\r\n    addPen(pen) {\r\n        var previousPen = this.lastPen;\r\n        if (previousPen == null) {\r\n            pen.startIndex = 0;\r\n        } else {\r\n            pen.startIndex = previousPen.endIndex;\r\n        }\r\n        this.pens.push(pen);\r\n\r\n        // maintan lines\r\n        var line = this.lastLine;\r\n        if (line == null) {\r\n            line = this.LinesPool.pop() || [];\r\n            this.lines.push(line);\r\n        }\r\n        line.push(pen);\r\n\r\n        // new line, add an empty line\r\n        if (pen.newLineMode !== NO_NEWLINE) {\r\n            line = this.LinesPool.pop() || [];\r\n            this.lines.push(line);\r\n        }\r\n        this.maxLinesWidth = undefined;\r\n    }\r\n\r\n    clone(targetPenManager) {\r\n        if (targetPenManager == null)\r\n            targetPenManager = new PenManager();\r\n\r\n        targetPenManager.freePens();\r\n\r\n        for (var li = 0, llen = this.lines.length; li < llen; li++) {\r\n            var pens = this.lines[li];\r\n            for (var pi = 0, plen = pens.length; pi < plen; pi++) {\r\n                var pen = pens[pi];\r\n                targetPenManager.addPen(\r\n                    pen.text,\r\n                    pen.x,\r\n                    pen.y,\r\n                    pen.width,\r\n                    Clone(pen.prop),\r\n                    pen.newLineMode\r\n                );\r\n            }\r\n        }\r\n\r\n        return targetPenManager;\r\n    }\r\n\r\n    get lastPen() {\r\n        return this.pens[this.pens.length - 1];\r\n    }\r\n\r\n    get lastLine() {\r\n        return this.lines[this.lines.length - 1];\r\n    }\r\n\r\n    getLineStartIndex(i) {\r\n        if (i >= this.lines.length) {\r\n            return this.getLineEndIndex(i);\r\n        } else {\r\n            var line = this.lines[i];\r\n            return (line && line[0]) ? line[0].startIndex : 0;\r\n        }\r\n    }\r\n\r\n    getLineEndIndex(i) {\r\n        if (i >= this.lines.length) {\r\n            i = this.lines.length - 1;\r\n        }\r\n        var li, hasLastPen = false,\r\n            line;\r\n        for (li = i; li >= 0; li--) {\r\n            line = this.lines[li];\r\n            hasLastPen = (line != null) && (line.length > 0);\r\n            if (hasLastPen) {\r\n                break;\r\n            }\r\n        }\r\n        if (!hasLastPen) {\r\n            return 0;\r\n        }\r\n\r\n        var lastPen = line[line.length - 1];\r\n        return lastPen.endIndex;\r\n    }\r\n\r\n    getLineWidth(i) {\r\n        var line = this.lines[i];\r\n        if (!line) {\r\n            return 0;\r\n        }\r\n\r\n        var lastPen = line[line.length - 1];\r\n        if (lastPen == null) {\r\n            return 0;\r\n        }\r\n\r\n        var lineWidth = lastPen.lastX; // start from 0\r\n        return lineWidth;\r\n    }\r\n\r\n    getMaxLineWidth() {\r\n        if (this.maxLinesWidth !== undefined) {\r\n            return this.maxLinesWidth;\r\n        }\r\n        var w, maxW = 0;\r\n        for (var i = 0, len = this.lines.length; i < len; i++) {\r\n            w = this.getLineWidth(i);\r\n            if (w > maxW) {\r\n                maxW = w;\r\n            }\r\n        }\r\n        this.maxLinesWidth = maxW;\r\n        return maxW;\r\n    }\r\n\r\n    getLineWidths() {\r\n        var result = [];\r\n        for (var i = 0, len = this.lines.length; i < len; i++) {\r\n            result.push(this.getLineWidth(i));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    get linesCount() {\r\n        return this.lines.length;\r\n    }\r\n\r\n    get plainText() {\r\n        var txt = \"\",\r\n            pens = this.pens;\r\n        for (var i = 0, len = pens.length; i < len; i++) {\r\n            txt += pens[i].plainText;\r\n        }\r\n\r\n        return txt;\r\n    }\r\n\r\n    get rawTextLength() {\r\n        var l = 0,\r\n            pens = this.pens;\r\n        for (var i = 0, len = this.pens.length; i < len; i++) {\r\n            l += pens[i].rawTextLength;\r\n        }\r\n\r\n        return l;\r\n    }\r\n\r\n    getSliceTagText(start, end, wrap) {\r\n        if (start === undefined) {\r\n            start = 0;\r\n        }\r\n        if (end === undefined) {\r\n            var lastPen = this.lastPen;\r\n            if (lastPen == null) {\r\n                return \"\";\r\n            }\r\n\r\n            end = lastPen.endIndex;\r\n        }\r\n        if (wrap === undefined) {\r\n            wrap = false;\r\n        }\r\n\r\n        var txt = \"\",\r\n            formatTxt,\r\n            pen, penTxt, penStartIdx, penEndIdx, isInRange;\r\n        var currentProp, previousProp;\r\n        for (var i = 0, len = this.pens.length; i < len; i++) {\r\n            pen = this.pens[i];\r\n            penEndIdx = pen.endIndex;\r\n            if (penEndIdx <= start) {\r\n                continue;\r\n            }\r\n            pen = this.pens[i];\r\n            penTxt = (!wrap) ? pen.plainText : pen.wrapText;\r\n            currentProp = pen.prop;\r\n            penStartIdx = pen.startIndex;\r\n\r\n            isInRange = (penStartIdx >= start) && (penEndIdx <= end);\r\n            if (!isInRange) {\r\n                penTxt = penTxt.substring(start - penStartIdx, end - penStartIdx);\r\n            }\r\n\r\n            if (this.tagToTextScope) {\r\n                txt += this.tagToText.call(this.tagToTextScope, penTxt, currentProp, previousProp);\r\n            } else {\r\n                txt += this.tagToText(penTxt, currentProp, previousProp);\r\n            }\r\n\r\n            previousProp = currentProp;\r\n            if (penEndIdx >= end) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return txt;\r\n    }\r\n};\r\n\r\nvar PEN_CONFIG = {};\r\n\r\nexport default PenManager;","import Pool from '../../../../pool.js';\r\n\r\nconst Rectangle = Phaser.Geom.Rectangle;\r\n\r\nvar RectanglePool = new Pool();\r\nclass HitAreaManager {\r\n    constructor() {\r\n        this.hitAreas = [];\r\n    }\r\n\r\n    destroy() {\r\n        this.clear();\r\n    }\r\n\r\n    clear() {\r\n        RectanglePool.pushMultiple(this.hitAreas);\r\n        return this;\r\n    }\r\n\r\n    add(key, x, y, width, height) {\r\n        var rectangle = RectanglePool.pop();\r\n        if (rectangle === null) {\r\n            rectangle = new Rectangle(x, y, width, height);\r\n        } else {\r\n            rectangle.setTo(x, y, width, height);\r\n        }\r\n        rectangle.key = key;\r\n        this.hitAreas.push(rectangle);\r\n        return this;\r\n    }\r\n\r\n    contains(x, y) {\r\n        var hitAreas = this.hitAreas, hitArea;\r\n        for (var i = 0, cnt = hitAreas.length; i < cnt; i++) {\r\n            hitArea = hitAreas[i];\r\n            if (hitArea.contains(x, y)) {\r\n                return hitArea.key;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    drawBounds(graphics, color, parent) {\r\n        if (color === undefined) {\r\n            color = 0xffffff;\r\n        }\r\n\r\n        if (parent) {\r\n            graphics\r\n                .save()\r\n                .scaleCanvas(parent.scaleX, parent.scaleY)\r\n                .rotateCanvas(parent.rotation)\r\n                .translateCanvas(parent.x, parent.y)\r\n        }\r\n\r\n        var hitAreas = this.hitAreas, hitArea;\r\n        for (var i = 0, cnt = hitAreas.length; i < cnt; i++) {\r\n            hitArea = hitAreas[i];\r\n            graphics.lineStyle(1, color).strokeRect(hitArea.x, hitArea.y, hitArea.width, hitArea.height);\r\n        }\r\n\r\n        if (parent) {\r\n            graphics\r\n                .restore()\r\n        }\r\n        return this;\r\n    }\r\n}\r\nexport default HitAreaManager;","var SetInteractive = function () {\r\n    this.parent\r\n        .on('pointerdown', function (pointer, localX, localY, event) {\r\n            FireEvent.call(this, 'areadown', pointer, localX, localY);\r\n        }, this)\r\n        .on('pointerup', function (pointer, localX, localY, event) {\r\n            FireEvent.call(this, 'areaup', pointer, localX, localY);\r\n        }, this)\r\n}\r\n\r\nvar FireEvent = function (eventName, pointer, localX, localY) {\r\n    var key = this.hitAreaManager.contains(localX, localY);\r\n    if (key === false) {\r\n        return;\r\n    }\r\n    this.parent.emit(`${eventName}-${key}`, pointer, localX, localY)\r\n    this.parent.emit(eventName, key, pointer, localX, localY)\r\n}\r\nexport default SetInteractive;","import Pool from '../../../../pool.js';\r\nimport CONST from '../const.js';\r\n\r\nconst NO_NEWLINE = CONST.NO_NEWLINE;\r\nconst RAW_NEWLINE = CONST.RAW_NEWLINE;\r\nconst WRAPPED_NEWLINE = CONST.WRAPPED_NEWLINE;\r\nconst NO_WRAP = CONST.NO_WRAP;\r\nconst WORD_WRAP = CONST.WORD_WRAP;\r\nconst CHAR_WRAP = CONST.CHAR_WRAP;\r\nconst splitRegExp = CONST.SPLITREGEXP;\r\n\r\nvar WRAP_RESULT = [];\r\nvar WrapText = function (text, getTextWidth, wrapMode, wrapWidth, offset) {\r\n    if (wrapWidth <= 0) {\r\n        wrapMode = NO_WRAP;\r\n    }\r\n\r\n    var retLines = WRAP_RESULT;\r\n    LinesPool.pushMultiple(retLines);\r\n\r\n    if (!text || !text.length) {\r\n        return retLines;\r\n    }\r\n\r\n    var lines = text.split(splitRegExp),\r\n        line, remainWidth, isLaseLine, newLineMode;\r\n    for (var i = 0, linesLen = lines.length; i < linesLen; i++) {\r\n        line = lines[i];\r\n        newLineMode = (i === (linesLen - 1)) ? NO_NEWLINE : RAW_NEWLINE;\r\n\r\n        if (wrapMode === NO_WRAP) {\r\n            var textWidth = getTextWidth(line);\r\n            retLines.push(LinesPool.newline(line, textWidth, newLineMode));\r\n            continue;\r\n        } else {\r\n            if (i === 0) {\r\n                remainWidth = wrapWidth - offset;\r\n            } else {\r\n                remainWidth = wrapWidth;\r\n            }\r\n        }\r\n\r\n        // short string testing\r\n        if (line.length <= 100) {\r\n            var textWidth = getTextWidth(line);\r\n            if (textWidth <= remainWidth) {\r\n                retLines.push(LinesPool.newline(line, textWidth, newLineMode));\r\n                continue;\r\n            }\r\n        }\r\n\r\n        // character mode\r\n        var tokenArray;\r\n        if (wrapMode === WORD_WRAP) {\r\n            // word mode\r\n            tokenArray = line.split(' ');\r\n        } else {\r\n            tokenArray = line;\r\n        }\r\n        var token;\r\n        var curLineText = '',\r\n            lineText = '',\r\n            currLineWidth, lineWidth = 0;\r\n        for (var j = 0, tokenLen = tokenArray.length; j < tokenLen; j++) {\r\n            token = tokenArray[j];\r\n\r\n            if (wrapMode === WORD_WRAP) {\r\n                curLineText += token;\r\n\r\n                if (j < (tokenLen - 1)) {\r\n                    curLineText += ' ';\r\n                }\r\n            } else {\r\n                curLineText += token;\r\n            }\r\n\r\n            currLineWidth = getTextWidth(curLineText);\r\n            if (currLineWidth > remainWidth) {\r\n                // new line\r\n                if (j === 0) {\r\n                    retLines.push(LinesPool.newline('', 0, WRAPPED_NEWLINE));\r\n                } else {\r\n                    retLines.push(LinesPool.newline(lineText, lineWidth, WRAPPED_NEWLINE));\r\n                    curLineText = token;\r\n                    if (wrapMode === WORD_WRAP) {\r\n                        if (j < (tokenLen - 1)) {\r\n                            curLineText += ' ';\r\n                        }\r\n                    }\r\n                    currLineWidth = getTextWidth(curLineText);\r\n                }\r\n\r\n                remainWidth = wrapWidth;\r\n            }\r\n\r\n            lineText = curLineText;\r\n            lineWidth = currLineWidth;\r\n        } // for token in tokenArray\r\n\r\n        // flush remain text\r\n        retLines.push(LinesPool.newline(lineText, lineWidth, newLineMode));\r\n\r\n    } // for each line in lines\r\n\r\n    return retLines;\r\n};\r\n\r\nvar LinesPool = new Pool();\r\nLinesPool.newline = function (text, width, newLineMode) {\r\n    var l = this.pop();\r\n    if (l === null) {\r\n        l = {};\r\n    }\r\n    l.text = text;\r\n    l.width = width;\r\n    l.newLineMode = newLineMode;\r\n    return l;\r\n};\r\n\r\nexport default WrapText;","import DrawMethods from './DrawMethods.js';\r\nimport PenManager from '../penmanger/PenManager.js';\r\nimport HitAreaManager from '../hitareamanager/HitAreaManager.js';\r\nimport SetInteractive from './SetInteractive.js';\r\nimport CONST from '../const.js';\r\nimport WrapText from './WrapText.js';\r\nimport Clone from '../../../../utils/object/Clone.js';\r\n\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\nconst NO_WRAP = CONST.NO_WRAP;\r\nconst NO_NEWLINE = CONST.NO_NEWLINE;\r\n\r\nclass CanvasText {\r\n    constructor(config) {\r\n        this.parent = config.parent;\r\n        this.context = GetValue(config, 'context', null);\r\n        this.canvas = this.context.canvas;\r\n        this.parser = GetValue(config, 'parser', null);\r\n        this.defatultStyle = GetValue(config, 'style', null);\r\n        this.autoRound = true;\r\n\r\n        this.pensPool = GetValue(config, 'pensPool', null);\r\n        this.penManager = this.newPenManager();\r\n        this._tmpPenManager = null;\r\n\r\n        this.hitAreaManager = new HitAreaManager();\r\n\r\n        var context = this.context;\r\n        this.getTextWidth = function (text) {\r\n            return context.measureText(text).width;\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.context = undefined;\r\n        this.canvas = undefined;\r\n        this.parser = undefined;\r\n        this.defatultStyle = undefined;\r\n\r\n        if (this.penManager) {\r\n            this.penManager.destroy();\r\n            this.penManager = undefined;\r\n        }\r\n        if (this._tmpPenManager) {\r\n            this._tmpPenManager.destroy();\r\n            this._tmpPenManager = undefined;\r\n        }\r\n        if (this.hitAreaManager) {\r\n            this.hitAreaManager.destroy();\r\n            this.hitAreaManager = undefined;\r\n        }\r\n    }\r\n\r\n    updatePenManager(text, wrapMode, wrapWidth, lineHeight, penManager) {\r\n        if (penManager === undefined) {\r\n            penManager = this.penManager;\r\n        }\r\n        penManager.freePens();\r\n        if (text === \"\") {\r\n            return penManager;\r\n        }\r\n\r\n        var canvas = this.canvas;\r\n        var context = this.context;\r\n\r\n        var cursorX = 0,\r\n            cursorY = 0;\r\n\r\n        var plainText, curProp, curStyle;\r\n        var match = this.parser.splitText(text),\r\n            result, wrapLines;\r\n        for (var i = 0, len = match.length; i < len; i++) {\r\n            result = this.parser.tagTextToProp(match[i], curProp);\r\n            plainText = result.plainText;\r\n            curProp = result.prop;\r\n\r\n            if (curProp.img) { // Image tag                \r\n                var imgWidth = this.imageManager.getOuterWidth(curProp.img);\r\n                if ((wrapWidth > 0) && (wrapMode !== NO_WRAP)) {  // Wrap mode\r\n                    if (wrapWidth < (cursorX + imgWidth)) {\r\n                        penManager.addNewLinePen();\r\n                        cursorY += lineHeight;\r\n                        cursorX = 0;\r\n                    }\r\n                }\r\n                penManager.addImagePen(cursorX, cursorY, imgWidth, Clone(curProp));\r\n                cursorX += imgWidth;\r\n\r\n            } else if (plainText !== '') {\r\n                // wrap text to lines\r\n                // Save the current context.\r\n                this.context.save();\r\n                curStyle = this.parser.propToContextStyle(\r\n                    this.defatultStyle,\r\n                    curProp\r\n                );\r\n                curStyle.buildFont();\r\n                curStyle.syncFont(canvas, context);\r\n                curStyle.syncStyle(canvas, context);\r\n                wrapLines = WrapText(plainText, this.getTextWidth, wrapMode, wrapWidth, cursorX);\r\n\r\n                // add pens\r\n                var n;\r\n                for (var j = 0, jLen = wrapLines.length; j < jLen; j++) {\r\n                    n = wrapLines[j];\r\n                    penManager.addTextPen(n.text, cursorX, cursorY, n.width, Clone(curProp), n.newLineMode);\r\n\r\n                    if (n.newLineMode !== NO_NEWLINE) {\r\n                        cursorX = 0;\r\n                        cursorY += lineHeight;\r\n                    } else {\r\n                        cursorX += n.width;\r\n                    }\r\n\r\n                }\r\n                this.context.restore();\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return penManager;\r\n    }\r\n\r\n    get startXOffset() {\r\n        var defatultStyle = this.defatultStyle;\r\n        return (defatultStyle.strokeThickness / 2);\r\n    }\r\n\r\n    get startYOffset() {\r\n        var defatultStyle = this.defatultStyle;\r\n        return (defatultStyle.strokeThickness / 2) + defatultStyle.metrics.ascent;\r\n    }\r\n\r\n    get lines() {\r\n        return this.penManager.lines;\r\n    }\r\n\r\n    get desplayLinesCount() {\r\n        var linesCount = this.penManager.linesCount,\r\n            maxLines = this.defatultStyle.maxLines;\r\n        if ((maxLines > 0) && (linesCount > maxLines)) {\r\n            linesCount = maxLines;\r\n        }\r\n        return linesCount;\r\n    }\r\n\r\n    get linesWidth() {\r\n        return this.penManager.getMaxLineWidth();\r\n    }\r\n\r\n    get linesHeight() {\r\n        var linesCount = this.desplayLinesCount;\r\n        var linesHeight = (this.defatultStyle.lineHeight * linesCount);\r\n        if (linesCount > 0) {\r\n            linesHeight -= this.defatultStyle.lineSpacing;\r\n        }\r\n        return linesHeight;\r\n    }\r\n\r\n    get imageManager() {\r\n        return this.parent.imageManager;\r\n    }\r\n\r\n    newPenManager() {\r\n        return new PenManager({\r\n            pensPool: this.pensPool,\r\n            tagToText: this.parser.propToTagText,\r\n            tagToTextScope: this.parser\r\n        });\r\n    }\r\n\r\n    get tmpPenManager() {\r\n        if (this._tmpPenManager === null) {\r\n            this._tmpPenManager = this.newPenManager();\r\n        }\r\n        return this._tmpPenManager;\r\n    }\r\n\r\n    getPlainText(text, start, end) {\r\n        var plainText;\r\n        if (text == null) {\r\n            plainText = this.penManager.plainText;\r\n        } else {\r\n            var m, match = this.parser.splitText(text, 1); // PLAINTEXTONLY_MODE\r\n            plainText = \"\";\r\n            for (var i = 0, len = match.length; i < len; i++) {\r\n                plainText += match[i];\r\n            }\r\n        }\r\n\r\n        if ((start != null) || (end != null)) {\r\n            if (start == null) {\r\n                start = 0;\r\n            }\r\n            if (end == null) {\r\n                end = plainText.length;\r\n            }\r\n            plainText = plainText.substring(start, end);\r\n        }\r\n\r\n        return plainText;\r\n    }\r\n\r\n    getPenManager(text, retPenManager) {\r\n        if (text === undefined) {\r\n            return this.copyPenManager(retPenManager, this.penManager);\r\n        }\r\n\r\n        if (retPenManager === undefined) {\r\n            retPenManager = this.newPenManager();\r\n        }\r\n\r\n        var defatultStyle = this.defatultStyle;\r\n        this.updatePenManager(\r\n            text,\r\n            defatultStyle.wrapMode,\r\n            defatultStyle.wrapWidth,\r\n            defatultStyle.lineHeight,\r\n            retPenManager\r\n        );\r\n        return retPenManager;\r\n    }\r\n\r\n    getText(text, start, end, wrap) {\r\n        if (text == null) {\r\n            return this.penManager.getSliceTagText(start, end, wrap);\r\n        }\r\n\r\n        var penManager = this.tmpPenManager;\r\n        var defatultStyle = this.defatultStyle;\r\n        this.updatePenManager(\r\n            text,\r\n            defatultStyle.wrapMode,\r\n            defatultStyle.wrapWidth,\r\n            defatultStyle.lineHeight,\r\n            penManager\r\n        );\r\n\r\n        return penManager.getSliceTagText(start, end, wrap);\r\n    }\r\n\r\n    copyPenManager(ret, src) {\r\n        if (src === undefined) {\r\n            src = this.penManager;\r\n        }\r\n        return src.copy(ret);\r\n    }\r\n\r\n    getTextWidth(penManager) {\r\n        if (penManager === undefined) {\r\n            penManager = this.penManager;\r\n        }\r\n\r\n        return penManager.getMaxLineWidth();\r\n    }\r\n\r\n    getLastPen(penManager) {\r\n        if (penManager === undefined) {\r\n            penManager = this.penManager;\r\n        }\r\n\r\n        return penManager.lastPen;\r\n    }\r\n};\r\n\r\nvar methods = {\r\n    setInteractive: SetInteractive,\r\n}\r\n\r\nObject.assign(\r\n    CanvasText.prototype,\r\n    DrawMethods,\r\n    methods\r\n);\r\n\r\nexport default CanvasText;","const GetValue = Phaser.Utils.Objects.GetValue;\r\n\r\nclass ImageManager {\r\n    constructor(textureManager) {\r\n        this.textureManager = textureManager;\r\n        this.images = {};\r\n    }\r\n\r\n    add(key, config) {\r\n        if (typeof (key) === 'string') {\r\n            this._add(key, config);\r\n        } else if (Array.isArray(key)) {\r\n            var data = key;\r\n            for (var i = 0, cnt = data.length; i < cnt; i++) {\r\n                this._add(data[i]);\r\n            }\r\n        } else {\r\n            var data = key;\r\n            for (var key in data) {\r\n                this._add(key, data[key]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    _add(key, config) {\r\n        if (config === undefined) {\r\n            config = {\r\n                key: key\r\n            }\r\n        }\r\n\r\n        var textureKey = config.key, frameKey = config.frame;\r\n        var width = config.width, height = config.height;\r\n\r\n        if ((width === undefined) || (height === undefined)) {\r\n            var frame = this.textureManager.getFrame(textureKey, frameKey);\r\n            var frameWidth = (frame) ? frame.cutWidth : 0;\r\n            var frameHeight = (frame) ? frame.cutHeight : 0;\r\n            if ((width === undefined) && (height === undefined)) {\r\n                width = frameWidth;\r\n                height = frameHeight;\r\n            } else if (width === undefined) {\r\n                width = frameWidth * (height / frameHeight);\r\n            } else if (height === undefined) {\r\n                height = frameHeight * (width / frameWidth);\r\n            }\r\n        }\r\n\r\n        this.images[key] = {\r\n            key: textureKey,\r\n            frame: frameKey,\r\n            width: width,\r\n            height: height,\r\n            y: GetValue(config, 'y', 0),\r\n            left: GetValue(config, 'left', 0),\r\n            right: GetValue(config, 'right', 0)\r\n        }\r\n    }\r\n\r\n    remove(key) {\r\n        if (this.images.hasOwnProperty(key)) {\r\n            delete this.images[key];\r\n        }\r\n        return this;\r\n    }\r\n\r\n    get(key) {\r\n        if (!this.images.hasOwnProperty(key)) {\r\n            if (this.textureManager.exists(key)) {\r\n                this.add(key);\r\n            }\r\n        }\r\n        return this.images[key];\r\n    }\r\n\r\n    getOuterWidth(key) {\r\n        var data = this.get(key);\r\n        return (data) ? (data.width + data.left + data.right) : 0;\r\n    }\r\n\r\n    getFrame(key) {\r\n        var data = this.get(key);\r\n        return (data) ? this.textureManager.getFrame(data.key, data.frame) : undefined;\r\n    }\r\n\r\n    hasTexture(key) {\r\n        return !!this.getFrame(key);\r\n    }\r\n}\r\nexport default ImageManager;","import ImageManager from './ImageManager.js';\r\n\r\nvar globImageManager;\r\n\r\nexport default function(textureManager) {\r\n    if (globImageManager === undefined) {\r\n        globImageManager = new ImageManager(textureManager);\r\n    }\r\n    return globImageManager;\r\n}","import Render from './render/Render.js';\r\nimport TextStyle from './textstyle/TextStyle.js'; // extended\r\nimport CanvasTextKlass from './canvastext/CanvasText.js';\r\nimport Pool from '../../../pool.js';\r\nimport CONST from './const.js';\r\nimport GetGlobImageManager from './imagemanager/GetGlobImageManager.js';\r\n\r\nconst AddToDOM = Phaser.DOM.AddToDOM;\r\nconst CanvasPool = Phaser.Display.Canvas.CanvasPool;\r\nconst GameObject = Phaser.GameObjects.GameObject;\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\nconst RemoveFromDOM = Phaser.DOM.RemoveFromDOM;\r\nconst SPLITREGEXP = CONST.SPLITREGEXP;\r\n\r\nvar PensPools = {};\r\n\r\nclass Text extends GameObject {\r\n    constructor(scene, x, y, text, style, type, parser) {\r\n        if (x === undefined) {\r\n            x = 0;\r\n        }\r\n        if (y === undefined) {\r\n            y = 0;\r\n        }\r\n\r\n        super(scene, type);\r\n\r\n        this.renderer = scene.sys.game.renderer;\r\n\r\n        this.setPosition(x, y);\r\n        this.setOrigin(0, 0);\r\n        this.initPipeline();\r\n\r\n        this.canvas = CanvasPool.create(this);\r\n\r\n        this.context = this.canvas.getContext('2d');\r\n\r\n        if (style) {\r\n            // Override align\r\n            if (style.hasOwnProperty('align')) {\r\n                var halign = style.align;\r\n                delete style.align;\r\n                style.halign = halign;\r\n            }\r\n        }\r\n        this.style = new TextStyle(this, style);\r\n\r\n        this.autoRound = true;\r\n\r\n        this._text = undefined;\r\n\r\n        this.padding = {\r\n            left: 0,\r\n            right: 0,\r\n            top: 0,\r\n            bottom: 0\r\n        };\r\n\r\n        this.width = 1;\r\n\r\n        this.height = 1;\r\n\r\n        this.dirty = false;\r\n\r\n        //  If resolution wasn't set, then we get it from the game config\r\n        if (this.style.resolution === 0) {\r\n            this.style.resolution = scene.sys.game.config.resolution;\r\n        }\r\n\r\n        this._crop = this.resetCropObject();\r\n\r\n        //  Create a Texture for this Text object\r\n        this.texture = scene.sys.textures.addCanvas(null, this.canvas, true);\r\n\r\n        //  Get the frame\r\n        this.frame = this.texture.get();\r\n\r\n        //  Set the resolution\r\n        this.frame.source.resolution = this.style.resolution;\r\n\r\n        if (this.renderer && this.renderer.gl) {\r\n            //  Clear the default 1x1 glTexture, as we override it later\r\n\r\n            this.renderer.deleteTexture(this.frame.source.glTexture);\r\n\r\n            this.frame.source.glTexture = null;\r\n        }\r\n\r\n        if (!PensPools.hasOwnProperty(type)) {\r\n            PensPools[type] = new Pool();\r\n        }\r\n        this.canvasText = new CanvasTextKlass({\r\n            parent: this,\r\n            context: this.context,\r\n            parser: parser,\r\n            style: this.style,\r\n            pensPool: PensPools[type]\r\n        });\r\n\r\n        //this.initRTL();\r\n\r\n        if (style && style.padding) {\r\n            this.setPadding(style.padding);\r\n        }\r\n\r\n        this.setText(text);\r\n\r\n        scene.sys.game.events.on('contextrestored', function () {\r\n            this.dirty = true;\r\n        }, this);\r\n    }\r\n\r\n    set text(value) {\r\n        this.setText(value);\r\n    }\r\n    get text() {\r\n        return this._text;\r\n    }\r\n\r\n    initRTL() {\r\n        if (!this.style.rtl) {\r\n            return;\r\n        }\r\n\r\n        //  Here is where the crazy starts.\r\n        //\r\n        //  Due to browser implementation issues, you cannot fillText BiDi text to a canvas\r\n        //  that is not part of the DOM. It just completely ignores the direction property.\r\n\r\n        this.canvas.dir = 'rtl';\r\n\r\n        //  Experimental atm, but one day ...\r\n        this.context.direction = 'rtl';\r\n\r\n        //  Add it to the DOM, but hidden within the parent canvas.\r\n        this.canvas.style.display = 'none';\r\n\r\n        AddToDOM(this.canvas, this.scene.sys.canvas);\r\n\r\n        //  And finally we set the x origin\r\n        this.originX = 1;\r\n    }\r\n\r\n    setText(value) {\r\n        if (!value && value !== 0) {\r\n            value = '';\r\n        }\r\n\r\n        if (Array.isArray(value)) {\r\n            value = value.join('\\n');\r\n        }\r\n\r\n        if (value !== this._text) {\r\n            this._text = value.toString();\r\n\r\n            this.updateText();\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    setStyle(style) {\r\n        return this.style.setStyle(style);\r\n    }\r\n\r\n    setFont(font) {\r\n        return this.style.setFont(font);\r\n    }\r\n\r\n    setFontFamily(family) {\r\n        return this.style.setFontFamily(family);\r\n    }\r\n\r\n    setFontSize(size) {\r\n        return this.style.setFontSize(size);\r\n    }\r\n\r\n    setFontStyle(style) {\r\n        return this.style.setFontStyle(style);\r\n    }\r\n\r\n    setFixedSize(width, height) {\r\n        return this.style.setFixedSize(width, height);\r\n    }\r\n\r\n    setBackgroundColor(color) {\r\n        return this.style.setBackgroundColor(color);\r\n    }\r\n\r\n    setFill(color) {\r\n        return this.style.setFill(color);\r\n    }\r\n\r\n    setColor(color) {\r\n        return this.style.setColor(color);\r\n    }\r\n\r\n    setStroke(color, thickness) {\r\n        return this.style.setStroke(color, thickness);\r\n    }\r\n\r\n    setShadow(x, y, color, blur, shadowStroke, shadowFill) {\r\n        return this.style.setShadow(x, y, color, blur, shadowStroke, shadowFill);\r\n    }\r\n\r\n    setShadowOffset(x, y) {\r\n        return this.style.setShadowOffset(x, y);\r\n    }\r\n\r\n    setShadowColor(color) {\r\n        return this.style.setShadowColor(color);\r\n    }\r\n\r\n    setShadowBlur(blur) {\r\n        return this.style.setShadowBlur(blur);\r\n    }\r\n\r\n    setShadowStroke(enabled) {\r\n        return this.style.setShadowStroke(enabled);\r\n    }\r\n\r\n    setShadowFill(enabled) {\r\n        return this.style.setShadowFill(enabled);\r\n    }\r\n\r\n    setWrapMode(mode) {\r\n        return this.style.setWrapMode(mode);\r\n    }\r\n\r\n    setWrapWidth(width) {\r\n        return this.style.setWrapWidth(width);\r\n    }\r\n\r\n    setAlign(align) {\r\n        return this.style.setHAlign(align);\r\n    }\r\n\r\n    setLineSpacing(value) {\r\n        return this.style.setLineSpacing(value);\r\n    }\r\n\r\n    setPadding(left, top, right, bottom) {\r\n        if (typeof left === 'object') {\r\n            var config = left;\r\n\r\n            //  If they specify x and/or y this applies to all\r\n            var x = GetValue(config, 'x', null);\r\n\r\n            if (x !== null) {\r\n                left = x;\r\n                right = x;\r\n            } else {\r\n                left = GetValue(config, 'left', 0);\r\n                right = GetValue(config, 'right', left);\r\n            }\r\n\r\n            var y = GetValue(config, 'y', null);\r\n\r\n            if (y !== null) {\r\n                top = y;\r\n                bottom = y;\r\n            } else {\r\n                top = GetValue(config, 'top', 0);\r\n                bottom = GetValue(config, 'bottom', top);\r\n            }\r\n        } else {\r\n            if (left === undefined) {\r\n                left = 0;\r\n            }\r\n            if (top === undefined) {\r\n                top = left;\r\n            }\r\n            if (right === undefined) {\r\n                right = left;\r\n            }\r\n            if (bottom === undefined) {\r\n                bottom = top;\r\n            }\r\n        }\r\n\r\n        this.padding.left = left;\r\n        this.padding.top = top;\r\n        this.padding.right = right;\r\n        this.padding.bottom = bottom;\r\n\r\n        return this.updateText(false);\r\n    }\r\n\r\n    setResolution(value) {\r\n        return this.style.setResolution(value);\r\n    }\r\n\r\n    setMaxLines(max) {\r\n        return this.style.setMaxLines(max);\r\n    }\r\n\r\n    updateText(runWrap) {\r\n        if (runWrap === undefined) {\r\n            runWrap = true;\r\n        }\r\n        var canvasText = this.canvasText;\r\n\r\n        // wrap text to pens\r\n        var style = this.style;\r\n        if (runWrap) {\r\n            canvasText.updatePenManager(\r\n                this._text,\r\n                style.wrapMode,\r\n                style.wrapWidth,\r\n                style.lineHeight\r\n            );\r\n        }\r\n\r\n        // resize\r\n        var padding = this.padding;\r\n        var textWidth, textHeight;\r\n        if (style.fixedWidth === 0) {\r\n            this.width = canvasText.linesWidth + padding.left + padding.right;\r\n            textWidth = canvasText.linesWidth;\r\n        }\r\n        else {\r\n            this.width = style.fixedWidth;\r\n            textWidth = this.width - padding.left - padding.right;\r\n            if (textWidth < canvasText.linesWidth) {\r\n                textWidth = canvasText.linesWidth;\r\n            }\r\n        }\r\n        if (style.fixedHeight === 0) {\r\n            this.height = canvasText.linesHeight + padding.top + padding.bottom;\r\n            textHeight = canvasText.linesHeight;\r\n        }\r\n        else {\r\n            this.height = style.fixedHeight;\r\n            textHeight = this.height - padding.top - padding.bottom;\r\n            if (textHeight < canvasText.linesHeight) {\r\n                textHeight = canvasText.linesHeight;\r\n            }\r\n        }\r\n\r\n        var w = this.width;\r\n        var h = this.height;\r\n\r\n        this.updateDisplayOrigin();\r\n\r\n        var resolution = style.resolution;\r\n        w *= resolution;\r\n        h *= resolution;\r\n\r\n        w = Math.max(Math.ceil(w), 1);\r\n        h = Math.max(Math.ceil(h), 1);\r\n\r\n        var canvas = this.canvas;\r\n        var context = this.context;\r\n        if (canvas.width !== w || canvas.height !== h) {\r\n            canvas.width = w;\r\n            canvas.height = h;\r\n            this.frame.setSize(w, h);\r\n        } else {\r\n            context.clearRect(0, 0, w, h);\r\n        }\r\n\r\n        context.save();\r\n        context.scale(resolution, resolution);\r\n\r\n        // draw\r\n        canvasText.draw(\r\n            padding.left,\r\n            padding.top,\r\n            textWidth,\r\n            textHeight\r\n        );\r\n\r\n        context.restore();\r\n\r\n        if (this.renderer.gl) {\r\n            this.frame.source.glTexture = this.renderer.canvasToTexture(canvas, this.frame.source.glTexture, true);\r\n            this.frame.glTexture = this.frame.source.glTexture;\r\n        }\r\n\r\n        this.dirty = true;\r\n\r\n        var input = this.input;\r\n\r\n        if (input && !input.customHitArea) {\r\n            input.hitArea.width = this.width;\r\n            input.hitArea.height = this.height;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    getTextMetrics() {\r\n        return this.style.getTextMetrics();\r\n    }\r\n\r\n    toJSON() {\r\n        var out = Components.ToJSON(this);\r\n\r\n        //  Extra Text data is added here\r\n\r\n        var data = {\r\n            autoRound: this.autoRound,\r\n            text: this._text,\r\n            style: this.style.toJSON(),\r\n            resolution: this.resolution,\r\n            padding: {\r\n                left: this.padding.left,\r\n                right: this.padding.right,\r\n                top: this.padding.top,\r\n                bottom: this.padding.bottom\r\n            }\r\n        };\r\n\r\n        out.data = data;\r\n\r\n        return out;\r\n    }\r\n\r\n    preDestroy() {\r\n        if (this.style.rtl) {\r\n            RemoveFromDOM(this.canvas);\r\n        }\r\n\r\n        CanvasPool.remove(this.canvas);\r\n        this.canvasText.destroy();\r\n    }\r\n\r\n    setInteractive(shape, callback, dropZone) {\r\n        GameObject.prototype.setInteractive.call(this, shape, callback, dropZone);\r\n        this.canvasText.setInteractive();\r\n        return this;\r\n    }\r\n\r\n    getWrappedText(text, start, end) {\r\n        text = this.canvasText.getText(text, start, end, true);\r\n        return text.split(SPLITREGEXP);\r\n    }\r\n\r\n    getPlainText(text, start, end) {\r\n        return this.canvasText.getPlainText(text, start, end);\r\n    }\r\n\r\n    getText(text, start, end) {\r\n        return this.canvasText.getText(text, start, end, false);\r\n    }\r\n\r\n    getSubString(text, start, end) {\r\n        return this.getText(text, start, end);\r\n    }\r\n\r\n    copyPenManager(penManager) {\r\n        return this.canvasText.copyPenManager(penManager);\r\n    }\r\n\r\n    getPenManager(text, penManager) {\r\n        return this.canvasText.getPenManager(text, penManager);\r\n    }\r\n\r\n    setSize(width, height) {\r\n        return this.setFixedSize(width, height);\r\n    }\r\n\r\n    resize(width, height) {\r\n        return this.setFixedSize(width, height);\r\n    }\r\n\r\n    set lineSpacing(value) {\r\n        this.setLineSpacing(value);\r\n    }\r\n    get lineSpacing() {\r\n        return this.style.lineSpacing;\r\n    }\r\n\r\n    get imageManager() {\r\n        return GetGlobImageManager(this.scene.textures);\r\n    }\r\n\r\n    addImage(key, config) {\r\n        this.imageManager.add(key, config);\r\n        return this;\r\n    }\r\n\r\n    drawAreaBounds(graphics, color) {\r\n        this.canvasText.hitAreaManager.drawBounds(graphics, color, this);\r\n        return this;\r\n    }\r\n}\r\n\r\nconst Components = Phaser.GameObjects.Components;\r\nPhaser.Class.mixin(Text,\r\n    [\r\n        Components.Alpha,\r\n        Components.BlendMode,\r\n        Components.ComputedSize,\r\n        Components.Crop,\r\n        Components.Depth,\r\n        Components.Flip,\r\n        Components.GetBounds,\r\n        Components.Mask,\r\n        Components.Origin,\r\n        Components.Pipeline,\r\n        Components.ScrollFactor,\r\n        Components.Tint,\r\n        Components.Transform,\r\n        Components.Visible,\r\n        Render\r\n    ]\r\n);\r\n\r\nexport default Text;","import TextStyle from '../textbase/textstyle/TextStyle.js';\r\n\r\nvar GETPROP_RESULT = {\r\n    plainText: null,\r\n    prevProp: null\r\n};\r\n\r\nvar STYLE_RESULT = new TextStyle();\r\nvar PROPLIST = [];\r\n\r\nclass parser {\r\n    constructor(tags) {\r\n        if (tags === undefined) {\r\n            tags = {};\r\n        }\r\n        this.tags = tags;\r\n    }\r\n\r\n    addTag(name, prop) {\r\n        this.tags[name] = prop;\r\n    }\r\n\r\n    splitText(text, mode) {\r\n        var result = [];\r\n        var arr, m, charIdx = 0,\r\n            totalLen = text.length,\r\n            matchStart = totalLen;\r\n        var innerMatch;\r\n        while (true) {\r\n            arr = RE_SPLITTEXT.exec(text);\r\n            if (!arr) {\r\n                break;\r\n            }\r\n\r\n            m = arr[0];\r\n            matchStart = RE_SPLITTEXT.lastIndex - m.length;\r\n\r\n            if (charIdx < matchStart) {\r\n                result.push(text.substring(charIdx, matchStart));\r\n            }\r\n            if (mode === undefined) {\r\n                result.push(m);\r\n            } else if (mode === 1) { // RAWTEXTONLY_MODE\r\n                if (RE_CLASS_HEADER.test(m)) {\r\n                    innerMatch = m.match(RE_CLASS);\r\n                    result.push(innerMatch[2]);\r\n                } else if (RE_STYLE_HEADER.test(m)) {\r\n                    innerMatch = m.match(RE_STYLE);\r\n                    result.push(innerMatch[2]);\r\n                }\r\n            }\r\n\r\n            charIdx = RE_SPLITTEXT.lastIndex;\r\n        }\r\n\r\n\r\n        if (charIdx < totalLen) {\r\n            result.push(text.substring(charIdx, totalLen));\r\n        }\r\n        return result; // [text,...]\r\n    }\r\n\r\n    tagTextToProp(text, prevProp) {\r\n        var plainText, propOut;\r\n        if (RE_CLASS_HEADER.test(text)) {\r\n            var innerMatch = text.match(RE_CLASS);\r\n            if (innerMatch != null) {\r\n                var name = innerMatch[1];\r\n                var tags = this.tags;\r\n                if (tags.hasOwnProperty(name)) {\r\n                    propOut = tags[name];\r\n                } else {\r\n                    propOut = {};\r\n                }\r\n                propOut._class = name;\r\n                plainText = innerMatch[2];\r\n            }\r\n        } else if (RE_STYLE_HEADER.test(text)) {\r\n            var innerMatch = text.match(RE_STYLE);\r\n            if (innerMatch != null) {\r\n                var style = innerMatch[1];\r\n                propOut = styleToProp(style);\r\n                propOut._style = style;\r\n                plainText = innerMatch[2];\r\n            }\r\n        }\r\n\r\n        if (plainText == null) {\r\n            plainText = text;\r\n        }\r\n\r\n        if (propOut == null) {\r\n            propOut = {};\r\n        }\r\n\r\n        var result = GETPROP_RESULT;\r\n        result.plainText = plainText;\r\n        result.prop = propOut;\r\n        return result;\r\n    }\r\n\r\n    propToContextStyle(defaultStyle, prop) {\r\n        var result = STYLE_RESULT;\r\n        if (!prop.hasOwnProperty('img')) {\r\n            result.image = null;\r\n\r\n            if (prop.hasOwnProperty('family') || prop.hasOwnProperty('fontFamily') || prop.hasOwnProperty('font-family')) {\r\n                var family = (prop.hasOwnProperty('family')) ? prop.family :\r\n                    (prop.hasOwnProperty('fontFamily')) ? prop.fontFamily :\r\n                    prop['font-family'];\r\n                result.fontFamily = family;\r\n            } else {\r\n                result.fontFamily = defaultStyle.fontFamily;\r\n            }\r\n\r\n            if (prop.hasOwnProperty('size') || prop.hasOwnProperty('fontSize') || prop.hasOwnProperty('font-size')) {\r\n                var size = (prop.hasOwnProperty('size')) ? prop.size :\r\n                    (prop.hasOwnProperty('fontSize')) ? prop.fontSize :\r\n                    prop['font-size'];\r\n                if (typeof (size) === 'number') {\r\n                    size = size.toString() + 'px';\r\n                }\r\n                result.fontSize = size;\r\n            } else {\r\n                result.fontSize = defaultStyle.fontSize;\r\n            }\r\n\r\n            if (prop.hasOwnProperty('style') || prop.hasOwnProperty('fontStyle') || prop.hasOwnProperty('font-style')) {\r\n                var fontStyle = (prop.hasOwnProperty('style')) ? prop.style :\r\n                    (prop.hasOwnProperty('fontStyle')) ? prop.fontStyle :\r\n                    prop['font-style'];\r\n                result.fontStyle = fontStyle;\r\n            } else {\r\n                result.fontStyle = defaultStyle.fontStyle;\r\n            }\r\n\r\n            if (prop.hasOwnProperty('color') || prop.hasOwnProperty('font-color')) {\r\n                var color = (prop.hasOwnProperty('color')) ? prop.color : prop['font-color'];\r\n                result.color = prop.color;\r\n            } else {\r\n                result.color = defaultStyle.color;\r\n            }\r\n\r\n            if (prop.hasOwnProperty('stroke')) {\r\n                var stroke = prop.stroke; // {color, thinkness}\r\n                result.stroke = (stroke.hasOwnProperty('color')) ? stroke.color : defaultStyle.stroke;\r\n                result.strokeThickness = (stroke.hasOwnProperty('thinkness')) ? stroke.thinkness : defaultStyle.strokeThickness;\r\n            } else {\r\n                result.stroke = defaultStyle.stroke;\r\n                result.strokeThickness = defaultStyle.strokeThickness;\r\n            }\r\n        } else {\r\n            result.image = prop.img;\r\n        }\r\n\r\n        if (prop.hasOwnProperty('shadow')) {\r\n            var shadow = prop.shadow; // {color, offsetX, offsetY, blur}\r\n            result.shadowColor = (shadow.hasOwnProperty('color')) ? shadow.color : defaultStyle.shadowColor;\r\n            result.shadowOffsetX = (shadow.hasOwnProperty('offsetX')) ? shadow.offsetX : defaultStyle.shadowOffsetX;\r\n            result.shadowOffsetY = (shadow.hasOwnProperty('offsetY')) ? shadow.offsetY : defaultStyle.shadowOffsetY;\r\n            result.shadowBlur = (shadow.hasOwnProperty('blur')) ? shadow.blur : defaultStyle.shadowBlur;\r\n            result.shadowStroke = true;\r\n            result.shadowFill = true;\r\n        } else {\r\n            result.shadowColor = defaultStyle.shadowColor;\r\n            result.shadowOffsetX = defaultStyle.shadowOffsetX;\r\n            result.shadowOffsetY = defaultStyle.shadowOffsetY;\r\n            result.shadowBlur = defaultStyle.shadowBlur;\r\n            result.shadowStroke = defaultStyle.shadowStroke;\r\n            result.shadowFill = defaultStyle.shadowFill;\r\n        }\r\n\r\n        if (prop.hasOwnProperty('u') || prop.hasOwnProperty('underline')) {\r\n            var u = (prop.hasOwnProperty('u')) ? prop.u : prop.underline; // {color, thinkness, offset}\r\n            result.underlineColor = (u.hasOwnProperty('color')) ? u.color : defaultStyle.underlineColor;\r\n            result.underlineThickness = (u.hasOwnProperty('thinkness')) ? u.thinkness : defaultStyle.underlineThickness;\r\n            result.underlineOffset = (u.hasOwnProperty('offset')) ? u.offset : defaultStyle.underlineOffset;\r\n        } else {\r\n            result.underlineColor = defaultStyle.underlineColor;\r\n            result.underlineThickness = defaultStyle.underlineThickness;\r\n            result.underlineOffset = defaultStyle.underlineOffset;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    propToTagText(text, prop, prevProp) {\r\n        if (prop.hasOwnProperty('_class')) { // class mode\r\n            if (text === '') {\r\n                if (this.isTextTag(prop._class)) {\r\n                    return '';\r\n                }\r\n            }\r\n            return \"<class='\" + prop._class + \"'>\" + text + \"</class>\";\r\n        } else if (prop.hasOwnProperty('_style')) { // class mode\r\n            return \"<style='\" + prop._style + \"'>\" + text + \"</style>\";\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.tags = undefined;\r\n    }\r\n\r\n    isTextTag(tagName) {\r\n        var tag = this.tags[tagName];\r\n        if (tag) {\r\n            return (tag.img == null);\r\n        } else { // tag not found\r\n            return false;\r\n        }\r\n    }\r\n};\r\n\r\nvar styleToProp = function (s) {\r\n    s = s.split(\";\");\r\n\r\n    var result = {},\r\n        prop, k, v;\r\n    for (var i = 0, slen = s.length; i < slen; i++) {\r\n        prop = s[i].split(\":\");\r\n        k = prop[0], v = prop[1];\r\n        if (isEmpty(k) || isEmpty(v)) {\r\n            continue;\r\n        }\r\n\r\n        switch (k) {\r\n            case 'stroke':\r\n                var stroke = v.split(' '); // stroke:blue 1px\r\n                var len = stroke.length;\r\n                v = {};\r\n                if (len >= 1) {\r\n                    v.color = stroke[0];\r\n                }\r\n                if (len >= 2) {\r\n                    v.thinkness = parseInt(stroke[1].replace('px', ''));\r\n                }\r\n                break;\r\n            case 'shadow':\r\n                var shadow = v.split(' '); // shadow:blue 2px 2px 2px\r\n                var len = shadow.length;\r\n                v = {};\r\n                if (len >= 1) {\r\n                    v.color = shadow[0];\r\n                }\r\n                if (len >= 2) {\r\n                    v.offsetX = parseInt(shadow[1].replace('px', ''));\r\n                }\r\n                if (len >= 3) {\r\n                    v.offsetY = parseInt(shadow[2].replace('px', ''));\r\n                }\r\n                if (len >= 4) {\r\n                    v.blur = parseInt(shadow[3].replace('px', ''));\r\n                }\r\n                break;\r\n            case 'u':\r\n            case 'underline': // underline:blue 3px -1px\r\n                var u = v.split(' ');\r\n                var len = u.length;\r\n                v = {};\r\n                if (len >= 1) {\r\n                    v.color = u[0];\r\n                }\r\n                if (len >= 2) {\r\n                    v.thinkness = parseInt(u[1].replace('px', ''));\r\n                }\r\n                if (len >= 3) {\r\n                    v.offset = parseInt(u[2].replace('px', ''));\r\n                }\r\n                break;\r\n        }\r\n        result[k] = v;\r\n    }\r\n    return result;\r\n};\r\n\r\nvar isEmpty = function (s) {\r\n    // Remove white spaces.\r\n    s = s.replace(RE_SPACE, '');\r\n    return (s.length === 0);\r\n};\r\n\r\nvar RE_SPLITTEXT = /<\\s*class=[\"|']([^\"|']+)[\"|']\\s*\\>([\\s\\S]*?)<\\s*\\/class\\s*\\>|<\\s*style=[\"|']([^\"|']+)[\"|']\\s*\\>([\\s\\S]*?)<\\s*\\/style\\s*\\>/g;\r\nvar RE_CLASS_HEADER = /<\\s*class=/i;\r\nvar RE_CLASS = /<\\s*class=[\"|']([^\"|']+)[\"|']\\s*\\>([\\s\\S]*?)<\\s*\\/class\\s*\\>/;\r\nvar RE_STYLE_HEADER = /<\\s*style=/i;\r\nvar RE_STYLE = /<\\s*style=[\"|']([^\"|']+)[\"|']\\s*\\>([\\s\\S]*?)<\\s*\\/style\\s*\\>/;\r\nvar RE_SPACE = /^\\s+|\\s+$/;\r\n\r\nexport default parser;","import Text from '../textbase/Text.js';\r\nimport ParserKlass from './Parser.js';\r\n\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\n\r\nclass TagText extends Text {\r\n    constructor(scene, x, y, text, style) {\r\n        var tags = GetValue(style, 'tags', undefined);\r\n        var parser = new ParserKlass(tags);\r\n        super(scene, x, y, text, style, 'rexTagText', parser);\r\n        this.parser = parser;\r\n    }\r\n\r\n    addTag(name, prop) {\r\n        this.parser.addTag(name, prop);\r\n        return this.updateText(true);\r\n    }\r\n\r\n    addTags(tags) {\r\n        for(var name in tags){\r\n            this.parser.addTag(name, tags[name]);\r\n        }\r\n        return this.updateText(true);\r\n    }\r\n\r\n    preDestroy() {\r\n        super.preDestroy();\r\n        this.parser.destroy();\r\n        this.parser = undefined;\r\n    }\r\n}\r\n\r\nexport default TagText;","import TagText from './TagText.js';\r\n\r\nconst GetAdvancedValue = Phaser.Utils.Objects.GetAdvancedValue;\r\nconst BuildGameObject = Phaser.GameObjects.BuildGameObject;\r\n\r\nexport default function (config, addToScene) {\r\n    // style Object = {\r\n    //     font: [ 'font', '16px Courier' ],\r\n    //     backgroundColor: [ 'backgroundColor', null ],\r\n    //     fill: [ 'fill', '#fff' ],\r\n    //     stroke: [ 'stroke', '#fff' ],\r\n    //     strokeThickness: [ 'strokeThickness', 0 ],\r\n    //     shadowOffsetX: [ 'shadow.offsetX', 0 ],\r\n    //     shadowOffsetY: [ 'shadow.offsetY', 0 ],\r\n    //     shadowColor: [ 'shadow.color', '#000' ],\r\n    //     shadowBlur: [ 'shadow.blur', 0 ],\r\n    //     shadowStroke: [ 'shadow.stroke', false ],\r\n    //     shadowFill: [ 'shadow.fill', false ],\r\n    //     align: [ 'align', 'left' ],\r\n    //     maxLines: [ 'maxLines', 0 ],\r\n    //     fixedWidth: [ 'fixedWidth', false ],\r\n    //     fixedHeight: [ 'fixedHeight', false ]\r\n    // }\r\n\r\n    var content = GetAdvancedValue(config, 'text', '');\r\n    var style = GetAdvancedValue(config, 'style', null);\r\n\r\n    //  Padding\r\n    //      { padding: 2 }\r\n    //      { padding: { x: , y: }}\r\n    //      { padding: { left: , top: }}\r\n    //      { padding: { left: , right: , top: , bottom: }}  \r\n\r\n    var padding = GetAdvancedValue(config, 'padding', null);\r\n\r\n    if (padding !== null) {\r\n        style.padding = padding;\r\n    }\r\n\r\n    if (addToScene !== undefined) {\r\n        config.add = addToScene;\r\n    }\r\n\r\n    var gameObject = new TagText(this.scene, 0, 0, content, style);\r\n    BuildGameObject(this.scene, gameObject, config);\r\n\r\n    //  Text specific config options:\r\n\r\n    gameObject.autoRound = GetAdvancedValue(config, 'autoRound', true);\r\n    gameObject.resolution = GetAdvancedValue(config, 'resolution', 1);\r\n\r\n    return gameObject;\r\n};","import Factory from './gameobjects/text/tagtext/Factory.js';\r\nimport Creator from './gameobjects/text/tagtext/Creator.js';\r\nimport TagText from './gameobjects/text/tagtext/TagText.js';\r\n\r\nPhaser.GameObjects.GameObjectFactory.register('rexTagText', Factory);\r\nPhaser.GameObjects.GameObjectCreator.register('rexTagText', Creator);\r\n\r\nexport default TagText;","import TagText from './TagText.js';\r\n\r\nexport default function (x, y, text, style) {\r\n    var gameObject = new TagText(this.scene, x, y, text, style);\r\n    this.scene.add.existing(gameObject);\r\n    return gameObject;\r\n}","export default {\r\n    setEventEmitter(eventEmitter, EventEmitterClass) {\r\n        if (EventEmitterClass === undefined) {\r\n            EventEmitterClass = Phaser.Events.EventEmitter; // Use built-in EventEmitter class by default\r\n        }\r\n        this._privateEE = (eventEmitter === undefined);\r\n        this._eventEmitter = (this._privateEE) ? (new EventEmitterClass()) : eventEmitter;\r\n        return this;\r\n    },\r\n\r\n    destroyEventEmitter() {\r\n        if (this._eventEmitter && this._privateEE) {\r\n            this._eventEmitter.shutdown();\r\n        }\r\n        return this;\r\n    },\r\n\r\n    getEventEmitter() {\r\n        return this._eventEmitter;\r\n    },\r\n\r\n    on: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.on.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    once: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.once.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    off: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.off.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    emit: function (event) {\r\n        if (this._eventEmitter && event) {\r\n            this._eventEmitter.emit.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    addListener: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.addListener.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    removeListener: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.removeListener.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    removeAllListeners: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.removeAllListeners.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    listenerCount: function () {\r\n        if (this._eventEmitter) {\r\n            return this._eventEmitter.listenerCount.apply(this._eventEmitter, arguments);\r\n        }\r\n        return 0;\r\n    },\r\n\r\n    listeners: function () {\r\n        if (this._eventEmitter) {\r\n            return this._eventEmitter.listeners.apply(this._eventEmitter, arguments);\r\n        }\r\n        return [];\r\n    }\r\n};","const SceneClass = Phaser.Scene;\r\nvar IsSceneObject = function (object) {\r\n    return (object instanceof SceneClass);\r\n}\r\nexport default IsSceneObject;","import IsSceneObject from './IsSceneObject.js';\r\n\r\nvar GetSceneObject = function (object) {\r\n    if (IsSceneObject(object)) { // object = scene\r\n        return object;\r\n    } else if (object.scene && IsSceneObject(object.scene)) { // object = game object\r\n        return object.scene;\r\n    } else if (object.parent && object.parent.scene && IsSceneObject(object.parent.scene)) { // parent = bob object\r\n        return object.parent.scene;\r\n    }\r\n}\r\n\r\nexport default GetSceneObject;","import EventEmitterMethods from '../../utils/eventemitter/EventEmitterMethods.js';\r\nimport GetSceneObject from '../../utils/system/GetSceneObject.js';\r\n\r\nconst GetFastValue = Phaser.Utils.Objects.GetFastValue;\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\n\r\nclass TextTyping {\r\n    constructor(gameObject, config) {\r\n        this.gameObject = gameObject;\r\n        this.scene = GetSceneObject(gameObject);        \r\n        this.setEventEmitter(GetValue(config, 'eventEmitter', undefined));\r\n        \r\n        this.timer = null;\r\n        this.resetFromJSON(config);\r\n        this.boot();\r\n    }\r\n\r\n    /**\r\n     * Reset status by JSON object\r\n     * @param {object} o JSON object\r\n     * @returns {object} this object\r\n     */\r\n    resetFromJSON(o) {\r\n        this.setTypeMode(GetValue(o, 'typeMode', 0));\r\n        this.setTypeSpeed(GetValue(o, 'speed', 333));\r\n        this.setTextCallback = GetFastValue(o, 'setTextCallback', null);\r\n        this.setTextCallbackScope = GetFastValue(o, 'setTextCallbackScope', null);\r\n\r\n        this.typingIdx = GetFastValue(o, 'typingIdx', 0);\r\n        this.text = transferText(GetFastValue(o, 'text', ''));\r\n        this.textLen = GetFastValue(o, 'textLen', 0);\r\n        this.insertIdx = GetFastValue(o, 'insertIdx', null);\r\n\r\n        var elapsed = GetFastValue(o, 'elapsed', null);\r\n        if (elapsed !== null) {\r\n            this.start(undefined, undefined, this.typingIdx, elapsed);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Return status in JSON object\r\n     * @returns JSON object\r\n     */\r\n    toJSON() {\r\n        var elapsed;\r\n        var timer = this.getTimer();\r\n        if (timer) {\r\n            elapsed = timer.elapsed;\r\n        } else {\r\n            elapsed = null;\r\n        }\r\n\r\n        return {\r\n            typeMode: this.typeMode,\r\n            speed: this.speed,\r\n            setTextCallback: this.setTextCallback,\r\n            setTextCallbackScope: this.setTextCallbackScope,\r\n\r\n            typingIdx: this.typingIdx,\r\n            text: this.text,\r\n            textLen: this.textLen,\r\n            insertIdx: this.insertIdx,\r\n            elapsed: elapsed\r\n        };\r\n    }\r\n\r\n    boot() {\r\n        if (this.gameObject.once) { // oops, bob object does not have event emitter\r\n            this.gameObject.once('destroy', this.destroy, this);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    shutdown() {\r\n        this.destroyEventEmitter();\r\n        this.freeTimer();\r\n        this.gameObject = undefined;\r\n        this.scene = undefined;\r\n        return this;\r\n    }\r\n\r\n    destroy() {\r\n        this.shutdown();\r\n        return this;\r\n    }\r\n\r\n    setTypeMode(m) {\r\n        if (typeof (m) === 'string') {\r\n            m = TYPEMODE[m];\r\n        }\r\n        this.typeMode = m;\r\n        return this;\r\n    }\r\n\r\n    setTypeSpeed(speed) {\r\n        this.speed = speed;\r\n        return this;\r\n    }\r\n\r\n    get isTyping() {\r\n        return (this.getTimer() !== null);\r\n    }\r\n\r\n    get isLastChar() {\r\n        return (this.typingIdx === this.textLen);\r\n    }\r\n\r\n    start(text, speed, startIdx, timerStartAt) {\r\n        if (text !== undefined) {\r\n            this.setTypingContent(text);\r\n        }\r\n        if (speed !== undefined) {\r\n            this.speed = speed;\r\n        }\r\n        if (startIdx === undefined) {\r\n            startIdx = 0;\r\n        }\r\n\r\n        this.typingIdx = startIdx + 1;\r\n        if (this.speed === 0) {\r\n            this.stop(true);\r\n        } else {\r\n            this.startTimer(timerStartAt);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    appendText(text) {\r\n        var newText = this.text.concat(transferText(text));\r\n        if (this.isTyping) {\r\n            this.setTypingContent(newText);\r\n        } else {\r\n            this.start(newText, undefined, this.textLen);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    stop(showAllText) {\r\n        var timer = this.getTimer();\r\n        if (timer) {\r\n            this.freeTimer();\r\n        }\r\n        if (showAllText) {\r\n            this.typingIdx = this.textLen;\r\n            this.setText(this.text);\r\n            this.emit('type');\r\n            this.emit('complete', this, this.gameObject);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    pause() {\r\n        var timer = this.getTimer();\r\n        if (timer) {\r\n            timer.paused = true;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    resume() {\r\n        var timer = this.getTimer();\r\n        if (timer) {\r\n            timer.paused = false;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    setTypingContent(text) {\r\n        this.text = transferText(text);\r\n        this.textLen = this.getTextLength(this.text);\r\n        return this;\r\n    }\r\n\r\n    onTyping() {\r\n        var newText = this.getTypingString(this.text, this.typingIdx, this.textLen, this.typeMode);\r\n        this.setText(newText);\r\n        this.emit('type');\r\n\r\n        if (this.isLastChar) {\r\n            this.freeTimer();\r\n            this.emit('complete', this, this.gameObject);\r\n        } else {\r\n            this.timer.delay = this.speed; // delay of next typing            \r\n            this.typingIdx++;\r\n        }\r\n    }\r\n\r\n    getTypingString(text, typeIdx, textLen, typeMode) {\r\n        var result;\r\n        if (typeMode === 0) { //left-to-right\r\n            var startIdx = 0;\r\n            var endIdx = typeIdx;\r\n            this.insertIdx = endIdx;\r\n            result = this.getSubString(text, startIdx, endIdx);\r\n\r\n        } else if (typeMode === 1) { //right-to-left\r\n            var endIdx = textLen;\r\n            var startIdx = endIdx - typeIdx;\r\n            this.insertIdx = 0;\r\n            result = this.getSubString(text, startIdx, endIdx);\r\n\r\n        } else if (typeMode === 2) { //middle-to-sides\r\n            var midIdx = textLen / 2;\r\n            var startIdx = Math.floor(midIdx - (typeIdx / 2));\r\n            var endIdx = startIdx + typeIdx;\r\n            this.insertIdx = (typeIdx % 2) ? typeIdx : 0;\r\n            result = this.getSubString(text, startIdx, endIdx);\r\n\r\n        } else if (typeMode === 3) { //sides-to-middle\r\n            var lowerLen = Math.floor(typeIdx / 2);\r\n            var lowerResult;\r\n            if (lowerLen > 0) {\r\n                var endIdx = textLen;\r\n                var startIdx = endIdx - lowerLen;\r\n                lowerResult = this.getSubString(text, startIdx, endIdx);\r\n            } else {\r\n                lowerResult = \"\";\r\n            }\r\n\r\n            var upperLen = typeIdx - lowerLen;\r\n            var upperResult;\r\n            if (upperLen > 0) {\r\n                var startIdx = 0;\r\n                var endIdx = startIdx + upperLen;\r\n                this.insertIdx = endIdx;\r\n                upperResult = this.getSubString(text, startIdx, endIdx);\r\n            } else {\r\n                upperResult = \"\";\r\n                this.insertIdx = 0;\r\n            }\r\n            result = upperResult + lowerResult;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    startTimer(timerStartAt) {\r\n        if (this.timer) {\r\n            this.freeTimer();\r\n        }\r\n        var delay, startAt;\r\n        if (timerStartAt === undefined) {\r\n            delay = 0;\r\n            startAt = 0;\r\n        } else {\r\n            delay = this.speed;\r\n            startAt = timerStartAt;\r\n        }\r\n\r\n        this.timer = this.scene.time.addEvent({\r\n            delay: 0,\r\n            startAt: startAt,\r\n            loop: true,\r\n            callback: this.onTyping,\r\n            callbackScope: this\r\n        });\r\n        return this;\r\n    }\r\n\r\n    getTimer() {\r\n        return this.timer;\r\n    }\r\n\r\n    freeTimer() {\r\n        if (this.timer) {\r\n            this.timer.remove();\r\n            this.timer = null;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    setText(text) {\r\n        if (this.setTextCallback) {\r\n            if (this.setTextCallbackScope) {\r\n                text = this.setTextCallback.call(this.setTextCallbackScope, text, this.isLastChar, this.insertIdx);\r\n            } else {\r\n                text = this.setTextCallback(text, this.isLastChar, this.insertIdx);\r\n            }\r\n        }\r\n        this.gameObject.setText(text);\r\n    }\r\n\r\n    getTextLength(text) {\r\n        var gameObject = this.gameObject;\r\n        var len;\r\n        if (gameObject.getPlainText) {\r\n            len = gameObject.getPlainText(text).length;\r\n        } else {\r\n            len = text.length;\r\n        }\r\n\r\n        return len;\r\n    }\r\n\r\n    getSubString(text, startIdx, endIdx) {\r\n        var gameObject = this.gameObject;\r\n        var result;\r\n        if (gameObject.getSubString) {\r\n            result = gameObject.getSubString(text, startIdx, endIdx);\r\n        } else {\r\n            result = text.slice(startIdx, endIdx);\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nObject.assign(\r\n    TextTyping.prototype,\r\n    EventEmitterMethods\r\n);\r\n\r\nvar transferText = function (text) {\r\n    if (Array.isArray(text)) {\r\n        text = text.join('\\n');\r\n    } else if (typeof (text) === 'number') {\r\n        text = text.toString();\r\n    }\r\n    return text;\r\n}\r\n\r\n/** @private */\r\nconst TYPEMODE = {\r\n    'left-to-right': 0,\r\n    'right-to-left': 1,\r\n    'middle-to-sides': 2,\r\n    'sides-to-middle': 3\r\n};\r\n\r\n\r\nexport default TextTyping;","import TextTyping from './behaviors/texttyping/TextTyping.js';\r\nexport default TextTyping;","export default {\r\n    None: 0,\r\n    EasyWin: 1,\r\n    Hard: 2\r\n};","export default {\r\n    Active: 0,\r\n    Destroyed: 1\r\n};","import LevelManifest from \"./LevelManifest\";\r\nimport TileGenerationBehavior from \"./TileGenerationBehavior\";\r\nimport Tile from \"./Tile\";\r\n\r\nexport default [\r\n\r\n    // 0\r\n    {\r\n        score: 100,\r\n        timer: 0,\r\n        behavior: TileGenerationBehavior.None\r\n    },\r\n\r\n    // 1\r\n    {\r\n        score: 200,\r\n        timer: 120,\r\n        behavior: TileGenerationBehavior.None\r\n    },\r\n\r\n    // 2\r\n    {\r\n        score: 300,\r\n        timer: 30,\r\n        behavior: TileGenerationBehavior.Hard\r\n    },\r\n\r\n    // 3\r\n    {\r\n        score: 300,\r\n        timer: 120,\r\n        behavior: TileGenerationBehavior.EasyWin\r\n    },\r\n\r\n    // 4\r\n    {\r\n        score: 400,\r\n        timer: 300,\r\n        behavior: TileGenerationBehavior.EasyWin,\r\n        handler: (state) => {\r\n            if(state.tileGrid.TileGenerationBehavior !== TileGenerationBehavior.Hard && state.score > (LevelManifest[state.level]/2))\r\n            {\r\n                state.tileGrid.tileGenerationBehavior = TileGenerationBehavior.Hard;\r\n            }\r\n        }\r\n    },\r\n\r\n    // 5\r\n    {\r\n        score: 1000,\r\n        timer: 300,\r\n        behavior: TileGenerationBehavior.Hard\r\n    },\r\n\r\n    // 6\r\n    {\r\n        score: 1000,\r\n        timer: 300,\r\n        behavior: TileGenerationBehavior.Hard\r\n    },\r\n\r\n    // 7\r\n    {\r\n        score: 1000,\r\n        timer: 300,\r\n        behavior: TileGenerationBehavior.EasyWin\r\n    },\r\n\r\n    // 8\r\n    {\r\n        score: 1000,\r\n        timer: 300,\r\n        behavior: TileGenerationBehavior.None\r\n    }\r\n];","// Source: https://stackoverflow.com/questions/5915096/get-random-item-from-javascript-array\r\nconst getRandomItem = (items) => {\r\n    return items[Math.floor(Math.random() * items.length)];\r\n}\r\n\r\nexport {\r\n    getRandomItem\r\n}","export default [\r\n    { name: 'Blue', imageKey: 'tile_01' },\r\n    { name: 'Green', imageKey: 'tile_02' },\r\n    { name: 'Red', imageKey: 'tile_03' },\r\n    { name: 'Yellow', imageKey: 'tile_04' }\r\n];","import { getRandomItem } from './Utility';\r\nimport Tile from './Tile';\r\nimport TileGenerationBehavior from './TileGenerationBehavior';\r\nimport TileState from './TileState';\r\nimport TileType from './TileType';\r\n\r\nexport default class {\r\n\r\n    constructor(tileGridWidth, tileGridHeight, tileSize, offsetX, offsetY, onTileSelect, onTileMatch, tileGenerationBehavior, queue)\r\n    {\r\n        this.offsetX = offsetX;\r\n        this.offsetY = offsetY;\r\n        this.tileSize = tileSize;\r\n        this.tileGridHeight = tileGridHeight;\r\n        this.tileGridWidth = tileGridWidth;\r\n        this.tileGrid = [];\r\n        this.tileImageContainer = null;\r\n        this.playAreaOffset = (this.tileGridHeight * this.tileSize);\r\n\r\n        this.onTileSelect = onTileSelect;\r\n        this.onTileMatch = onTileMatch;\r\n\r\n        this.tileGenerationBehavior = tileGenerationBehavior;\r\n\r\n        this.queue = queue;\r\n\r\n        // We're going to generate a grid that's twice the height of\r\n        // the desired tile grid height since we'll use the hidden, upper\r\n        // region to stage the bricks that will fall into the play area\r\n        for(let y = 0; y < tileGridHeight * 2; y++)\r\n        {\r\n            this.tileGrid[y] = [];\r\n            for(let x = 0; x < tileGridWidth; x++)\r\n            {\r\n                this.tileGrid[y][x] = (y < tileGridHeight)\r\n                    ? null\r\n                    : this.createTile(this.getTileType(x, y, TileGenerationBehavior.None), x, y);\r\n\r\n                // When we're generating the grid, we start with the default tile generation\r\n                // behavior since the \"Easy Win\" behavior will create a grid with identical\r\n                // tiles\r\n            }\r\n        }\r\n    }\r\n\r\n    create(context)\r\n    {\r\n        this.tileImageContainer = context.add.container();\r\n\r\n        // Create all of the tiles\r\n        this.forEachTile(tile => {\r\n\r\n            if(tile === null)\r\n            {\r\n                return;\r\n            }\r\n\r\n            tile.create(context);\r\n            this.tileImageContainer.add(tile.image);\r\n\r\n        });\r\n\r\n        // Create a mask to only show the play area\r\n        const maskShape = context.make.graphics();\r\n        maskShape.fillStyle(0xffffff, 1);\r\n        maskShape.fillRect(this.offsetX - (this.tileSize/2), this.offsetY + (this.tileGridHeight * this.tileSize) - (this.tileSize/2), this.tileGridWidth * this.tileSize, this.tileGridHeight * this.tileSize);\r\n        \r\n        this.tileImageContainer.mask = new Phaser.Display.Masks.GeometryMask(context, maskShape);\r\n    }\r\n\r\n    update(context)\r\n    {\r\n        const self = this;\r\n\r\n        if(self.queue.length > 0)\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Detect and destroy any matches\r\n        const matchedTiles = self.getMatches();\r\n\r\n        if(matchedTiles.length > 0)\r\n        {\r\n            self.onTileMatch(context, matchedTiles);\r\n        }\r\n\r\n        let destroys = [];\r\n        matchedTiles.forEach(t => { destroys.push(t.destroy(context, this.tileImageContainer)); });\r\n\r\n        if(destroys.length > 0)\r\n        {\r\n            self.queue.push(() => { return Promise.all(destroys); });\r\n        }\r\n\r\n        // Remove any destroyed tiles\r\n        self.forEachTile((tile, x, y) => {\r\n\r\n            if(tile === null)\r\n            {\r\n                return;\r\n            }\r\n\r\n            if(tile.state === TileState.Destroyed)\r\n            {\r\n                self.tileGrid[y][x] = null;\r\n            }\r\n\r\n        });\r\n\r\n        // Shift all of the tiles downward to fill empty spots\r\n        let drops = [];\r\n        for(let x = 0; x < this.tileGridWidth; x++)\r\n        {\r\n            let y = (this.tileGridHeight * 2) - 1;\r\n            while(y >= 0)\r\n            {\r\n                // If the tile is null...\r\n                if(self.tileGrid[y][x] === null)\r\n                {\r\n                    // ...find the closest tile that's not null...\r\n                    let closestY = y - 1;\r\n                    while(closestY >= 0)\r\n                    {\r\n                        let closestTile = self.tileGrid[closestY][x];\r\n                        if(closestTile !== null)\r\n                        {\r\n                            // ...and shift it downward\r\n                            self.tileGrid[y][x] = closestTile;\r\n                            self.tileGrid[closestY][x] = null;\r\n                            drops.push(this.getTileDrop(context, closestTile, x, y));\r\n                            y--;\r\n                        }\r\n                        closestY--;\r\n                    }\r\n                }\r\n\r\n                y--;\r\n            }\r\n        }\r\n\r\n        // Fill in all of the empty tiles\r\n        self.forEachPlayableTile((tile, x, y) => {\r\n            if(tile === null)\r\n            {\r\n                const adjustedY = y - self.tileGridHeight;\r\n\r\n                const tile = self.createTile(self.getTileType(x, y, self.tileGenerationBehavior), x, adjustedY);\r\n                self.tileGrid[adjustedY][x] = tile;\r\n                tile.create(context);\r\n                self.tileImageContainer.add(tile.image);\r\n            }\r\n        });\r\n\r\n        if(drops.length > 0)\r\n        {\r\n            self.queue.push(() => { return Promise.all(drops); });\r\n        }\r\n    }\r\n\r\n    swapTiles(context, firstTile, secondTile)\r\n    {\r\n        let self = this;\r\n\r\n        self.queue.push(() => {\r\n            \r\n            let firstTileX = firstTile.x;\r\n            let firstTileY = firstTile.y;\r\n            let firstTileGridX = firstTile.tileGridX;\r\n            let firstTileGridY = firstTile.tileGridY;\r\n    \r\n            let secondTileX = secondTile.x;\r\n            let secondTileY = secondTile.y;\r\n            let secondTileGridX = secondTile.tileGridX;\r\n            let secondTileGridY = secondTile.tileGridY;\r\n    \r\n            let firstSwap = secondTile.updatePosition(context, firstTileX, firstTileY, firstTileGridX, firstTileGridY);\r\n            self.tileGrid[firstTileGridY][firstTileGridX] = secondTile;\r\n    \r\n            let secondSwap = firstTile.updatePosition(context, secondTileX, secondTileY, secondTileGridX, secondTileGridY);\r\n            self.tileGrid[secondTileGridY][secondTileGridX] = firstTile;\r\n\r\n            return Promise.all([firstSwap, secondSwap]);\r\n\r\n        });\r\n    }\r\n\r\n    hasMatches(targetGridX, targetGridY)\r\n    {\r\n        return this.getMatches(targetGridX, targetGridY).length > 0;\r\n    }\r\n\r\n    getMatches(targetGridX, targetGridY)\r\n    {\r\n        const self = this;\r\n        const matchedTiles = [];\r\n\r\n        self.forEachTile((tile, x, y) => {\r\n\r\n            if(\r\n                (typeof targetGridX !== 'undefined' && x !== targetGridX) &&\r\n                (typeof targetGridY !== 'undefined' && y !== targetGridY)\r\n              )\r\n            {\r\n                return;\r\n            }\r\n\r\n            if(!this.isPlayable(tile))\r\n            {\r\n                return;\r\n            }\r\n\r\n            const targetTileType = tile.tileType;\r\n            const matchedXTiles = [];\r\n            const matchedYTiles = [];\r\n\r\n            // Check for matches to the right\r\n            let currX = (x + 1);\r\n            while(currX < self.tileGridWidth)\r\n            {\r\n                const currTile = self.tileGrid[y][currX];\r\n\r\n                if(currTile != null && targetTileType.name === currTile.tileType.name)\r\n                {\r\n                    matchedXTiles.push(currTile);\r\n                }\r\n                else\r\n                {\r\n                    break;\r\n                }\r\n\r\n                currX++;\r\n            }\r\n\r\n            // Check for matches to the left\r\n            currX = (x - 1);\r\n            while(currX > 0)\r\n            {\r\n                const currTile = self.tileGrid[y][currX];\r\n\r\n                if(currTile != null && targetTileType.name === currTile.tileType.name)\r\n                {\r\n                    matchedXTiles.push(currTile);\r\n                }\r\n                else\r\n                {\r\n                    break;\r\n                }\r\n\r\n                currX--;\r\n            }\r\n\r\n            // Check matches downwards\r\n            let currY = (y + 1);\r\n            while(currY < self.tileGridHeight)\r\n            {\r\n                const currTile = self.tileGrid[currY][x];\r\n\r\n                if(currTile != null && targetTileType.name === currTile.tileType.name)\r\n                {\r\n                    matchedYTiles.push(currTile);\r\n                }\r\n                else\r\n                {\r\n                    break;\r\n                }\r\n\r\n                currY++;\r\n            }\r\n\r\n            // Check matches upwards\r\n            currY = (y - 1);\r\n            while(currY > 0)\r\n            {\r\n                const currTile = self.tileGrid[currY][x];\r\n\r\n                if(currTile != null && targetTileType === currTile.tileType)\r\n                {\r\n                    matchedYTiles.push(currTile);\r\n                }\r\n                else\r\n                {\r\n                    break;\r\n                }\r\n\r\n                currY--;\r\n            }\r\n            \r\n            if(matchedYTiles.length > 1)\r\n            {\r\n                matchedTiles.push(...matchedYTiles);\r\n            }\r\n            \r\n            if(matchedXTiles.length > 1)\r\n            {\r\n                matchedTiles.push(...matchedXTiles);\r\n            }\r\n\r\n            if(matchedYTiles.length > 1 || matchedXTiles.length > 1)\r\n            {\r\n                matchedTiles.push(tile);\r\n            }\r\n        });\r\n\r\n        return matchedTiles;\r\n    }\r\n\r\n    forEachTile(callback)\r\n    {\r\n        for(let y = 0; y < this.tileGridHeight * 2; y++)\r\n        {\r\n            for(let x = 0; x < this.tileGridWidth; x++)\r\n            {\r\n                callback(this.tileGrid[y][x], x, y);\r\n            }\r\n        }\r\n    }\r\n\r\n    forEachPlayableTile(callback)\r\n    {\r\n        for(let y = this.tileGridHeight; y < this.tileGridHeight * 2; y++)\r\n        {\r\n            for(let x = 0; x < this.tileGridWidth; x++)\r\n            {\r\n                callback(this.tileGrid[y][x], x, y);\r\n            }\r\n        }\r\n    }\r\n\r\n    createTile(tileType, x, y)\r\n    {\r\n        return new Tile(tileType, this.getTileX(x), this.getTileY(y), x, y, this.onTileSelect);\r\n    }\r\n\r\n    getTileDrop(context, tile, x, y)\r\n    {\r\n        return tile.updatePosition(context, this.getTileX(x), this.getTileY(y), x, y);\r\n    }\r\n\r\n    getTileX(x)\r\n    {\r\n        return this.offsetX + (this.tileSize * x);\r\n    }\r\n\r\n    getTileY(y)\r\n    {\r\n        return this.offsetY + (this.tileSize * y);\r\n    }\r\n\r\n    canSelect(tile)\r\n    {\r\n        return this.isPlayable(tile);\r\n    }\r\n\r\n    isPlayable(tile)\r\n    {\r\n        return (tile != null) && (tile.tileGridY > (this.tileGridHeight - 1));\r\n    }\r\n\r\n    getTileType(x, y, behavior)\r\n    {\r\n        const aboveTile = (y < 1) ? null : this.tileGrid[y - 1][x];\r\n        const belowTile = (y > self.tileGridHeight - 1 || !this.tileGrid[y + 1]) ? null : this.tileGrid[y + 1][x];\r\n\r\n        const leftTile = (x < 1) ? null : this.tileGrid[y][x - 1];\r\n        const rightTile = (x > self.tileGridWidth - 1) ? null : this.tileGrid[y][x + 1];\r\n\r\n        if(behavior === TileGenerationBehavior.EasyWin && (aboveTile != null || belowTile != null || leftTile != null || rightTile != null))\r\n        {\r\n            return getRandomItem([aboveTile, belowTile, leftTile, rightTile].filter(t => t != null).map(t => t.tileType));\r\n        }\r\n        \r\n        if(behavior === TileGenerationBehavior.Hard)\r\n        {\r\n            return getRandomItem(TileType.filter(t =>\r\n                (belowTile === null || t.name !== belowTile.tileType.name) &&\r\n                (rightTile === null || t.name !== rightTile.tileType.name) &&\r\n                (leftTile === null || t.name !== leftTile.tileType.name)\r\n            ));\r\n        }\r\n\r\n        return getRandomItem(TileType.filter(t =>\r\n            (aboveTile === null || t.name !== aboveTile.tileType.name) &&\r\n            (leftTile === null || t.name !== leftTile.tileType.name)\r\n        ));\r\n    }\r\n}","import TileState from './TileState';\r\n\r\nexport default class {\r\n\r\n    constructor(tileType, x, y, tileGridX, tileGridY, onTileSelect)\r\n    {\r\n        this.tileType = tileType;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.tileGridX = tileGridX;\r\n        this.tileGridY = tileGridY;\r\n        this.onTileSelect = onTileSelect;\r\n        this.image = null;\r\n        this.state = TileState.Active;\r\n        this.isActivated = false;\r\n        this.isDestroying = false;\r\n    }\r\n\r\n    create(context)\r\n    {\r\n        this.image = context.add.image(this.x, this.y, this.tileType.imageKey);\r\n        this.image.setInteractive();\r\n        this.image.on('pointerdown', () => { this.onTileSelect(context, this); });\r\n    }\r\n\r\n    activate()\r\n    {\r\n        this.isActivated = true;\r\n        this.image.setTintFill(0xffffff);\r\n    }\r\n\r\n    deactivate()\r\n    {\r\n        this.isActivated = false;\r\n        this.image.clearTint();\r\n    }\r\n\r\n    updatePosition(context, x, y, tileGridX, tileGridY)\r\n    {\r\n        let self = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            self.x = x;\r\n            self.y = y;\r\n            self.tileGridX = tileGridX;\r\n            self.tileGridY = tileGridY;\r\n\r\n            context.tweens.add({\r\n                targets: self.image,\r\n                x: x,\r\n                y: y,\r\n                ease: 'Power1',\r\n                duration: 500,\r\n                onComplete: () => { resolve() }\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n    destroy(context, container)\r\n    {\r\n        let self = this;\r\n        \r\n        if(self.isDestroying)\r\n        {\r\n            return;\r\n        }\r\n\r\n        self.isDestroying = true;\r\n\r\n        // Create cover for fading the shape to white\r\n        const fadeOutCover = context.add.image(self.x, self.y, self.tileType.imageKey);\r\n        fadeOutCover.setTintFill(0xffffff);\r\n        fadeOutCover.alpha = 0;\r\n\r\n        // Create particles for \"explosion\" effect\r\n        const particleGraphics = [];\r\n        for(let i=0; i<4; i++)\r\n        {\r\n            const explodeParticleGraphics = context.add.graphics({ fillStyle: { color: 0xffffff }, alpha: 0 });\r\n            const explodeParticle = new Phaser.Geom.Circle(this.x, this.y, Phaser.Math.Between(0, 10));\r\n            explodeParticleGraphics.fillCircleShape(explodeParticle);\r\n            particleGraphics.push(explodeParticleGraphics);\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n           context.tweens.add({\r\n               targets: fadeOutCover,\r\n               alpha: 1,\r\n               duration: 200,\r\n               onComplete: () => {\r\n\r\n                    // Remove the tile image\r\n                    container.remove(self.image);\r\n                    self.image.destroy();\r\n                    self.state = TileState.Destroyed;\r\n\r\n                    // Remove the fade out cover\r\n                    container.remove(fadeOutCover);\r\n                    fadeOutCover.destroy();\r\n\r\n                    // Remove the particles\r\n                    particleGraphics.forEach((graphics) => {\r\n                        container.remove(graphics);\r\n                        graphics.destroy();\r\n                    });\r\n\r\n                    resolve();\r\n               }\r\n           });\r\n\r\n           particleGraphics.forEach((graphics, index) => {\r\n\r\n                let xSign = '';\r\n                let ySign = '';\r\n               \r\n                switch(index)\r\n                {\r\n                    case 1:\r\n                        xSign = '-';\r\n                        ySign = '-';\r\n                        break;\r\n\r\n                    case 2:\r\n                        xSign = '+';\r\n                        ySign = '+';\r\n                        break;\r\n\r\n                    case 3:\r\n                        xSign = '+';\r\n                        ySign = '-';\r\n                        break;\r\n\r\n                    case 4:\r\n                        xSign = '-';\r\n                        ySign = '+';\r\n                        break;\r\n                }\r\n\r\n                context.tweens.add({\r\n                    targets: graphics,\r\n                    x: xSign + '=35',\r\n                    y: ySign + '=35',\r\n                    alpha: 1,\r\n                    duration: 200,\r\n                    ease: 'Cubic.easeOut'\r\n                });\r\n           });\r\n\r\n        });\r\n    }\r\n}","import ActionQueue from '../ActionQueue';\r\nimport DialogManager from '../DialogManager';\r\nimport Guide from '../Guide';\r\nimport LevelManifest from '../LevelManifest';\r\nimport ScoreDisplay from '../ScoreDisplay';\r\nimport TileGrid from '../TileGrid';\r\nimport Timer from '../Timer';\r\nimport TileGenerationBehavior from '../TileGenerationBehavior';\r\n\r\nexport default class extends Phaser.Scene {\r\n\r\n    constructor()\r\n    {\r\n        super('RoundScene');\r\n\r\n        this.isAwaitingRoundTransition = false;\r\n\r\n        this.score = null;\r\n        this.queue = null;\r\n        this.selectedTiles = null;\r\n        this.tileGrid = null;\r\n        this.scoreDisplay = null;\r\n        this.timer = null;\r\n \r\n        this.guide = null;\r\n        this.level = null;\r\n\r\n        this.comboCount = null;\r\n        this.totalMatches = null;\r\n    }\r\n\r\n    preload()\r\n    {\r\n        // Images: Tiles\r\n        this.load.image('tile_01', 'assets/tile_01.png');\r\n        this.load.image('tile_02', 'assets/tile_02.png');\r\n        this.load.image('tile_03', 'assets/tile_03.png');\r\n        this.load.image('tile_04', 'assets/tile_04.png');\r\n\r\n        // Images: Guide\r\n        this.load.image('guide_character', 'assets/guide.png');\r\n\r\n        // Images: Background\r\n        this.load.image('background', 'assets/background.png');\r\n    }\r\n\r\n    init(data)\r\n    {\r\n        this.level = data.level;\r\n    }\r\n\r\n    create()\r\n    {\r\n        this.isAwaitingRoundTransition = false;\r\n\r\n        this.score = 0;\r\n        this.comboCount = 0;\r\n        this.totalMatches = 0;\r\n\r\n        this.queue = new ActionQueue();\r\n\r\n        this.add.image(400, 400, 'background');\r\n\r\n        const tileGenerationBehavior = LevelManifest[this.level].behavior;\r\n\r\n        this.selectedTiles = [];\r\n        this.tileGrid = new TileGrid(6, 6, 80, 325, -265, this.onTileSelect, this.onTileMatch, tileGenerationBehavior, this.queue);\r\n        this.scoreDisplay = new ScoreDisplay(100, 580);\r\n\r\n        const timerSeconds = LevelManifest[this.level].timer;\r\n        this.timer = (timerSeconds > 0) ? new Timer(5, 570, timerSeconds) : null;\r\n\r\n        const dialogManager = new DialogManager();\r\n        const script = dialogManager.getScript(this.level);\r\n        this.guide = new Guide(20, 20, script);\r\n\r\n        this.tileGrid.create(this);\r\n        this.scoreDisplay.create(this);\r\n        this.timer && this.timer.create(this);\r\n        this.guide.create(this);\r\n\r\n        const self = this;\r\n        this.input.on('pointerdown', () => { self.guide.progressDialogue(); });\r\n    }\r\n\r\n    update()\r\n    {\r\n        if(this.isAwaitingRoundTransition)\r\n        {\r\n            if(!this.guide.isBlockingGameplay)\r\n            {\r\n                this.scene.start('RoundTransitionScene', { nextLevel: (this.level + 1) });\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        this.handleSpecialLevelBehavior();\r\n        \r\n        // Start the timer if the guide has stopped talking\r\n        if(!this.guide.isBlockingGameplay && this.timer && this.timer.isPaused)\r\n        {\r\n            this.timer.start();\r\n        }\r\n\r\n        // Have we run out of time?\r\n        if(this.timer != null && this.timer.seconds <= 0)\r\n        {\r\n            this.guide.displayGameOverMessage();\r\n            this.isAwaitingRoundTransition = true;\r\n            return;\r\n        }\r\n\r\n        if(this.isLevelComplete())\r\n        {\r\n            this.scene.start('RoundTransitionScene', { nextLevel: (this.level + 1) });\r\n            return;\r\n        }\r\n\r\n        // Are we currently executing a queued action?\r\n        if(this.queue.isActionRunning())\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Do we have any queued actions on the stack?\r\n        if(this.queue.hasActions())\r\n        {\r\n            this.queue.next();\r\n            return;\r\n        }\r\n\r\n        // If nothing's left in the queue, we can move the game's state forward\r\n        this.tileGrid.update(this);\r\n    }\r\n\r\n    onTileSelect(context, tile)\r\n    {\r\n        // Are we currently executing a queued action?\r\n        if(context.queue.isActionRunning())\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Is the guide currently blocking gameplay?\r\n        if(context.guide.isBlockingGameplay)\r\n        {\r\n            return;\r\n        }\r\n    \r\n        // Can we select this tile?\r\n        if(!context.tileGrid.canSelect(tile))\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Is this tile already selected?\r\n        if(tile.isActivated)\r\n        {\r\n            context.selectedTiles = [];\r\n            tile.deactivate();\r\n            return;\r\n        }\r\n    \r\n        if(context.selectedTiles.length === 0)\r\n        {\r\n            context.selectedTiles.push(tile);\r\n            tile.activate();\r\n            return;\r\n        }\r\n    \r\n        if(context.selectedTiles.length === 1)\r\n        {\r\n            const selectedTile = context.selectedTiles[0];\r\n            const xDiff = Math.abs(selectedTile.tileGridX - tile.tileGridX);\r\n            const yDiff = Math.abs(selectedTile.tileGridY - tile.tileGridY);\r\n    \r\n            if((xDiff === 1 && yDiff === 0) || (xDiff === 0 && yDiff === 1))\r\n            {\r\n                context.selectedTiles.push(tile);\r\n    \r\n                let firstSelectedTile = context.selectedTiles[0];\r\n                let secondSelectedTile = context.selectedTiles[1];\r\n    \r\n                context.tileGrid.swapTiles(context, firstSelectedTile, secondSelectedTile);\r\n    \r\n                context.queue.push(() => {\r\n    \r\n                    // If there are no matches, swap the tiles back\r\n                    if(\r\n                        !context.tileGrid.hasMatches(firstSelectedTile.tileGridX, firstSelectedTile.tileGridY) &&\r\n                        !context.tileGrid.hasMatches(secondSelectedTile.tileGridX, secondSelectedTile.tileGridY)\r\n                    )\r\n                    {\r\n                        context.tileGrid.swapTiles(context, firstSelectedTile, secondSelectedTile);\r\n                    }\r\n    \r\n                    return Promise.resolve();\r\n    \r\n                });\r\n    \r\n                context.selectedTiles.forEach((tile) => { tile.deactivate(); });\r\n                context.selectedTiles = [];\r\n                \r\n                context.comboCount = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    onTileMatch(context, matchedTiles)\r\n    {\r\n        context.comboCount++;\r\n        context.totalMatches++;\r\n\r\n        context.score += (matchedTiles.length * context.comboCount);\r\n        context.scoreDisplay.updateScore(context.score);\r\n\r\n        if(context.comboCount > 1)\r\n        {\r\n            context.scoreDisplay.updateCombo(`${context.comboCount}x multiplier!`);\r\n        }\r\n        else\r\n        {\r\n            context.scoreDisplay.updateCombo('');\r\n        }\r\n    }\r\n\r\n    isLevelComplete()\r\n    {\r\n        return this.score >= LevelManifest[this.level].score;\r\n    }\r\n\r\n    handleSpecialLevelBehavior()\r\n    {\r\n        const handler = LevelManifest[this.level].handler;\r\n        handler && handler({\r\n            tileGrid: this.tileGrid,\r\n            score: this.score,\r\n            level: this.level\r\n        });\r\n    }\r\n    \r\n}","export default class {\r\n\r\n    constructor()\r\n    {\r\n        this.queuedActions = [];\r\n        this.currentAction = null;\r\n    }\r\n\r\n    isActionRunning()\r\n    {\r\n        return this.currentAction != null;\r\n    }\r\n\r\n    hasActions()\r\n    {\r\n        return this.queuedActions.length > 0;\r\n    }\r\n\r\n    next()\r\n    {\r\n        this.currentAction = this.queuedActions.shift();\r\n        this.currentAction();\r\n    }\r\n\r\n    push(action)\r\n    {\r\n        var self = this;\r\n        self.queuedActions.push(() => { action().then(() => { self.currentAction = null; }) });\r\n    }\r\n\r\n}","export default class {\r\n\r\n    constructor(x, y)\r\n    {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.scoreText = null;\r\n        this.comboText = null;\r\n        this.score = 0;\r\n    }\r\n\r\n    create(context)\r\n    {\r\n        this.scoreText = context.add.text(this.x, this.y, this.score);\r\n        this.updateScore(this.score);\r\n\r\n        this.comboText = context.add.text(this.x, this.y + 20, '');\r\n    }\r\n\r\n    updateScore(score)\r\n    {\r\n        this.score = score;\r\n        this.scoreText.setText(score + ' dew drops');\r\n    }\r\n\r\n    updateCombo(text)\r\n    {\r\n        this.comboText.setText(text);\r\n    }\r\n}","export default class {\r\n\r\n    constructor(x, y, seconds)\r\n    {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.text = null;\r\n        this.seconds = seconds;\r\n        this.isPaused = true;\r\n    }\r\n\r\n    create(context)\r\n    {\r\n        this.text = context.add.text(this.x, this.y, this.score);\r\n        \r\n        this.tick();\r\n        context.time.addEvent({ delay: 1000, callback: this.tick, callbackScope: this, loop: true })\r\n    }\r\n\r\n    tick()\r\n    {\r\n        if(this.seconds <= 0 || this.isPaused)\r\n        {\r\n            return;\r\n        }\r\n\r\n        this.seconds--;\r\n\r\n        // Display the remaining time\r\n        const minutes = Math.floor(this.seconds / 60);\r\n\r\n        let seconds = (this.seconds % 60);\r\n        if(seconds < 10)\r\n        {\r\n            seconds = '0' + seconds;\r\n        }\r\n\r\n        this.text.setText(`${minutes}:${seconds}`);\r\n    }\r\n\r\n    start()\r\n    {\r\n        this.isPaused = false;\r\n    }\r\n}","import DialogScript from \"./DialogScript\";\r\n\r\nexport default class {\r\n\r\n    getScript(level)\r\n    {\r\n        const script = new DialogScript();\r\n\r\n        switch(level)\r\n        {\r\n            // Level 0 (Intro)\r\n            case 0:\r\n\r\n                script.introMessages = [\r\n                    `*Oh, doozle, you made it!* You're here! (Click or tap anywhere!)`,\r\n                    `The Dew Drop Kingdom is in trouble!`,\r\n                    `We lost all of our dew drops and now we'll starve!`,\r\n                    `But you can help us by collecting as many dew drops as you can!`,\r\n                    \"If you match three or more dew drops of the same color, we can collect them!\",\r\n                    \"To make a match, select two dew drops and swap their places!\"\r\n                ];\r\n\r\n                script.getDisplayTileMatchMessages = (data) => {\r\n\r\n                    if(data.totalMatches === 1)\r\n                    {\r\n                        return [\r\n                            \"You got it! That's it!\",\r\n                            \"You collect extra dew drops when you chain together matches in a combo!\",\r\n                            \"See if you can collect 100 dew drops!\"\r\n                        ];\r\n                    }\r\n\r\n                };\r\n\r\n                break;\r\n\r\n            // Level 1 (Timer Intro)\r\n            case 1:\r\n\r\n                script.introMessages = [\r\n                    \"*Oh, doozle!* You're so good at this!\",\r\n                    \"But, we'll have to hurry this time!\",\r\n                    \"We only have two minutes before the sun dries up all the dew drops!\",\r\n                    \"Collect at least 200 dew drops in two minutes!\"\r\n                ];\r\n\r\n                break;\r\n\r\n            // Level 2 (Breaking the Fourth Wall)\r\n            case 2:\r\n\r\n                script.introMessages = [\r\n                    \"Wow, we're so proud of you!\",\r\n                    \"This round you'll only have 30 seconds to collect at least 300 dew drops!\"\r\n                ];\r\n\r\n                script.getGameOverMessages = () => {\r\n                    return [\r\n                        \"Wait, wait, sorry, hold on.\",\r\n                        \"It's too early for the *\\\"Lose in a Panic\\\"* scenario.\",\r\n                        \"So sorry about that.\",\r\n                        \"You've been really great so far, honestly.\",\r\n                        \"You know, what, let's just go to the next round and we'll take it from the top.\"\r\n                    ];\r\n                };\r\n\r\n                break;\r\n\r\n            // Level 3 (Easy Win)\r\n            case 3:\r\n\r\n                script.introMessages = [\r\n                    \"Alright, I think we've got everything figured out.\",\r\n                    \"Okay, for this next round, let me set you up:\",\r\n                    \"Remember, you've been winning the last few rounds and you're gaining confidence.\",\r\n                    \"In this round, it's going to be easy for you to get combos.\",\r\n                    \"So the idea here is that you're going to get a little *too* confident, right?\",\r\n                    \"Like a little full of yourself, alright?\",\r\n                    \"Okay, great! Let's do this:\",\r\n                    \"...\",\r\n                    \"*Oh doozle woozle!*\",\r\n                    \"You're so amazing!\",\r\n                    \"You have two minutes again, but this time you'll have to collect 300 dew drops.\",\r\n                    \"Can you do it?\",\r\n                    \"Who am I kidding? Of course you can!\"\r\n                ];\r\n\r\n                break;\r\n\r\n            // Level 4 (Losing Confidence)\r\n            case 4:\r\n\r\n                script.introMessages = [\r\n                    \"Okay, okay, great stuff.\",\r\n                    \"For this round, you're bringing all of that pride, all of that hubris.\",\r\n                    \"And, when the round starts, things are still going your way.\",\r\n                    \"But guess what?\",\r\n                    \"Halfway through this round, things start getting a little harder.\",\r\n                    \"So this is where we begin to chip away at your pride as the player.\",\r\n                    \"Alright, that's your set up: now let me get into the right headspace.\",\r\n                    \"...oh doozle woo-\",\r\n                    \"...no, no, it's doozy-woozy here...\",\r\n                    \"...yeah, doozy-woozy, you're our hero, blah, blah...\",\r\n                    \"Alright! Got it!\",\r\n                    \"...\",\r\n                    \"*Doozy-woozy!*\",\r\n                    \"You're our hero!\",\r\n                    \"You've done so much for us, but we still need your help!\",\r\n                    \"We need you to collect 500 dew drops in five minutes!\" \r\n                ];\r\n\r\n                break;\r\n\r\n            // Level 5 (Fall From Grace)\r\n            case 5:\r\n\r\n                script.introMessages = [\r\n                    \"Wow, such moving work.\",\r\n                    \"It really feels so authentic.\",\r\n                    \"It's been a joy working with you.\",\r\n                    \"Okay, here we go, this is a pivotal scene:\",\r\n                    \"This round will not go your way at all. At all.\",\r\n                    \"This is your fall from grace.\",\r\n                    \"(Ahem)\",\r\n                    \"...\",\r\n                    \"*Doozle!*\",\r\n                    \"*Woozle!*\",\r\n                    \"I can't believe you did it!\",\r\n                    \"We've got a bigger challenge ahead, but I know you can do it!\",\r\n                    \"You can do anything!\",\r\n                    \"We need you to collect 1000 dew drops in five minutes!\"\r\n                ];\r\n\r\n                break;\r\n\r\n            // Level 6 (Wallowing)\r\n            case 6:\r\n\r\n                script.introMessages = [\r\n                    \"Okay, let's move right into the next scene:\",\r\n                    \"Here, you are wallowing, right?\",\r\n                    \"You are in the pit of despair and you can't see a way out.\",\r\n                    \"This round won't be particularly hard, but you can't seem to find any matches.\",\r\n                    \"Got it?\",\r\n                    \"Alright, great: let me find my place here...\",\r\n                    \"Yes, okay, I believed in you, but now my faith is faltering...\",\r\n                    \"I'm keeping a brave face, but I'm really starting to lose confidence...\",\r\n                    \"Okay, I'm ready!\",\r\n                    \"...\",\r\n                    \"Oh no!\",\r\n                    \"*Whoopsie whoozle!*\",\r\n                    \"Don't worry, that was a tough one!\",\r\n                    \"Let's try again! I know you can do it!\",\r\n                    \"We need you to collect 1000 dew drops in five minutes!\"\r\n                ];\r\n\r\n                script.getDisplayTileMatchMessages = (data) => {\r\n\r\n                    return [\r\n                        \"(Oh, hey: remember, you're not going to find any matches this round)\"\r\n                    ];\r\n\r\n                };\r\n\r\n                break;\r\n\r\n            // Level 7 (Pheonix Rises)\r\n            case 7:\r\n\r\n                script.introMessages = [\r\n                    \"Now, you've been wallowing. You've feeling really low.\",\r\n                    \"You're in such despair, that in this round...\",\r\n                    \"There's an obvious combo.\",\r\n                    \"Right there, right in front of your face.\",\r\n                    \"But you can't see it through the despair.\",\r\n                    \"But then, in the last ten seconds of the round, you see it.\",\r\n                    \"Boom, it's the perfect match.\",\r\n                    \"And the pheonix rises once again!\"\r\n                ];\r\n\r\n                break;\r\n\r\n            // Level 8 (Victory Lap)\r\n            case 8:\r\n\r\n                script.introMessages = [\r\n                    \"Our hero is back!\",\r\n                    \"This final scene is our victory lap.\",\r\n                    \"However, we don't want too many combos in this round, right?\",\r\n                    \"This is a round the player wins on their own.\",\r\n                    \"No assistance from the game.\",\r\n                    \"A true hero's victory!\",\r\n                    \"Alright, let's do this: I've got an appointment after this.\"\r\n                ];\r\n\r\n                break;\r\n\r\n        }\r\n\r\n        return script;\r\n    }\r\n\r\n}","export default class {\r\n\r\n    constructor()\r\n    {\r\n        this.introMessages = [];\r\n        this.getDisplayTileMatchMessages = () => {};\r\n    }\r\n}","import TagText from 'phaser3-rex-plugins/plugins/tagtext.js';\r\nimport TextTyping from 'phaser3-rex-plugins/plugins/texttyping.js';\r\n\r\nexport default class {\r\n\r\n    constructor(x, y, script)\r\n    {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.script = script;\r\n\r\n        this.queuedMessages = null;\r\n        this.isPaused = false;\r\n        this.isBlockingGameplay = false;\r\n\r\n        this.endDialogueMarkerGraphics = null;\r\n    }\r\n\r\n    create(context)\r\n    {\r\n        const self = this;\r\n\r\n        const speechBubbleWidth = 760;\r\n        const speechBubbleHeight = 130;\r\n\r\n        const endDialogueMarkerRadius = 10;\r\n        \r\n        const characterWidth = 250;\r\n        const characterHeight = 500;\r\n\r\n        const speechBubbleIntroOffset = 40;\r\n\r\n        // Speech Bubble\r\n        const speechBubbleGraphics = context.add.graphics({ fillStyle: { color: 0xffffff } }).setAlpha(0);\r\n        speechBubbleGraphics.fillRoundedRect(this.x, this.y - speechBubbleIntroOffset, speechBubbleWidth, speechBubbleHeight, 10);\r\n        speechBubbleGraphics.fillTriangle(\r\n            this.x + 120, this.y + speechBubbleHeight + 20 - speechBubbleIntroOffset,\r\n            this.x + 105, this.y + speechBubbleHeight - speechBubbleIntroOffset,\r\n            this.x + 135, this.y + speechBubbleHeight - speechBubbleIntroOffset\r\n        );\r\n\r\n        // End Dialogue Marker\r\n        this.endDialogueMarkerGraphics = context.add.graphics({ fillStyle: { color: 0xcccccc } });\r\n        this.hideEndDialogueMarker();\r\n        const endDialogueMarker = new Phaser.Geom.Circle(\r\n            this.x + speechBubbleWidth - endDialogueMarkerRadius - 15,\r\n            this.y + speechBubbleHeight - endDialogueMarkerRadius - 15,\r\n            endDialogueMarkerRadius);\r\n        this.endDialogueMarkerGraphics.fillCircleShape(endDialogueMarker);\r\n\r\n        context.tweens.add({\r\n            targets: this.endDialogueMarkerGraphics,\r\n            alpha: 0,\r\n            duration: 500,\r\n            repeat: -1,\r\n            yoyo: true\r\n        });\r\n\r\n        // Speech Bubble Text\r\n        const speechBubbleTextStyle = {\r\n            color: '#000',\r\n            fontFamily: '\"Baloo Thambi 2\"',\r\n            fontSize: '30px',\r\n            wrap: {\r\n                mode: 'word',\r\n                width: speechBubbleWidth\r\n            },\r\n            tags: {\r\n                exclamation: {\r\n                    fontStyle: 'bold'\r\n                }\r\n            }\r\n        };\r\n        \r\n        this.speechBubbleText = new TagText(context, this.x + 15, this.y + 15, '', speechBubbleTextStyle);\r\n        context.add.existing(this.speechBubbleText);\r\n\r\n        // Speech Bubble Text Typing\r\n        this.speechBubbleTextTyping = new TextTyping(this.speechBubbleText, { speed: 30 }); \r\n        this.speechBubbleTextTyping.on('complete', () => { self.onMessageComplete.call(self) });\r\n\r\n        // Character\r\n        context.add.image(this.x + (characterWidth/2), this.y + speechBubbleHeight + 230, 'guide_character');\r\n\r\n        // Speech Bubble Intro Animation\r\n        context.tweens.add({\r\n            targets: speechBubbleGraphics,\r\n            props: {\r\n                y: { value: `+=${speechBubbleIntroOffset}`, duration: 500, ease: 'Bounce.easeOut' },\r\n                alpha: { value: 1, duration: 300, ease: 'Linear' }\r\n            },\r\n            onComplete: () => {\r\n                self.queueMessages(context, this.script.introMessages);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    queueMessages(context, messages)\r\n    {\r\n        if(!messages)\r\n        {\r\n            return;\r\n        }\r\n\r\n        const self = this;\r\n\r\n        if(self.queuedMessages === null)\r\n        {\r\n            self.queuedMessages = [];\r\n        }\r\n\r\n        self.queuedMessages.push(...messages);\r\n\r\n        if(self.speechBubbleTextTyping.isTyping)\r\n        {\r\n            return;\r\n        }\r\n\r\n        self.isBlockingGameplay = true;\r\n        self.progressDialogue();\r\n    }\r\n\r\n    onMessageComplete()\r\n    {\r\n        this.showEndDialogueMarker();\r\n        if(this.queuedMessages.length === 0)\r\n        {\r\n            this.isBlockingGameplay = false;\r\n            return;\r\n        }\r\n    }\r\n\r\n    displayTileMatchMessage(context, data)\r\n    {\r\n        const messages = this.script.getDisplayTileMatchMessages(data);\r\n        this.queueMessages(context, messages);\r\n    }\r\n\r\n    displayGameOverMessage(context)\r\n    {\r\n        const messages = this.script.getGameOverMessages();\r\n\r\n        // Push in a placeholder message to force players to confirm the last\r\n        // message in the \"Game Over\" queue\r\n        messages.push(' ');\r\n\r\n        this.queueMessages(context, messages);\r\n    }\r\n\r\n    progressDialogue()\r\n    {\r\n        this.hideEndDialogueMarker();\r\n        if(this.queuedMessages.length > 0)\r\n        {\r\n            const message = this.convertDialogToTagText(this.queuedMessages.shift());\r\n            this.speechBubbleTextTyping.start(message);\r\n        }\r\n    }\r\n\r\n    showEndDialogueMarker()\r\n    {\r\n        this.endDialogueMarkerGraphics.setVisible(true);\r\n    }\r\n\r\n    hideEndDialogueMarker()\r\n    {\r\n        this.endDialogueMarkerGraphics.setVisible(false);\r\n    }\r\n\r\n    convertDialogToTagText(input)\r\n    {\r\n        const styles = [\r\n            { token: '*', className: 'exclamation' },\r\n            { token: '_', className: 'underline'}\r\n        ];    \r\n\r\n        let output = '';\r\n        let currClass = '';\r\n    \r\n        for(let i=0; i<input.length; i++)\r\n        {\r\n            const currChar = input[i];\r\n            const isStyleToken = styles.some(style => style.token === currChar);\r\n    \r\n            // If the first character isn't a style token, then\r\n            // we need to open a \"normal\" class tag\r\n            if(i === 0 && !isStyleToken)\r\n            {\r\n                output += '<class=\"normal\">';\r\n                currClass = 'normal';\r\n            }\r\n    \r\n            // If the last character is a style token, we ignore it\r\n            // since we'll always end with a closing class tag anyway\r\n            if(i === input.length - 1 && isStyleToken)\r\n            {\r\n                continue;\r\n            }\r\n    \r\n            if(isStyleToken)\r\n            {\r\n                const targetStyle = styles.find(style => style.token === currChar);\r\n    \r\n                // If we've encountered a token of the class we already have open,\r\n                // that means we need to close the class\r\n                if(currClass === targetStyle.className)\r\n                {\r\n                    output += '</class>';\r\n                    output += '<class=\"normal\">';\r\n                    currClass = 'normal';\r\n                }\r\n    \r\n                // Otherwise, we need to close the existing the class and\r\n                // open the new class\r\n                else\r\n                {\r\n                    if(i !== 0)\r\n                    {\r\n                        output += '</class>';\r\n                    }\r\n    \r\n                    output += `<class=\"${targetStyle.className}\">`;\r\n                    currClass = targetStyle.className;\r\n                }\r\n            }\r\n            else\r\n            {\r\n                output += input[i];\r\n            }\r\n        }\r\n    \r\n        output += '</class>';\r\n        return output;\r\n    }\r\n}","export default class extends Phaser.Scene {\r\n\r\n    constructor()\r\n    {\r\n        super('RoundTransitionScene');\r\n\r\n        this.nextLevel = 0;\r\n    }\r\n\r\n    init(data)\r\n    {\r\n        this.nextLevel = data.nextLevel;\r\n    }\r\n\r\n    create()\r\n    {\r\n        const self = this;\r\n\r\n        // Title\r\n        this.add.text(50, 50, `Round ${self.nextLevel}`);\r\n\r\n        this.time.addEvent({ delay: 1000, callback: function() { self.scene.start('RoundScene', { level: self.nextLevel }) }, callbackScope: this })\r\n    }\r\n    \r\n}","import TitleScene from './scenes/TitleScene';\r\nimport RoundScene from './scenes/RoundScene';\r\nimport RoundTransitionScene from './scenes/RoundTransitionScene';\r\n\r\nconst config = {\r\n    type: Phaser.AUTO,\r\n    width: 800,\r\n    height: 700,\r\n    scene: [TitleScene, RoundScene, RoundTransitionScene]\r\n};\r\n\r\nconst game = new Phaser.Game(config);"],"sourceRoot":""}