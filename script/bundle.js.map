{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/render/WebGLRenderer.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/render/CanvasRenderer.js","webpack:///./script/scenes/TitleScene.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/render/Render.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/textstyle/MeasureText.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/const.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/textstyle/TextStyle.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/canvastext/DrawMethods.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/struct/Stack.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/pool.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/penmanger/Pen.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/object/Clear.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/object/Clone.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/object/NOOP.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/penmanger/PenManager.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/hitareamanager/HitAreaManager.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/canvastext/SetInteractive.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/canvastext/WrapText.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/canvastext/CanvasText.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/imagemanager/ImageManager.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/imagemanager/GetGlobImageManager.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/Text.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/tagtext/Parser.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/tagtext/TagText.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/tagtext/Creator.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/tagtext.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/tagtext/Factory.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/eventemitter/EventEmitterMethods.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/system/IsSceneObject.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/system/GetSceneObject.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/behaviors/texttyping/TextTyping.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/texttyping.js","webpack:///./script/TileGenerationBehavior.js","webpack:///./script/TileState.js","webpack:///./script/LevelManifest.js","webpack:///./script/Utility.js","webpack:///./script/TileType.js","webpack:///./script/TileGrid.js","webpack:///./script/Tile.js","webpack:///./script/scenes/RoundScene.js","webpack:///./script/ActionQueue.js","webpack:///./script/ScoreDisplay.js","webpack:///./script/Timer.js","webpack:///./script/DialogManager.js","webpack:///./script/DialogScript.js","webpack:///./script/Guide.js","webpack:///./script/main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Utils","Phaser","Renderer","WebGL","renderer","src","interpolationPercentage","camera","parentMatrix","width","height","frame","getTint","getTintAppendFloatAlpha","this","pipeline","batchTexture","glTexture","x","y","style","resolution","scaleX","scaleY","rotation","flipX","flipY","scrollFactorX","scrollFactorY","displayOriginX","displayOriginY","_tintTL","alpha","_alphaTL","_tintTR","_alphaTR","_tintBL","_alphaBL","_tintBR","_alphaBR","_isTinted","tintFill","batchSprite","super","load","image","self","add","flashBackdropGraphics","graphics","fillStyle","color","setAlpha","flashBackdrop","Geom","Rectangle","fillRectShape","tileInfos","push","imageKey","xChange","yChange","angle","scale","forEach","tileInfo","tile","setScale","title","startBtn","setInteractive","cursor","startBtnFlash","setTintFill","startBtnOverlay","on","tweens","targets","duration","ease","scene","transition","target","data","level","remove","introTimeline","createTimeline","delay","offset","play","renderWebGL","renderCanvas","CanvasPool","Display","Canvas","textStyle","canvas","context","getContext","syncFont","Math","ceil","measureText","testString","baselineX","baseline","baselineY","fillRect","font","_font","textBaseline","fillText","output","ascent","descent","fontSize","getImageData","j","imagedata","pixels","length","line","idx","stop","NO_NEWLINE","RAW_NEWLINE","WRAPPED_NEWLINE","NO_WRAP","WORD_WRAP","CHAR_WRAP","SPLITREGEXP","GetAdvancedValue","Objects","GetValue","propertyMap","backgroundColor","fontFamily","fontStyle","stroke","strokeThickness","shadowOffsetX","shadowOffsetY","shadowColor","shadowBlur","shadowStroke","shadowFill","underlineColor","underlineThickness","underlineOffset","halign","valign","maxLines","fixedWidth","fixedHeight","lineSpacing","rtl","wrapMode","wrapWidth","WRAPMODE","none","word","char","character","text","parent","setStyle","metrics","updateText","undefined","wrap","toString","fill","update","strokeStyle","lineWidth","lineCap","lineJoin","enabled","recalculateMetrics","newFont","family","size","string","thickness","blur","toLowerCase","max","getTextMetrics","startX","startY","boxWidth","boxHeight","penManager","hitAreaManager","clear","save","drawBackground","defatultStyle","startXOffset","startYOffset","drawLinesNum","drawLineStartIdx","drawLineEndIdx","offsetX","offsetY","lineHeight","lines","totalLinesNum","floor","lineIdx","getLineWidth","pens","penIdx","pensLen","drawPen","restore","pen","curStyle","parser","propToContextStyle","prop","buildFont","syncStyle","drawUnderline","isTextPen","drawText","isImagePen","drawImage","img","hasAreaMarker","area","clearRect","autoRound","round","savedLineCap","beginPath","moveTo","lineTo","syncShadow","strokeText","imgKey","imageManager","imgData","getFrame","left","source","cutX","cutY","cutWidth","cutHeight","items","pop","arr","apply","config","resetFromJSON","newLineMode","startIndex","txt","len","rawTextLength","obj","Array","isArray","out","objIsArray","cnt","GetFastValue","PensPool","LinesPool","maxLinesWidth","tagToText","tagToTextScope","freePens","pushMultiple","PEN_CONFIG","addPen","addTextPen","previousPen","lastPen","lastX","endIndex","lastLine","targetPenManager","li","llen","pi","plen","getLineEndIndex","hasLastPen","w","maxW","result","plainText","start","end","penTxt","penStartIdx","penEndIdx","currentProp","previousProp","wrapText","substring","RectanglePool","hitAreas","rectangle","setTo","hitArea","contains","scaleCanvas","rotateCanvas","translateCanvas","lineStyle","strokeRect","FireEvent","eventName","pointer","localX","localY","getFirstHitArea","emit","event","splitRegExp","WRAP_RESULT","newline","getTextWidth","retLines","remainWidth","split","linesLen","tokenArray","token","textWidth","currLineWidth","curLineText","lineText","tokenLen","pensPool","newPenManager","_tmpPenManager","destroy","curProp","wrapLines","cursorX","cursorY","match","splitText","tagTextToProp","imgWidth","getOuterWidth","addNewLinePen","addImagePen","jLen","linesCount","getMaxLineWidth","desplayLinesCount","linesHeight","propToTagText","retPenManager","copyPenManager","updatePenManager","getSliceTagText","tmpPenManager","ret","copy","methods","assign","DrawMethods","globImageManager","textureManager","images","_add","textureKey","frameKey","frameWidth","frameHeight","right","exists","AddToDOM","DOM","GameObject","GameObjects","RemoveFromDOM","PensPools","type","sys","game","setPosition","setOrigin","initPipeline","align","_text","padding","top","bottom","dirty","_crop","resetCropObject","texture","textures","addCanvas","gl","deleteTexture","canvasText","setPadding","setText","events","dir","direction","display","originX","join","setFont","setFontFamily","setFontSize","setFontStyle","setFixedSize","setBackgroundColor","setFill","setColor","setStroke","setShadow","setShadowOffset","setShadowColor","setShadowBlur","setShadowStroke","setShadowFill","setWrapMode","setWrapWidth","setHAlign","setLineSpacing","setResolution","setMaxLines","runWrap","textHeight","linesWidth","h","updateDisplayOrigin","setSize","draw","canvasToTexture","input","customHitArea","Components","ToJSON","toJSON","shape","callback","dropZone","getText","getPlainText","getPenManager","drawBounds","Class","mixin","Alpha","BlendMode","ComputedSize","Crop","Depth","Flip","GetBounds","Mask","Origin","Pipeline","ScrollFactor","Tint","Transform","Visible","Render","GETPROP_RESULT","prevProp","STYLE_RESULT","styleToProp","k","v","slen","isEmpty","thinkness","parseInt","replace","shadow","u","RE_SPACE","RE_SPLITTEXT","RE_CLASS_HEADER","RE_CLASS","RE_STYLE_HEADER","RE_STYLE","tags","innerMatch","charIdx","totalLen","matchStart","exec","lastIndex","test","propOut","_class","_style","defaultStyle","underline","isTextTag","tagName","tag","Parser","addTag","preDestroy","BuildGameObject","GameObjectFactory","register","gameObject","existing","GameObjectCreator","content","addToScene","eventEmitter","EventEmitterClass","Events","EventEmitter","_privateEE","_eventEmitter","shutdown","arguments","once","off","addListener","removeListener","removeAllListeners","listenerCount","listeners","SceneClass","Scene","setEventEmitter","timer","boot","setTypeMode","setTypeSpeed","setTextCallback","setTextCallbackScope","typingIdx","transferText","textLen","insertIdx","elapsed","getTimer","typeMode","speed","destroyEventEmitter","freeTimer","TYPEMODE","startIdx","timerStartAt","setTypingContent","startTimer","newText","concat","isTyping","showAllText","paused","getTextLength","getTypingString","isLastChar","typeIdx","endIdx","getSubString","midIdx","lowerResult","lowerLen","upperResult","upperLen","startAt","time","addEvent","loop","onTyping","callbackScope","slice","EventEmitterMethods","score","behavior","TileGenerationBehavior","handler","state","tileGrid","LevelManifest","tileGenerationBehavior","getRandomItem","random","tileGridWidth","tileGridHeight","tileSize","onTileSelect","onTileMatch","queue","isBlocked","tileImageContainer","playAreaOffset","createTile","getTileType","container","forEachTile","maskShape","make","mask","Masks","GeometryMask","matchedTiles","getMatches","destroys","Promise","all","TileState","drops","closestY","closestTile","getTileDrop","forEachPlayableTile","adjustedY","firstTile","secondTile","firstTileX","firstTileY","firstTileGridX","tileGridX","firstTileGridY","tileGridY","secondTileX","secondTileY","secondTileGridX","secondTileGridY","firstSwap","updatePosition","secondSwap","targetGridX","targetGridY","isPlayable","targetTileType","tileType","matchedXTiles","matchedYTiles","currX","currTile","currY","isActivated","isDestroying","clearTint","resolve","reject","onComplete","fadeOutCover","particleGraphics","explodeParticleGraphics","explodeParticle","Circle","Between","fillCircleShape","index","xSign","ySign","getTileX","getTileY","aboveTile","belowTile","leftTile","rightTile","TileType","filter","map","block","unblock","isAwaitingRoundTransition","isReadyForRoundTransition","selectedTiles","scoreDisplay","guide","comboCount","totalMatches","queuedActions","currentAction","shift","action","then","TileGrid","scoreText","comboText","fillRoundedRect","updateScore","timerSeconds","seconds","isPaused","tick","minutes","script","introMessages","getDisplayTileMatchMessages","getGameOverMessages","getScript","queuedMessages","isBlockingGameplay","endDialogueMarkerGraphics","speechBubbleGraphics","fillTriangle","hideEndDialogueMarker","endDialogueMarker","repeat","yoyo","speechBubbleTextStyle","exclamation","speechBubbleText","speechBubbleTextTyping","onMessageComplete","characterImage","characterWidth","props","queueMessages","messages","progressDialogue","showEndDialogueMarker","message","convertDialogToTagText","setVisible","styles","className","currClass","currChar","isStyleToken","some","targetStyle","find","handleSpecialLevelBehavior","displayGameOverMessage","isLevelComplete","endLevel","isActionRunning","hasActions","next","nextLevel","canSelect","deactivate","activate","selectedTile","xDiff","abs","yDiff","firstSelectedTile","secondSelectedTile","swapTiles","hasMatches","updateCombo","console","log","restart","AUTO","TitleScene","RoundScene","Game"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Utils = Phaser.Renderer.WebGL.Utils;\r\n\r\n/**\r\n * Renders this Game Object with the WebGL Renderer to the given Camera.\r\n * The object will not render if any of its renderFlags are set or it is being actively filtered out by the Camera.\r\n * This method should not be called directly. It is a utility function of the Render module.\r\n *\r\n * @method Phaser.GameObjects.Text#renderWebGL\r\n * @since 3.0.0\r\n * @private\r\n *\r\n * @param {Phaser.Renderer.WebGL.WebGLRenderer} renderer - A reference to the current active WebGL renderer.\r\n * @param {Phaser.GameObjects.Text} src - The Game Object being rendered in this call.\r\n * @param {number} interpolationPercentage - Reserved for future use and custom pipelines.\r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The Camera that is rendering the Game Object.\r\n * @param {Phaser.GameObjects.Components.TransformMatrix} parentMatrix - This transform matrix is defined if the game object is nested\r\n */\r\nvar TextWebGLRenderer = function (renderer, src, interpolationPercentage, camera, parentMatrix) {\r\n    if ((src.width === 0) || (src.height === 0)) {\r\n        return;\r\n    }\r\n\r\n    var frame = src.frame;\r\n    var width = frame.width;\r\n    var height = frame.height;\r\n    var getTint = Utils.getTintAppendFloatAlpha;\r\n\r\n    this.pipeline.batchTexture(\r\n        src,\r\n        frame.glTexture,\r\n        width, height,\r\n        src.x, src.y,\r\n        width / src.style.resolution, height / src.style.resolution,\r\n        src.scaleX, src.scaleY,\r\n        src.rotation,\r\n        src.flipX, src.flipY,\r\n        src.scrollFactorX, src.scrollFactorY,\r\n        src.displayOriginX, src.displayOriginY,\r\n        0, 0, width, height,\r\n        getTint(src._tintTL, camera.alpha * src._alphaTL),\r\n        getTint(src._tintTR, camera.alpha * src._alphaTR),\r\n        getTint(src._tintBL, camera.alpha * src._alphaBL),\r\n        getTint(src._tintBR, camera.alpha * src._alphaBR),\r\n        (src._isTinted && src.tintFill),\r\n        0, 0,\r\n        camera,\r\n        parentMatrix\r\n    );\r\n};\r\n\r\nmodule.exports = TextWebGLRenderer;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Renders this Game Object with the Canvas Renderer to the given Camera.\r\n * The object will not render if any of its renderFlags are set or it is being actively filtered out by the Camera.\r\n * This method should not be called directly. It is a utility function of the Render module.\r\n *\r\n * @method Phaser.GameObjects.Text#renderCanvas\r\n * @since 3.0.0\r\n * @private\r\n *\r\n * @param {Phaser.Renderer.Canvas.CanvasRenderer} renderer - A reference to the current active Canvas renderer.\r\n * @param {Phaser.GameObjects.Text} src - The Game Object being rendered in this call.\r\n * @param {number} interpolationPercentage - Reserved for future use and custom pipelines.\r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The Camera that is rendering the Game Object.\r\n * @param {Phaser.GameObjects.Components.TransformMatrix} parentMatrix - This transform matrix is defined if the game object is nested\r\n */\r\nvar TextCanvasRenderer = function (renderer, src, interpolationPercentage, camera, parentMatrix) {\r\n    if ((src.width === 0) || (src.height === 0)) {\r\n        return;\r\n    }\r\n\r\n    renderer.batchSprite(src, src.frame, camera, parentMatrix);\r\n};\r\n\r\nmodule.exports = TextCanvasRenderer;\r\n","export default class extends Phaser.Scene {\r\n\r\n    constructor()\r\n    {\r\n        super('TitleScene');\r\n    }\r\n\r\n    preload()\r\n    {\r\n        this.load.image('background', 'assets/background.png');\r\n        this.load.image('title', 'assets/title.png');\r\n        this.load.image('start', 'assets/start.png');\r\n        this.load.image('start-active', 'assets/start_active.png');\r\n        this.load.image('tile_01', 'assets/tile_01.png');\r\n        this.load.image('tile_02', 'assets/tile_02.png');\r\n        this.load.image('tile_03', 'assets/tile_03.png');\r\n        this.load.image('tile_04', 'assets/tile_04.png');\r\n    }\r\n\r\n    create()\r\n    {\r\n        const self = this;\r\n\r\n        // Background\r\n        this.add.image(400, 400, 'background');\r\n\r\n        // Flash Backdrop\r\n        const flashBackdropGraphics = this.add.graphics({ fillStyle: { color: 0xffffff } });\r\n        flashBackdropGraphics.setAlpha(0);\r\n        const flashBackdrop = new Phaser.Geom.Rectangle(0, 0, 800, 700);\r\n        flashBackdropGraphics.fillRectShape(flashBackdrop);\r\n\r\n        // Tile\r\n        const tileInfos = [];\r\n        tileInfos.push({ imageKey: 'tile_01', xChange: '+=180', yChange: '+=180', angle: 15, scale: 0.8 });\r\n        tileInfos.push({ imageKey: 'tile_02', xChange: '+=200', yChange: '-=180', angle: 15, scale: 1 });\r\n        tileInfos.push({ imageKey: 'tile_03', xChange: '-=180', yChange: '+=180', angle: -15, scale: 0.9 });\r\n        tileInfos.push({ imageKey: 'tile_04', xChange: '-=200', yChange: '-=180', angle: -5, scale: 0.8 });\r\n        tileInfos.push({ imageKey: 'tile_01', xChange: '+=0', yChange: '-=180', angle: -15, scale: 0.7 });\r\n        tileInfos.push({ imageKey: 'tile_02', xChange: '+=0', yChange: '+=180', angle: -15, scale: 1 });\r\n        tileInfos.push({ imageKey: 'tile_03', xChange: '+=290', yChange: '+=30', angle: 15, scale: 0.8 });\r\n        tileInfos.push({ imageKey: 'tile_01', xChange: '-=290', yChange: '+=40', angle: -15, scale: 0.9 });\r\n\r\n        tileInfos.forEach(tileInfo => {\r\n            tileInfo.tile = self.add.image(400, 230, tileInfo.imageKey);\r\n            tileInfo.tile.setAlpha(0);\r\n            tileInfo.tile.setScale(0.5, 0.5);\r\n        });\r\n\r\n        // Title\r\n        const title = this.add.image(400, 230, 'title');\r\n        title.setAlpha(0);\r\n        title.setScale(2, 2);\r\n\r\n        const startBtn = this.add.image(400, 550, 'start');\r\n        startBtn.setInteractive({ cursor: 'pointer' });\r\n        startBtn.setAlpha(0);\r\n\r\n        const startBtnFlash = this.add.image(400, 550, 'start');\r\n        startBtnFlash.setAlpha(0);\r\n        startBtnFlash.setTintFill(0xffffff);\r\n\r\n        const startBtnOverlay = this.add.image(400, 550, 'start-active');\r\n        startBtnOverlay.setAlpha(0);\r\n\r\n        startBtn.on('pointerover', () => {\r\n            self.tweens.add({\r\n                targets: startBtnOverlay,\r\n                alpha: 1,\r\n                duration: 100,\r\n                ease: 'Sine.easeInOut'\r\n            });\r\n        });\r\n\r\n        startBtn.on('pointerout', () => {\r\n            self.tweens.add({\r\n                targets: startBtnOverlay,\r\n                alpha: 0,\r\n                duration: 100,\r\n                ease: 'Sine.easeInOut'\r\n            });\r\n        });\r\n\r\n        startBtn.on('pointerdown', () => {\r\n            self.scene.transition({ target: 'RoundScene', data: { level: 0 }, remove: true });\r\n        });\r\n\r\n        // Intro Timeline\r\n        const introTimeline = this.tweens.createTimeline();\r\n\r\n        // Slam in the title\r\n        introTimeline.add({\r\n            delay: 400,\r\n            targets: title,\r\n            alpha: 1,\r\n            scaleX: 1,\r\n            scaleY: 1,\r\n            duration: 500,\r\n            ease: 'Quad.easeIn'\r\n        });\r\n\r\n        // Fling the tiles from the impact of the title slam\r\n        tileInfos.forEach((tileInfo, i) => {\r\n            introTimeline.add({\r\n                targets: tileInfo.tile,\r\n                x: tileInfo.xChange,\r\n                y: tileInfo.yChange,\r\n                scaleX: 1,\r\n                scaleY: 1,\r\n                alpha: 1,\r\n                scaleX: tileInfo.scale,\r\n                scaleY: tileInfo.scale,\r\n                angle: tileInfo.angle,\r\n                duration: 300,\r\n                ease: 'Quad.easeOut',\r\n                offset: (i === 0) ? '-=0' : '-=300'\r\n            });\r\n        });\r\n\r\n        // Display the flash from the title slam\r\n        introTimeline.add({\r\n            targets: flashBackdropGraphics,\r\n            alpha: 1,\r\n            duration: 30,\r\n            offset: '-=300'\r\n        });\r\n\r\n        // Fade out the flash from the title slam\r\n        introTimeline.add({\r\n            targets: flashBackdropGraphics,\r\n            alpha: 0,\r\n            duration: 700,\r\n            offset: 1500,\r\n            ease: 'Quad.easeIn'\r\n        });\r\n\r\n        // Flash in the start button\r\n        introTimeline.add({\r\n            targets: [ startBtn, startBtnFlash ],\r\n            alpha: 1,\r\n            offset: 2200,\r\n            duration: 100\r\n        });\r\n\r\n        // Fade out the start button flash effect\r\n        introTimeline.add({\r\n            targets: startBtnFlash,\r\n            alpha: 0,\r\n            duration: 300,\r\n            offset: 2300,\r\n            ease: 'Quad.easeOut'\r\n        });\r\n\r\n        introTimeline.play();\r\n    }\r\n    \r\n}","import WebGLRenderer from './WebGLRenderer.js';\r\nimport CanvasRenderer from './CanvasRenderer.js';\r\n\r\nexport default {\r\n    renderWebGL: WebGLRenderer,\r\n    renderCanvas: CanvasRenderer\r\n\r\n};","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nconst CanvasPool = Phaser.Display.Canvas.CanvasPool;\r\n\r\n/**\r\n * Calculates the ascent, descent and fontSize of a given font style.\r\n *\r\n * @function Phaser.GameObjects.Text.MeasureText\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.GameObjects.Text.TextStyle} textStyle - The TextStyle object to measure.\r\n *\r\n * @return {object} An object containing the ascent, descent and fontSize of the TextStyle.\r\n */\r\nvar MeasureText = function (textStyle) {\r\n    // @property {HTMLCanvasElement} canvas - The canvas element that the text is rendered.\r\n    var canvas = CanvasPool.create(this);\r\n\r\n    // @property {HTMLCanvasElement} context - The context of the canvas element that the text is rendered to.\r\n    var context = canvas.getContext('2d');\r\n\r\n    textStyle.syncFont(canvas, context);\r\n\r\n    var width = Math.ceil(context.measureText(textStyle.testString).width * textStyle.baselineX);\r\n    var baseline = width;\r\n    var height = 2 * baseline;\r\n\r\n    baseline = baseline * textStyle.baselineY | 0;\r\n\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n\r\n    context.fillStyle = '#f00';\r\n    context.fillRect(0, 0, width, height);\r\n\r\n    context.font = textStyle._font;\r\n\r\n    context.textBaseline = 'alphabetic';\r\n    context.fillStyle = '#000';\r\n    context.fillText(textStyle.testString, 0, baseline);\r\n\r\n    var output = {\r\n        ascent: 0,\r\n        descent: 0,\r\n        fontSize: 0\r\n    };\r\n\r\n    if (!context.getImageData(0, 0, width, height)) {\r\n        output.ascent = baseline;\r\n        output.descent = baseline + 6;\r\n        output.fontSize = output.ascent + output.descent;\r\n\r\n        CanvasPool.remove(canvas);\r\n\r\n        return output;\r\n    }\r\n\r\n    var imagedata = context.getImageData(0, 0, width, height).data;\r\n    var pixels = imagedata.length;\r\n    var line = width * 4;\r\n    var i;\r\n    var j;\r\n    var idx = 0;\r\n    var stop = false;\r\n\r\n    // ascent. scan from top to bottom until we find a non red pixel\r\n    for (i = 0; i < baseline; i++) {\r\n        for (j = 0; j < line; j += 4) {\r\n            if (imagedata[idx + j] !== 255) {\r\n                stop = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!stop) {\r\n            idx += line;\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n\r\n    output.ascent = baseline - i;\r\n\r\n    idx = pixels - line;\r\n    stop = false;\r\n\r\n    // descent. scan from bottom to top until we find a non red pixel\r\n    for (i = height; i > baseline; i--) {\r\n        for (j = 0; j < line; j += 4) {\r\n            if (imagedata[idx + j] !== 255) {\r\n                stop = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!stop) {\r\n            idx -= line;\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n\r\n    output.descent = (i - baseline);\r\n    output.fontSize = output.ascent + output.descent;\r\n\r\n    CanvasPool.remove(canvas);\r\n\r\n    return output;\r\n};\r\n\r\nexport default MeasureText;","var CONST = {\r\n    // new line mode\r\n    NO_NEWLINE: 0,\r\n    RAW_NEWLINE: 1,\r\n    WRAPPED_NEWLINE: 2,\r\n\r\n    // wrap mode\r\n    NO_WRAP: 0,\r\n    WORD_WRAP: 1,\r\n    CHAR_WRAP: 2,\r\n\r\n    // split lines\r\n    SPLITREGEXP: /(?:\\r\\n|\\r|\\n)/\r\n};\r\n\r\nexport default CONST;","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nimport MeasureText from './MeasureText.js';\r\nimport CONST from '../const.js';\r\n\r\nconst GetAdvancedValue = Phaser.Utils.Objects.GetAdvancedValue;\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\n\r\n//  Key: [ Object Key, Default Value ]\r\n\r\n/**\r\n * A custom function that will be responsible for wrapping the text.\r\n * @callback TextStyleWordWrapCallback\r\n *\r\n * @param {string} text - The string to wrap.\r\n * @param {Phaser.GameObjects.Text} textObject - The Text instance.\r\n *\r\n * @return {(string|string[])} Should return the wrapped lines either as an array of lines or as a string with\r\n * newline characters in place to indicate where breaks should happen.\r\n */\r\n\r\nvar propertyMap = {\r\n    // background\r\n    backgroundColor: ['backgroundColor', null],\r\n\r\n    // font\r\n    fontFamily: ['fontFamily', 'Courier'],\r\n    fontSize: ['fontSize', '16px'],\r\n    fontStyle: ['fontStyle', ''],\r\n    color: ['color', '#fff'],\r\n    stroke: ['stroke', '#fff'],\r\n    strokeThickness: ['strokeThickness', 0],\r\n    shadowOffsetX: ['shadow.offsetX', 0],\r\n    shadowOffsetY: ['shadow.offsetY', 0],\r\n    shadowColor: ['shadow.color', '#000'],\r\n    shadowBlur: ['shadow.blur', 0],\r\n    shadowStroke: ['shadow.stroke', false],\r\n    shadowFill: ['shadow.fill', false],\r\n\r\n    // underline\r\n    underlineColor: ['underline.color', '#000'],\r\n    underlineThickness: ['underline.thickness', 0],\r\n    underlineOffset: ['underline.offset', 0],\r\n\r\n    // align\r\n    halign: ['halign', 'left'],\r\n    valign: ['valign', 'top'],\r\n\r\n    // size\r\n    maxLines: ['maxLines', 0],\r\n    fixedWidth: ['fixedWidth', 0],\r\n    fixedHeight: ['fixedHeight', 0],\r\n    resolution: ['resolution', 0],\r\n    lineSpacing: ['lineSpacing', 0],\r\n\r\n    rtl: ['rtl', false],\r\n    testString: ['testString', '|MÃ‰qgy'],\r\n    baselineX: ['baselineX', 1.2],\r\n    baselineY: ['baselineY', 1.4],\r\n\r\n    // wrap\r\n    wrapMode: ['wrap.mode', 1],\r\n    wrapWidth: ['wrap.width', 0]\r\n    //wrapCallback: ['wrap.callback', null],\r\n    //wrapCallbackScope: ['wrap.callbackScope', null]\r\n};\r\n\r\nclass TextStyle {\r\n    constructor(text, style) {\r\n        this.parent = text;\r\n\r\n        this.backgroundColor;\r\n\r\n        this.fontFamily;\r\n        this.fontSize;\r\n        this.fontStyle;\r\n        this.color;\r\n        this.stroke;\r\n        this.strokeThickness;\r\n        this.shadowOffsetX;\r\n        this.shadowOffsetY;\r\n        this.shadowColor;\r\n        this.shadowBlur;\r\n        this.shadowStroke;\r\n        this.shadowFill;\r\n\r\n        this.underlineColor;\r\n        this.underlineThickness;\r\n        this.underlineOffset;\r\n\r\n        this.halign;\r\n        this.valign;\r\n\r\n        this.maxLines;\r\n        this.fixedWidth;\r\n        this.fixedHeight;\r\n        this.resolution;\r\n        this.lineSpacing;\r\n\r\n        this.rtl;\r\n        this.testString;\r\n\r\n\r\n        this.baselineX;\r\n        this.baselineY;\r\n\r\n        this._font;\r\n\r\n        //  Set to defaults + user style\r\n        this.setStyle(style, false);\r\n\r\n        var metrics = GetValue(style, 'metrics', false);\r\n\r\n        //  Provide optional TextMetrics in the style object to avoid the canvas look-up / scanning\r\n        //  Doing this is reset if you then change the font of this TextStyle after creation\r\n        if (metrics) {\r\n            this.metrics = {\r\n                ascent: GetValue(metrics, 'ascent', 0),\r\n                descent: GetValue(metrics, 'descent', 0),\r\n                fontSize: GetValue(metrics, 'fontSize', 0)\r\n            };\r\n        } else {\r\n            this.metrics = MeasureText(this);\r\n        }\r\n    }\r\n\r\n    setStyle(style, updateText) {\r\n        if (updateText === undefined) {\r\n            updateText = true;\r\n        }\r\n\r\n        if (style && style.hasOwnProperty('wrap')) {\r\n            var wrap = style.wrap;\r\n            if (wrap.hasOwnProperty('mode')) {\r\n                var mode = wrap.mode;\r\n                if (typeof mode === 'string') {\r\n                    wrap.mode = WRAPMODE[mode];\r\n                }\r\n            } else {\r\n                if (wrap.hasOwnProperty('width')) {\r\n                    wrap.mode = 1;\r\n                }\r\n            }\r\n        }\r\n\r\n        //  Avoid type mutation\r\n        if (style && style.hasOwnProperty('fontSize') && typeof style.fontSize === 'number') {\r\n            style.fontSize = style.fontSize.toString() + 'px';\r\n        }\r\n\r\n        for (var key in propertyMap) {\r\n            if (key === 'wrapCallback' || key === 'wrapCallbackScope') {\r\n                // Callback & scope should be set without processing the values\r\n                this[key] = GetValue(style, propertyMap[key][0], propertyMap[key][1]);\r\n            } else {\r\n                this[key] = GetAdvancedValue(style, propertyMap[key][0], propertyMap[key][1]);\r\n            }\r\n        }\r\n\r\n        //  Allow for 'font' override\r\n        var font = GetValue(style, 'font', null);\r\n\r\n        if (font === null) {\r\n            this._font = this.fontStyle + ' ' + this.fontSize + ' ' + this.fontFamily;\r\n        } else {\r\n            this._font = font;\r\n        }\r\n\r\n        //  Allow for 'fill' to be used in place of 'color'\r\n        var fill = GetValue(style, 'fill', null);\r\n\r\n        if (fill !== null) {\r\n            this.color = fill;\r\n        }\r\n\r\n        if (updateText) {\r\n            return this.update(true);\r\n        } else {\r\n            return this.parent;\r\n        }\r\n    }\r\n\r\n    syncFont(canvas, context) {\r\n        context.font = this._font;\r\n    }\r\n\r\n    syncStyle(canvas, context) {\r\n        context.textBaseline = 'alphabetic';\r\n\r\n        context.fillStyle = this.color;\r\n        context.strokeStyle = this.stroke;\r\n\r\n        context.lineWidth = this.strokeThickness;\r\n        context.lineCap = 'round';\r\n        context.lineJoin = 'round';\r\n    }\r\n\r\n    syncShadow(context, enabled) {\r\n        if (enabled) {\r\n            context.shadowOffsetX = this.shadowOffsetX;\r\n            context.shadowOffsetY = this.shadowOffsetY;\r\n            context.shadowColor = this.shadowColor;\r\n            context.shadowBlur = this.shadowBlur;\r\n        } else {\r\n            context.shadowOffsetX = 0;\r\n            context.shadowOffsetY = 0;\r\n            context.shadowColor = 0;\r\n            context.shadowBlur = 0;\r\n        }\r\n    }\r\n\r\n    update(recalculateMetrics) {\r\n        if (recalculateMetrics) {\r\n            this._font = this.fontStyle + ' ' + this.fontSize + ' ' + this.fontFamily;\r\n\r\n            this.metrics = MeasureText(this);\r\n        }\r\n\r\n        return this.parent.updateText(recalculateMetrics);\r\n    }\r\n\r\n    buildFont() {\r\n        var newFont = this.fontStyle + ' ' + this.fontSize + ' ' + this.fontFamily;\r\n        if (newFont !== this._font) {\r\n            this._font = newFont;\r\n            //this.metrics = MeasureText(this);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    setFont(font) {\r\n        if (typeof font === 'string') {\r\n            this.fontFamily = font;\r\n            this.fontSize = '';\r\n            this.fontStyle = '';\r\n        } else {\r\n            this.fontFamily = GetValue(font, 'fontFamily', 'Courier');\r\n            this.fontSize = GetValue(font, 'fontSize', '16px');\r\n            this.fontStyle = GetValue(font, 'fontStyle', '');\r\n        }\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setFontFamily(family) {\r\n        this.fontFamily = family;\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setFontStyle(style) {\r\n        this.fontStyle = style;\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setFontSize(size) {\r\n        if (typeof size === 'number') {\r\n            size = size.toString() + 'px';\r\n        }\r\n\r\n        this.fontSize = size;\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setTestString(string) {\r\n        this.testString = string;\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setFixedSize(width, height) {\r\n        this.fixedWidth = width;\r\n        this.fixedHeight = height;\r\n\r\n        if (width) {\r\n            this.parent.width = width;\r\n        }\r\n\r\n        if (height) {\r\n            this.parent.height = height;\r\n        }\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setResolution(value) {\r\n        this.resolution = value;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setLineSpacing(value) {\r\n        this.lineSpacing = value;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setBackgroundColor(color) {\r\n        this.backgroundColor = color;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setFill(color) {\r\n        this.color = color;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setColor(color) {\r\n        this.color = color;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setStroke(color, thickness) {\r\n        if (color === undefined) {\r\n            //  Reset the stroke to zero (disabling it)\r\n            this.strokeThickness = 0;\r\n        } else {\r\n            if (thickness === undefined) {\r\n                thickness = this.strokeThickness;\r\n            }\r\n\r\n            this.stroke = color;\r\n            this.strokeThickness = thickness;\r\n        }\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setShadow(x, y, color, blur, shadowStroke, shadowFill) {\r\n        if (x === undefined) {\r\n            x = 0;\r\n        }\r\n        if (y === undefined) {\r\n            y = 0;\r\n        }\r\n        if (color === undefined) {\r\n            color = '#000';\r\n        }\r\n        if (blur === undefined) {\r\n            blur = 0;\r\n        }\r\n        if (shadowStroke === undefined) {\r\n            shadowStroke = false;\r\n        }\r\n        if (shadowFill === undefined) {\r\n            shadowFill = true;\r\n        }\r\n\r\n        this.shadowOffsetX = x;\r\n        this.shadowOffsetY = y;\r\n        this.shadowColor = color;\r\n        this.shadowBlur = blur;\r\n        this.shadowStroke = shadowStroke;\r\n        this.shadowFill = shadowFill;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setShadowOffset(x, y) {\r\n        if (x === undefined) {\r\n            x = 0;\r\n        }\r\n        if (y === undefined) {\r\n            y = x;\r\n        }\r\n\r\n        this.shadowOffsetX = x;\r\n        this.shadowOffsetY = y;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setShadowColor(color) {\r\n        if (color === undefined) {\r\n            color = '#000';\r\n        }\r\n\r\n        this.shadowColor = color;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setShadowBlur(blur) {\r\n        if (blur === undefined) {\r\n            blur = 0;\r\n        }\r\n\r\n        this.shadowBlur = blur;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setShadowStroke(enabled) {\r\n        this.shadowStroke = enabled;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setShadowFill(enabled) {\r\n        this.shadowFill = enabled;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setUnderline(color, thickness, offset) {\r\n        if (color === undefined) {\r\n            color = '#000';\r\n        }\r\n        if (thickness === undefined) {\r\n            thickness = 0;\r\n        }\r\n        if (offset === undefined) {\r\n            offset = 0;\r\n        }\r\n\r\n        this.underlineColor = color;\r\n        this.underlineThickness = thickness;\r\n        this.underlineOffset = offset;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setUnderlineColor(color) {\r\n        if (color === undefined) {\r\n            color = '#000';\r\n        }\r\n\r\n        this.underlineColor = color;\r\n        return this.update(false);\r\n    }\r\n\r\n    setUnderlineThickness(thickness) {\r\n        if (thickness === undefined) {\r\n            thickness = 0;\r\n        }\r\n\r\n        this.underlineThickness = thickness;\r\n        return this.update(false);\r\n    }\r\n\r\n    setUnderlineOffset(offset) {\r\n        if (offset === undefined) {\r\n            offset = 0;\r\n        }\r\n\r\n        this.underlineOffset = offset;\r\n        return this.update(false);\r\n    }\r\n\r\n    setWrapMode(mode) {\r\n        if (typeof mode === 'string') {\r\n            mode = WRAPMODE[mode.toLowerCase()] || 0;\r\n        }\r\n        this.wrapMode = mode;\r\n        return this.update(true);\r\n    }\r\n\r\n    setWrapWidth(width) {\r\n        this.wrapWidth = width;\r\n        return this.update(false);\r\n    }\r\n\r\n    setAlign(halign, valign) {\r\n        if (halign === undefined) {\r\n            halign = 'left';\r\n        }\r\n        if (valign === undefined) {\r\n            valign = 'top';\r\n        }\r\n        this.halign = halign;\r\n        this.valign = valign;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setHAlign(halign) {\r\n        if (halign === undefined) {\r\n            halign = 'left';\r\n        }\r\n        this.halign = halign;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setVAlign(valign) {\r\n        if (valign === undefined) {\r\n            valign = 'top';\r\n        }\r\n        this.valign = valign;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setMaxLines(max) {\r\n        if (max === undefined) {\r\n            max = 0;\r\n        }\r\n\r\n        this.maxLines = max;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    getTextMetrics() {\r\n        var metrics = this.metrics;\r\n\r\n        return {\r\n            ascent: metrics.ascent,\r\n            descent: metrics.descent,\r\n            fontSize: metrics.fontSize\r\n        };\r\n    }\r\n\r\n    get lineHeight() {\r\n        return this.metrics.fontSize + this.strokeThickness + this.lineSpacing;\r\n    }\r\n\r\n    toJSON() {\r\n        var output = {};\r\n\r\n        for (var key in propertyMap) {\r\n            output[key] = this[key];\r\n        }\r\n\r\n        output.metrics = this.getTextMetrics();\r\n\r\n        return output;\r\n    }\r\n\r\n    destroy() {\r\n        this.parent = undefined;\r\n    }\r\n\r\n}\r\n\r\nconst HALIGNMODE = {\r\n    left: CONST.hleft,\r\n    center: CONST.hcenter,\r\n    right: CONST.hright,\r\n};\r\nconst VALIGNMODE = {\r\n    top: CONST.vtop,\r\n    center: CONST.vcenter,\r\n    bottom: CONST.vbottom,\r\n};\r\nconst WRAPMODE = {\r\n    none: CONST.NO_WRAP,\r\n    word: CONST.WORD_WRAP,\r\n    char: CONST.CHAR_WRAP,\r\n    character: CONST.CHAR_WRAP\r\n};\r\n\r\nexport default TextStyle;","export default {\r\n    draw(startX, startY, boxWidth, boxHeight) {\r\n        var penManager = this.penManager;\r\n        this.hitAreaManager.clear();\r\n\r\n        var context = this.context;\r\n        context.save();\r\n\r\n        // this.clear();\r\n        this.drawBackground(this.defatultStyle.backgroundColor);\r\n\r\n        // draw lines\r\n        var defatultStyle = this.defatultStyle;\r\n        startX += this.startXOffset;\r\n        startY += this.startYOffset;\r\n        var halign = defatultStyle.halign,\r\n            valign = defatultStyle.valign;\r\n\r\n        var lineWidth, lineHeight = defatultStyle.lineHeight;\r\n        var lines = penManager.lines;\r\n        var totalLinesNum = lines.length,\r\n            maxLines = defatultStyle.maxLines;\r\n        var drawLinesNum, drawLineStartIdx, drawLineEndIdx;\r\n        if ((maxLines > 0) && (totalLinesNum > maxLines)) {\r\n            drawLinesNum = maxLines;\r\n            if (valign === 'center') { // center\r\n                drawLineStartIdx = Math.floor((totalLinesNum - drawLinesNum) / 2);\r\n            } else if (valign === 'bottom') { // bottom\r\n                drawLineStartIdx = totalLinesNum - drawLinesNum;\r\n            } else {\r\n                drawLineStartIdx = 0;\r\n            }\r\n        } else {\r\n            drawLinesNum = totalLinesNum;\r\n            drawLineStartIdx = 0;\r\n        }\r\n        drawLineEndIdx = drawLineStartIdx + drawLinesNum;\r\n\r\n        var offsetX, offsetY;\r\n        if (valign === 'center') { // center\r\n            offsetY = Math.max((boxHeight - (drawLinesNum * lineHeight)) / 2, 0);\r\n        } else if (valign === 'bottom') { // bottom\r\n            offsetY = Math.max(boxHeight - (drawLinesNum * lineHeight) - 2, 0);\r\n        } else {\r\n            offsetY = 0;\r\n        }\r\n        offsetY += startY;\r\n        for (var lineIdx = drawLineStartIdx; lineIdx < drawLineEndIdx; lineIdx++) {\r\n            lineWidth = penManager.getLineWidth(lineIdx);\r\n            if (lineWidth === 0) {\r\n                continue;\r\n            }\r\n\r\n            if (halign === 'center') { // center\r\n                offsetX = (boxWidth - lineWidth) / 2;\r\n            } else if (halign === 'right') { // right\r\n                offsetX = boxWidth - lineWidth;\r\n            } else {\r\n                offsetX = 0;\r\n            }\r\n            offsetX += startX;\r\n\r\n            var pens = lines[lineIdx];\r\n            for (var penIdx = 0, pensLen = pens.length; penIdx < pensLen; penIdx++) {\r\n                this.drawPen(pens[penIdx], offsetX, offsetY);\r\n            }\r\n        }\r\n\r\n        context.restore();\r\n    },\r\n\r\n    drawPen(pen, offsetX, offsetY) {\r\n        offsetX += pen.x;\r\n        offsetY += pen.y;\r\n\r\n        var canvas = this.canvas;\r\n        var context = this.context;\r\n        context.save();\r\n\r\n        var curStyle = this.parser.propToContextStyle(\r\n            this.defatultStyle,\r\n            pen.prop\r\n        );\r\n        curStyle.buildFont();\r\n        curStyle.syncFont(canvas, context);\r\n        curStyle.syncStyle(canvas, context);\r\n\r\n        // Underline\r\n        if ((curStyle.underlineThickness > 0) && (pen.width > 0)) {\r\n            this.drawUnderline(offsetX, offsetY, pen.width, curStyle);\r\n        }\r\n\r\n        // Text\r\n        if (pen.isTextPen) {\r\n            this.drawText(offsetX, offsetY, pen.text, curStyle);\r\n        }\r\n\r\n        // Image\r\n        if (pen.isImagePen) {\r\n            this.drawImage(offsetX, offsetY, pen.prop.img, curStyle);\r\n        }\r\n\r\n        context.restore();\r\n\r\n        if (pen.hasAreaMarker && (pen.width > 0)) {\r\n            this.hitAreaManager.add(\r\n                pen.prop.area, // key\r\n                offsetX, // x\r\n                (offsetY - this.startYOffset), // y\r\n                pen.width, // width\r\n                this.defatultStyle.lineHeight // height\r\n            );\r\n        }\r\n    },\r\n\r\n    clear() {\r\n        var canvas = this.canvas;\r\n        this.context.clearRect(0, 0, canvas.width, canvas.height);\r\n    },\r\n\r\n    drawBackground(color) {\r\n        if (color === null) {\r\n            return;\r\n        }\r\n        this.context.fillStyle = color;\r\n        this.context.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n    },\r\n\r\n    drawUnderline(x, y, width, style) {\r\n        y += style.underlineOffset - (style.underlineThickness / 2);\r\n        if (this.autoRound) {\r\n            x = Math.round(x);\r\n            y = Math.round(y);\r\n        }\r\n\r\n        var context = this.context;\r\n        var savedLineCap = context.lineCap;\r\n        context.lineCap = 'butt';\r\n        context.beginPath();\r\n        context.strokeStyle = style.underlineColor;\r\n        context.lineWidth = style.underlineThickness;\r\n        context.moveTo(x, y);\r\n        context.lineTo((x + width), y);\r\n        context.stroke();\r\n        context.lineCap = savedLineCap;\r\n    },\r\n\r\n    drawText(x, y, text, style) {\r\n        if (this.autoRound) {\r\n            x = Math.round(x);\r\n            y = Math.round(y);\r\n        }\r\n\r\n        var context = this.context;\r\n        if (style.strokeThickness) {\r\n            style.syncShadow(context, style.shadowStroke);\r\n            context.strokeText(text, x, y);\r\n        }\r\n\r\n        if (style.color && (style.color !== 'none')) {\r\n            style.syncShadow(context, style.shadowFill);\r\n            context.fillText(text, x, y);\r\n        }\r\n    },\r\n\r\n    drawImage(x, y, imgKey, style) {\r\n        var imageManager = this.parent.imageManager;\r\n        var imgData = imageManager.get(imgKey);\r\n        var frame = imageManager.getFrame(imgKey);\r\n\r\n        x += imgData.left;\r\n        y += - this.startYOffset + imgData.y;\r\n        if (this.autoRound) {\r\n            x = Math.round(x);\r\n            y = Math.round(y);\r\n        }\r\n\r\n        var context = this.context;\r\n        context.drawImage(\r\n            frame.source.image,\r\n            frame.cutX, frame.cutY, frame.cutWidth, frame.cutHeight,\r\n            x, y, imgData.width, imgData.height\r\n        );\r\n    }\r\n\r\n}","class Stack {\r\n    constructor() {\r\n        this.items = [];\r\n    }\r\n\r\n    destroy() {\r\n        this.clear();\r\n        this.items = undefined;\r\n    }\r\n\r\n    pop() {\r\n        return (this.items.length > 0) ? this.items.pop() : null;\r\n    }\r\n\r\n    push(l) {\r\n        this.items.push(l);\r\n        return this;\r\n    }\r\n\r\n    pushMultiple(arr) {\r\n        this.items.push.apply(this.items, arr);\r\n        arr.length = 0;\r\n        return this;\r\n    }\r\n\r\n    clear() {\r\n        this.items.length = 0;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport default Stack;","import Pool from './utils/struct/Stack.js';\r\nexport default Pool;","import CONST from '../const.js';\r\n\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\nconst NO_NEWLINE = CONST.NO_NEWLINE;\r\nconst RAW_NEWLINE = CONST.RAW_NEWLINE;\r\n\r\nclass Pen {\r\n    constructor(config) {\r\n        this.prop = {};\r\n        this.resetFromJSON(config);\r\n    }\r\n\r\n    resetFromJSON(o) { // (txt, x, y, width, prop, newLineMode, startIndex)\r\n        this.text = GetValue(o, 'text', '');\r\n        this.x = GetValue(o, 'x', 0);\r\n        this.y = GetValue(o, 'y', 0);\r\n        this.width = GetValue(o, 'width', 0);\r\n\r\n        var prop = GetValue(o, 'prop', null);\r\n        if (prop === null) {\r\n            prop = {};\r\n        }\r\n        this.prop = prop;\r\n        this.newLineMode = GetValue(o, 'newLineMode', 0);\r\n        this.startIndex = GetValue(o, 'startIndex', 0);\r\n    }\r\n\r\n    get plainText() {\r\n        var txt = this.text\r\n        if (this.newLineMode === RAW_NEWLINE) {\r\n            txt += \"\\n\";\r\n        }\r\n\r\n        return txt;\r\n    }\r\n\r\n    get wrapText() {\r\n        var txt = this.text;\r\n        if (this.newLineMode !== NO_NEWLINE) {\r\n            txt += \"\\n\";\r\n        }\r\n\r\n        return txt;\r\n    }\r\n\r\n    get rawTextLength() {\r\n        var len = this.text.length;\r\n        if (this.newLineMode === RAW_NEWLINE) {\r\n            len += 1;\r\n        }\r\n        return len;\r\n    }\r\n\r\n    get endIndex() {\r\n        return this.startIndex + this.rawTextLength;\r\n    }\r\n\r\n    get lastX() {\r\n        return this.x + this.width;\r\n    }\r\n\r\n    get isTextPen() {\r\n        return (this.text !== '');\r\n    }\r\n\r\n    get isImagePen() {\r\n        return !!this.prop.img;\r\n    }\r\n\r\n    get hasAreaMarker() {\r\n        return !!this.prop.area;\r\n    }\r\n};\r\n\r\nexport default Pen;","var Clear = function (obj) {\r\n    if (Array.isArray(obj)) {\r\n        obj.length = 0;\r\n    } else {\r\n        for (var key in obj) {\r\n            delete obj[key];\r\n        }\r\n    }\r\n}\r\nexport default Clear;","import Clear from './Clear.js';\r\n\r\n/**\r\n * Shallow Object Clone. Will not out nested objects.\r\n * @param {object} obj JSON object\r\n * @param {object} ret JSON object to return, set null to return a new object\r\n * @returns {object} this object\r\n */\r\nvar Clone = function (obj, out) {\r\n    var objIsArray = Array.isArray(obj);\r\n\r\n    if (out === undefined) {\r\n        out = (objIsArray) ? [] : {};\r\n    } else {\r\n        Clear(out);\r\n    }\r\n\r\n    if (objIsArray) {\r\n        out.length = obj.length;\r\n        for (var i = 0, cnt = obj.length; i < cnt; i++) {\r\n            out[i] = obj[i];\r\n        }\r\n    } else {\r\n        for (var key in obj) {\r\n            out[key] = obj[key];\r\n        }\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nexport default Clone;\r\n","var NOOP = function () {\r\n    //  NOOP\r\n};\r\n\r\nexport default NOOP;","import Pool from '../../../../pool.js';\r\nimport Pen from './Pen.js';\r\nimport CONST from '../const.js';\r\nimport Clone from '../../../../utils/object/Clone.js';\r\nimport NOOP from '../../../../utils/object/NOOP.js';\r\n\r\nconst GetFastValue = Phaser.Utils.Objects.GetFastValue;\r\nconst NO_NEWLINE = CONST.NO_NEWLINE;\r\nconst WRAPPED_NEWLINE = CONST.WRAPPED_NEWLINE;\r\n\r\nvar PensPool = new Pool(); // default pens pool\r\nvar LinesPool = new Pool(); // default lines pool\r\nclass PenManager {\r\n    constructor(config) {\r\n        this.pens = []; // all pens\r\n        this.lines = []; // pens in lines [ [],[],[],.. ]\r\n        this.maxLinesWidth = undefined;\r\n\r\n        this.PensPool = GetFastValue(config, 'pensPool', PensPool);\r\n        this.LinesPool = GetFastValue(config, 'linesPool', LinesPool);\r\n        this.tagToText = GetFastValue(config, 'tagToText', NOOP);\r\n        this.tagToTextScope = GetFastValue(config, 'tagToTextScope', undefined);\r\n    }\r\n\r\n    destroy() {\r\n        this.freePens();\r\n        this.tagToText = undefined;\r\n        this.tagToTextScope = undefined;\r\n    }\r\n\r\n    freePens() {\r\n        for (var i = 0, len = this.lines.length; i < len; i++)\r\n            this.lines[i].length = 0;\r\n\r\n        this.PensPool.pushMultiple(this.pens);\r\n        this.LinesPool.pushMultiple(this.lines);\r\n        this.maxLinesWidth = undefined;\r\n    }\r\n\r\n    addTextPen(text, x, y, width, prop, newLineMode) {\r\n        var pen = this.PensPool.pop();\r\n        if (pen == null) {\r\n            pen = new Pen();\r\n        }\r\n        PEN_CONFIG.text = text;\r\n        PEN_CONFIG.x = x;\r\n        PEN_CONFIG.y = y;\r\n        PEN_CONFIG.width = width;\r\n        PEN_CONFIG.prop = prop;\r\n        PEN_CONFIG.newLineMode = newLineMode;\r\n        pen.resetFromJSON(PEN_CONFIG);\r\n        this.addPen(pen);\r\n        return this;\r\n    }\r\n\r\n    addImagePen(x, y, width, prop) {\r\n        this.addTextPen('', x, y, width, prop, NO_NEWLINE);\r\n        return this;\r\n    }\r\n\r\n    addNewLinePen() {\r\n        var previousPen = this.lastPen;\r\n        var x = (previousPen) ? previousPen.lastX : 0;\r\n        var y = (previousPen) ? previousPen.y : 0;\r\n        var prop = (previousPen) ? Clone(previousPen.prop) : null;\r\n        this.addTextPen('', x, y, 0, prop, WRAPPED_NEWLINE);\r\n        return this;\r\n    }\r\n\r\n    addPen(pen) {\r\n        var previousPen = this.lastPen;\r\n        if (previousPen == null) {\r\n            pen.startIndex = 0;\r\n        } else {\r\n            pen.startIndex = previousPen.endIndex;\r\n        }\r\n        this.pens.push(pen);\r\n\r\n        // maintan lines\r\n        var line = this.lastLine;\r\n        if (line == null) {\r\n            line = this.LinesPool.pop() || [];\r\n            this.lines.push(line);\r\n        }\r\n        line.push(pen);\r\n\r\n        // new line, add an empty line\r\n        if (pen.newLineMode !== NO_NEWLINE) {\r\n            line = this.LinesPool.pop() || [];\r\n            this.lines.push(line);\r\n        }\r\n        this.maxLinesWidth = undefined;\r\n    }\r\n\r\n    clone(targetPenManager) {\r\n        if (targetPenManager == null)\r\n            targetPenManager = new PenManager();\r\n\r\n        targetPenManager.freePens();\r\n\r\n        for (var li = 0, llen = this.lines.length; li < llen; li++) {\r\n            var pens = this.lines[li];\r\n            for (var pi = 0, plen = pens.length; pi < plen; pi++) {\r\n                var pen = pens[pi];\r\n                targetPenManager.addPen(\r\n                    pen.text,\r\n                    pen.x,\r\n                    pen.y,\r\n                    pen.width,\r\n                    Clone(pen.prop),\r\n                    pen.newLineMode\r\n                );\r\n            }\r\n        }\r\n\r\n        return targetPenManager;\r\n    }\r\n\r\n    get lastPen() {\r\n        return this.pens[this.pens.length - 1];\r\n    }\r\n\r\n    get lastLine() {\r\n        return this.lines[this.lines.length - 1];\r\n    }\r\n\r\n    getLineStartIndex(i) {\r\n        if (i >= this.lines.length) {\r\n            return this.getLineEndIndex(i);\r\n        } else {\r\n            var line = this.lines[i];\r\n            return (line && line[0]) ? line[0].startIndex : 0;\r\n        }\r\n    }\r\n\r\n    getLineEndIndex(i) {\r\n        if (i >= this.lines.length) {\r\n            i = this.lines.length - 1;\r\n        }\r\n        var li, hasLastPen = false,\r\n            line;\r\n        for (li = i; li >= 0; li--) {\r\n            line = this.lines[li];\r\n            hasLastPen = (line != null) && (line.length > 0);\r\n            if (hasLastPen) {\r\n                break;\r\n            }\r\n        }\r\n        if (!hasLastPen) {\r\n            return 0;\r\n        }\r\n\r\n        var lastPen = line[line.length - 1];\r\n        return lastPen.endIndex;\r\n    }\r\n\r\n    getLineWidth(i) {\r\n        var line = this.lines[i];\r\n        if (!line) {\r\n            return 0;\r\n        }\r\n\r\n        var lastPen = line[line.length - 1];\r\n        if (lastPen == null) {\r\n            return 0;\r\n        }\r\n\r\n        var lineWidth = lastPen.lastX; // start from 0\r\n        return lineWidth;\r\n    }\r\n\r\n    getMaxLineWidth() {\r\n        if (this.maxLinesWidth !== undefined) {\r\n            return this.maxLinesWidth;\r\n        }\r\n        var w, maxW = 0;\r\n        for (var i = 0, len = this.lines.length; i < len; i++) {\r\n            w = this.getLineWidth(i);\r\n            if (w > maxW) {\r\n                maxW = w;\r\n            }\r\n        }\r\n        this.maxLinesWidth = maxW;\r\n        return maxW;\r\n    }\r\n\r\n    getLineWidths() {\r\n        var result = [];\r\n        for (var i = 0, len = this.lines.length; i < len; i++) {\r\n            result.push(this.getLineWidth(i));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    get linesCount() {\r\n        return this.lines.length;\r\n    }\r\n\r\n    get plainText() {\r\n        var txt = \"\",\r\n            pens = this.pens;\r\n        for (var i = 0, len = pens.length; i < len; i++) {\r\n            txt += pens[i].plainText;\r\n        }\r\n\r\n        return txt;\r\n    }\r\n\r\n    get rawTextLength() {\r\n        var l = 0,\r\n            pens = this.pens;\r\n        for (var i = 0, len = this.pens.length; i < len; i++) {\r\n            l += pens[i].rawTextLength;\r\n        }\r\n\r\n        return l;\r\n    }\r\n\r\n    getSliceTagText(start, end, wrap) {\r\n        if (start === undefined) {\r\n            start = 0;\r\n        }\r\n        if (end === undefined) {\r\n            var lastPen = this.lastPen;\r\n            if (lastPen == null) {\r\n                return \"\";\r\n            }\r\n\r\n            end = lastPen.endIndex;\r\n        }\r\n        if (wrap === undefined) {\r\n            wrap = false;\r\n        }\r\n\r\n        var txt = \"\",\r\n            formatTxt,\r\n            pen, penTxt, penStartIdx, penEndIdx, isInRange;\r\n        var currentProp, previousProp;\r\n        for (var i = 0, len = this.pens.length; i < len; i++) {\r\n            pen = this.pens[i];\r\n            penEndIdx = pen.endIndex;\r\n            if (penEndIdx <= start) {\r\n                continue;\r\n            }\r\n            pen = this.pens[i];\r\n            penTxt = (!wrap) ? pen.plainText : pen.wrapText;\r\n            currentProp = pen.prop;\r\n            penStartIdx = pen.startIndex;\r\n\r\n            isInRange = (penStartIdx >= start) && (penEndIdx <= end);\r\n            if (!isInRange) {\r\n                penTxt = penTxt.substring(start - penStartIdx, end - penStartIdx);\r\n            }\r\n\r\n            if (this.tagToTextScope) {\r\n                txt += this.tagToText.call(this.tagToTextScope, penTxt, currentProp, previousProp);\r\n            } else {\r\n                txt += this.tagToText(penTxt, currentProp, previousProp);\r\n            }\r\n\r\n            previousProp = currentProp;\r\n            if (penEndIdx >= end) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return txt;\r\n    }\r\n};\r\n\r\nvar PEN_CONFIG = {};\r\n\r\nexport default PenManager;","import Pool from '../../../../pool.js';\r\n\r\nconst Rectangle = Phaser.Geom.Rectangle;\r\n\r\nvar RectanglePool = new Pool();\r\nclass HitAreaManager {\r\n    constructor() {\r\n        this.hitAreas = [];\r\n    }\r\n\r\n    destroy() {\r\n        this.clear();\r\n    }\r\n\r\n    clear() {\r\n        RectanglePool.pushMultiple(this.hitAreas);\r\n        return this;\r\n    }\r\n\r\n    add(key, x, y, width, height) {\r\n        var rectangle = RectanglePool.pop();\r\n        if (rectangle === null) {\r\n            rectangle = new Rectangle(x, y, width, height);\r\n        } else {\r\n            rectangle.setTo(x, y, width, height);\r\n        }\r\n        rectangle.key = key;\r\n        this.hitAreas.push(rectangle);\r\n        return this;\r\n    }\r\n\r\n    getFirstHitArea(x, y) {\r\n        var hitAreas = this.hitAreas, hitArea;\r\n        for (var i = 0, cnt = hitAreas.length; i < cnt; i++) {\r\n            hitArea = hitAreas[i];\r\n            if (hitArea.contains(x, y)) {\r\n                return hitArea;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    drawBounds(graphics, color, parent) {\r\n        if (color === undefined) {\r\n            color = 0xffffff;\r\n        }\r\n\r\n        if (parent) {\r\n            graphics\r\n                .save()\r\n                .scaleCanvas(parent.scaleX, parent.scaleY)\r\n                .rotateCanvas(parent.rotation)\r\n                .translateCanvas(parent.x, parent.y)\r\n        }\r\n\r\n        var hitAreas = this.hitAreas, hitArea;\r\n        for (var i = 0, cnt = hitAreas.length; i < cnt; i++) {\r\n            hitArea = hitAreas[i];\r\n            graphics.lineStyle(1, color).strokeRect(hitArea.x, hitArea.y, hitArea.width, hitArea.height);\r\n        }\r\n\r\n        if (parent) {\r\n            graphics\r\n                .restore()\r\n        }\r\n        return this;\r\n    }\r\n}\r\nexport default HitAreaManager;","var SetInteractive = function () {\r\n    this.parent\r\n        .on('pointerdown', function (pointer, localX, localY, event) {\r\n            FireEvent.call(this, 'areadown', pointer, localX, localY);\r\n        }, this)\r\n        .on('pointerup', function (pointer, localX, localY, event) {\r\n            FireEvent.call(this, 'areaup', pointer, localX, localY);\r\n        }, this)\r\n}\r\n\r\nvar FireEvent = function (eventName, pointer, localX, localY) {\r\n    var area = this.hitAreaManager.getFirstHitArea(localX, localY);\r\n    if (area === null) {\r\n        return;\r\n    }\r\n    var key = area.key;\r\n    this.parent.emit(`${eventName}-${key}`, pointer, localX, localY)\r\n    this.parent.emit(eventName, key, pointer, localX, localY)\r\n}\r\nexport default SetInteractive;","import Pool from '../../../../pool.js';\r\nimport CONST from '../const.js';\r\n\r\nconst NO_NEWLINE = CONST.NO_NEWLINE;\r\nconst RAW_NEWLINE = CONST.RAW_NEWLINE;\r\nconst WRAPPED_NEWLINE = CONST.WRAPPED_NEWLINE;\r\nconst NO_WRAP = CONST.NO_WRAP;\r\nconst WORD_WRAP = CONST.WORD_WRAP;\r\nconst CHAR_WRAP = CONST.CHAR_WRAP;\r\nconst splitRegExp = CONST.SPLITREGEXP;\r\n\r\nvar WRAP_RESULT = [];\r\nvar WrapText = function (text, getTextWidth, wrapMode, wrapWidth, offset) {\r\n    if (wrapWidth <= 0) {\r\n        wrapMode = NO_WRAP;\r\n    }\r\n\r\n    var retLines = WRAP_RESULT;\r\n    LinesPool.pushMultiple(retLines);\r\n\r\n    if (!text || !text.length) {\r\n        return retLines;\r\n    }\r\n\r\n    var lines = text.split(splitRegExp),\r\n        line, remainWidth, isLaseLine, newLineMode;\r\n    for (var i = 0, linesLen = lines.length; i < linesLen; i++) {\r\n        line = lines[i];\r\n        newLineMode = (i === (linesLen - 1)) ? NO_NEWLINE : RAW_NEWLINE;\r\n\r\n        if (wrapMode === NO_WRAP) {\r\n            var textWidth = getTextWidth(line);\r\n            retLines.push(LinesPool.newline(line, textWidth, newLineMode));\r\n            continue;\r\n        } else {\r\n            if (i === 0) {\r\n                remainWidth = wrapWidth - offset;\r\n            } else {\r\n                remainWidth = wrapWidth;\r\n            }\r\n        }\r\n\r\n        // short string testing\r\n        if (line.length <= 100) {\r\n            var textWidth = getTextWidth(line);\r\n            if (textWidth <= remainWidth) {\r\n                retLines.push(LinesPool.newline(line, textWidth, newLineMode));\r\n                continue;\r\n            }\r\n        }\r\n\r\n        // character mode\r\n        var tokenArray;\r\n        if (wrapMode === WORD_WRAP) {\r\n            // word mode\r\n            tokenArray = line.split(' ');\r\n        } else {\r\n            tokenArray = line;\r\n        }\r\n        var token;\r\n        var curLineText = '',\r\n            lineText = '',\r\n            currLineWidth, lineWidth = 0;\r\n        for (var j = 0, tokenLen = tokenArray.length; j < tokenLen; j++) {\r\n            token = tokenArray[j];\r\n\r\n            if (wrapMode === WORD_WRAP) {\r\n                curLineText += token;\r\n\r\n                if (j < (tokenLen - 1)) {\r\n                    curLineText += ' ';\r\n                }\r\n            } else {\r\n                curLineText += token;\r\n            }\r\n\r\n            currLineWidth = getTextWidth(curLineText);\r\n            if (currLineWidth > remainWidth) {\r\n                // new line\r\n                if (j === 0) {\r\n                    retLines.push(LinesPool.newline('', 0, WRAPPED_NEWLINE));\r\n                } else {\r\n                    retLines.push(LinesPool.newline(lineText, lineWidth, WRAPPED_NEWLINE));\r\n                    curLineText = token;\r\n                    if (wrapMode === WORD_WRAP) {\r\n                        if (j < (tokenLen - 1)) {\r\n                            curLineText += ' ';\r\n                        }\r\n                    }\r\n                    currLineWidth = getTextWidth(curLineText);\r\n                }\r\n\r\n                remainWidth = wrapWidth;\r\n            }\r\n\r\n            lineText = curLineText;\r\n            lineWidth = currLineWidth;\r\n        } // for token in tokenArray\r\n\r\n        // flush remain text\r\n        retLines.push(LinesPool.newline(lineText, lineWidth, newLineMode));\r\n\r\n    } // for each line in lines\r\n\r\n    return retLines;\r\n};\r\n\r\nvar LinesPool = new Pool();\r\nLinesPool.newline = function (text, width, newLineMode) {\r\n    var l = this.pop();\r\n    if (l === null) {\r\n        l = {};\r\n    }\r\n    l.text = text;\r\n    l.width = width;\r\n    l.newLineMode = newLineMode;\r\n    return l;\r\n};\r\n\r\nexport default WrapText;","import DrawMethods from './DrawMethods.js';\r\nimport PenManager from '../penmanger/PenManager.js';\r\nimport HitAreaManager from '../hitareamanager/HitAreaManager.js';\r\nimport SetInteractive from './SetInteractive.js';\r\nimport CONST from '../const.js';\r\nimport WrapText from './WrapText.js';\r\nimport Clone from '../../../../utils/object/Clone.js';\r\n\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\nconst NO_WRAP = CONST.NO_WRAP;\r\nconst NO_NEWLINE = CONST.NO_NEWLINE;\r\n\r\nclass CanvasText {\r\n    constructor(config) {\r\n        this.parent = config.parent;\r\n        this.context = GetValue(config, 'context', null);\r\n        this.canvas = this.context.canvas;\r\n        this.parser = GetValue(config, 'parser', null);\r\n        this.defatultStyle = GetValue(config, 'style', null);\r\n        this.autoRound = true;\r\n\r\n        this.pensPool = GetValue(config, 'pensPool', null);\r\n        this.penManager = this.newPenManager();\r\n        this._tmpPenManager = null;\r\n\r\n        this.hitAreaManager = new HitAreaManager();\r\n\r\n        var context = this.context;\r\n        this.getTextWidth = function (text) {\r\n            return context.measureText(text).width;\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.context = undefined;\r\n        this.canvas = undefined;\r\n        this.parser = undefined;\r\n        this.defatultStyle = undefined;\r\n\r\n        if (this.penManager) {\r\n            this.penManager.destroy();\r\n            this.penManager = undefined;\r\n        }\r\n        if (this._tmpPenManager) {\r\n            this._tmpPenManager.destroy();\r\n            this._tmpPenManager = undefined;\r\n        }\r\n        if (this.hitAreaManager) {\r\n            this.hitAreaManager.destroy();\r\n            this.hitAreaManager = undefined;\r\n        }\r\n    }\r\n\r\n    updatePenManager(text, wrapMode, wrapWidth, lineHeight, penManager) {\r\n        if (penManager === undefined) {\r\n            penManager = this.penManager;\r\n        }\r\n        penManager.freePens();\r\n        if (text === \"\") {\r\n            return penManager;\r\n        }\r\n\r\n        var canvas = this.canvas;\r\n        var context = this.context;\r\n\r\n        var cursorX = 0,\r\n            cursorY = 0;\r\n\r\n        var plainText, curProp, curStyle;\r\n        var match = this.parser.splitText(text),\r\n            result, wrapLines;\r\n        for (var i = 0, len = match.length; i < len; i++) {\r\n            result = this.parser.tagTextToProp(match[i], curProp);\r\n            plainText = result.plainText;\r\n            curProp = result.prop;\r\n\r\n            if (curProp.img) { // Image tag                \r\n                var imgWidth = this.imageManager.getOuterWidth(curProp.img);\r\n                if ((wrapWidth > 0) && (wrapMode !== NO_WRAP)) {  // Wrap mode\r\n                    if (wrapWidth < (cursorX + imgWidth)) {\r\n                        penManager.addNewLinePen();\r\n                        cursorY += lineHeight;\r\n                        cursorX = 0;\r\n                    }\r\n                }\r\n                penManager.addImagePen(cursorX, cursorY, imgWidth, Clone(curProp));\r\n                cursorX += imgWidth;\r\n\r\n            } else if (plainText !== '') {\r\n                // wrap text to lines\r\n                // Save the current context.\r\n                this.context.save();\r\n                curStyle = this.parser.propToContextStyle(\r\n                    this.defatultStyle,\r\n                    curProp\r\n                );\r\n                curStyle.buildFont();\r\n                curStyle.syncFont(canvas, context);\r\n                curStyle.syncStyle(canvas, context);\r\n                wrapLines = WrapText(plainText, this.getTextWidth, wrapMode, wrapWidth, cursorX);\r\n\r\n                // add pens\r\n                var n;\r\n                for (var j = 0, jLen = wrapLines.length; j < jLen; j++) {\r\n                    n = wrapLines[j];\r\n                    penManager.addTextPen(n.text, cursorX, cursorY, n.width, Clone(curProp), n.newLineMode);\r\n\r\n                    if (n.newLineMode !== NO_NEWLINE) {\r\n                        cursorX = 0;\r\n                        cursorY += lineHeight;\r\n                    } else {\r\n                        cursorX += n.width;\r\n                    }\r\n\r\n                }\r\n                this.context.restore();\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return penManager;\r\n    }\r\n\r\n    get startXOffset() {\r\n        var defatultStyle = this.defatultStyle;\r\n        return (defatultStyle.strokeThickness / 2);\r\n    }\r\n\r\n    get startYOffset() {\r\n        var defatultStyle = this.defatultStyle;\r\n        return (defatultStyle.strokeThickness / 2) + defatultStyle.metrics.ascent;\r\n    }\r\n\r\n    get lines() {\r\n        return this.penManager.lines;\r\n    }\r\n\r\n    get desplayLinesCount() {\r\n        var linesCount = this.penManager.linesCount,\r\n            maxLines = this.defatultStyle.maxLines;\r\n        if ((maxLines > 0) && (linesCount > maxLines)) {\r\n            linesCount = maxLines;\r\n        }\r\n        return linesCount;\r\n    }\r\n\r\n    get linesWidth() {\r\n        return this.penManager.getMaxLineWidth();\r\n    }\r\n\r\n    get linesHeight() {\r\n        var linesCount = this.desplayLinesCount;\r\n        var linesHeight = (this.defatultStyle.lineHeight * linesCount);\r\n        if (linesCount > 0) {\r\n            linesHeight -= this.defatultStyle.lineSpacing;\r\n        }\r\n        return linesHeight;\r\n    }\r\n\r\n    get imageManager() {\r\n        return this.parent.imageManager;\r\n    }\r\n\r\n    newPenManager() {\r\n        return new PenManager({\r\n            pensPool: this.pensPool,\r\n            tagToText: this.parser.propToTagText,\r\n            tagToTextScope: this.parser\r\n        });\r\n    }\r\n\r\n    get tmpPenManager() {\r\n        if (this._tmpPenManager === null) {\r\n            this._tmpPenManager = this.newPenManager();\r\n        }\r\n        return this._tmpPenManager;\r\n    }\r\n\r\n    getPlainText(text, start, end) {\r\n        var plainText;\r\n        if (text == null) {\r\n            plainText = this.penManager.plainText;\r\n        } else {\r\n            var m, match = this.parser.splitText(text, 1); // PLAINTEXTONLY_MODE\r\n            plainText = \"\";\r\n            for (var i = 0, len = match.length; i < len; i++) {\r\n                plainText += match[i];\r\n            }\r\n        }\r\n\r\n        if ((start != null) || (end != null)) {\r\n            if (start == null) {\r\n                start = 0;\r\n            }\r\n            if (end == null) {\r\n                end = plainText.length;\r\n            }\r\n            plainText = plainText.substring(start, end);\r\n        }\r\n\r\n        return plainText;\r\n    }\r\n\r\n    getPenManager(text, retPenManager) {\r\n        if (text === undefined) {\r\n            return this.copyPenManager(retPenManager, this.penManager);\r\n        }\r\n\r\n        if (retPenManager === undefined) {\r\n            retPenManager = this.newPenManager();\r\n        }\r\n\r\n        var defatultStyle = this.defatultStyle;\r\n        this.updatePenManager(\r\n            text,\r\n            defatultStyle.wrapMode,\r\n            defatultStyle.wrapWidth,\r\n            defatultStyle.lineHeight,\r\n            retPenManager\r\n        );\r\n        return retPenManager;\r\n    }\r\n\r\n    getText(text, start, end, wrap) {\r\n        if (text == null) {\r\n            return this.penManager.getSliceTagText(start, end, wrap);\r\n        }\r\n\r\n        var penManager = this.tmpPenManager;\r\n        var defatultStyle = this.defatultStyle;\r\n        this.updatePenManager(\r\n            text,\r\n            defatultStyle.wrapMode,\r\n            defatultStyle.wrapWidth,\r\n            defatultStyle.lineHeight,\r\n            penManager\r\n        );\r\n\r\n        return penManager.getSliceTagText(start, end, wrap);\r\n    }\r\n\r\n    copyPenManager(ret, src) {\r\n        if (src === undefined) {\r\n            src = this.penManager;\r\n        }\r\n        return src.copy(ret);\r\n    }\r\n\r\n    getTextWidth(penManager) {\r\n        if (penManager === undefined) {\r\n            penManager = this.penManager;\r\n        }\r\n\r\n        return penManager.getMaxLineWidth();\r\n    }\r\n\r\n    getLastPen(penManager) {\r\n        if (penManager === undefined) {\r\n            penManager = this.penManager;\r\n        }\r\n\r\n        return penManager.lastPen;\r\n    }\r\n};\r\n\r\nvar methods = {\r\n    setInteractive: SetInteractive,\r\n}\r\n\r\nObject.assign(\r\n    CanvasText.prototype,\r\n    DrawMethods,\r\n    methods\r\n);\r\n\r\nexport default CanvasText;","const GetValue = Phaser.Utils.Objects.GetValue;\r\n\r\nclass ImageManager {\r\n    constructor(textureManager) {\r\n        this.textureManager = textureManager;\r\n        this.images = {};\r\n    }\r\n\r\n    add(key, config) {\r\n        if (typeof (key) === 'string') {\r\n            this._add(key, config);\r\n        } else if (Array.isArray(key)) {\r\n            var data = key;\r\n            for (var i = 0, cnt = data.length; i < cnt; i++) {\r\n                this._add(data[i]);\r\n            }\r\n        } else {\r\n            var data = key;\r\n            for (var key in data) {\r\n                this._add(key, data[key]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    _add(key, config) {\r\n        if (config === undefined) {\r\n            config = {\r\n                key: key\r\n            }\r\n        }\r\n\r\n        var textureKey = config.key, frameKey = config.frame;\r\n        var width = config.width, height = config.height;\r\n\r\n        if ((width === undefined) || (height === undefined)) {\r\n            var frame = this.textureManager.getFrame(textureKey, frameKey);\r\n            var frameWidth = (frame) ? frame.cutWidth : 0;\r\n            var frameHeight = (frame) ? frame.cutHeight : 0;\r\n            if ((width === undefined) && (height === undefined)) {\r\n                width = frameWidth;\r\n                height = frameHeight;\r\n            } else if (width === undefined) {\r\n                width = frameWidth * (height / frameHeight);\r\n            } else if (height === undefined) {\r\n                height = frameHeight * (width / frameWidth);\r\n            }\r\n        }\r\n\r\n        this.images[key] = {\r\n            key: textureKey,\r\n            frame: frameKey,\r\n            width: width,\r\n            height: height,\r\n            y: GetValue(config, 'y', 0),\r\n            left: GetValue(config, 'left', 0),\r\n            right: GetValue(config, 'right', 0)\r\n        }\r\n    }\r\n\r\n    remove(key) {\r\n        if (this.images.hasOwnProperty(key)) {\r\n            delete this.images[key];\r\n        }\r\n        return this;\r\n    }\r\n\r\n    get(key) {\r\n        if (!this.images.hasOwnProperty(key)) {\r\n            if (this.textureManager.exists(key)) {\r\n                this.add(key);\r\n            }\r\n        }\r\n        return this.images[key];\r\n    }\r\n\r\n    getOuterWidth(key) {\r\n        var data = this.get(key);\r\n        return (data) ? (data.width + data.left + data.right) : 0;\r\n    }\r\n\r\n    getFrame(key) {\r\n        var data = this.get(key);\r\n        return (data) ? this.textureManager.getFrame(data.key, data.frame) : undefined;\r\n    }\r\n\r\n    hasTexture(key) {\r\n        return !!this.getFrame(key);\r\n    }\r\n}\r\nexport default ImageManager;","import ImageManager from './ImageManager.js';\r\n\r\nvar globImageManager;\r\n\r\nexport default function(textureManager) {\r\n    if (globImageManager === undefined) {\r\n        globImageManager = new ImageManager(textureManager);\r\n    }\r\n    return globImageManager;\r\n}","import Render from './render/Render.js';\r\nimport TextStyle from './textstyle/TextStyle.js'; // extended\r\nimport CanvasTextKlass from './canvastext/CanvasText.js';\r\nimport Pool from '../../../pool.js';\r\nimport CONST from './const.js';\r\nimport GetGlobImageManager from './imagemanager/GetGlobImageManager.js';\r\n\r\nconst AddToDOM = Phaser.DOM.AddToDOM;\r\nconst CanvasPool = Phaser.Display.Canvas.CanvasPool;\r\nconst GameObject = Phaser.GameObjects.GameObject;\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\nconst RemoveFromDOM = Phaser.DOM.RemoveFromDOM;\r\nconst SPLITREGEXP = CONST.SPLITREGEXP;\r\n\r\nvar PensPools = {};\r\n\r\nclass Text extends GameObject {\r\n    constructor(scene, x, y, text, style, type, parser) {\r\n        if (x === undefined) {\r\n            x = 0;\r\n        }\r\n        if (y === undefined) {\r\n            y = 0;\r\n        }\r\n\r\n        super(scene, type);\r\n\r\n        this.renderer = scene.sys.game.renderer;\r\n\r\n        this.setPosition(x, y);\r\n        this.setOrigin(0, 0);\r\n        this.initPipeline();\r\n\r\n        this.canvas = CanvasPool.create(this);\r\n\r\n        this.context = this.canvas.getContext('2d');\r\n\r\n        if (style) {\r\n            // Override align\r\n            if (style.hasOwnProperty('align')) {\r\n                var halign = style.align;\r\n                delete style.align;\r\n                style.halign = halign;\r\n            }\r\n            // Has Stroke color but stroke thinkness, set stroke thinkness to 1\r\n            if (style.hasOwnProperty('stroke') && !style.hasOwnProperty('strokeThickness')) {\r\n                style.strokeThickness = 1;\r\n            }\r\n        }\r\n        this.style = new TextStyle(this, style);\r\n\r\n        this.autoRound = true;\r\n\r\n        this._text = undefined;\r\n\r\n        this.padding = {\r\n            left: 0,\r\n            right: 0,\r\n            top: 0,\r\n            bottom: 0\r\n        };\r\n\r\n        this.width = 1;\r\n\r\n        this.height = 1;\r\n\r\n        this.dirty = false;\r\n\r\n        //  If resolution wasn't set, then we get it from the game config\r\n        if (this.style.resolution === 0) {\r\n            this.style.resolution = scene.sys.game.config.resolution;\r\n        }\r\n\r\n        this._crop = this.resetCropObject();\r\n\r\n        //  Create a Texture for this Text object\r\n        this.texture = scene.sys.textures.addCanvas(null, this.canvas, true);\r\n\r\n        //  Get the frame\r\n        this.frame = this.texture.get();\r\n\r\n        //  Set the resolution\r\n        this.frame.source.resolution = this.style.resolution;\r\n\r\n        if (this.renderer.gl) {\r\n            //  Clear the default 1x1 glTexture, as we override it later\r\n\r\n            this.renderer.deleteTexture(this.frame.source.glTexture);\r\n\r\n            this.frame.source.glTexture = null;\r\n        }\r\n\r\n        if (!PensPools.hasOwnProperty(type)) {\r\n            PensPools[type] = new Pool();\r\n        }\r\n        this.canvasText = new CanvasTextKlass({\r\n            parent: this,\r\n            context: this.context,\r\n            parser: parser,\r\n            style: this.style,\r\n            pensPool: PensPools[type]\r\n        });\r\n\r\n        //this.initRTL();\r\n\r\n        if (style && style.padding) {\r\n            this.setPadding(style.padding);\r\n        }\r\n\r\n        this.setText(text);\r\n\r\n        scene.sys.game.events.on('contextrestored', function () {\r\n            this.dirty = true;\r\n        }, this);\r\n    }\r\n\r\n    set text(value) {\r\n        this.setText(value);\r\n    }\r\n    get text() {\r\n        return this._text;\r\n    }\r\n\r\n    initRTL() {\r\n        if (!this.style.rtl) {\r\n            return;\r\n        }\r\n\r\n        //  Here is where the crazy starts.\r\n        //\r\n        //  Due to browser implementation issues, you cannot fillText BiDi text to a canvas\r\n        //  that is not part of the DOM. It just completely ignores the direction property.\r\n\r\n        this.canvas.dir = 'rtl';\r\n\r\n        //  Experimental atm, but one day ...\r\n        this.context.direction = 'rtl';\r\n\r\n        //  Add it to the DOM, but hidden within the parent canvas.\r\n        this.canvas.style.display = 'none';\r\n\r\n        AddToDOM(this.canvas, this.scene.sys.canvas);\r\n\r\n        //  And finally we set the x origin\r\n        this.originX = 1;\r\n    }\r\n\r\n    setText(value) {\r\n        if (!value && value !== 0) {\r\n            value = '';\r\n        }\r\n\r\n        if (Array.isArray(value)) {\r\n            value = value.join('\\n');\r\n        }\r\n\r\n        if (value !== this._text) {\r\n            this._text = value.toString();\r\n\r\n            this.updateText();\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    setStyle(style) {\r\n        return this.style.setStyle(style);\r\n    }\r\n\r\n    setFont(font) {\r\n        return this.style.setFont(font);\r\n    }\r\n\r\n    setFontFamily(family) {\r\n        return this.style.setFontFamily(family);\r\n    }\r\n\r\n    setFontSize(size) {\r\n        return this.style.setFontSize(size);\r\n    }\r\n\r\n    setFontStyle(style) {\r\n        return this.style.setFontStyle(style);\r\n    }\r\n\r\n    setFixedSize(width, height) {\r\n        return this.style.setFixedSize(width, height);\r\n    }\r\n\r\n    setBackgroundColor(color) {\r\n        return this.style.setBackgroundColor(color);\r\n    }\r\n\r\n    setFill(color) {\r\n        return this.style.setFill(color);\r\n    }\r\n\r\n    setColor(color) {\r\n        return this.style.setColor(color);\r\n    }\r\n\r\n    setStroke(color, thickness) {\r\n        return this.style.setStroke(color, thickness);\r\n    }\r\n\r\n    setShadow(x, y, color, blur, shadowStroke, shadowFill) {\r\n        return this.style.setShadow(x, y, color, blur, shadowStroke, shadowFill);\r\n    }\r\n\r\n    setShadowOffset(x, y) {\r\n        return this.style.setShadowOffset(x, y);\r\n    }\r\n\r\n    setShadowColor(color) {\r\n        return this.style.setShadowColor(color);\r\n    }\r\n\r\n    setShadowBlur(blur) {\r\n        return this.style.setShadowBlur(blur);\r\n    }\r\n\r\n    setShadowStroke(enabled) {\r\n        return this.style.setShadowStroke(enabled);\r\n    }\r\n\r\n    setShadowFill(enabled) {\r\n        return this.style.setShadowFill(enabled);\r\n    }\r\n\r\n    setWrapMode(mode) {\r\n        return this.style.setWrapMode(mode);\r\n    }\r\n\r\n    setWrapWidth(width) {\r\n        return this.style.setWrapWidth(width);\r\n    }\r\n\r\n    setAlign(align) {\r\n        return this.style.setHAlign(align);\r\n    }\r\n\r\n    setLineSpacing(value) {\r\n        return this.style.setLineSpacing(value);\r\n    }\r\n\r\n    setPadding(left, top, right, bottom) {\r\n        if (typeof left === 'object') {\r\n            var config = left;\r\n\r\n            //  If they specify x and/or y this applies to all\r\n            var x = GetValue(config, 'x', null);\r\n\r\n            if (x !== null) {\r\n                left = x;\r\n                right = x;\r\n            } else {\r\n                left = GetValue(config, 'left', 0);\r\n                right = GetValue(config, 'right', left);\r\n            }\r\n\r\n            var y = GetValue(config, 'y', null);\r\n\r\n            if (y !== null) {\r\n                top = y;\r\n                bottom = y;\r\n            } else {\r\n                top = GetValue(config, 'top', 0);\r\n                bottom = GetValue(config, 'bottom', top);\r\n            }\r\n        } else {\r\n            if (left === undefined) {\r\n                left = 0;\r\n            }\r\n            if (top === undefined) {\r\n                top = left;\r\n            }\r\n            if (right === undefined) {\r\n                right = left;\r\n            }\r\n            if (bottom === undefined) {\r\n                bottom = top;\r\n            }\r\n        }\r\n\r\n        this.padding.left = left;\r\n        this.padding.top = top;\r\n        this.padding.right = right;\r\n        this.padding.bottom = bottom;\r\n\r\n        return this.updateText(false);\r\n    }\r\n\r\n    setResolution(value) {\r\n        return this.style.setResolution(value);\r\n    }\r\n\r\n    setMaxLines(max) {\r\n        return this.style.setMaxLines(max);\r\n    }\r\n\r\n    updateText(runWrap) {\r\n        if (runWrap === undefined) {\r\n            runWrap = true;\r\n        }\r\n        var canvasText = this.canvasText;\r\n\r\n        // wrap text to pens\r\n        var style = this.style;\r\n        if (runWrap) {\r\n            canvasText.updatePenManager(\r\n                this._text,\r\n                style.wrapMode,\r\n                style.wrapWidth,\r\n                style.lineHeight\r\n            );\r\n        }\r\n\r\n        // resize\r\n        var padding = this.padding;\r\n        var textWidth, textHeight;\r\n        if (style.fixedWidth === 0) {\r\n            this.width = canvasText.linesWidth + padding.left + padding.right;\r\n            textWidth = canvasText.linesWidth;\r\n        }\r\n        else {\r\n            this.width = style.fixedWidth;\r\n            textWidth = this.width - padding.left - padding.right;\r\n            if (textWidth < canvasText.linesWidth) {\r\n                textWidth = canvasText.linesWidth;\r\n            }\r\n        }\r\n        if (style.fixedHeight === 0) {\r\n            this.height = canvasText.linesHeight + padding.top + padding.bottom;\r\n            textHeight = canvasText.linesHeight;\r\n        }\r\n        else {\r\n            this.height = style.fixedHeight;\r\n            textHeight = this.height - padding.top - padding.bottom;\r\n            if (textHeight < canvasText.linesHeight) {\r\n                textHeight = canvasText.linesHeight;\r\n            }\r\n        }\r\n\r\n        var w = this.width;\r\n        var h = this.height;\r\n\r\n        this.updateDisplayOrigin();\r\n\r\n        var resolution = style.resolution;\r\n        w *= resolution;\r\n        h *= resolution;\r\n\r\n        w = Math.max(Math.ceil(w), 1);\r\n        h = Math.max(Math.ceil(h), 1);\r\n\r\n        var canvas = this.canvas;\r\n        var context = this.context;\r\n        if (canvas.width !== w || canvas.height !== h) {\r\n            canvas.width = w;\r\n            canvas.height = h;\r\n            this.frame.setSize(w, h);\r\n        } else {\r\n            context.clearRect(0, 0, w, h);\r\n        }\r\n\r\n        context.save();\r\n        context.scale(resolution, resolution);\r\n\r\n        // draw\r\n        canvasText.draw(\r\n            padding.left,\r\n            padding.top,\r\n            textWidth,\r\n            textHeight\r\n        );\r\n\r\n        context.restore();\r\n\r\n        if (this.renderer.gl) {\r\n            this.frame.source.glTexture = this.renderer.canvasToTexture(canvas, this.frame.source.glTexture, true);\r\n            this.frame.glTexture = this.frame.source.glTexture;\r\n        }\r\n\r\n        this.dirty = true;\r\n\r\n        var input = this.input;\r\n\r\n        if (input && !input.customHitArea) {\r\n            input.hitArea.width = this.width;\r\n            input.hitArea.height = this.height;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    getTextMetrics() {\r\n        return this.style.getTextMetrics();\r\n    }\r\n\r\n    toJSON() {\r\n        var out = Components.ToJSON(this);\r\n\r\n        //  Extra Text data is added here\r\n\r\n        var data = {\r\n            autoRound: this.autoRound,\r\n            text: this._text,\r\n            style: this.style.toJSON(),\r\n            resolution: this.resolution,\r\n            padding: {\r\n                left: this.padding.left,\r\n                right: this.padding.right,\r\n                top: this.padding.top,\r\n                bottom: this.padding.bottom\r\n            }\r\n        };\r\n\r\n        out.data = data;\r\n\r\n        return out;\r\n    }\r\n\r\n    preDestroy() {\r\n        if (this.style.rtl) {\r\n            RemoveFromDOM(this.canvas);\r\n        }\r\n\r\n        CanvasPool.remove(this.canvas);\r\n        this.canvasText.destroy();\r\n    }\r\n\r\n    setInteractive(shape, callback, dropZone) {\r\n        GameObject.prototype.setInteractive.call(this, shape, callback, dropZone);\r\n        this.canvasText.setInteractive();\r\n        return this;\r\n    }\r\n\r\n    getWrappedText(text, start, end) {\r\n        text = this.canvasText.getText(text, start, end, true);\r\n        return text.split(SPLITREGEXP);\r\n    }\r\n\r\n    getPlainText(text, start, end) {\r\n        return this.canvasText.getPlainText(text, start, end);\r\n    }\r\n\r\n    getText(text, start, end) {\r\n        return this.canvasText.getText(text, start, end, false);\r\n    }\r\n\r\n    getSubString(text, start, end) {\r\n        return this.getText(text, start, end);\r\n    }\r\n\r\n    copyPenManager(penManager) {\r\n        return this.canvasText.copyPenManager(penManager);\r\n    }\r\n\r\n    getPenManager(text, penManager) {\r\n        return this.canvasText.getPenManager(text, penManager);\r\n    }\r\n\r\n    setSize(width, height) {\r\n        return this.setFixedSize(width, height);\r\n    }\r\n\r\n    resize(width, height) {\r\n        return this.setFixedSize(width, height);\r\n    }\r\n\r\n    set lineSpacing(value) {\r\n        this.setLineSpacing(value);\r\n    }\r\n    get lineSpacing() {\r\n        return this.style.lineSpacing;\r\n    }\r\n\r\n    get imageManager() {\r\n        return GetGlobImageManager(this.scene.textures);\r\n    }\r\n\r\n    addImage(key, config) {\r\n        this.imageManager.add(key, config);\r\n        return this;\r\n    }\r\n\r\n    drawAreaBounds(graphics, color) {\r\n        this.canvasText.hitAreaManager.drawBounds(graphics, color, this);\r\n        return this;\r\n    }\r\n}\r\n\r\nconst Components = Phaser.GameObjects.Components;\r\nPhaser.Class.mixin(Text,\r\n    [\r\n        Components.Alpha,\r\n        Components.BlendMode,\r\n        Components.ComputedSize,\r\n        Components.Crop,\r\n        Components.Depth,\r\n        Components.Flip,\r\n        Components.GetBounds,\r\n        Components.Mask,\r\n        Components.Origin,\r\n        Components.Pipeline,\r\n        Components.ScrollFactor,\r\n        Components.Tint,\r\n        Components.Transform,\r\n        Components.Visible,\r\n        Render\r\n    ]\r\n);\r\n\r\nexport default Text;","import TextStyle from '../textbase/textstyle/TextStyle.js';\r\n\r\nvar GETPROP_RESULT = {\r\n    plainText: null,\r\n    prevProp: null\r\n};\r\n\r\nvar STYLE_RESULT = new TextStyle();\r\nvar PROPLIST = [];\r\n\r\nclass parser {\r\n    constructor(tags) {\r\n        if (tags === undefined) {\r\n            tags = {};\r\n        }\r\n        this.tags = tags;\r\n    }\r\n\r\n    addTag(name, prop) {\r\n        this.tags[name] = prop;\r\n    }\r\n\r\n    splitText(text, mode) {\r\n        var result = [];\r\n        var arr, m, charIdx = 0,\r\n            totalLen = text.length,\r\n            matchStart = totalLen;\r\n        var innerMatch;\r\n        while (true) {\r\n            arr = RE_SPLITTEXT.exec(text);\r\n            if (!arr) {\r\n                break;\r\n            }\r\n\r\n            m = arr[0];\r\n            matchStart = RE_SPLITTEXT.lastIndex - m.length;\r\n\r\n            if (charIdx < matchStart) {\r\n                result.push(text.substring(charIdx, matchStart));\r\n            }\r\n            if (mode === undefined) {\r\n                result.push(m);\r\n            } else if (mode === 1) { // RAWTEXTONLY_MODE\r\n                if (RE_CLASS_HEADER.test(m)) {\r\n                    innerMatch = m.match(RE_CLASS);\r\n                    result.push(innerMatch[2]);\r\n                } else if (RE_STYLE_HEADER.test(m)) {\r\n                    innerMatch = m.match(RE_STYLE);\r\n                    result.push(innerMatch[2]);\r\n                }\r\n            }\r\n\r\n            charIdx = RE_SPLITTEXT.lastIndex;\r\n        }\r\n\r\n\r\n        if (charIdx < totalLen) {\r\n            result.push(text.substring(charIdx, totalLen));\r\n        }\r\n        return result; // [text,...]\r\n    }\r\n\r\n    tagTextToProp(text, prevProp) {\r\n        var plainText, propOut;\r\n        if (RE_CLASS_HEADER.test(text)) {\r\n            var innerMatch = text.match(RE_CLASS);\r\n            if (innerMatch != null) {\r\n                var name = innerMatch[1];\r\n                var tags = this.tags;\r\n                if (tags.hasOwnProperty(name)) {\r\n                    propOut = tags[name];\r\n                } else {\r\n                    propOut = {};\r\n                }\r\n                propOut._class = name;\r\n                plainText = innerMatch[2];\r\n            }\r\n        } else if (RE_STYLE_HEADER.test(text)) {\r\n            var innerMatch = text.match(RE_STYLE);\r\n            if (innerMatch != null) {\r\n                var style = innerMatch[1];\r\n                propOut = styleToProp(style);\r\n                propOut._style = style;\r\n                plainText = innerMatch[2];\r\n            }\r\n        }\r\n\r\n        if (plainText == null) {\r\n            plainText = text;\r\n        }\r\n\r\n        if (propOut == null) {\r\n            propOut = {};\r\n        }\r\n\r\n        var result = GETPROP_RESULT;\r\n        result.plainText = plainText;\r\n        result.prop = propOut;\r\n        return result;\r\n    }\r\n\r\n    propToContextStyle(defaultStyle, prop) {\r\n        var result = STYLE_RESULT;\r\n        if (!prop.hasOwnProperty('img')) {\r\n            result.image = null;\r\n\r\n            if (prop.hasOwnProperty('family') || prop.hasOwnProperty('fontFamily') || prop.hasOwnProperty('font-family')) {\r\n                var family = (prop.hasOwnProperty('family')) ? prop.family :\r\n                    (prop.hasOwnProperty('fontFamily')) ? prop.fontFamily :\r\n                    prop['font-family'];\r\n                result.fontFamily = family;\r\n            } else {\r\n                result.fontFamily = defaultStyle.fontFamily;\r\n            }\r\n\r\n            if (prop.hasOwnProperty('size') || prop.hasOwnProperty('fontSize') || prop.hasOwnProperty('font-size')) {\r\n                var size = (prop.hasOwnProperty('size')) ? prop.size :\r\n                    (prop.hasOwnProperty('fontSize')) ? prop.fontSize :\r\n                    prop['font-size'];\r\n                if (typeof (size) === 'number') {\r\n                    size = size.toString() + 'px';\r\n                }\r\n                result.fontSize = size;\r\n            } else {\r\n                result.fontSize = defaultStyle.fontSize;\r\n            }\r\n\r\n            if (prop.hasOwnProperty('style') || prop.hasOwnProperty('fontStyle') || prop.hasOwnProperty('font-style')) {\r\n                var fontStyle = (prop.hasOwnProperty('style')) ? prop.style :\r\n                    (prop.hasOwnProperty('fontStyle')) ? prop.fontStyle :\r\n                    prop['font-style'];\r\n                result.fontStyle = fontStyle;\r\n            } else {\r\n                result.fontStyle = defaultStyle.fontStyle;\r\n            }\r\n\r\n            if (prop.hasOwnProperty('color') || prop.hasOwnProperty('font-color')) {\r\n                var color = (prop.hasOwnProperty('color')) ? prop.color : prop['font-color'];\r\n                result.color = color;\r\n            } else {\r\n                result.color = defaultStyle.color;\r\n            }\r\n\r\n            if (prop.hasOwnProperty('stroke')) {\r\n                var stroke = prop.stroke; // {color, thinkness}\r\n                result.stroke = (stroke.hasOwnProperty('color')) ? stroke.color : defaultStyle.stroke;\r\n                result.strokeThickness = (stroke.hasOwnProperty('thinkness')) ? stroke.thinkness : defaultStyle.strokeThickness;\r\n            } else {\r\n                result.stroke = defaultStyle.stroke;\r\n                result.strokeThickness = defaultStyle.strokeThickness;\r\n            }\r\n        } else {\r\n            result.image = prop.img;\r\n        }\r\n\r\n        if (prop.hasOwnProperty('shadow')) {\r\n            var shadow = prop.shadow; // {color, offsetX, offsetY, blur}\r\n            result.shadowColor = (shadow.hasOwnProperty('color')) ? shadow.color : defaultStyle.shadowColor;\r\n            result.shadowOffsetX = (shadow.hasOwnProperty('offsetX')) ? shadow.offsetX : defaultStyle.shadowOffsetX;\r\n            result.shadowOffsetY = (shadow.hasOwnProperty('offsetY')) ? shadow.offsetY : defaultStyle.shadowOffsetY;\r\n            result.shadowBlur = (shadow.hasOwnProperty('blur')) ? shadow.blur : defaultStyle.shadowBlur;\r\n            result.shadowStroke = true;\r\n            result.shadowFill = true;\r\n        } else {\r\n            result.shadowColor = defaultStyle.shadowColor;\r\n            result.shadowOffsetX = defaultStyle.shadowOffsetX;\r\n            result.shadowOffsetY = defaultStyle.shadowOffsetY;\r\n            result.shadowBlur = defaultStyle.shadowBlur;\r\n            result.shadowStroke = defaultStyle.shadowStroke;\r\n            result.shadowFill = defaultStyle.shadowFill;\r\n        }\r\n\r\n        if (prop.hasOwnProperty('u') || prop.hasOwnProperty('underline')) {\r\n            var u = (prop.hasOwnProperty('u')) ? prop.u : prop.underline; // {color, thinkness, offset}\r\n            result.underlineColor = (u.hasOwnProperty('color')) ? u.color : defaultStyle.underlineColor;\r\n            result.underlineThickness = (u.hasOwnProperty('thinkness')) ? u.thinkness : defaultStyle.underlineThickness;\r\n            result.underlineOffset = (u.hasOwnProperty('offset')) ? u.offset : defaultStyle.underlineOffset;\r\n        } else {\r\n            result.underlineColor = defaultStyle.underlineColor;\r\n            result.underlineThickness = defaultStyle.underlineThickness;\r\n            result.underlineOffset = defaultStyle.underlineOffset;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    propToTagText(text, prop, prevProp) {\r\n        if (prop.hasOwnProperty('_class')) { // class mode\r\n            if (text === '') {\r\n                if (this.isTextTag(prop._class)) {\r\n                    return '';\r\n                }\r\n            }\r\n            return \"<class='\" + prop._class + \"'>\" + text + \"</class>\";\r\n        } else if (prop.hasOwnProperty('_style')) { // class mode\r\n            return \"<style='\" + prop._style + \"'>\" + text + \"</style>\";\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.tags = undefined;\r\n    }\r\n\r\n    isTextTag(tagName) {\r\n        var tag = this.tags[tagName];\r\n        if (tag) {\r\n            return (tag.img == null);\r\n        } else { // tag not found\r\n            return false;\r\n        }\r\n    }\r\n};\r\n\r\nvar styleToProp = function (s) {\r\n    s = s.split(\";\");\r\n\r\n    var result = {},\r\n        prop, k, v;\r\n    for (var i = 0, slen = s.length; i < slen; i++) {\r\n        prop = s[i].split(\":\");\r\n        k = prop[0], v = prop[1];\r\n        if (isEmpty(k) || isEmpty(v)) {\r\n            continue;\r\n        }\r\n\r\n        switch (k) {\r\n            case 'stroke':\r\n                var stroke = v.split(' '); // stroke:blue 1px\r\n                var len = stroke.length;\r\n                v = {};\r\n                if (len >= 1) {\r\n                    v.color = stroke[0];\r\n                }\r\n                if (len >= 2) {\r\n                    v.thinkness = parseInt(stroke[1].replace('px', ''));\r\n                }\r\n                break;\r\n            case 'shadow':\r\n                var shadow = v.split(' '); // shadow:blue 2px 2px 2px\r\n                var len = shadow.length;\r\n                v = {};\r\n                if (len >= 1) {\r\n                    v.color = shadow[0];\r\n                }\r\n                if (len >= 2) {\r\n                    v.offsetX = parseInt(shadow[1].replace('px', ''));\r\n                }\r\n                if (len >= 3) {\r\n                    v.offsetY = parseInt(shadow[2].replace('px', ''));\r\n                }\r\n                if (len >= 4) {\r\n                    v.blur = parseInt(shadow[3].replace('px', ''));\r\n                }\r\n                break;\r\n            case 'u':\r\n            case 'underline': // underline:blue 3px -1px\r\n                var u = v.split(' ');\r\n                var len = u.length;\r\n                v = {};\r\n                if (len >= 1) {\r\n                    v.color = u[0];\r\n                }\r\n                if (len >= 2) {\r\n                    v.thinkness = parseInt(u[1].replace('px', ''));\r\n                }\r\n                if (len >= 3) {\r\n                    v.offset = parseInt(u[2].replace('px', ''));\r\n                }\r\n                break;\r\n        }\r\n        result[k] = v;\r\n    }\r\n    return result;\r\n};\r\n\r\nvar isEmpty = function (s) {\r\n    // Remove white spaces.\r\n    s = s.replace(RE_SPACE, '');\r\n    return (s.length === 0);\r\n};\r\n\r\nvar RE_SPLITTEXT = /<\\s*class=[\"|']([^\"|']+)[\"|']\\s*\\>([\\s\\S]*?)<\\s*\\/class\\s*\\>|<\\s*style=[\"|']([^\"|']+)[\"|']\\s*\\>([\\s\\S]*?)<\\s*\\/style\\s*\\>/g;\r\nvar RE_CLASS_HEADER = /<\\s*class=/i;\r\nvar RE_CLASS = /<\\s*class=[\"|']([^\"|']+)[\"|']\\s*\\>([\\s\\S]*?)<\\s*\\/class\\s*\\>/;\r\nvar RE_STYLE_HEADER = /<\\s*style=/i;\r\nvar RE_STYLE = /<\\s*style=[\"|']([^\"|']+)[\"|']\\s*\\>([\\s\\S]*?)<\\s*\\/style\\s*\\>/;\r\nvar RE_SPACE = /^\\s+|\\s+$/;\r\n\r\nexport default parser;","import Text from '../textbase/Text.js';\r\nimport ParserKlass from './Parser.js';\r\n\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\n\r\nclass TagText extends Text {\r\n    constructor(scene, x, y, text, style) {\r\n        var tags = GetValue(style, 'tags', undefined);\r\n        var parser = new ParserKlass(tags);\r\n        super(scene, x, y, text, style, 'rexTagText', parser);\r\n        this.parser = parser;\r\n    }\r\n\r\n    addTag(name, prop) {\r\n        this.parser.addTag(name, prop);\r\n        return this.updateText(true);\r\n    }\r\n\r\n    addTags(tags) {\r\n        for(var name in tags){\r\n            this.parser.addTag(name, tags[name]);\r\n        }\r\n        return this.updateText(true);\r\n    }\r\n\r\n    preDestroy() {\r\n        super.preDestroy();\r\n        this.parser.destroy();\r\n        this.parser = undefined;\r\n    }\r\n}\r\n\r\nexport default TagText;","import TagText from './TagText.js';\r\n\r\nconst GetAdvancedValue = Phaser.Utils.Objects.GetAdvancedValue;\r\nconst BuildGameObject = Phaser.GameObjects.BuildGameObject;\r\n\r\nexport default function (config, addToScene) {\r\n    // style Object = {\r\n    //     font: [ 'font', '16px Courier' ],\r\n    //     backgroundColor: [ 'backgroundColor', null ],\r\n    //     fill: [ 'fill', '#fff' ],\r\n    //     stroke: [ 'stroke', '#fff' ],\r\n    //     strokeThickness: [ 'strokeThickness', 0 ],\r\n    //     shadowOffsetX: [ 'shadow.offsetX', 0 ],\r\n    //     shadowOffsetY: [ 'shadow.offsetY', 0 ],\r\n    //     shadowColor: [ 'shadow.color', '#000' ],\r\n    //     shadowBlur: [ 'shadow.blur', 0 ],\r\n    //     shadowStroke: [ 'shadow.stroke', false ],\r\n    //     shadowFill: [ 'shadow.fill', false ],\r\n    //     align: [ 'align', 'left' ],\r\n    //     maxLines: [ 'maxLines', 0 ],\r\n    //     fixedWidth: [ 'fixedWidth', false ],\r\n    //     fixedHeight: [ 'fixedHeight', false ]\r\n    // }\r\n\r\n    var content = GetAdvancedValue(config, 'text', '');\r\n    var style = GetAdvancedValue(config, 'style', null);\r\n\r\n    //  Padding\r\n    //      { padding: 2 }\r\n    //      { padding: { x: , y: }}\r\n    //      { padding: { left: , top: }}\r\n    //      { padding: { left: , right: , top: , bottom: }}  \r\n\r\n    var padding = GetAdvancedValue(config, 'padding', null);\r\n\r\n    if (padding !== null) {\r\n        style.padding = padding;\r\n    }\r\n\r\n    if (addToScene !== undefined) {\r\n        config.add = addToScene;\r\n    }\r\n\r\n    var gameObject = new TagText(this.scene, 0, 0, content, style);\r\n    BuildGameObject(this.scene, gameObject, config);\r\n\r\n    //  Text specific config options:\r\n\r\n    gameObject.autoRound = GetAdvancedValue(config, 'autoRound', true);\r\n    gameObject.resolution = GetAdvancedValue(config, 'resolution', 1);\r\n\r\n    return gameObject;\r\n};","import Factory from './gameobjects/text/tagtext/Factory.js';\r\nimport Creator from './gameobjects/text/tagtext/Creator.js';\r\nimport TagText from './gameobjects/text/tagtext/TagText.js';\r\n\r\nPhaser.GameObjects.GameObjectFactory.register('rexTagText', Factory);\r\nPhaser.GameObjects.GameObjectCreator.register('rexTagText', Creator);\r\n\r\nexport default TagText;","import TagText from './TagText.js';\r\n\r\nexport default function (x, y, text, style) {\r\n    var gameObject = new TagText(this.scene, x, y, text, style);\r\n    this.scene.add.existing(gameObject);\r\n    return gameObject;\r\n}","export default {\r\n    setEventEmitter(eventEmitter, EventEmitterClass) {\r\n        if (EventEmitterClass === undefined) {\r\n            EventEmitterClass = Phaser.Events.EventEmitter; // Use built-in EventEmitter class by default\r\n        }\r\n        this._privateEE = (eventEmitter === undefined);\r\n        this._eventEmitter = (this._privateEE) ? (new EventEmitterClass()) : eventEmitter;\r\n        return this;\r\n    },\r\n\r\n    destroyEventEmitter() {\r\n        if (this._eventEmitter && this._privateEE) {\r\n            this._eventEmitter.shutdown();\r\n        }\r\n        return this;\r\n    },\r\n\r\n    getEventEmitter() {\r\n        return this._eventEmitter;\r\n    },\r\n\r\n    on: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.on.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    once: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.once.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    off: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.off.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    emit: function (event) {\r\n        if (this._eventEmitter && event) {\r\n            this._eventEmitter.emit.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    addListener: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.addListener.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    removeListener: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.removeListener.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    removeAllListeners: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.removeAllListeners.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    listenerCount: function () {\r\n        if (this._eventEmitter) {\r\n            return this._eventEmitter.listenerCount.apply(this._eventEmitter, arguments);\r\n        }\r\n        return 0;\r\n    },\r\n\r\n    listeners: function () {\r\n        if (this._eventEmitter) {\r\n            return this._eventEmitter.listeners.apply(this._eventEmitter, arguments);\r\n        }\r\n        return [];\r\n    }\r\n};","const SceneClass = Phaser.Scene;\r\nvar IsSceneObject = function (object) {\r\n    return (object instanceof SceneClass);\r\n}\r\nexport default IsSceneObject;","import IsSceneObject from './IsSceneObject.js';\r\n\r\nvar GetSceneObject = function (object) {\r\n    if (IsSceneObject(object)) { // object = scene\r\n        return object;\r\n    } else if (object.scene && IsSceneObject(object.scene)) { // object = game object\r\n        return object.scene;\r\n    } else if (object.parent && object.parent.scene && IsSceneObject(object.parent.scene)) { // parent = bob object\r\n        return object.parent.scene;\r\n    }\r\n}\r\n\r\nexport default GetSceneObject;","import EventEmitterMethods from '../../utils/eventemitter/EventEmitterMethods.js';\r\nimport GetSceneObject from '../../utils/system/GetSceneObject.js';\r\n\r\nconst GetFastValue = Phaser.Utils.Objects.GetFastValue;\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\n\r\nclass TextTyping {\r\n    constructor(gameObject, config) {\r\n        this.gameObject = gameObject;\r\n        this.scene = GetSceneObject(gameObject);        \r\n        this.setEventEmitter(GetValue(config, 'eventEmitter', undefined));\r\n        \r\n        this.timer = null;\r\n        this.resetFromJSON(config);\r\n        this.boot();\r\n    }\r\n\r\n    /**\r\n     * Reset status by JSON object\r\n     * @param {object} o JSON object\r\n     * @returns {object} this object\r\n     */\r\n    resetFromJSON(o) {\r\n        this.setTypeMode(GetValue(o, 'typeMode', 0));\r\n        this.setTypeSpeed(GetValue(o, 'speed', 333));\r\n        this.setTextCallback = GetFastValue(o, 'setTextCallback', null);\r\n        this.setTextCallbackScope = GetFastValue(o, 'setTextCallbackScope', null);\r\n\r\n        this.typingIdx = GetFastValue(o, 'typingIdx', 0);\r\n        this.text = transferText(GetFastValue(o, 'text', ''));\r\n        this.textLen = GetFastValue(o, 'textLen', 0);\r\n        this.insertIdx = GetFastValue(o, 'insertIdx', null);\r\n\r\n        var elapsed = GetFastValue(o, 'elapsed', null);\r\n        if (elapsed !== null) {\r\n            this.start(undefined, undefined, this.typingIdx, elapsed);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Return status in JSON object\r\n     * @returns JSON object\r\n     */\r\n    toJSON() {\r\n        var elapsed;\r\n        var timer = this.getTimer();\r\n        if (timer) {\r\n            elapsed = timer.elapsed;\r\n        } else {\r\n            elapsed = null;\r\n        }\r\n\r\n        return {\r\n            typeMode: this.typeMode,\r\n            speed: this.speed,\r\n            setTextCallback: this.setTextCallback,\r\n            setTextCallbackScope: this.setTextCallbackScope,\r\n\r\n            typingIdx: this.typingIdx,\r\n            text: this.text,\r\n            textLen: this.textLen,\r\n            insertIdx: this.insertIdx,\r\n            elapsed: elapsed\r\n        };\r\n    }\r\n\r\n    boot() {\r\n        if (this.gameObject.once) { // oops, bob object does not have event emitter\r\n            this.gameObject.on('destroy', this.destroy, this);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    shutdown() {\r\n        this.destroyEventEmitter();\r\n        this.freeTimer();\r\n        this.gameObject = undefined;\r\n        this.scene = undefined;\r\n        return this;\r\n    }\r\n\r\n    destroy() {\r\n        this.shutdown();\r\n        return this;\r\n    }\r\n\r\n    setTypeMode(m) {\r\n        if (typeof (m) === 'string') {\r\n            m = TYPEMODE[m];\r\n        }\r\n        this.typeMode = m;\r\n        return this;\r\n    }\r\n\r\n    setTypeSpeed(speed) {\r\n        this.speed = speed;\r\n        return this;\r\n    }\r\n\r\n    get isTyping() {\r\n        return (this.getTimer() !== null);\r\n    }\r\n\r\n    get isLastChar() {\r\n        return (this.typingIdx === this.textLen);\r\n    }\r\n\r\n    start(text, speed, startIdx, timerStartAt) {\r\n        if (text !== undefined) {\r\n            this.setTypingContent(text);\r\n        }\r\n        if (speed !== undefined) {\r\n            this.speed = speed;\r\n        }\r\n        if (startIdx === undefined) {\r\n            startIdx = 0;\r\n        }\r\n\r\n        this.typingIdx = startIdx + 1;\r\n        if (this.speed === 0) {\r\n            this.stop(true);\r\n        } else {\r\n            this.startTimer(timerStartAt);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    appendText(text) {\r\n        var newText = this.text.concat(transferText(text));\r\n        if (this.isTyping) {\r\n            this.setTypingContent(newText);\r\n        } else {\r\n            this.start(newText, undefined, this.textLen);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    stop(showAllText) {\r\n        var timer = this.getTimer();\r\n        if (timer) {\r\n            this.freeTimer();\r\n        }\r\n        if (showAllText) {\r\n            this.typingIdx = this.textLen;\r\n            this.setText(this.text);\r\n            this.emit('type');\r\n            this.emit('complete', this, this.gameObject);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    pause() {\r\n        var timer = this.getTimer();\r\n        if (timer) {\r\n            timer.paused = true;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    resume() {\r\n        var timer = this.getTimer();\r\n        if (timer) {\r\n            timer.paused = false;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    setTypingContent(text) {\r\n        this.text = transferText(text);\r\n        this.textLen = this.getTextLength(this.text);\r\n        return this;\r\n    }\r\n\r\n    onTyping() {\r\n        var newText = this.getTypingString(this.text, this.typingIdx, this.textLen, this.typeMode);\r\n        this.setText(newText);\r\n        this.emit('type');\r\n\r\n        if (this.isLastChar) {\r\n            this.freeTimer();\r\n            this.emit('complete', this, this.gameObject);\r\n        } else {\r\n            this.timer.delay = this.speed; // delay of next typing            \r\n            this.typingIdx++;\r\n        }\r\n    }\r\n\r\n    getTypingString(text, typeIdx, textLen, typeMode) {\r\n        var result;\r\n        if (typeMode === 0) { //left-to-right\r\n            var startIdx = 0;\r\n            var endIdx = typeIdx;\r\n            this.insertIdx = endIdx;\r\n            result = this.getSubString(text, startIdx, endIdx);\r\n\r\n        } else if (typeMode === 1) { //right-to-left\r\n            var endIdx = textLen;\r\n            var startIdx = endIdx - typeIdx;\r\n            this.insertIdx = 0;\r\n            result = this.getSubString(text, startIdx, endIdx);\r\n\r\n        } else if (typeMode === 2) { //middle-to-sides\r\n            var midIdx = textLen / 2;\r\n            var startIdx = Math.floor(midIdx - (typeIdx / 2));\r\n            var endIdx = startIdx + typeIdx;\r\n            this.insertIdx = (typeIdx % 2) ? typeIdx : 0;\r\n            result = this.getSubString(text, startIdx, endIdx);\r\n\r\n        } else if (typeMode === 3) { //sides-to-middle\r\n            var lowerLen = Math.floor(typeIdx / 2);\r\n            var lowerResult;\r\n            if (lowerLen > 0) {\r\n                var endIdx = textLen;\r\n                var startIdx = endIdx - lowerLen;\r\n                lowerResult = this.getSubString(text, startIdx, endIdx);\r\n            } else {\r\n                lowerResult = \"\";\r\n            }\r\n\r\n            var upperLen = typeIdx - lowerLen;\r\n            var upperResult;\r\n            if (upperLen > 0) {\r\n                var startIdx = 0;\r\n                var endIdx = startIdx + upperLen;\r\n                this.insertIdx = endIdx;\r\n                upperResult = this.getSubString(text, startIdx, endIdx);\r\n            } else {\r\n                upperResult = \"\";\r\n                this.insertIdx = 0;\r\n            }\r\n            result = upperResult + lowerResult;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    startTimer(timerStartAt) {\r\n        if (this.timer) {\r\n            this.freeTimer();\r\n        }\r\n        var delay, startAt;\r\n        if (timerStartAt === undefined) {\r\n            delay = 0;\r\n            startAt = 0;\r\n        } else {\r\n            delay = this.speed;\r\n            startAt = timerStartAt;\r\n        }\r\n\r\n        this.timer = this.scene.time.addEvent({\r\n            delay: 0,\r\n            startAt: startAt,\r\n            loop: true,\r\n            callback: this.onTyping,\r\n            callbackScope: this\r\n        });\r\n        return this;\r\n    }\r\n\r\n    getTimer() {\r\n        return this.timer;\r\n    }\r\n\r\n    freeTimer() {\r\n        if (this.timer) {\r\n            this.timer.remove();\r\n            this.timer = null;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    setText(text) {\r\n        if (this.setTextCallback) {\r\n            if (this.setTextCallbackScope) {\r\n                text = this.setTextCallback.call(this.setTextCallbackScope, text, this.isLastChar, this.insertIdx);\r\n            } else {\r\n                text = this.setTextCallback(text, this.isLastChar, this.insertIdx);\r\n            }\r\n        }\r\n        this.gameObject.setText(text);\r\n    }\r\n\r\n    getTextLength(text) {\r\n        var gameObject = this.gameObject;\r\n        var len;\r\n        if (gameObject.getPlainText) {\r\n            len = gameObject.getPlainText(text).length;\r\n        } else {\r\n            len = text.length;\r\n        }\r\n\r\n        return len;\r\n    }\r\n\r\n    getSubString(text, startIdx, endIdx) {\r\n        var gameObject = this.gameObject;\r\n        var result;\r\n        if (gameObject.getSubString) {\r\n            result = gameObject.getSubString(text, startIdx, endIdx);\r\n        } else {\r\n            result = text.slice(startIdx, endIdx);\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nObject.assign(\r\n    TextTyping.prototype,\r\n    EventEmitterMethods\r\n);\r\n\r\nvar transferText = function (text) {\r\n    if (Array.isArray(text)) {\r\n        text = text.join('\\n');\r\n    } else if (typeof (text) === 'number') {\r\n        text = text.toString();\r\n    }\r\n    return text;\r\n}\r\n\r\n/** @private */\r\nconst TYPEMODE = {\r\n    'left-to-right': 0,\r\n    'right-to-left': 1,\r\n    'middle-to-sides': 2,\r\n    'sides-to-middle': 3\r\n};\r\n\r\n\r\nexport default TextTyping;","import TextTyping from './behaviors/texttyping/TextTyping.js';\r\nexport default TextTyping;","export default {\r\n    None: 0,\r\n    EasyWin: 1,\r\n    Hard: 2\r\n};","export default {\r\n    Active: 0,\r\n    Destroyed: 1\r\n};","import LevelManifest from \"./LevelManifest\";\r\nimport TileGenerationBehavior from \"./TileGenerationBehavior\";\r\nimport Tile from \"./Tile\";\r\n\r\nexport default [\r\n\r\n    // 0\r\n    {\r\n        score: 100,\r\n        timer: 0,\r\n        behavior: TileGenerationBehavior.None\r\n    },\r\n\r\n    // 1\r\n    {\r\n        score: 200,\r\n        timer: 120,\r\n        behavior: TileGenerationBehavior.None\r\n    },\r\n\r\n    // 2\r\n    {\r\n        score: 300,\r\n        timer: 30,\r\n        behavior: TileGenerationBehavior.Hard\r\n    },\r\n\r\n    // 3\r\n    {\r\n        score: 300,\r\n        timer: 120,\r\n        behavior: TileGenerationBehavior.EasyWin\r\n    },\r\n\r\n    // 4\r\n    {\r\n        score: 400,\r\n        timer: 300,\r\n        behavior: TileGenerationBehavior.EasyWin,\r\n        handler: (state) => {\r\n            if(state.tileGrid.TileGenerationBehavior !== TileGenerationBehavior.Hard && state.score > (LevelManifest[state.level]/2))\r\n            {\r\n                state.tileGrid.tileGenerationBehavior = TileGenerationBehavior.Hard;\r\n            }\r\n        }\r\n    },\r\n\r\n    // 5\r\n    {\r\n        score: 1000,\r\n        timer: 300,\r\n        behavior: TileGenerationBehavior.Hard\r\n    },\r\n\r\n    // 6\r\n    {\r\n        score: 1000,\r\n        timer: 300,\r\n        behavior: TileGenerationBehavior.Hard\r\n    },\r\n\r\n    // 7\r\n    {\r\n        score: 1000,\r\n        timer: 300,\r\n        behavior: TileGenerationBehavior.EasyWin\r\n    },\r\n\r\n    // 8\r\n    {\r\n        score: 1000,\r\n        timer: 300,\r\n        behavior: TileGenerationBehavior.None\r\n    }\r\n];","// Source: https://stackoverflow.com/questions/5915096/get-random-item-from-javascript-array\r\nconst getRandomItem = (items) => {\r\n    return items[Math.floor(Math.random() * items.length)];\r\n}\r\n\r\nexport {\r\n    getRandomItem\r\n}","export default [\r\n    { name: 'Blue', imageKey: 'tile_01' },\r\n    { name: 'Green', imageKey: 'tile_02' },\r\n    { name: 'Red', imageKey: 'tile_03' },\r\n    { name: 'Yellow', imageKey: 'tile_04' }\r\n];","import { getRandomItem } from './Utility';\r\nimport Tile from './Tile';\r\nimport TileGenerationBehavior from './TileGenerationBehavior';\r\nimport TileState from './TileState';\r\nimport TileType from './TileType';\r\n\r\nexport default class {\r\n\r\n    constructor(tileGridWidth, tileGridHeight, tileSize, offsetX, offsetY, onTileSelect, onTileMatch, tileGenerationBehavior, queue)\r\n    {\r\n        this.isBlocked = false;\r\n\r\n        this.offsetX = offsetX;\r\n        this.offsetY = offsetY;\r\n        this.tileSize = tileSize;\r\n        this.tileGridHeight = tileGridHeight;\r\n        this.tileGridWidth = tileGridWidth;\r\n        this.tileGrid = [];\r\n        this.tileImageContainer = null;\r\n        this.playAreaOffset = (this.tileGridHeight * this.tileSize);\r\n\r\n        this.onTileSelect = onTileSelect;\r\n        this.onTileMatch = onTileMatch;\r\n\r\n        this.tileGenerationBehavior = tileGenerationBehavior;\r\n\r\n        this.queue = queue;\r\n\r\n        // We're going to generate a grid that's twice the height of\r\n        // the desired tile grid height since we'll use the hidden, upper\r\n        // region to stage the bricks that will fall into the play area\r\n        for(let y = 0; y < tileGridHeight * 2; y++)\r\n        {\r\n            this.tileGrid[y] = [];\r\n            for(let x = 0; x < tileGridWidth; x++)\r\n            {\r\n                this.tileGrid[y][x] = (y < tileGridHeight)\r\n                    ? null\r\n                    : this.createTile(this.getTileType(x, y, TileGenerationBehavior.None), x, y);\r\n\r\n                // When we're generating the grid, we start with the default tile generation\r\n                // behavior since the \"Easy Win\" behavior will create a grid with identical\r\n                // tiles\r\n            }\r\n        }\r\n    }\r\n\r\n    create(context)\r\n    {\r\n        this.tileImageContainer = context.add.container();\r\n\r\n        // Create all of the tiles\r\n        this.forEachTile(tile => {\r\n\r\n            if(tile === null)\r\n            {\r\n                return;\r\n            }\r\n\r\n            tile.create(context);\r\n            this.tileImageContainer.add(tile.image);\r\n\r\n        });\r\n\r\n        // Create a mask to only show the play area\r\n        const maskShape = context.make.graphics();\r\n        maskShape.fillStyle(0xffffff, 1);\r\n        maskShape.fillRect(this.offsetX - (this.tileSize/2), this.offsetY + (this.tileGridHeight * this.tileSize) - (this.tileSize/2), this.tileGridWidth * this.tileSize, this.tileGridHeight * this.tileSize);\r\n        \r\n        this.tileImageContainer.mask = new Phaser.Display.Masks.GeometryMask(context, maskShape);\r\n    }\r\n\r\n    update(context)\r\n    {\r\n        const self = this;\r\n\r\n        if(self.queue.length > 0)\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Detect and destroy any matches\r\n        const matchedTiles = self.getMatches();\r\n\r\n        if(matchedTiles.length > 0)\r\n        {\r\n            self.onTileMatch(context, matchedTiles);\r\n        }\r\n\r\n        let destroys = [];\r\n        matchedTiles.forEach(t => { destroys.push(t.destroy(context, this.tileImageContainer)); });\r\n\r\n        if(destroys.length > 0)\r\n        {\r\n            self.queue.push(() => { return Promise.all(destroys); });\r\n        }\r\n\r\n        // Remove any destroyed tiles\r\n        self.forEachTile((tile, x, y) => {\r\n\r\n            if(tile === null)\r\n            {\r\n                return;\r\n            }\r\n\r\n            if(tile.state === TileState.Destroyed)\r\n            {\r\n                self.tileGrid[y][x] = null;\r\n            }\r\n\r\n        });\r\n\r\n        // Shift all of the tiles downward to fill empty spots\r\n        let drops = [];\r\n        for(let x = 0; x < this.tileGridWidth; x++)\r\n        {\r\n            let y = (this.tileGridHeight * 2) - 1;\r\n            while(y >= 0)\r\n            {\r\n                // If the tile is null...\r\n                if(self.tileGrid[y][x] === null)\r\n                {\r\n                    // ...find the closest tile that's not null...\r\n                    let closestY = y - 1;\r\n                    while(closestY >= 0)\r\n                    {\r\n                        let closestTile = self.tileGrid[closestY][x];\r\n                        if(closestTile !== null)\r\n                        {\r\n                            // ...and shift it downward\r\n                            self.tileGrid[y][x] = closestTile;\r\n                            self.tileGrid[closestY][x] = null;\r\n                            drops.push(this.getTileDrop(context, closestTile, x, y));\r\n                            y--;\r\n                        }\r\n                        closestY--;\r\n                    }\r\n                }\r\n\r\n                y--;\r\n            }\r\n        }\r\n\r\n        // Fill in all of the empty tiles\r\n        self.forEachPlayableTile((tile, x, y) => {\r\n            if(tile === null)\r\n            {\r\n                const adjustedY = y - self.tileGridHeight;\r\n\r\n                const tile = self.createTile(self.getTileType(x, y, self.tileGenerationBehavior), x, adjustedY);\r\n                self.tileGrid[adjustedY][x] = tile;\r\n                tile.create(context);\r\n                self.tileImageContainer.add(tile.image);\r\n            }\r\n        });\r\n\r\n        if(drops.length > 0)\r\n        {\r\n            self.queue.push(() => { return Promise.all(drops); });\r\n        }\r\n    }\r\n\r\n    swapTiles(context, firstTile, secondTile)\r\n    {\r\n        let self = this;\r\n\r\n        self.queue.push(() => {\r\n            \r\n            let firstTileX = firstTile.x;\r\n            let firstTileY = firstTile.y;\r\n            let firstTileGridX = firstTile.tileGridX;\r\n            let firstTileGridY = firstTile.tileGridY;\r\n    \r\n            let secondTileX = secondTile.x;\r\n            let secondTileY = secondTile.y;\r\n            let secondTileGridX = secondTile.tileGridX;\r\n            let secondTileGridY = secondTile.tileGridY;\r\n    \r\n            let firstSwap = secondTile.updatePosition(context, firstTileX, firstTileY, firstTileGridX, firstTileGridY);\r\n            self.tileGrid[firstTileGridY][firstTileGridX] = secondTile;\r\n    \r\n            let secondSwap = firstTile.updatePosition(context, secondTileX, secondTileY, secondTileGridX, secondTileGridY);\r\n            self.tileGrid[secondTileGridY][secondTileGridX] = firstTile;\r\n\r\n            return Promise.all([firstSwap, secondSwap]);\r\n\r\n        });\r\n    }\r\n\r\n    hasMatches(targetGridX, targetGridY)\r\n    {\r\n        return this.getMatches(targetGridX, targetGridY).length > 0;\r\n    }\r\n\r\n    getMatches(targetGridX, targetGridY)\r\n    {\r\n        const self = this;\r\n        const matchedTiles = [];\r\n\r\n        self.forEachTile((tile, x, y) => {\r\n\r\n            if(\r\n                (typeof targetGridX !== 'undefined' && x !== targetGridX) &&\r\n                (typeof targetGridY !== 'undefined' && y !== targetGridY)\r\n              )\r\n            {\r\n                return;\r\n            }\r\n\r\n            if(!this.isPlayable(tile))\r\n            {\r\n                return;\r\n            }\r\n\r\n            const targetTileType = tile.tileType;\r\n            const matchedXTiles = [];\r\n            const matchedYTiles = [];\r\n\r\n            // Check for matches to the right\r\n            let currX = (x + 1);\r\n            while(currX < self.tileGridWidth)\r\n            {\r\n                const currTile = self.tileGrid[y][currX];\r\n\r\n                if(currTile != null && targetTileType.name === currTile.tileType.name)\r\n                {\r\n                    matchedXTiles.push(currTile);\r\n                }\r\n                else\r\n                {\r\n                    break;\r\n                }\r\n\r\n                currX++;\r\n            }\r\n\r\n            // Check for matches to the left\r\n            currX = (x - 1);\r\n            while(currX > 0)\r\n            {\r\n                const currTile = self.tileGrid[y][currX];\r\n\r\n                if(currTile != null && targetTileType.name === currTile.tileType.name)\r\n                {\r\n                    matchedXTiles.push(currTile);\r\n                }\r\n                else\r\n                {\r\n                    break;\r\n                }\r\n\r\n                currX--;\r\n            }\r\n\r\n            // Check matches downwards\r\n            let currY = (y + 1);\r\n            while(currY < self.tileGridHeight)\r\n            {\r\n                const currTile = self.tileGrid[currY][x];\r\n\r\n                if(currTile != null && targetTileType.name === currTile.tileType.name)\r\n                {\r\n                    matchedYTiles.push(currTile);\r\n                }\r\n                else\r\n                {\r\n                    break;\r\n                }\r\n\r\n                currY++;\r\n            }\r\n\r\n            // Check matches upwards\r\n            currY = (y - 1);\r\n            while(currY > 0)\r\n            {\r\n                const currTile = self.tileGrid[currY][x];\r\n\r\n                if(currTile != null && targetTileType === currTile.tileType)\r\n                {\r\n                    matchedYTiles.push(currTile);\r\n                }\r\n                else\r\n                {\r\n                    break;\r\n                }\r\n\r\n                currY--;\r\n            }\r\n            \r\n            if(matchedYTiles.length > 1)\r\n            {\r\n                matchedTiles.push(...matchedYTiles);\r\n            }\r\n            \r\n            if(matchedXTiles.length > 1)\r\n            {\r\n                matchedTiles.push(...matchedXTiles);\r\n            }\r\n\r\n            if(matchedYTiles.length > 1 || matchedXTiles.length > 1)\r\n            {\r\n                matchedTiles.push(tile);\r\n            }\r\n        });\r\n\r\n        return matchedTiles;\r\n    }\r\n\r\n    forEachTile(callback)\r\n    {\r\n        for(let y = 0; y < this.tileGridHeight * 2; y++)\r\n        {\r\n            for(let x = 0; x < this.tileGridWidth; x++)\r\n            {\r\n                callback(this.tileGrid[y][x], x, y);\r\n            }\r\n        }\r\n    }\r\n\r\n    forEachPlayableTile(callback)\r\n    {\r\n        for(let y = this.tileGridHeight; y < this.tileGridHeight * 2; y++)\r\n        {\r\n            for(let x = 0; x < this.tileGridWidth; x++)\r\n            {\r\n                callback(this.tileGrid[y][x], x, y);\r\n            }\r\n        }\r\n    }\r\n\r\n    createTile(tileType, x, y)\r\n    {\r\n        return new Tile(tileType, this.getTileX(x), this.getTileY(y), x, y, this.onTileSelect);\r\n    }\r\n\r\n    getTileDrop(context, tile, x, y)\r\n    {\r\n        return tile.updatePosition(context, this.getTileX(x), this.getTileY(y), x, y);\r\n    }\r\n\r\n    getTileX(x)\r\n    {\r\n        return this.offsetX + (this.tileSize * x);\r\n    }\r\n\r\n    getTileY(y)\r\n    {\r\n        return this.offsetY + (this.tileSize * y);\r\n    }\r\n\r\n    canSelect(tile)\r\n    {\r\n        return this.isPlayable(tile);\r\n    }\r\n\r\n    isPlayable(tile)\r\n    {\r\n        return (tile != null) && (tile.tileGridY > (this.tileGridHeight - 1));\r\n    }\r\n\r\n    getTileType(x, y, behavior)\r\n    {\r\n        const aboveTile = (y < 1) ? null : this.tileGrid[y - 1][x];\r\n        const belowTile = (y > self.tileGridHeight - 1 || !this.tileGrid[y + 1]) ? null : this.tileGrid[y + 1][x];\r\n\r\n        const leftTile = (x < 1) ? null : this.tileGrid[y][x - 1];\r\n        const rightTile = (x > self.tileGridWidth - 1) ? null : this.tileGrid[y][x + 1];\r\n\r\n        if(behavior === TileGenerationBehavior.EasyWin && (aboveTile != null || belowTile != null || leftTile != null || rightTile != null))\r\n        {\r\n            return getRandomItem([aboveTile, belowTile, leftTile, rightTile].filter(t => t != null).map(t => t.tileType));\r\n        }\r\n        \r\n        if(behavior === TileGenerationBehavior.Hard)\r\n        {\r\n            return getRandomItem(TileType.filter(t =>\r\n                (belowTile === null || t.name !== belowTile.tileType.name) &&\r\n                (rightTile === null || t.name !== rightTile.tileType.name) &&\r\n                (leftTile === null || t.name !== leftTile.tileType.name)\r\n            ));\r\n        }\r\n\r\n        return getRandomItem(TileType.filter(t =>\r\n            (aboveTile === null || t.name !== aboveTile.tileType.name) &&\r\n            (leftTile === null || t.name !== leftTile.tileType.name)\r\n        ));\r\n    }\r\n\r\n    block(context)\r\n    {\r\n        this.isBlocked = true;\r\n        this.forEachTile(tile => tile && tile.block(context));\r\n    }\r\n\r\n    unblock(context)\r\n    {\r\n        this.isBlocked = false;\r\n        this.forEachTile(tile => tile && tile.unblock(context));\r\n    }\r\n}","import TileState from './TileState';\r\n\r\nexport default class {\r\n\r\n    constructor(tileType, x, y, tileGridX, tileGridY, onTileSelect)\r\n    {\r\n        this.tileType = tileType;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.tileGridX = tileGridX;\r\n        this.tileGridY = tileGridY;\r\n        this.onTileSelect = onTileSelect;\r\n        this.image = null;\r\n        this.state = TileState.Active;\r\n        this.isActivated = false;\r\n        this.isDestroying = false;\r\n    }\r\n\r\n    create(context)\r\n    {\r\n        this.image = context.add.image(this.x, this.y, this.tileType.imageKey);\r\n        this.image.setInteractive();\r\n        this.image.on('pointerdown', () => { this.onTileSelect(context, this); });\r\n    }\r\n\r\n    activate()\r\n    {\r\n        this.isActivated = true;\r\n        this.image.setTintFill(0xffffff);\r\n    }\r\n\r\n    deactivate()\r\n    {\r\n        this.isActivated = false;\r\n        this.image.clearTint();\r\n    }\r\n\r\n    updatePosition(context, x, y, tileGridX, tileGridY)\r\n    {\r\n        let self = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            self.x = x;\r\n            self.y = y;\r\n            self.tileGridX = tileGridX;\r\n            self.tileGridY = tileGridY;\r\n\r\n            context.tweens.add({\r\n                targets: self.image,\r\n                x: x,\r\n                y: y,\r\n                ease: 'Power1',\r\n                duration: 500,\r\n                onComplete: () => { resolve() }\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n    destroy(context, container)\r\n    {\r\n        let self = this;\r\n        \r\n        if(self.isDestroying)\r\n        {\r\n            return;\r\n        }\r\n\r\n        self.isDestroying = true;\r\n\r\n        // Create cover for fading the shape to white\r\n        const fadeOutCover = context.add.image(self.x, self.y, self.tileType.imageKey);\r\n        fadeOutCover.setTintFill(0xffffff);\r\n        fadeOutCover.alpha = 0;\r\n\r\n        // Create particles for \"explosion\" effect\r\n        const particleGraphics = [];\r\n        for(let i=0; i<4; i++)\r\n        {\r\n            const explodeParticleGraphics = context.add.graphics({ fillStyle: { color: 0xffffff }, alpha: 0 });\r\n            const explodeParticle = new Phaser.Geom.Circle(this.x, this.y, Phaser.Math.Between(0, 10));\r\n            explodeParticleGraphics.fillCircleShape(explodeParticle);\r\n            particleGraphics.push(explodeParticleGraphics);\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n           context.tweens.add({\r\n               targets: fadeOutCover,\r\n               alpha: 1,\r\n               duration: 200,\r\n               onComplete: () => {\r\n\r\n                    // Remove the tile image\r\n                    container.remove(self.image);\r\n                    self.image.destroy();\r\n                    self.state = TileState.Destroyed;\r\n\r\n                    // Remove the fade out cover\r\n                    container.remove(fadeOutCover);\r\n                    fadeOutCover.destroy();\r\n\r\n                    // Remove the particles\r\n                    particleGraphics.forEach((graphics) => {\r\n                        container.remove(graphics);\r\n                        graphics.destroy();\r\n                    });\r\n\r\n                    resolve();\r\n               }\r\n           });\r\n\r\n           particleGraphics.forEach((graphics, index) => {\r\n\r\n                let xSign = '';\r\n                let ySign = '';\r\n               \r\n                switch(index)\r\n                {\r\n                    case 1:\r\n                        xSign = '-';\r\n                        ySign = '-';\r\n                        break;\r\n\r\n                    case 2:\r\n                        xSign = '+';\r\n                        ySign = '+';\r\n                        break;\r\n\r\n                    case 3:\r\n                        xSign = '+';\r\n                        ySign = '-';\r\n                        break;\r\n\r\n                    case 4:\r\n                        xSign = '-';\r\n                        ySign = '+';\r\n                        break;\r\n                }\r\n\r\n                context.tweens.add({\r\n                    targets: graphics,\r\n                    x: xSign + '=35',\r\n                    y: ySign + '=35',\r\n                    alpha: 1,\r\n                    duration: 200,\r\n                    ease: 'Cubic.easeOut'\r\n                });\r\n           });\r\n\r\n        });\r\n    }\r\n\r\n    block(context)\r\n    {\r\n        this.isBlocked = true;\r\n\r\n        context.tweens.add({\r\n            targets: this.image,\r\n            alpha: 0.5,\r\n            duration: 100\r\n        });\r\n    }\r\n\r\n    unblock(context)\r\n    {\r\n        this.isBlocked = false;\r\n\r\n        context.tweens.add({\r\n            targets: this.image,\r\n            alpha: 1,\r\n            duration: 100\r\n        });\r\n    }\r\n}","import ActionQueue from '../ActionQueue';\r\nimport DialogManager from '../DialogManager';\r\nimport Guide from '../Guide';\r\nimport LevelManifest from '../LevelManifest';\r\nimport ScoreDisplay from '../ScoreDisplay';\r\nimport TileGrid from '../TileGrid';\r\nimport Timer from '../Timer';\r\nimport TileGenerationBehavior from '../TileGenerationBehavior';\r\n\r\nexport default class extends Phaser.Scene {\r\n\r\n    constructor()\r\n    {\r\n        super('RoundScene');\r\n\r\n        this.isAwaitingRoundTransition = false;\r\n        this.isReadyForRoundTransition = false;\r\n\r\n        this.score = null;\r\n        this.queue = null;\r\n        this.selectedTiles = null;\r\n        this.tileGrid = null;\r\n        this.scoreDisplay = null;\r\n        this.timer = null;\r\n \r\n        this.guide = null;\r\n        this.level = null;\r\n\r\n        this.comboCount = null;\r\n        this.totalMatches = null;\r\n    }\r\n\r\n    preload()\r\n    {\r\n        // Images: Tiles\r\n        this.load.image('tile_01', 'assets/tile_01.png');\r\n        this.load.image('tile_02', 'assets/tile_02.png');\r\n        this.load.image('tile_03', 'assets/tile_03.png');\r\n        this.load.image('tile_04', 'assets/tile_04.png');\r\n\r\n        // Images: Guide\r\n        this.load.image('guide_character', 'assets/guide.png');\r\n\r\n        // Images: Background\r\n        this.load.image('background', 'assets/background.png');\r\n    }\r\n\r\n    init(data)\r\n    {\r\n        this.level = data.level || 0;\r\n    }\r\n\r\n    create()\r\n    {\r\n        this.isAwaitingRoundTransition = false;\r\n        this.isReadyForRoundTransition = false;\r\n\r\n        this.score = 0;\r\n        this.comboCount = 0;\r\n        this.totalMatches = 0;\r\n\r\n        this.queue = new ActionQueue();\r\n\r\n        this.add.image(400, 400, 'background');\r\n\r\n        const tileGenerationBehavior = LevelManifest[this.level].behavior;\r\n\r\n        this.selectedTiles = [];\r\n        this.tileGrid = new TileGrid(6, 6, 80, 325, -265, this.onTileSelect, this.onTileMatch, tileGenerationBehavior, this.queue);\r\n        this.scoreDisplay = new ScoreDisplay(110, 585);\r\n\r\n        const timerSeconds = LevelManifest[this.level].timer;\r\n        this.timer = (timerSeconds > 0) ? new Timer(5, 570, timerSeconds) : null;\r\n\r\n        const dialogManager = new DialogManager();\r\n        const script = dialogManager.getScript(this.level);\r\n        this.guide = new Guide(20, 20, script);\r\n\r\n        this.tileGrid.create(this);\r\n        this.scoreDisplay.create(this);\r\n        this.timer && this.timer.create(this);\r\n        this.guide.create(this);\r\n\r\n        const self = this;\r\n        this.input.on('pointerdown', () => { self.guide.progressDialogue(); });\r\n    }\r\n\r\n    update()\r\n    {\r\n        // If gameplay is currently blocked, make sure the tile grid reflects that\r\n        if(this.guide.isBlockingGameplay && !this.tileGrid.isBlocked)\r\n        {\r\n            this.tileGrid.block(this);\r\n        }\r\n        else if(!this.guide.isBlockingGameplay && this.tileGrid.isBlocked)\r\n        {\r\n            this.tileGrid.unblock(this);\r\n        }\r\n\r\n        if(this.isAwaitingRoundTransition)\r\n        {\r\n            if(this.isReadyForRoundTransition)\r\n            {\r\n                this.nextLevel();\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        this.handleSpecialLevelBehavior();\r\n        \r\n        // Start the timer if the guide has stopped talking\r\n        if(!this.guide.isBlockingGameplay && this.timer && this.timer.isPaused)\r\n        {\r\n            this.timer.start();\r\n        }\r\n\r\n        // Have we run out of time?\r\n        if(this.timer != null && this.timer.seconds <= 0)\r\n        {\r\n            this.guide.displayGameOverMessage();\r\n            this.isAwaitingRoundTransition = true;\r\n            return;\r\n        }\r\n\r\n        if(this.isLevelComplete())\r\n        {\r\n            this.endLevel();\r\n            this.isAwaitingRoundTransition = true;\r\n            return;\r\n        }\r\n\r\n        // Are we currently executing a queued action?\r\n        if(this.queue.isActionRunning())\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Do we have any queued actions on the stack?\r\n        if(this.queue.hasActions())\r\n        {\r\n            this.queue.next();\r\n            return;\r\n        }\r\n\r\n        // If nothing's left in the queue, we can move the game's state forward\r\n        this.tileGrid.update(this);\r\n    }\r\n\r\n    onTileSelect(context, tile)\r\n    {\r\n        // Are we currently executing a queued action?\r\n        if(context.queue.isActionRunning())\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Is the guide currently blocking gameplay?\r\n        if(context.guide.isBlockingGameplay)\r\n        {\r\n            return;\r\n        }\r\n    \r\n        // Can we select this tile?\r\n        if(!context.tileGrid.canSelect(tile))\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Is this tile already selected?\r\n        if(tile.isActivated)\r\n        {\r\n            context.selectedTiles = [];\r\n            tile.deactivate();\r\n            return;\r\n        }\r\n    \r\n        if(context.selectedTiles.length === 0)\r\n        {\r\n            context.selectedTiles.push(tile);\r\n            tile.activate();\r\n            return;\r\n        }\r\n    \r\n        if(context.selectedTiles.length === 1)\r\n        {\r\n            const selectedTile = context.selectedTiles[0];\r\n            const xDiff = Math.abs(selectedTile.tileGridX - tile.tileGridX);\r\n            const yDiff = Math.abs(selectedTile.tileGridY - tile.tileGridY);\r\n    \r\n            if((xDiff === 1 && yDiff === 0) || (xDiff === 0 && yDiff === 1))\r\n            {\r\n                context.selectedTiles.push(tile);\r\n    \r\n                let firstSelectedTile = context.selectedTiles[0];\r\n                let secondSelectedTile = context.selectedTiles[1];\r\n    \r\n                context.tileGrid.swapTiles(context, firstSelectedTile, secondSelectedTile);\r\n    \r\n                context.queue.push(() => {\r\n    \r\n                    // If there are no matches, swap the tiles back\r\n                    if(\r\n                        !context.tileGrid.hasMatches(firstSelectedTile.tileGridX, firstSelectedTile.tileGridY) &&\r\n                        !context.tileGrid.hasMatches(secondSelectedTile.tileGridX, secondSelectedTile.tileGridY)\r\n                    )\r\n                    {\r\n                        context.tileGrid.swapTiles(context, firstSelectedTile, secondSelectedTile);\r\n                    }\r\n    \r\n                    return Promise.resolve();\r\n    \r\n                });\r\n    \r\n                context.selectedTiles.forEach((tile) => { tile.deactivate(); });\r\n                context.selectedTiles = [];\r\n                \r\n                context.comboCount = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    onTileMatch(context, matchedTiles)\r\n    {\r\n        context.comboCount++;\r\n        context.totalMatches++;\r\n\r\n        context.score += (matchedTiles.length * context.comboCount);\r\n        context.scoreDisplay.updateScore(context.score);\r\n\r\n        if(context.comboCount > 1)\r\n        {\r\n            context.scoreDisplay.updateCombo(`${context.comboCount}x multiplier!`);\r\n        }\r\n        else\r\n        {\r\n            context.scoreDisplay.updateCombo('');\r\n        }\r\n    }\r\n\r\n    isLevelComplete()\r\n    {\r\n        return this.score >= LevelManifest[this.level].score;\r\n    }\r\n\r\n    handleSpecialLevelBehavior()\r\n    {\r\n        const handler = LevelManifest[this.level].handler;\r\n        handler && handler({\r\n            tileGrid: this.tileGrid,\r\n            score: this.score,\r\n            level: this.level\r\n        });\r\n    }\r\n\r\n    endLevel()\r\n    {\r\n        console.log('Level Complete!');\r\n        this.isReadyForRoundTransition = true;\r\n    }\r\n\r\n    nextLevel()\r\n    {\r\n        this.scene.restart({ level: (this.level + 1) });\r\n    }\r\n    \r\n}","export default class {\r\n\r\n    constructor()\r\n    {\r\n        this.queuedActions = [];\r\n        this.currentAction = null;\r\n    }\r\n\r\n    isActionRunning()\r\n    {\r\n        return this.currentAction != null;\r\n    }\r\n\r\n    hasActions()\r\n    {\r\n        return this.queuedActions.length > 0;\r\n    }\r\n\r\n    next()\r\n    {\r\n        this.currentAction = this.queuedActions.shift();\r\n        this.currentAction();\r\n    }\r\n\r\n    push(action)\r\n    {\r\n        var self = this;\r\n        self.queuedActions.push(() => { action().then(() => { self.currentAction = null; }) });\r\n    }\r\n\r\n}","export default class {\r\n\r\n    constructor(x, y)\r\n    {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.scoreText = null;\r\n        this.comboText = null;\r\n        this.score = 0;\r\n    }\r\n\r\n    create(context)\r\n    {\r\n        const scoreBackgroundGraphics = context.add.graphics({ fillStyle: { color: 0xdbf0ff } }).setAlpha(0.5);\r\n        scoreBackgroundGraphics.fillRoundedRect(this.x - 150, this.y - 10, 300, 80, 10);\r\n\r\n        const scoreTextStyle = {\r\n            color: '#000',\r\n            fontFamily: '\"Baloo Thambi 2\"',\r\n            fontStyle: 'bold',\r\n            fontSize: '30px'\r\n        };\r\n\r\n        this.scoreText = context.add.text(this.x, this.y, this.score, scoreTextStyle);\r\n        this.updateScore(this.score);\r\n\r\n        this.comboText = context.add.text(this.x, this.y + 20, '');\r\n    }\r\n\r\n    updateScore(score)\r\n    {\r\n        this.score = score;\r\n        this.scoreText.setText(score + ' drops');\r\n    }\r\n\r\n    updateCombo(text)\r\n    {\r\n        this.comboText.setText(text);\r\n    }\r\n}","export default class {\r\n\r\n    constructor(x, y, seconds)\r\n    {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.text = null;\r\n        this.seconds = seconds;\r\n        this.isPaused = true;\r\n    }\r\n\r\n    create(context)\r\n    {\r\n        this.text = context.add.text(this.x, this.y, this.score);\r\n        \r\n        this.tick();\r\n        context.time.addEvent({ delay: 1000, callback: this.tick, callbackScope: this, loop: true })\r\n    }\r\n\r\n    tick()\r\n    {\r\n        if(this.seconds <= 0 || this.isPaused)\r\n        {\r\n            return;\r\n        }\r\n\r\n        this.seconds--;\r\n\r\n        // Display the remaining time\r\n        const minutes = Math.floor(this.seconds / 60);\r\n\r\n        let seconds = (this.seconds % 60);\r\n        if(seconds < 10)\r\n        {\r\n            seconds = '0' + seconds;\r\n        }\r\n\r\n        this.text.setText(`${minutes}:${seconds}`);\r\n    }\r\n\r\n    start()\r\n    {\r\n        this.isPaused = false;\r\n    }\r\n}","import DialogScript from \"./DialogScript\";\r\n\r\nexport default class {\r\n\r\n    getScript(level)\r\n    {\r\n        const script = new DialogScript();\r\n\r\n        switch(level)\r\n        {\r\n            // Level 0 (Intro)\r\n            case 0:\r\n\r\n                script.introMessages = [\r\n                    `*Oh, doozle, you made it!* You're here! (Click or tap anywhere!)`,\r\n                    `The Dew Drop Kingdom is in trouble!`,\r\n                    `We lost all of our dew drops and now we'll starve!`,\r\n                    `But you can help us by collecting as many dew drops as you can!`,\r\n                    \"If you match three or more dew drops of the same color, we can collect them!\",\r\n                    \"To make a match, select two dew drops and swap their places!\"\r\n                ];\r\n\r\n                script.getDisplayTileMatchMessages = (data) => {\r\n\r\n                    if(data.totalMatches === 1)\r\n                    {\r\n                        return [\r\n                            \"You got it! That's it!\",\r\n                            \"You collect extra dew drops when you chain together matches in a combo!\",\r\n                            \"See if you can collect 100 dew drops!\"\r\n                        ];\r\n                    }\r\n\r\n                };\r\n\r\n                break;\r\n\r\n            // Level 1 (Timer Intro)\r\n            case 1:\r\n\r\n                script.introMessages = [\r\n                    \"*Oh, doozle!* You're so good at this!\",\r\n                    \"But, we'll have to hurry this time!\",\r\n                    \"We only have two minutes before the sun dries up all the dew drops!\",\r\n                    \"Collect at least 200 dew drops in two minutes!\"\r\n                ];\r\n\r\n                break;\r\n\r\n            // Level 2 (Breaking the Fourth Wall)\r\n            case 2:\r\n\r\n                script.introMessages = [\r\n                    \"Wow, we're so proud of you!\",\r\n                    \"This round you'll only have 30 seconds to collect at least 300 dew drops!\"\r\n                ];\r\n\r\n                script.getGameOverMessages = () => {\r\n                    return [\r\n                        \"Wait, wait, sorry, hold on.\",\r\n                        \"It's too early for the *\\\"Lose in a Panic\\\"* scenario.\",\r\n                        \"So sorry about that.\",\r\n                        \"You've been really great so far, honestly.\",\r\n                        \"You know, what, let's just go to the next round and we'll take it from the top.\"\r\n                    ];\r\n                };\r\n\r\n                break;\r\n\r\n            // Level 3 (Easy Win)\r\n            case 3:\r\n\r\n                script.introMessages = [\r\n                    \"Alright, I think we've got everything figured out.\",\r\n                    \"Okay, for this next round, let me set you up:\",\r\n                    \"Remember, you've been winning the last few rounds and you're gaining confidence.\",\r\n                    \"In this round, it's going to be easy for you to get combos.\",\r\n                    \"So the idea here is that you're going to get a little *too* confident, right?\",\r\n                    \"Like a little full of yourself, alright?\",\r\n                    \"Okay, great! Let's do this:\",\r\n                    \"...\",\r\n                    \"*Oh doozle woozle!*\",\r\n                    \"You're so amazing!\",\r\n                    \"You have two minutes again, but this time you'll have to collect 300 dew drops.\",\r\n                    \"Can you do it?\",\r\n                    \"Who am I kidding? Of course you can!\"\r\n                ];\r\n\r\n                break;\r\n\r\n            // Level 4 (Losing Confidence)\r\n            case 4:\r\n\r\n                script.introMessages = [\r\n                    \"Okay, okay, great stuff.\",\r\n                    \"For this round, you're bringing all of that pride, all of that hubris.\",\r\n                    \"And, when the round starts, things are still going your way.\",\r\n                    \"But guess what?\",\r\n                    \"Halfway through this round, things start getting a little harder.\",\r\n                    \"So this is where we begin to chip away at your pride as the player.\",\r\n                    \"Alright, that's your set up: now let me get into the right headspace.\",\r\n                    \"...oh doozle woo-\",\r\n                    \"...no, no, it's doozy-woozy here...\",\r\n                    \"...yeah, doozy-woozy, you're our hero, blah, blah...\",\r\n                    \"Alright! Got it!\",\r\n                    \"...\",\r\n                    \"*Doozy-woozy!*\",\r\n                    \"You're our hero!\",\r\n                    \"You've done so much for us, but we still need your help!\",\r\n                    \"We need you to collect 500 dew drops in five minutes!\" \r\n                ];\r\n\r\n                break;\r\n\r\n            // Level 5 (Fall From Grace)\r\n            case 5:\r\n\r\n                script.introMessages = [\r\n                    \"Wow, such moving work.\",\r\n                    \"It really feels so authentic.\",\r\n                    \"It's been a joy working with you.\",\r\n                    \"Okay, here we go, this is a pivotal scene:\",\r\n                    \"This round will not go your way at all. At all.\",\r\n                    \"This is your fall from grace.\",\r\n                    \"(Ahem)\",\r\n                    \"...\",\r\n                    \"*Doozle!*\",\r\n                    \"*Woozle!*\",\r\n                    \"I can't believe you did it!\",\r\n                    \"We've got a bigger challenge ahead, but I know you can do it!\",\r\n                    \"You can do anything!\",\r\n                    \"We need you to collect 1000 dew drops in five minutes!\"\r\n                ];\r\n\r\n                break;\r\n\r\n            // Level 6 (Wallowing)\r\n            case 6:\r\n\r\n                script.introMessages = [\r\n                    \"Okay, let's move right into the next scene:\",\r\n                    \"Here, you are wallowing, right?\",\r\n                    \"You are in the pit of despair and you can't see a way out.\",\r\n                    \"This round won't be particularly hard, but you can't seem to find any matches.\",\r\n                    \"Got it?\",\r\n                    \"Alright, great: let me find my place here...\",\r\n                    \"Yes, okay, I believed in you, but now my faith is faltering...\",\r\n                    \"I'm keeping a brave face, but I'm really starting to lose confidence...\",\r\n                    \"Okay, I'm ready!\",\r\n                    \"...\",\r\n                    \"Oh no!\",\r\n                    \"*Whoopsie whoozle!*\",\r\n                    \"Don't worry, that was a tough one!\",\r\n                    \"Let's try again! I know you can do it!\",\r\n                    \"We need you to collect 1000 dew drops in five minutes!\"\r\n                ];\r\n\r\n                script.getDisplayTileMatchMessages = (data) => {\r\n\r\n                    return [\r\n                        \"(Oh, hey: remember, you're not going to find any matches this round)\"\r\n                    ];\r\n\r\n                };\r\n\r\n                break;\r\n\r\n            // Level 7 (Pheonix Rises)\r\n            case 7:\r\n\r\n                script.introMessages = [\r\n                    \"Now, you've been wallowing. You've feeling really low.\",\r\n                    \"You're in such despair, that in this round...\",\r\n                    \"There's an obvious combo.\",\r\n                    \"Right there, right in front of your face.\",\r\n                    \"But you can't see it through the despair.\",\r\n                    \"But then, in the last ten seconds of the round, you see it.\",\r\n                    \"Boom, it's the perfect match.\",\r\n                    \"And the pheonix rises once again!\"\r\n                ];\r\n\r\n                break;\r\n\r\n            // Level 8 (Victory Lap)\r\n            case 8:\r\n\r\n                script.introMessages = [\r\n                    \"Our hero is back!\",\r\n                    \"This final scene is our victory lap.\",\r\n                    \"However, we don't want too many combos in this round, right?\",\r\n                    \"This is a round the player wins on their own.\",\r\n                    \"No assistance from the game.\",\r\n                    \"A true hero's victory!\",\r\n                    \"Alright, let's do this: I've got an appointment after this.\"\r\n                ];\r\n\r\n                break;\r\n\r\n        }\r\n\r\n        return script;\r\n    }\r\n\r\n}","export default class {\r\n\r\n    constructor()\r\n    {\r\n        this.introMessages = [];\r\n        this.getDisplayTileMatchMessages = () => {};\r\n    }\r\n}","import TagText from 'phaser3-rex-plugins/plugins/tagtext.js';\r\nimport TextTyping from 'phaser3-rex-plugins/plugins/texttyping.js';\r\n\r\nexport default class {\r\n\r\n    constructor(x, y, script)\r\n    {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.script = script;\r\n\r\n        this.queuedMessages = null;\r\n        this.isPaused = false;\r\n        this.isBlockingGameplay = false;\r\n\r\n        this.endDialogueMarkerGraphics = null;\r\n    }\r\n\r\n    create(context)\r\n    {\r\n        const self = this;\r\n\r\n        const speechBubbleWidth = 760;\r\n        const speechBubbleHeight = 130;\r\n\r\n        const endDialogueMarkerRadius = 10;\r\n        \r\n        const characterWidth = 250;\r\n        const characterHeight = 500;\r\n\r\n        const speechBubbleIntroOffset = 40;\r\n\r\n        // Speech Bubble\r\n        const speechBubbleGraphics = context.add.graphics({ fillStyle: { color: 0xffffff } }).setAlpha(0);\r\n        speechBubbleGraphics.fillRoundedRect(this.x, this.y - speechBubbleIntroOffset, speechBubbleWidth, speechBubbleHeight, 10);\r\n        speechBubbleGraphics.fillTriangle(\r\n            this.x + 120, this.y + speechBubbleHeight + 20 - speechBubbleIntroOffset,\r\n            this.x + 105, this.y + speechBubbleHeight - speechBubbleIntroOffset,\r\n            this.x + 135, this.y + speechBubbleHeight - speechBubbleIntroOffset\r\n        );\r\n\r\n        // End Dialogue Marker\r\n        this.endDialogueMarkerGraphics = context.add.graphics({ fillStyle: { color: 0xcccccc } });\r\n        this.hideEndDialogueMarker();\r\n        const endDialogueMarker = new Phaser.Geom.Circle(\r\n            this.x + speechBubbleWidth - endDialogueMarkerRadius - 15,\r\n            this.y + speechBubbleHeight - endDialogueMarkerRadius - 15,\r\n            endDialogueMarkerRadius);\r\n        this.endDialogueMarkerGraphics.fillCircleShape(endDialogueMarker);\r\n\r\n        context.tweens.add({\r\n            targets: this.endDialogueMarkerGraphics,\r\n            alpha: 0,\r\n            duration: 500,\r\n            repeat: -1,\r\n            yoyo: true\r\n        });\r\n\r\n        // Speech Bubble Text\r\n        const speechBubbleTextStyle = {\r\n            color: '#000',\r\n            fontFamily: '\"Baloo Thambi 2\"',\r\n            fontSize: '30px',\r\n            wrap: {\r\n                mode: 'word',\r\n                width: speechBubbleWidth\r\n            },\r\n            tags: {\r\n                exclamation: {\r\n                    fontStyle: 'bold'\r\n                }\r\n            }\r\n        };\r\n        \r\n        this.speechBubbleText = new TagText(context, this.x + 15, this.y + 15, '', speechBubbleTextStyle);\r\n        context.add.existing(this.speechBubbleText);\r\n\r\n        // Speech Bubble Text Typing\r\n        this.speechBubbleTextTyping = new TextTyping(this.speechBubbleText, { speed: 30 }); \r\n        this.speechBubbleTextTyping.on('complete', () => { self.onMessageComplete.call(self) });\r\n\r\n        // Character\r\n        const characterImage = context.add.image(this.x - characterWidth, this.y + speechBubbleHeight + 230, 'guide_character');\r\n\r\n        // this.x + (characterWidth/2)\r\n\r\n        // Intro Timeline\r\n        const introTimeline = context.tweens.createTimeline();\r\n\r\n        // Slide in the character\r\n        introTimeline.add({\r\n            delay: 200,\r\n            targets: characterImage,\r\n            x: (this.x + characterWidth/2),\r\n            duration: 400,\r\n            angle: 15,\r\n            ease: 'Power1'\r\n        });\r\n\r\n        // Sway backwards\r\n        introTimeline.add({\r\n            targets: characterImage,\r\n            duration: 400,\r\n            angle: -7,\r\n            ease: 'Power1'\r\n        });\r\n\r\n        // Sway into position\r\n        introTimeline.add({\r\n            targets: characterImage,\r\n            duration: 400,\r\n            angle: 0,\r\n            ease: 'Power1'\r\n        });\r\n\r\n        // Speech Bubble Intro Animation\r\n        introTimeline.add({\r\n            offset: '-=300',\r\n            targets: speechBubbleGraphics,\r\n            props: {\r\n                y: { value: `+=${speechBubbleIntroOffset}`, duration: 500, ease: 'Bounce.easeOut' },\r\n                alpha: { value: 1, duration: 300, ease: 'Linear' }\r\n            },\r\n            onComplete: () => {\r\n                self.queueMessages(context, this.script.introMessages);\r\n            }\r\n        });\r\n\r\n        introTimeline.play();\r\n\r\n    }\r\n\r\n    queueMessages(context, messages)\r\n    {\r\n        if(!messages)\r\n        {\r\n            return;\r\n        }\r\n\r\n        const self = this;\r\n\r\n        if(self.queuedMessages === null)\r\n        {\r\n            self.queuedMessages = [];\r\n        }\r\n\r\n        self.queuedMessages.push(...messages);\r\n\r\n        if(self.speechBubbleTextTyping.isTyping)\r\n        {\r\n            return;\r\n        }\r\n\r\n        self.isBlockingGameplay = true;\r\n        self.progressDialogue();\r\n    }\r\n\r\n    onMessageComplete()\r\n    {\r\n        this.showEndDialogueMarker();\r\n        if(this.queuedMessages.length === 0)\r\n        {\r\n            this.isBlockingGameplay = false;\r\n            return;\r\n        }\r\n    }\r\n\r\n    displayTileMatchMessage(context, data)\r\n    {\r\n        const messages = this.script.getDisplayTileMatchMessages(data);\r\n        this.queueMessages(context, messages);\r\n    }\r\n\r\n    displayGameOverMessage(context)\r\n    {\r\n        const messages = this.script.getGameOverMessages();\r\n\r\n        // Push in a placeholder message to force players to confirm the last\r\n        // message in the \"Game Over\" queue\r\n        messages.push(' ');\r\n\r\n        this.queueMessages(context, messages);\r\n    }\r\n\r\n    progressDialogue()\r\n    {\r\n        this.hideEndDialogueMarker();\r\n        if(this.queuedMessages.length > 0)\r\n        {\r\n            const message = this.convertDialogToTagText(this.queuedMessages.shift());\r\n            this.speechBubbleTextTyping.start(message);\r\n        }\r\n    }\r\n\r\n    showEndDialogueMarker()\r\n    {\r\n        this.endDialogueMarkerGraphics.setVisible(true);\r\n    }\r\n\r\n    hideEndDialogueMarker()\r\n    {\r\n        this.endDialogueMarkerGraphics.setVisible(false);\r\n    }\r\n\r\n    convertDialogToTagText(input)\r\n    {\r\n        const styles = [\r\n            { token: '*', className: 'exclamation' },\r\n            { token: '_', className: 'underline'}\r\n        ];    \r\n\r\n        let output = '';\r\n        let currClass = '';\r\n    \r\n        for(let i=0; i<input.length; i++)\r\n        {\r\n            const currChar = input[i];\r\n            const isStyleToken = styles.some(style => style.token === currChar);\r\n    \r\n            // If the first character isn't a style token, then\r\n            // we need to open a \"normal\" class tag\r\n            if(i === 0 && !isStyleToken)\r\n            {\r\n                output += '<class=\"normal\">';\r\n                currClass = 'normal';\r\n            }\r\n    \r\n            // If the last character is a style token, we ignore it\r\n            // since we'll always end with a closing class tag anyway\r\n            if(i === input.length - 1 && isStyleToken)\r\n            {\r\n                continue;\r\n            }\r\n    \r\n            if(isStyleToken)\r\n            {\r\n                const targetStyle = styles.find(style => style.token === currChar);\r\n    \r\n                // If we've encountered a token of the class we already have open,\r\n                // that means we need to close the class\r\n                if(currClass === targetStyle.className)\r\n                {\r\n                    output += '</class>';\r\n                    output += '<class=\"normal\">';\r\n                    currClass = 'normal';\r\n                }\r\n    \r\n                // Otherwise, we need to close the existing the class and\r\n                // open the new class\r\n                else\r\n                {\r\n                    if(i !== 0)\r\n                    {\r\n                        output += '</class>';\r\n                    }\r\n    \r\n                    output += `<class=\"${targetStyle.className}\">`;\r\n                    currClass = targetStyle.className;\r\n                }\r\n            }\r\n            else\r\n            {\r\n                output += input[i];\r\n            }\r\n        }\r\n    \r\n        output += '</class>';\r\n        return output;\r\n    }\r\n}","import TitleScene from './scenes/TitleScene';\r\nimport RoundScene from './scenes/RoundScene';\r\n\r\nconst config = {\r\n    type: Phaser.AUTO,\r\n    width: 800,\r\n    height: 700,\r\n    scene: [TitleScene, RoundScene]\r\n};\r\n\r\nconst game = new Phaser.Game(config);"],"sourceRoot":""}