{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/render/WebGLRenderer.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/render/CanvasRenderer.js","webpack:///./script/scenes/TitleScene.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/render/Render.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/textstyle/MeasureText.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/const.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/textstyle/TextStyle.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/canvastext/DrawMethods.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/struct/Stack.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/pool.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/penmanger/Pen.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/object/Clear.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/object/Clone.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/object/NOOP.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/penmanger/PenManager.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/hitareamanager/HitAreaManager.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/canvastext/SetInteractive.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/canvastext/WrapText.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/canvastext/CanvasText.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/imagemanager/ImageManager.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/imagemanager/GetGlobImageManager.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/Text.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/tagtext/Parser.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/tagtext/TagText.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/tagtext/Creator.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/tagtext.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/tagtext/Factory.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/eventemitter/EventEmitterMethods.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/system/IsSceneObject.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/system/GetSceneObject.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/behaviors/texttyping/TextTyping.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/texttyping.js","webpack:///./script/TileGenerationBehavior.js","webpack:///./script/TileState.js","webpack:///./script/LevelManifest.js","webpack:///./script/Utility.js","webpack:///./script/TileType.js","webpack:///./script/TileGrid.js","webpack:///./script/Tile.js","webpack:///./script/scenes/RoundScene.js","webpack:///./script/ActionQueue.js","webpack:///./script/ScoreDisplay.js","webpack:///./script/Timer.js","webpack:///./script/DialogManager.js","webpack:///./script/DialogScript.js","webpack:///./script/Guide.js","webpack:///./script/scenes/RoundTransitionScene.js","webpack:///./script/main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Utils","Phaser","Renderer","WebGL","renderer","src","interpolationPercentage","camera","parentMatrix","width","height","frame","getTint","getTintAppendFloatAlpha","this","pipeline","batchTexture","glTexture","x","y","style","resolution","scaleX","scaleY","rotation","flipX","flipY","scrollFactorX","scrollFactorY","displayOriginX","displayOriginY","_tintTL","alpha","_alphaTL","_tintTR","_alphaTR","_tintBL","_alphaBL","_tintBR","_alphaBR","_isTinted","tintFill","batchSprite","super","load","image","self","add","flashBackdropGraphics","graphics","fillStyle","color","setAlpha","flashBackdrop","Geom","Rectangle","fillRectShape","tileInfos","push","imageKey","xChange","yChange","angle","scale","forEach","tileInfo","tile","setScale","title","startBtn","setInteractive","cursor","startBtnFlash","setTintFill","startBtnOverlay","on","tweens","targets","duration","ease","scene","start","level","introTimeline","createTimeline","delay","offset","play","renderWebGL","renderCanvas","CanvasPool","Display","Canvas","textStyle","canvas","context","getContext","syncFont","Math","ceil","measureText","testString","baselineX","baseline","baselineY","fillRect","font","_font","textBaseline","fillText","output","ascent","descent","fontSize","getImageData","remove","j","imagedata","data","pixels","length","line","idx","stop","NO_NEWLINE","RAW_NEWLINE","WRAPPED_NEWLINE","NO_WRAP","WORD_WRAP","CHAR_WRAP","SPLITREGEXP","GetAdvancedValue","Objects","GetValue","propertyMap","backgroundColor","fontFamily","fontStyle","stroke","strokeThickness","shadowOffsetX","shadowOffsetY","shadowColor","shadowBlur","shadowStroke","shadowFill","underlineColor","underlineThickness","underlineOffset","halign","valign","maxLines","fixedWidth","fixedHeight","lineSpacing","rtl","wrapMode","wrapWidth","WRAPMODE","none","word","char","character","text","parent","setStyle","metrics","updateText","undefined","wrap","toString","fill","update","strokeStyle","lineWidth","lineCap","lineJoin","enabled","recalculateMetrics","newFont","family","size","string","thickness","blur","toLowerCase","max","getTextMetrics","startX","startY","boxWidth","boxHeight","penManager","hitAreaManager","clear","save","drawBackground","defatultStyle","startXOffset","startYOffset","drawLinesNum","drawLineStartIdx","drawLineEndIdx","offsetX","offsetY","lineHeight","lines","totalLinesNum","floor","lineIdx","getLineWidth","pens","penIdx","pensLen","drawPen","restore","pen","curStyle","parser","propToContextStyle","prop","buildFont","syncStyle","drawUnderline","isTextPen","drawText","isImagePen","drawImage","img","hasAreaMarker","area","clearRect","autoRound","round","savedLineCap","beginPath","moveTo","lineTo","syncShadow","strokeText","imgKey","imageManager","imgData","getFrame","left","source","cutX","cutY","cutWidth","cutHeight","items","pop","arr","apply","config","resetFromJSON","newLineMode","startIndex","txt","len","rawTextLength","obj","Array","isArray","out","objIsArray","cnt","GetFastValue","PensPool","LinesPool","maxLinesWidth","tagToText","tagToTextScope","freePens","pushMultiple","PEN_CONFIG","addPen","addTextPen","previousPen","lastPen","lastX","endIndex","lastLine","targetPenManager","li","llen","pi","plen","getLineEndIndex","hasLastPen","w","maxW","result","plainText","end","penTxt","penStartIdx","penEndIdx","currentProp","previousProp","wrapText","substring","RectanglePool","hitAreas","rectangle","setTo","hitArea","contains","scaleCanvas","rotateCanvas","translateCanvas","lineStyle","strokeRect","FireEvent","eventName","pointer","localX","localY","getFirstHitArea","emit","event","splitRegExp","WRAP_RESULT","newline","getTextWidth","retLines","remainWidth","split","linesLen","tokenArray","token","textWidth","currLineWidth","curLineText","lineText","tokenLen","pensPool","newPenManager","_tmpPenManager","destroy","curProp","wrapLines","cursorX","cursorY","match","splitText","tagTextToProp","imgWidth","getOuterWidth","addNewLinePen","addImagePen","jLen","linesCount","getMaxLineWidth","desplayLinesCount","linesHeight","propToTagText","retPenManager","copyPenManager","updatePenManager","getSliceTagText","tmpPenManager","ret","copy","methods","assign","DrawMethods","globImageManager","textureManager","images","_add","textureKey","frameKey","frameWidth","frameHeight","right","exists","AddToDOM","DOM","GameObject","GameObjects","RemoveFromDOM","PensPools","type","sys","game","setPosition","setOrigin","initPipeline","align","_text","padding","top","bottom","dirty","_crop","resetCropObject","texture","textures","addCanvas","gl","deleteTexture","canvasText","setPadding","setText","events","dir","direction","display","originX","join","setFont","setFontFamily","setFontSize","setFontStyle","setFixedSize","setBackgroundColor","setFill","setColor","setStroke","setShadow","setShadowOffset","setShadowColor","setShadowBlur","setShadowStroke","setShadowFill","setWrapMode","setWrapWidth","setHAlign","setLineSpacing","setResolution","setMaxLines","runWrap","textHeight","linesWidth","h","updateDisplayOrigin","setSize","draw","canvasToTexture","input","customHitArea","Components","ToJSON","toJSON","shape","callback","dropZone","getText","getPlainText","getPenManager","drawBounds","Class","mixin","Alpha","BlendMode","ComputedSize","Crop","Depth","Flip","GetBounds","Mask","Origin","Pipeline","ScrollFactor","Tint","Transform","Visible","Render","GETPROP_RESULT","prevProp","STYLE_RESULT","styleToProp","k","v","slen","isEmpty","thinkness","parseInt","replace","shadow","u","RE_SPACE","RE_SPLITTEXT","RE_CLASS_HEADER","RE_CLASS","RE_STYLE_HEADER","RE_STYLE","tags","innerMatch","charIdx","totalLen","matchStart","exec","lastIndex","test","propOut","_class","_style","defaultStyle","underline","isTextTag","tagName","tag","Parser","addTag","preDestroy","BuildGameObject","GameObjectFactory","register","gameObject","existing","GameObjectCreator","content","addToScene","eventEmitter","EventEmitterClass","Events","EventEmitter","_privateEE","_eventEmitter","shutdown","arguments","once","off","addListener","removeListener","removeAllListeners","listenerCount","listeners","SceneClass","Scene","setEventEmitter","timer","boot","setTypeMode","setTypeSpeed","setTextCallback","setTextCallbackScope","typingIdx","transferText","textLen","insertIdx","elapsed","getTimer","typeMode","speed","destroyEventEmitter","freeTimer","TYPEMODE","startIdx","timerStartAt","setTypingContent","startTimer","newText","concat","isTyping","showAllText","paused","getTextLength","getTypingString","isLastChar","typeIdx","endIdx","getSubString","midIdx","lowerResult","lowerLen","upperResult","upperLen","startAt","time","addEvent","loop","onTyping","callbackScope","slice","EventEmitterMethods","score","behavior","TileGenerationBehavior","handler","state","tileGrid","LevelManifest","tileGenerationBehavior","getRandomItem","random","tileGridWidth","tileGridHeight","tileSize","onTileSelect","onTileMatch","queue","isBlocked","tileImageContainer","playAreaOffset","createTile","getTileType","container","forEachTile","maskShape","make","mask","Masks","GeometryMask","matchedTiles","getMatches","destroys","Promise","all","TileState","drops","closestY","closestTile","getTileDrop","forEachPlayableTile","adjustedY","firstTile","secondTile","firstTileX","firstTileY","firstTileGridX","tileGridX","firstTileGridY","tileGridY","secondTileX","secondTileY","secondTileGridX","secondTileGridY","firstSwap","updatePosition","secondSwap","targetGridX","targetGridY","isPlayable","targetTileType","tileType","matchedXTiles","matchedYTiles","currX","currTile","currY","isActivated","isDestroying","clearTint","resolve","reject","onComplete","fadeOutCover","particleGraphics","explodeParticleGraphics","explodeParticle","Circle","Between","fillCircleShape","index","xSign","ySign","getTileX","getTileY","aboveTile","belowTile","leftTile","rightTile","TileType","filter","map","block","unblock","isAwaitingRoundTransition","selectedTiles","scoreDisplay","guide","comboCount","totalMatches","queuedActions","currentAction","shift","action","then","TileGrid","scoreText","comboText","fillRoundedRect","updateScore","timerSeconds","seconds","isPaused","tick","minutes","script","introMessages","getDisplayTileMatchMessages","getGameOverMessages","getScript","queuedMessages","isBlockingGameplay","endDialogueMarkerGraphics","speechBubbleGraphics","fillTriangle","hideEndDialogueMarker","endDialogueMarker","repeat","yoyo","speechBubbleTextStyle","exclamation","speechBubbleText","speechBubbleTextTyping","onMessageComplete","characterImage","characterWidth","props","queueMessages","messages","progressDialogue","showEndDialogueMarker","message","convertDialogToTagText","setVisible","styles","className","currClass","currChar","isStyleToken","some","targetStyle","find","nextLevel","handleSpecialLevelBehavior","displayGameOverMessage","isLevelComplete","isActionRunning","hasActions","next","canSelect","deactivate","activate","selectedTile","xDiff","abs","yDiff","firstSelectedTile","secondSelectedTile","swapTiles","hasMatches","updateCombo","AUTO","TitleScene","RoundScene","RoundTransitionScene","Game"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Utils = Phaser.Renderer.WebGL.Utils;\r\n\r\n/**\r\n * Renders this Game Object with the WebGL Renderer to the given Camera.\r\n * The object will not render if any of its renderFlags are set or it is being actively filtered out by the Camera.\r\n * This method should not be called directly. It is a utility function of the Render module.\r\n *\r\n * @method Phaser.GameObjects.Text#renderWebGL\r\n * @since 3.0.0\r\n * @private\r\n *\r\n * @param {Phaser.Renderer.WebGL.WebGLRenderer} renderer - A reference to the current active WebGL renderer.\r\n * @param {Phaser.GameObjects.Text} src - The Game Object being rendered in this call.\r\n * @param {number} interpolationPercentage - Reserved for future use and custom pipelines.\r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The Camera that is rendering the Game Object.\r\n * @param {Phaser.GameObjects.Components.TransformMatrix} parentMatrix - This transform matrix is defined if the game object is nested\r\n */\r\nvar TextWebGLRenderer = function (renderer, src, interpolationPercentage, camera, parentMatrix) {\r\n    if ((src.width === 0) || (src.height === 0)) {\r\n        return;\r\n    }\r\n\r\n    var frame = src.frame;\r\n    var width = frame.width;\r\n    var height = frame.height;\r\n    var getTint = Utils.getTintAppendFloatAlpha;\r\n\r\n    this.pipeline.batchTexture(\r\n        src,\r\n        frame.glTexture,\r\n        width, height,\r\n        src.x, src.y,\r\n        width / src.style.resolution, height / src.style.resolution,\r\n        src.scaleX, src.scaleY,\r\n        src.rotation,\r\n        src.flipX, src.flipY,\r\n        src.scrollFactorX, src.scrollFactorY,\r\n        src.displayOriginX, src.displayOriginY,\r\n        0, 0, width, height,\r\n        getTint(src._tintTL, camera.alpha * src._alphaTL),\r\n        getTint(src._tintTR, camera.alpha * src._alphaTR),\r\n        getTint(src._tintBL, camera.alpha * src._alphaBL),\r\n        getTint(src._tintBR, camera.alpha * src._alphaBR),\r\n        (src._isTinted && src.tintFill),\r\n        0, 0,\r\n        camera,\r\n        parentMatrix\r\n    );\r\n};\r\n\r\nmodule.exports = TextWebGLRenderer;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Renders this Game Object with the Canvas Renderer to the given Camera.\r\n * The object will not render if any of its renderFlags are set or it is being actively filtered out by the Camera.\r\n * This method should not be called directly. It is a utility function of the Render module.\r\n *\r\n * @method Phaser.GameObjects.Text#renderCanvas\r\n * @since 3.0.0\r\n * @private\r\n *\r\n * @param {Phaser.Renderer.Canvas.CanvasRenderer} renderer - A reference to the current active Canvas renderer.\r\n * @param {Phaser.GameObjects.Text} src - The Game Object being rendered in this call.\r\n * @param {number} interpolationPercentage - Reserved for future use and custom pipelines.\r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The Camera that is rendering the Game Object.\r\n * @param {Phaser.GameObjects.Components.TransformMatrix} parentMatrix - This transform matrix is defined if the game object is nested\r\n */\r\nvar TextCanvasRenderer = function (renderer, src, interpolationPercentage, camera, parentMatrix) {\r\n    if ((src.width === 0) || (src.height === 0)) {\r\n        return;\r\n    }\r\n\r\n    renderer.batchSprite(src, src.frame, camera, parentMatrix);\r\n};\r\n\r\nmodule.exports = TextCanvasRenderer;\r\n","export default class extends Phaser.Scene {\r\n\r\n    constructor()\r\n    {\r\n        super('TitleScene');\r\n    }\r\n\r\n    preload()\r\n    {\r\n        this.load.image('background', 'assets/background.png');\r\n        this.load.image('title', 'assets/title.png');\r\n        this.load.image('start', 'assets/start.png');\r\n        this.load.image('start-active', 'assets/start_active.png');\r\n        this.load.image('tile_01', 'assets/tile_01.png');\r\n        this.load.image('tile_02', 'assets/tile_02.png');\r\n        this.load.image('tile_03', 'assets/tile_03.png');\r\n        this.load.image('tile_04', 'assets/tile_04.png');\r\n    }\r\n\r\n    create()\r\n    {\r\n        const self = this;\r\n\r\n        // Background\r\n        this.add.image(400, 400, 'background');\r\n\r\n        // Flash Backdrop\r\n        const flashBackdropGraphics = this.add.graphics({ fillStyle: { color: 0xffffff } });\r\n        flashBackdropGraphics.setAlpha(0);\r\n        const flashBackdrop = new Phaser.Geom.Rectangle(0, 0, 800, 700);\r\n        flashBackdropGraphics.fillRectShape(flashBackdrop);\r\n\r\n        // Tile\r\n        const tileInfos = [];\r\n        tileInfos.push({ imageKey: 'tile_01', xChange: '+=180', yChange: '+=180', angle: 15, scale: 0.8 });\r\n        tileInfos.push({ imageKey: 'tile_02', xChange: '+=200', yChange: '-=180', angle: 15, scale: 1 });\r\n        tileInfos.push({ imageKey: 'tile_03', xChange: '-=180', yChange: '+=180', angle: -15, scale: 0.9 });\r\n        tileInfos.push({ imageKey: 'tile_04', xChange: '-=200', yChange: '-=180', angle: -5, scale: 0.8 });\r\n        tileInfos.push({ imageKey: 'tile_01', xChange: '+=0', yChange: '-=180', angle: -15, scale: 0.7 });\r\n        tileInfos.push({ imageKey: 'tile_02', xChange: '+=0', yChange: '+=180', angle: -15, scale: 1 });\r\n        tileInfos.push({ imageKey: 'tile_03', xChange: '+=290', yChange: '+=30', angle: 15, scale: 0.8 });\r\n        tileInfos.push({ imageKey: 'tile_01', xChange: '-=290', yChange: '+=40', angle: -15, scale: 0.9 });\r\n\r\n        tileInfos.forEach(tileInfo => {\r\n            tileInfo.tile = self.add.image(400, 230, tileInfo.imageKey);\r\n            tileInfo.tile.setAlpha(0);\r\n            tileInfo.tile.setScale(0.5, 0.5);\r\n        });\r\n\r\n        // Title\r\n        const title = this.add.image(400, 230, 'title');\r\n        title.setAlpha(0);\r\n        title.setScale(2, 2);\r\n\r\n        const startBtn = this.add.image(400, 550, 'start');\r\n        startBtn.setInteractive({ cursor: 'pointer' });\r\n        startBtn.setAlpha(0);\r\n\r\n        const startBtnFlash = this.add.image(400, 550, 'start');\r\n        startBtnFlash.setAlpha(0);\r\n        startBtnFlash.setTintFill(0xffffff);\r\n\r\n        const startBtnOverlay = this.add.image(400, 550, 'start-active');\r\n        startBtnOverlay.setAlpha(0);\r\n\r\n        startBtn.on('pointerover', () => {\r\n            self.tweens.add({\r\n                targets: startBtnOverlay,\r\n                alpha: 1,\r\n                duration: 100,\r\n                ease: 'Sine.easeInOut'\r\n            });\r\n        });\r\n\r\n        startBtn.on('pointerout', () => {\r\n            self.tweens.add({\r\n                targets: startBtnOverlay,\r\n                alpha: 0,\r\n                duration: 100,\r\n                ease: 'Sine.easeInOut'\r\n            });\r\n        });\r\n\r\n        startBtn.on('pointerdown', () => { self.scene.start('RoundScene', { level: 0 }); });\r\n\r\n        // Intro Timeline\r\n        const introTimeline = this.tweens.createTimeline();\r\n\r\n        // Slam in the title\r\n        introTimeline.add({\r\n            delay: 400,\r\n            targets: title,\r\n            alpha: 1,\r\n            scaleX: 1,\r\n            scaleY: 1,\r\n            duration: 500,\r\n            ease: 'Quad.easeIn'\r\n        });\r\n\r\n        // Fling the tiles from the impact of the title slam\r\n        tileInfos.forEach((tileInfo, i) => {\r\n            introTimeline.add({\r\n                targets: tileInfo.tile,\r\n                x: tileInfo.xChange,\r\n                y: tileInfo.yChange,\r\n                scaleX: 1,\r\n                scaleY: 1,\r\n                alpha: 1,\r\n                scaleX: tileInfo.scale,\r\n                scaleY: tileInfo.scale,\r\n                angle: tileInfo.angle,\r\n                duration: 300,\r\n                ease: 'Quad.easeOut',\r\n                offset: (i === 0) ? '-=0' : '-=300'\r\n            });\r\n        });\r\n\r\n        // Display the flash from the title slam\r\n        introTimeline.add({\r\n            targets: flashBackdropGraphics,\r\n            alpha: 1,\r\n            duration: 30,\r\n            offset: '-=300'\r\n        });\r\n\r\n        // Fade out the flash from the title slam\r\n        introTimeline.add({\r\n            targets: flashBackdropGraphics,\r\n            alpha: 0,\r\n            duration: 700,\r\n            offset: 1500,\r\n            ease: 'Quad.easeIn'\r\n        });\r\n\r\n        // Flash in the start button\r\n        introTimeline.add({\r\n            targets: [ startBtn, startBtnFlash ],\r\n            alpha: 1,\r\n            offset: 2200,\r\n            duration: 100\r\n        });\r\n\r\n        // Fade out the start button flash effect\r\n        introTimeline.add({\r\n            targets: startBtnFlash,\r\n            alpha: 0,\r\n            duration: 300,\r\n            offset: 2300,\r\n            ease: 'Quad.easeOut'\r\n        });\r\n\r\n        introTimeline.play();\r\n    }\r\n    \r\n}","import WebGLRenderer from './WebGLRenderer.js';\r\nimport CanvasRenderer from './CanvasRenderer.js';\r\n\r\nexport default {\r\n    renderWebGL: WebGLRenderer,\r\n    renderCanvas: CanvasRenderer\r\n\r\n};","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nconst CanvasPool = Phaser.Display.Canvas.CanvasPool;\r\n\r\n/**\r\n * Calculates the ascent, descent and fontSize of a given font style.\r\n *\r\n * @function Phaser.GameObjects.Text.MeasureText\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.GameObjects.Text.TextStyle} textStyle - The TextStyle object to measure.\r\n *\r\n * @return {object} An object containing the ascent, descent and fontSize of the TextStyle.\r\n */\r\nvar MeasureText = function (textStyle) {\r\n    // @property {HTMLCanvasElement} canvas - The canvas element that the text is rendered.\r\n    var canvas = CanvasPool.create(this);\r\n\r\n    // @property {HTMLCanvasElement} context - The context of the canvas element that the text is rendered to.\r\n    var context = canvas.getContext('2d');\r\n\r\n    textStyle.syncFont(canvas, context);\r\n\r\n    var width = Math.ceil(context.measureText(textStyle.testString).width * textStyle.baselineX);\r\n    var baseline = width;\r\n    var height = 2 * baseline;\r\n\r\n    baseline = baseline * textStyle.baselineY | 0;\r\n\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n\r\n    context.fillStyle = '#f00';\r\n    context.fillRect(0, 0, width, height);\r\n\r\n    context.font = textStyle._font;\r\n\r\n    context.textBaseline = 'alphabetic';\r\n    context.fillStyle = '#000';\r\n    context.fillText(textStyle.testString, 0, baseline);\r\n\r\n    var output = {\r\n        ascent: 0,\r\n        descent: 0,\r\n        fontSize: 0\r\n    };\r\n\r\n    if (!context.getImageData(0, 0, width, height)) {\r\n        output.ascent = baseline;\r\n        output.descent = baseline + 6;\r\n        output.fontSize = output.ascent + output.descent;\r\n\r\n        CanvasPool.remove(canvas);\r\n\r\n        return output;\r\n    }\r\n\r\n    var imagedata = context.getImageData(0, 0, width, height).data;\r\n    var pixels = imagedata.length;\r\n    var line = width * 4;\r\n    var i;\r\n    var j;\r\n    var idx = 0;\r\n    var stop = false;\r\n\r\n    // ascent. scan from top to bottom until we find a non red pixel\r\n    for (i = 0; i < baseline; i++) {\r\n        for (j = 0; j < line; j += 4) {\r\n            if (imagedata[idx + j] !== 255) {\r\n                stop = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!stop) {\r\n            idx += line;\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n\r\n    output.ascent = baseline - i;\r\n\r\n    idx = pixels - line;\r\n    stop = false;\r\n\r\n    // descent. scan from bottom to top until we find a non red pixel\r\n    for (i = height; i > baseline; i--) {\r\n        for (j = 0; j < line; j += 4) {\r\n            if (imagedata[idx + j] !== 255) {\r\n                stop = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!stop) {\r\n            idx -= line;\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n\r\n    output.descent = (i - baseline);\r\n    output.fontSize = output.ascent + output.descent;\r\n\r\n    CanvasPool.remove(canvas);\r\n\r\n    return output;\r\n};\r\n\r\nexport default MeasureText;","var CONST = {\r\n    // new line mode\r\n    NO_NEWLINE: 0,\r\n    RAW_NEWLINE: 1,\r\n    WRAPPED_NEWLINE: 2,\r\n\r\n    // wrap mode\r\n    NO_WRAP: 0,\r\n    WORD_WRAP: 1,\r\n    CHAR_WRAP: 2,\r\n\r\n    // split lines\r\n    SPLITREGEXP: /(?:\\r\\n|\\r|\\n)/\r\n};\r\n\r\nexport default CONST;","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nimport MeasureText from './MeasureText.js';\r\nimport CONST from '../const.js';\r\n\r\nconst GetAdvancedValue = Phaser.Utils.Objects.GetAdvancedValue;\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\n\r\n//  Key: [ Object Key, Default Value ]\r\n\r\n/**\r\n * A custom function that will be responsible for wrapping the text.\r\n * @callback TextStyleWordWrapCallback\r\n *\r\n * @param {string} text - The string to wrap.\r\n * @param {Phaser.GameObjects.Text} textObject - The Text instance.\r\n *\r\n * @return {(string|string[])} Should return the wrapped lines either as an array of lines or as a string with\r\n * newline characters in place to indicate where breaks should happen.\r\n */\r\n\r\nvar propertyMap = {\r\n    // background\r\n    backgroundColor: ['backgroundColor', null],\r\n\r\n    // font\r\n    fontFamily: ['fontFamily', 'Courier'],\r\n    fontSize: ['fontSize', '16px'],\r\n    fontStyle: ['fontStyle', ''],\r\n    color: ['color', '#fff'],\r\n    stroke: ['stroke', '#fff'],\r\n    strokeThickness: ['strokeThickness', 0],\r\n    shadowOffsetX: ['shadow.offsetX', 0],\r\n    shadowOffsetY: ['shadow.offsetY', 0],\r\n    shadowColor: ['shadow.color', '#000'],\r\n    shadowBlur: ['shadow.blur', 0],\r\n    shadowStroke: ['shadow.stroke', false],\r\n    shadowFill: ['shadow.fill', false],\r\n\r\n    // underline\r\n    underlineColor: ['underline.color', '#000'],\r\n    underlineThickness: ['underline.thickness', 0],\r\n    underlineOffset: ['underline.offset', 0],\r\n\r\n    // align\r\n    halign: ['halign', 'left'],\r\n    valign: ['valign', 'top'],\r\n\r\n    // size\r\n    maxLines: ['maxLines', 0],\r\n    fixedWidth: ['fixedWidth', 0],\r\n    fixedHeight: ['fixedHeight', 0],\r\n    resolution: ['resolution', 0],\r\n    lineSpacing: ['lineSpacing', 0],\r\n\r\n    rtl: ['rtl', false],\r\n    testString: ['testString', '|MÃ‰qgy'],\r\n    baselineX: ['baselineX', 1.2],\r\n    baselineY: ['baselineY', 1.4],\r\n\r\n    // wrap\r\n    wrapMode: ['wrap.mode', 1],\r\n    wrapWidth: ['wrap.width', 0]\r\n    //wrapCallback: ['wrap.callback', null],\r\n    //wrapCallbackScope: ['wrap.callbackScope', null]\r\n};\r\n\r\nclass TextStyle {\r\n    constructor(text, style) {\r\n        this.parent = text;\r\n\r\n        this.backgroundColor;\r\n\r\n        this.fontFamily;\r\n        this.fontSize;\r\n        this.fontStyle;\r\n        this.color;\r\n        this.stroke;\r\n        this.strokeThickness;\r\n        this.shadowOffsetX;\r\n        this.shadowOffsetY;\r\n        this.shadowColor;\r\n        this.shadowBlur;\r\n        this.shadowStroke;\r\n        this.shadowFill;\r\n\r\n        this.underlineColor;\r\n        this.underlineThickness;\r\n        this.underlineOffset;\r\n\r\n        this.halign;\r\n        this.valign;\r\n\r\n        this.maxLines;\r\n        this.fixedWidth;\r\n        this.fixedHeight;\r\n        this.resolution;\r\n        this.lineSpacing;\r\n\r\n        this.rtl;\r\n        this.testString;\r\n\r\n\r\n        this.baselineX;\r\n        this.baselineY;\r\n\r\n        this._font;\r\n\r\n        //  Set to defaults + user style\r\n        this.setStyle(style, false);\r\n\r\n        var metrics = GetValue(style, 'metrics', false);\r\n\r\n        //  Provide optional TextMetrics in the style object to avoid the canvas look-up / scanning\r\n        //  Doing this is reset if you then change the font of this TextStyle after creation\r\n        if (metrics) {\r\n            this.metrics = {\r\n                ascent: GetValue(metrics, 'ascent', 0),\r\n                descent: GetValue(metrics, 'descent', 0),\r\n                fontSize: GetValue(metrics, 'fontSize', 0)\r\n            };\r\n        } else {\r\n            this.metrics = MeasureText(this);\r\n        }\r\n    }\r\n\r\n    setStyle(style, updateText) {\r\n        if (updateText === undefined) {\r\n            updateText = true;\r\n        }\r\n\r\n        if (style && style.hasOwnProperty('wrap')) {\r\n            var wrap = style.wrap;\r\n            if (wrap.hasOwnProperty('mode')) {\r\n                var mode = wrap.mode;\r\n                if (typeof mode === 'string') {\r\n                    wrap.mode = WRAPMODE[mode];\r\n                }\r\n            } else {\r\n                if (wrap.hasOwnProperty('width')) {\r\n                    wrap.mode = 1;\r\n                }\r\n            }\r\n        }\r\n\r\n        //  Avoid type mutation\r\n        if (style && style.hasOwnProperty('fontSize') && typeof style.fontSize === 'number') {\r\n            style.fontSize = style.fontSize.toString() + 'px';\r\n        }\r\n\r\n        for (var key in propertyMap) {\r\n            if (key === 'wrapCallback' || key === 'wrapCallbackScope') {\r\n                // Callback & scope should be set without processing the values\r\n                this[key] = GetValue(style, propertyMap[key][0], propertyMap[key][1]);\r\n            } else {\r\n                this[key] = GetAdvancedValue(style, propertyMap[key][0], propertyMap[key][1]);\r\n            }\r\n        }\r\n\r\n        //  Allow for 'font' override\r\n        var font = GetValue(style, 'font', null);\r\n\r\n        if (font === null) {\r\n            this._font = this.fontStyle + ' ' + this.fontSize + ' ' + this.fontFamily;\r\n        } else {\r\n            this._font = font;\r\n        }\r\n\r\n        //  Allow for 'fill' to be used in place of 'color'\r\n        var fill = GetValue(style, 'fill', null);\r\n\r\n        if (fill !== null) {\r\n            this.color = fill;\r\n        }\r\n\r\n        if (updateText) {\r\n            return this.update(true);\r\n        } else {\r\n            return this.parent;\r\n        }\r\n    }\r\n\r\n    syncFont(canvas, context) {\r\n        context.font = this._font;\r\n    }\r\n\r\n    syncStyle(canvas, context) {\r\n        context.textBaseline = 'alphabetic';\r\n\r\n        context.fillStyle = this.color;\r\n        context.strokeStyle = this.stroke;\r\n\r\n        context.lineWidth = this.strokeThickness;\r\n        context.lineCap = 'round';\r\n        context.lineJoin = 'round';\r\n    }\r\n\r\n    syncShadow(context, enabled) {\r\n        if (enabled) {\r\n            context.shadowOffsetX = this.shadowOffsetX;\r\n            context.shadowOffsetY = this.shadowOffsetY;\r\n            context.shadowColor = this.shadowColor;\r\n            context.shadowBlur = this.shadowBlur;\r\n        } else {\r\n            context.shadowOffsetX = 0;\r\n            context.shadowOffsetY = 0;\r\n            context.shadowColor = 0;\r\n            context.shadowBlur = 0;\r\n        }\r\n    }\r\n\r\n    update(recalculateMetrics) {\r\n        if (recalculateMetrics) {\r\n            this._font = this.fontStyle + ' ' + this.fontSize + ' ' + this.fontFamily;\r\n\r\n            this.metrics = MeasureText(this);\r\n        }\r\n\r\n        return this.parent.updateText(recalculateMetrics);\r\n    }\r\n\r\n    buildFont() {\r\n        var newFont = this.fontStyle + ' ' + this.fontSize + ' ' + this.fontFamily;\r\n        if (newFont !== this._font) {\r\n            this._font = newFont;\r\n            //this.metrics = MeasureText(this);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    setFont(font) {\r\n        if (typeof font === 'string') {\r\n            this.fontFamily = font;\r\n            this.fontSize = '';\r\n            this.fontStyle = '';\r\n        } else {\r\n            this.fontFamily = GetValue(font, 'fontFamily', 'Courier');\r\n            this.fontSize = GetValue(font, 'fontSize', '16px');\r\n            this.fontStyle = GetValue(font, 'fontStyle', '');\r\n        }\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setFontFamily(family) {\r\n        this.fontFamily = family;\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setFontStyle(style) {\r\n        this.fontStyle = style;\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setFontSize(size) {\r\n        if (typeof size === 'number') {\r\n            size = size.toString() + 'px';\r\n        }\r\n\r\n        this.fontSize = size;\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setTestString(string) {\r\n        this.testString = string;\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setFixedSize(width, height) {\r\n        this.fixedWidth = width;\r\n        this.fixedHeight = height;\r\n\r\n        if (width) {\r\n            this.parent.width = width;\r\n        }\r\n\r\n        if (height) {\r\n            this.parent.height = height;\r\n        }\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setResolution(value) {\r\n        this.resolution = value;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setLineSpacing(value) {\r\n        this.lineSpacing = value;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setBackgroundColor(color) {\r\n        this.backgroundColor = color;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setFill(color) {\r\n        this.color = color;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setColor(color) {\r\n        this.color = color;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setStroke(color, thickness) {\r\n        if (color === undefined) {\r\n            //  Reset the stroke to zero (disabling it)\r\n            this.strokeThickness = 0;\r\n        } else {\r\n            if (thickness === undefined) {\r\n                thickness = this.strokeThickness;\r\n            }\r\n\r\n            this.stroke = color;\r\n            this.strokeThickness = thickness;\r\n        }\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setShadow(x, y, color, blur, shadowStroke, shadowFill) {\r\n        if (x === undefined) {\r\n            x = 0;\r\n        }\r\n        if (y === undefined) {\r\n            y = 0;\r\n        }\r\n        if (color === undefined) {\r\n            color = '#000';\r\n        }\r\n        if (blur === undefined) {\r\n            blur = 0;\r\n        }\r\n        if (shadowStroke === undefined) {\r\n            shadowStroke = false;\r\n        }\r\n        if (shadowFill === undefined) {\r\n            shadowFill = true;\r\n        }\r\n\r\n        this.shadowOffsetX = x;\r\n        this.shadowOffsetY = y;\r\n        this.shadowColor = color;\r\n        this.shadowBlur = blur;\r\n        this.shadowStroke = shadowStroke;\r\n        this.shadowFill = shadowFill;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setShadowOffset(x, y) {\r\n        if (x === undefined) {\r\n            x = 0;\r\n        }\r\n        if (y === undefined) {\r\n            y = x;\r\n        }\r\n\r\n        this.shadowOffsetX = x;\r\n        this.shadowOffsetY = y;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setShadowColor(color) {\r\n        if (color === undefined) {\r\n            color = '#000';\r\n        }\r\n\r\n        this.shadowColor = color;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setShadowBlur(blur) {\r\n        if (blur === undefined) {\r\n            blur = 0;\r\n        }\r\n\r\n        this.shadowBlur = blur;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setShadowStroke(enabled) {\r\n        this.shadowStroke = enabled;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setShadowFill(enabled) {\r\n        this.shadowFill = enabled;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setUnderline(color, thickness, offset) {\r\n        if (color === undefined) {\r\n            color = '#000';\r\n        }\r\n        if (thickness === undefined) {\r\n            thickness = 0;\r\n        }\r\n        if (offset === undefined) {\r\n            offset = 0;\r\n        }\r\n\r\n        this.underlineColor = color;\r\n        this.underlineThickness = thickness;\r\n        this.underlineOffset = offset;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setUnderlineColor(color) {\r\n        if (color === undefined) {\r\n            color = '#000';\r\n        }\r\n\r\n        this.underlineColor = color;\r\n        return this.update(false);\r\n    }\r\n\r\n    setUnderlineThickness(thickness) {\r\n        if (thickness === undefined) {\r\n            thickness = 0;\r\n        }\r\n\r\n        this.underlineThickness = thickness;\r\n        return this.update(false);\r\n    }\r\n\r\n    setUnderlineOffset(offset) {\r\n        if (offset === undefined) {\r\n            offset = 0;\r\n        }\r\n\r\n        this.underlineOffset = offset;\r\n        return this.update(false);\r\n    }\r\n\r\n    setWrapMode(mode) {\r\n        if (typeof mode === 'string') {\r\n            mode = WRAPMODE[mode.toLowerCase()] || 0;\r\n        }\r\n        this.wrapMode = mode;\r\n        return this.update(true);\r\n    }\r\n\r\n    setWrapWidth(width) {\r\n        this.wrapWidth = width;\r\n        return this.update(false);\r\n    }\r\n\r\n    setAlign(halign, valign) {\r\n        if (halign === undefined) {\r\n            halign = 'left';\r\n        }\r\n        if (valign === undefined) {\r\n            valign = 'top';\r\n        }\r\n        this.halign = halign;\r\n        this.valign = valign;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setHAlign(halign) {\r\n        if (halign === undefined) {\r\n            halign = 'left';\r\n        }\r\n        this.halign = halign;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setVAlign(valign) {\r\n        if (valign === undefined) {\r\n            valign = 'top';\r\n        }\r\n        this.valign = valign;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setMaxLines(max) {\r\n        if (max === undefined) {\r\n            max = 0;\r\n        }\r\n\r\n        this.maxLines = max;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    getTextMetrics() {\r\n        var metrics = this.metrics;\r\n\r\n        return {\r\n            ascent: metrics.ascent,\r\n            descent: metrics.descent,\r\n            fontSize: metrics.fontSize\r\n        };\r\n    }\r\n\r\n    get lineHeight() {\r\n        return this.metrics.fontSize + this.strokeThickness + this.lineSpacing;\r\n    }\r\n\r\n    toJSON() {\r\n        var output = {};\r\n\r\n        for (var key in propertyMap) {\r\n            output[key] = this[key];\r\n        }\r\n\r\n        output.metrics = this.getTextMetrics();\r\n\r\n        return output;\r\n    }\r\n\r\n    destroy() {\r\n        this.parent = undefined;\r\n    }\r\n\r\n}\r\n\r\nconst HALIGNMODE = {\r\n    left: CONST.hleft,\r\n    center: CONST.hcenter,\r\n    right: CONST.hright,\r\n};\r\nconst VALIGNMODE = {\r\n    top: CONST.vtop,\r\n    center: CONST.vcenter,\r\n    bottom: CONST.vbottom,\r\n};\r\nconst WRAPMODE = {\r\n    none: CONST.NO_WRAP,\r\n    word: CONST.WORD_WRAP,\r\n    char: CONST.CHAR_WRAP,\r\n    character: CONST.CHAR_WRAP\r\n};\r\n\r\nexport default TextStyle;","export default {\r\n    draw(startX, startY, boxWidth, boxHeight) {\r\n        var penManager = this.penManager;\r\n        this.hitAreaManager.clear();\r\n\r\n        var context = this.context;\r\n        context.save();\r\n\r\n        // this.clear();\r\n        this.drawBackground(this.defatultStyle.backgroundColor);\r\n\r\n        // draw lines\r\n        var defatultStyle = this.defatultStyle;\r\n        startX += this.startXOffset;\r\n        startY += this.startYOffset;\r\n        var halign = defatultStyle.halign,\r\n            valign = defatultStyle.valign;\r\n\r\n        var lineWidth, lineHeight = defatultStyle.lineHeight;\r\n        var lines = penManager.lines;\r\n        var totalLinesNum = lines.length,\r\n            maxLines = defatultStyle.maxLines;\r\n        var drawLinesNum, drawLineStartIdx, drawLineEndIdx;\r\n        if ((maxLines > 0) && (totalLinesNum > maxLines)) {\r\n            drawLinesNum = maxLines;\r\n            if (valign === 'center') { // center\r\n                drawLineStartIdx = Math.floor((totalLinesNum - drawLinesNum) / 2);\r\n            } else if (valign === 'bottom') { // bottom\r\n                drawLineStartIdx = totalLinesNum - drawLinesNum;\r\n            } else {\r\n                drawLineStartIdx = 0;\r\n            }\r\n        } else {\r\n            drawLinesNum = totalLinesNum;\r\n            drawLineStartIdx = 0;\r\n        }\r\n        drawLineEndIdx = drawLineStartIdx + drawLinesNum;\r\n\r\n        var offsetX, offsetY;\r\n        if (valign === 'center') { // center\r\n            offsetY = Math.max((boxHeight - (drawLinesNum * lineHeight)) / 2, 0);\r\n        } else if (valign === 'bottom') { // bottom\r\n            offsetY = Math.max(boxHeight - (drawLinesNum * lineHeight) - 2, 0);\r\n        } else {\r\n            offsetY = 0;\r\n        }\r\n        offsetY += startY;\r\n        for (var lineIdx = drawLineStartIdx; lineIdx < drawLineEndIdx; lineIdx++) {\r\n            lineWidth = penManager.getLineWidth(lineIdx);\r\n            if (lineWidth === 0) {\r\n                continue;\r\n            }\r\n\r\n            if (halign === 'center') { // center\r\n                offsetX = (boxWidth - lineWidth) / 2;\r\n            } else if (halign === 'right') { // right\r\n                offsetX = boxWidth - lineWidth;\r\n            } else {\r\n                offsetX = 0;\r\n            }\r\n            offsetX += startX;\r\n\r\n            var pens = lines[lineIdx];\r\n            for (var penIdx = 0, pensLen = pens.length; penIdx < pensLen; penIdx++) {\r\n                this.drawPen(pens[penIdx], offsetX, offsetY);\r\n            }\r\n        }\r\n\r\n        context.restore();\r\n    },\r\n\r\n    drawPen(pen, offsetX, offsetY) {\r\n        offsetX += pen.x;\r\n        offsetY += pen.y;\r\n\r\n        var canvas = this.canvas;\r\n        var context = this.context;\r\n        context.save();\r\n\r\n        var curStyle = this.parser.propToContextStyle(\r\n            this.defatultStyle,\r\n            pen.prop\r\n        );\r\n        curStyle.buildFont();\r\n        curStyle.syncFont(canvas, context);\r\n        curStyle.syncStyle(canvas, context);\r\n\r\n        // Underline\r\n        if ((curStyle.underlineThickness > 0) && (pen.width > 0)) {\r\n            this.drawUnderline(offsetX, offsetY, pen.width, curStyle);\r\n        }\r\n\r\n        // Text\r\n        if (pen.isTextPen) {\r\n            this.drawText(offsetX, offsetY, pen.text, curStyle);\r\n        }\r\n\r\n        // Image\r\n        if (pen.isImagePen) {\r\n            this.drawImage(offsetX, offsetY, pen.prop.img, curStyle);\r\n        }\r\n\r\n        context.restore();\r\n\r\n        if (pen.hasAreaMarker && (pen.width > 0)) {\r\n            this.hitAreaManager.add(\r\n                pen.prop.area, // key\r\n                offsetX, // x\r\n                (offsetY - this.startYOffset), // y\r\n                pen.width, // width\r\n                this.defatultStyle.lineHeight // height\r\n            );\r\n        }\r\n    },\r\n\r\n    clear() {\r\n        var canvas = this.canvas;\r\n        this.context.clearRect(0, 0, canvas.width, canvas.height);\r\n    },\r\n\r\n    drawBackground(color) {\r\n        if (color === null) {\r\n            return;\r\n        }\r\n        this.context.fillStyle = color;\r\n        this.context.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n    },\r\n\r\n    drawUnderline(x, y, width, style) {\r\n        y += style.underlineOffset - (style.underlineThickness / 2);\r\n        if (this.autoRound) {\r\n            x = Math.round(x);\r\n            y = Math.round(y);\r\n        }\r\n\r\n        var context = this.context;\r\n        var savedLineCap = context.lineCap;\r\n        context.lineCap = 'butt';\r\n        context.beginPath();\r\n        context.strokeStyle = style.underlineColor;\r\n        context.lineWidth = style.underlineThickness;\r\n        context.moveTo(x, y);\r\n        context.lineTo((x + width), y);\r\n        context.stroke();\r\n        context.lineCap = savedLineCap;\r\n    },\r\n\r\n    drawText(x, y, text, style) {\r\n        if (this.autoRound) {\r\n            x = Math.round(x);\r\n            y = Math.round(y);\r\n        }\r\n\r\n        var context = this.context;\r\n        if (style.strokeThickness) {\r\n            style.syncShadow(context, style.shadowStroke);\r\n            context.strokeText(text, x, y);\r\n        }\r\n\r\n        if (style.color && (style.color !== 'none')) {\r\n            style.syncShadow(context, style.shadowFill);\r\n            context.fillText(text, x, y);\r\n        }\r\n    },\r\n\r\n    drawImage(x, y, imgKey, style) {\r\n        var imageManager = this.parent.imageManager;\r\n        var imgData = imageManager.get(imgKey);\r\n        var frame = imageManager.getFrame(imgKey);\r\n\r\n        x += imgData.left;\r\n        y += - this.startYOffset + imgData.y;\r\n        if (this.autoRound) {\r\n            x = Math.round(x);\r\n            y = Math.round(y);\r\n        }\r\n\r\n        var context = this.context;\r\n        context.drawImage(\r\n            frame.source.image,\r\n            frame.cutX, frame.cutY, frame.cutWidth, frame.cutHeight,\r\n            x, y, imgData.width, imgData.height\r\n        );\r\n    }\r\n\r\n}","class Stack {\r\n    constructor() {\r\n        this.items = [];\r\n    }\r\n\r\n    destroy() {\r\n        this.clear();\r\n        this.items = undefined;\r\n    }\r\n\r\n    pop() {\r\n        return (this.items.length > 0) ? this.items.pop() : null;\r\n    }\r\n\r\n    push(l) {\r\n        this.items.push(l);\r\n        return this;\r\n    }\r\n\r\n    pushMultiple(arr) {\r\n        this.items.push.apply(this.items, arr);\r\n        arr.length = 0;\r\n        return this;\r\n    }\r\n\r\n    clear() {\r\n        this.items.length = 0;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport default Stack;","import Pool from './utils/struct/Stack.js';\r\nexport default Pool;","import CONST from '../const.js';\r\n\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\nconst NO_NEWLINE = CONST.NO_NEWLINE;\r\nconst RAW_NEWLINE = CONST.RAW_NEWLINE;\r\n\r\nclass Pen {\r\n    constructor(config) {\r\n        this.prop = {};\r\n        this.resetFromJSON(config);\r\n    }\r\n\r\n    resetFromJSON(o) { // (txt, x, y, width, prop, newLineMode, startIndex)\r\n        this.text = GetValue(o, 'text', '');\r\n        this.x = GetValue(o, 'x', 0);\r\n        this.y = GetValue(o, 'y', 0);\r\n        this.width = GetValue(o, 'width', 0);\r\n\r\n        var prop = GetValue(o, 'prop', null);\r\n        if (prop === null) {\r\n            prop = {};\r\n        }\r\n        this.prop = prop;\r\n        this.newLineMode = GetValue(o, 'newLineMode', 0);\r\n        this.startIndex = GetValue(o, 'startIndex', 0);\r\n    }\r\n\r\n    get plainText() {\r\n        var txt = this.text\r\n        if (this.newLineMode === RAW_NEWLINE) {\r\n            txt += \"\\n\";\r\n        }\r\n\r\n        return txt;\r\n    }\r\n\r\n    get wrapText() {\r\n        var txt = this.text;\r\n        if (this.newLineMode !== NO_NEWLINE) {\r\n            txt += \"\\n\";\r\n        }\r\n\r\n        return txt;\r\n    }\r\n\r\n    get rawTextLength() {\r\n        var len = this.text.length;\r\n        if (this.newLineMode === RAW_NEWLINE) {\r\n            len += 1;\r\n        }\r\n        return len;\r\n    }\r\n\r\n    get endIndex() {\r\n        return this.startIndex + this.rawTextLength;\r\n    }\r\n\r\n    get lastX() {\r\n        return this.x + this.width;\r\n    }\r\n\r\n    get isTextPen() {\r\n        return (this.text !== '');\r\n    }\r\n\r\n    get isImagePen() {\r\n        return !!this.prop.img;\r\n    }\r\n\r\n    get hasAreaMarker() {\r\n        return !!this.prop.area;\r\n    }\r\n};\r\n\r\nexport default Pen;","var Clear = function (obj) {\r\n    if (Array.isArray(obj)) {\r\n        obj.length = 0;\r\n    } else {\r\n        for (var key in obj) {\r\n            delete obj[key];\r\n        }\r\n    }\r\n}\r\nexport default Clear;","import Clear from './Clear.js';\r\n\r\n/**\r\n * Shallow Object Clone. Will not out nested objects.\r\n * @param {object} obj JSON object\r\n * @param {object} ret JSON object to return, set null to return a new object\r\n * @returns {object} this object\r\n */\r\nvar Clone = function (obj, out) {\r\n    var objIsArray = Array.isArray(obj);\r\n\r\n    if (out === undefined) {\r\n        out = (objIsArray) ? [] : {};\r\n    } else {\r\n        Clear(out);\r\n    }\r\n\r\n    if (objIsArray) {\r\n        out.length = obj.length;\r\n        for (var i = 0, cnt = obj.length; i < cnt; i++) {\r\n            out[i] = obj[i];\r\n        }\r\n    } else {\r\n        for (var key in obj) {\r\n            out[key] = obj[key];\r\n        }\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nexport default Clone;\r\n","var NOOP = function () {\r\n    //  NOOP\r\n};\r\n\r\nexport default NOOP;","import Pool from '../../../../pool.js';\r\nimport Pen from './Pen.js';\r\nimport CONST from '../const.js';\r\nimport Clone from '../../../../utils/object/Clone.js';\r\nimport NOOP from '../../../../utils/object/NOOP.js';\r\n\r\nconst GetFastValue = Phaser.Utils.Objects.GetFastValue;\r\nconst NO_NEWLINE = CONST.NO_NEWLINE;\r\nconst WRAPPED_NEWLINE = CONST.WRAPPED_NEWLINE;\r\n\r\nvar PensPool = new Pool(); // default pens pool\r\nvar LinesPool = new Pool(); // default lines pool\r\nclass PenManager {\r\n    constructor(config) {\r\n        this.pens = []; // all pens\r\n        this.lines = []; // pens in lines [ [],[],[],.. ]\r\n        this.maxLinesWidth = undefined;\r\n\r\n        this.PensPool = GetFastValue(config, 'pensPool', PensPool);\r\n        this.LinesPool = GetFastValue(config, 'linesPool', LinesPool);\r\n        this.tagToText = GetFastValue(config, 'tagToText', NOOP);\r\n        this.tagToTextScope = GetFastValue(config, 'tagToTextScope', undefined);\r\n    }\r\n\r\n    destroy() {\r\n        this.freePens();\r\n        this.tagToText = undefined;\r\n        this.tagToTextScope = undefined;\r\n    }\r\n\r\n    freePens() {\r\n        for (var i = 0, len = this.lines.length; i < len; i++)\r\n            this.lines[i].length = 0;\r\n\r\n        this.PensPool.pushMultiple(this.pens);\r\n        this.LinesPool.pushMultiple(this.lines);\r\n        this.maxLinesWidth = undefined;\r\n    }\r\n\r\n    addTextPen(text, x, y, width, prop, newLineMode) {\r\n        var pen = this.PensPool.pop();\r\n        if (pen == null) {\r\n            pen = new Pen();\r\n        }\r\n        PEN_CONFIG.text = text;\r\n        PEN_CONFIG.x = x;\r\n        PEN_CONFIG.y = y;\r\n        PEN_CONFIG.width = width;\r\n        PEN_CONFIG.prop = prop;\r\n        PEN_CONFIG.newLineMode = newLineMode;\r\n        pen.resetFromJSON(PEN_CONFIG);\r\n        this.addPen(pen);\r\n        return this;\r\n    }\r\n\r\n    addImagePen(x, y, width, prop) {\r\n        this.addTextPen('', x, y, width, prop, NO_NEWLINE);\r\n        return this;\r\n    }\r\n\r\n    addNewLinePen() {\r\n        var previousPen = this.lastPen;\r\n        var x = (previousPen) ? previousPen.lastX : 0;\r\n        var y = (previousPen) ? previousPen.y : 0;\r\n        var prop = (previousPen) ? Clone(previousPen.prop) : null;\r\n        this.addTextPen('', x, y, 0, prop, WRAPPED_NEWLINE);\r\n        return this;\r\n    }\r\n\r\n    addPen(pen) {\r\n        var previousPen = this.lastPen;\r\n        if (previousPen == null) {\r\n            pen.startIndex = 0;\r\n        } else {\r\n            pen.startIndex = previousPen.endIndex;\r\n        }\r\n        this.pens.push(pen);\r\n\r\n        // maintan lines\r\n        var line = this.lastLine;\r\n        if (line == null) {\r\n            line = this.LinesPool.pop() || [];\r\n            this.lines.push(line);\r\n        }\r\n        line.push(pen);\r\n\r\n        // new line, add an empty line\r\n        if (pen.newLineMode !== NO_NEWLINE) {\r\n            line = this.LinesPool.pop() || [];\r\n            this.lines.push(line);\r\n        }\r\n        this.maxLinesWidth = undefined;\r\n    }\r\n\r\n    clone(targetPenManager) {\r\n        if (targetPenManager == null)\r\n            targetPenManager = new PenManager();\r\n\r\n        targetPenManager.freePens();\r\n\r\n        for (var li = 0, llen = this.lines.length; li < llen; li++) {\r\n            var pens = this.lines[li];\r\n            for (var pi = 0, plen = pens.length; pi < plen; pi++) {\r\n                var pen = pens[pi];\r\n                targetPenManager.addPen(\r\n                    pen.text,\r\n                    pen.x,\r\n                    pen.y,\r\n                    pen.width,\r\n                    Clone(pen.prop),\r\n                    pen.newLineMode\r\n                );\r\n            }\r\n        }\r\n\r\n        return targetPenManager;\r\n    }\r\n\r\n    get lastPen() {\r\n        return this.pens[this.pens.length - 1];\r\n    }\r\n\r\n    get lastLine() {\r\n        return this.lines[this.lines.length - 1];\r\n    }\r\n\r\n    getLineStartIndex(i) {\r\n        if (i >= this.lines.length) {\r\n            return this.getLineEndIndex(i);\r\n        } else {\r\n            var line = this.lines[i];\r\n            return (line && line[0]) ? line[0].startIndex : 0;\r\n        }\r\n    }\r\n\r\n    getLineEndIndex(i) {\r\n        if (i >= this.lines.length) {\r\n            i = this.lines.length - 1;\r\n        }\r\n        var li, hasLastPen = false,\r\n            line;\r\n        for (li = i; li >= 0; li--) {\r\n            line = this.lines[li];\r\n            hasLastPen = (line != null) && (line.length > 0);\r\n            if (hasLastPen) {\r\n                break;\r\n            }\r\n        }\r\n        if (!hasLastPen) {\r\n            return 0;\r\n        }\r\n\r\n        var lastPen = line[line.length - 1];\r\n        return lastPen.endIndex;\r\n    }\r\n\r\n    getLineWidth(i) {\r\n        var line = this.lines[i];\r\n        if (!line) {\r\n            return 0;\r\n        }\r\n\r\n        var lastPen = line[line.length - 1];\r\n        if (lastPen == null) {\r\n            return 0;\r\n        }\r\n\r\n        var lineWidth = lastPen.lastX; // start from 0\r\n        return lineWidth;\r\n    }\r\n\r\n    getMaxLineWidth() {\r\n        if (this.maxLinesWidth !== undefined) {\r\n            return this.maxLinesWidth;\r\n        }\r\n        var w, maxW = 0;\r\n        for (var i = 0, len = this.lines.length; i < len; i++) {\r\n            w = this.getLineWidth(i);\r\n            if (w > maxW) {\r\n                maxW = w;\r\n            }\r\n        }\r\n        this.maxLinesWidth = maxW;\r\n        return maxW;\r\n    }\r\n\r\n    getLineWidths() {\r\n        var result = [];\r\n        for (var i = 0, len = this.lines.length; i < len; i++) {\r\n            result.push(this.getLineWidth(i));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    get linesCount() {\r\n        return this.lines.length;\r\n    }\r\n\r\n    get plainText() {\r\n        var txt = \"\",\r\n            pens = this.pens;\r\n        for (var i = 0, len = pens.length; i < len; i++) {\r\n            txt += pens[i].plainText;\r\n        }\r\n\r\n        return txt;\r\n    }\r\n\r\n    get rawTextLength() {\r\n        var l = 0,\r\n            pens = this.pens;\r\n        for (var i = 0, len = this.pens.length; i < len; i++) {\r\n            l += pens[i].rawTextLength;\r\n        }\r\n\r\n        return l;\r\n    }\r\n\r\n    getSliceTagText(start, end, wrap) {\r\n        if (start === undefined) {\r\n            start = 0;\r\n        }\r\n        if (end === undefined) {\r\n            var lastPen = this.lastPen;\r\n            if (lastPen == null) {\r\n                return \"\";\r\n            }\r\n\r\n            end = lastPen.endIndex;\r\n        }\r\n        if (wrap === undefined) {\r\n            wrap = false;\r\n        }\r\n\r\n        var txt = \"\",\r\n            formatTxt,\r\n            pen, penTxt, penStartIdx, penEndIdx, isInRange;\r\n        var currentProp, previousProp;\r\n        for (var i = 0, len = this.pens.length; i < len; i++) {\r\n            pen = this.pens[i];\r\n            penEndIdx = pen.endIndex;\r\n            if (penEndIdx <= start) {\r\n                continue;\r\n            }\r\n            pen = this.pens[i];\r\n            penTxt = (!wrap) ? pen.plainText : pen.wrapText;\r\n            currentProp = pen.prop;\r\n            penStartIdx = pen.startIndex;\r\n\r\n            isInRange = (penStartIdx >= start) && (penEndIdx <= end);\r\n            if (!isInRange) {\r\n                penTxt = penTxt.substring(start - penStartIdx, end - penStartIdx);\r\n            }\r\n\r\n            if (this.tagToTextScope) {\r\n                txt += this.tagToText.call(this.tagToTextScope, penTxt, currentProp, previousProp);\r\n            } else {\r\n                txt += this.tagToText(penTxt, currentProp, previousProp);\r\n            }\r\n\r\n            previousProp = currentProp;\r\n            if (penEndIdx >= end) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return txt;\r\n    }\r\n};\r\n\r\nvar PEN_CONFIG = {};\r\n\r\nexport default PenManager;","import Pool from '../../../../pool.js';\r\n\r\nconst Rectangle = Phaser.Geom.Rectangle;\r\n\r\nvar RectanglePool = new Pool();\r\nclass HitAreaManager {\r\n    constructor() {\r\n        this.hitAreas = [];\r\n    }\r\n\r\n    destroy() {\r\n        this.clear();\r\n    }\r\n\r\n    clear() {\r\n        RectanglePool.pushMultiple(this.hitAreas);\r\n        return this;\r\n    }\r\n\r\n    add(key, x, y, width, height) {\r\n        var rectangle = RectanglePool.pop();\r\n        if (rectangle === null) {\r\n            rectangle = new Rectangle(x, y, width, height);\r\n        } else {\r\n            rectangle.setTo(x, y, width, height);\r\n        }\r\n        rectangle.key = key;\r\n        this.hitAreas.push(rectangle);\r\n        return this;\r\n    }\r\n\r\n    getFirstHitArea(x, y) {\r\n        var hitAreas = this.hitAreas, hitArea;\r\n        for (var i = 0, cnt = hitAreas.length; i < cnt; i++) {\r\n            hitArea = hitAreas[i];\r\n            if (hitArea.contains(x, y)) {\r\n                return hitArea;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    drawBounds(graphics, color, parent) {\r\n        if (color === undefined) {\r\n            color = 0xffffff;\r\n        }\r\n\r\n        if (parent) {\r\n            graphics\r\n                .save()\r\n                .scaleCanvas(parent.scaleX, parent.scaleY)\r\n                .rotateCanvas(parent.rotation)\r\n                .translateCanvas(parent.x, parent.y)\r\n        }\r\n\r\n        var hitAreas = this.hitAreas, hitArea;\r\n        for (var i = 0, cnt = hitAreas.length; i < cnt; i++) {\r\n            hitArea = hitAreas[i];\r\n            graphics.lineStyle(1, color).strokeRect(hitArea.x, hitArea.y, hitArea.width, hitArea.height);\r\n        }\r\n\r\n        if (parent) {\r\n            graphics\r\n                .restore()\r\n        }\r\n        return this;\r\n    }\r\n}\r\nexport default HitAreaManager;","var SetInteractive = function () {\r\n    this.parent\r\n        .on('pointerdown', function (pointer, localX, localY, event) {\r\n            FireEvent.call(this, 'areadown', pointer, localX, localY);\r\n        }, this)\r\n        .on('pointerup', function (pointer, localX, localY, event) {\r\n            FireEvent.call(this, 'areaup', pointer, localX, localY);\r\n        }, this)\r\n}\r\n\r\nvar FireEvent = function (eventName, pointer, localX, localY) {\r\n    var area = this.hitAreaManager.getFirstHitArea(localX, localY);\r\n    if (area === null) {\r\n        return;\r\n    }\r\n    var key = area.key;\r\n    this.parent.emit(`${eventName}-${key}`, pointer, localX, localY)\r\n    this.parent.emit(eventName, key, pointer, localX, localY)\r\n}\r\nexport default SetInteractive;","import Pool from '../../../../pool.js';\r\nimport CONST from '../const.js';\r\n\r\nconst NO_NEWLINE = CONST.NO_NEWLINE;\r\nconst RAW_NEWLINE = CONST.RAW_NEWLINE;\r\nconst WRAPPED_NEWLINE = CONST.WRAPPED_NEWLINE;\r\nconst NO_WRAP = CONST.NO_WRAP;\r\nconst WORD_WRAP = CONST.WORD_WRAP;\r\nconst CHAR_WRAP = CONST.CHAR_WRAP;\r\nconst splitRegExp = CONST.SPLITREGEXP;\r\n\r\nvar WRAP_RESULT = [];\r\nvar WrapText = function (text, getTextWidth, wrapMode, wrapWidth, offset) {\r\n    if (wrapWidth <= 0) {\r\n        wrapMode = NO_WRAP;\r\n    }\r\n\r\n    var retLines = WRAP_RESULT;\r\n    LinesPool.pushMultiple(retLines);\r\n\r\n    if (!text || !text.length) {\r\n        return retLines;\r\n    }\r\n\r\n    var lines = text.split(splitRegExp),\r\n        line, remainWidth, isLaseLine, newLineMode;\r\n    for (var i = 0, linesLen = lines.length; i < linesLen; i++) {\r\n        line = lines[i];\r\n        newLineMode = (i === (linesLen - 1)) ? NO_NEWLINE : RAW_NEWLINE;\r\n\r\n        if (wrapMode === NO_WRAP) {\r\n            var textWidth = getTextWidth(line);\r\n            retLines.push(LinesPool.newline(line, textWidth, newLineMode));\r\n            continue;\r\n        } else {\r\n            if (i === 0) {\r\n                remainWidth = wrapWidth - offset;\r\n            } else {\r\n                remainWidth = wrapWidth;\r\n            }\r\n        }\r\n\r\n        // short string testing\r\n        if (line.length <= 100) {\r\n            var textWidth = getTextWidth(line);\r\n            if (textWidth <= remainWidth) {\r\n                retLines.push(LinesPool.newline(line, textWidth, newLineMode));\r\n                continue;\r\n            }\r\n        }\r\n\r\n        // character mode\r\n        var tokenArray;\r\n        if (wrapMode === WORD_WRAP) {\r\n            // word mode\r\n            tokenArray = line.split(' ');\r\n        } else {\r\n            tokenArray = line;\r\n        }\r\n        var token;\r\n        var curLineText = '',\r\n            lineText = '',\r\n            currLineWidth, lineWidth = 0;\r\n        for (var j = 0, tokenLen = tokenArray.length; j < tokenLen; j++) {\r\n            token = tokenArray[j];\r\n\r\n            if (wrapMode === WORD_WRAP) {\r\n                curLineText += token;\r\n\r\n                if (j < (tokenLen - 1)) {\r\n                    curLineText += ' ';\r\n                }\r\n            } else {\r\n                curLineText += token;\r\n            }\r\n\r\n            currLineWidth = getTextWidth(curLineText);\r\n            if (currLineWidth > remainWidth) {\r\n                // new line\r\n                if (j === 0) {\r\n                    retLines.push(LinesPool.newline('', 0, WRAPPED_NEWLINE));\r\n                } else {\r\n                    retLines.push(LinesPool.newline(lineText, lineWidth, WRAPPED_NEWLINE));\r\n                    curLineText = token;\r\n                    if (wrapMode === WORD_WRAP) {\r\n                        if (j < (tokenLen - 1)) {\r\n                            curLineText += ' ';\r\n                        }\r\n                    }\r\n                    currLineWidth = getTextWidth(curLineText);\r\n                }\r\n\r\n                remainWidth = wrapWidth;\r\n            }\r\n\r\n            lineText = curLineText;\r\n            lineWidth = currLineWidth;\r\n        } // for token in tokenArray\r\n\r\n        // flush remain text\r\n        retLines.push(LinesPool.newline(lineText, lineWidth, newLineMode));\r\n\r\n    } // for each line in lines\r\n\r\n    return retLines;\r\n};\r\n\r\nvar LinesPool = new Pool();\r\nLinesPool.newline = function (text, width, newLineMode) {\r\n    var l = this.pop();\r\n    if (l === null) {\r\n        l = {};\r\n    }\r\n    l.text = text;\r\n    l.width = width;\r\n    l.newLineMode = newLineMode;\r\n    return l;\r\n};\r\n\r\nexport default WrapText;","import DrawMethods from './DrawMethods.js';\r\nimport PenManager from '../penmanger/PenManager.js';\r\nimport HitAreaManager from '../hitareamanager/HitAreaManager.js';\r\nimport SetInteractive from './SetInteractive.js';\r\nimport CONST from '../const.js';\r\nimport WrapText from './WrapText.js';\r\nimport Clone from '../../../../utils/object/Clone.js';\r\n\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\nconst NO_WRAP = CONST.NO_WRAP;\r\nconst NO_NEWLINE = CONST.NO_NEWLINE;\r\n\r\nclass CanvasText {\r\n    constructor(config) {\r\n        this.parent = config.parent;\r\n        this.context = GetValue(config, 'context', null);\r\n        this.canvas = this.context.canvas;\r\n        this.parser = GetValue(config, 'parser', null);\r\n        this.defatultStyle = GetValue(config, 'style', null);\r\n        this.autoRound = true;\r\n\r\n        this.pensPool = GetValue(config, 'pensPool', null);\r\n        this.penManager = this.newPenManager();\r\n        this._tmpPenManager = null;\r\n\r\n        this.hitAreaManager = new HitAreaManager();\r\n\r\n        var context = this.context;\r\n        this.getTextWidth = function (text) {\r\n            return context.measureText(text).width;\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.context = undefined;\r\n        this.canvas = undefined;\r\n        this.parser = undefined;\r\n        this.defatultStyle = undefined;\r\n\r\n        if (this.penManager) {\r\n            this.penManager.destroy();\r\n            this.penManager = undefined;\r\n        }\r\n        if (this._tmpPenManager) {\r\n            this._tmpPenManager.destroy();\r\n            this._tmpPenManager = undefined;\r\n        }\r\n        if (this.hitAreaManager) {\r\n            this.hitAreaManager.destroy();\r\n            this.hitAreaManager = undefined;\r\n        }\r\n    }\r\n\r\n    updatePenManager(text, wrapMode, wrapWidth, lineHeight, penManager) {\r\n        if (penManager === undefined) {\r\n            penManager = this.penManager;\r\n        }\r\n        penManager.freePens();\r\n        if (text === \"\") {\r\n            return penManager;\r\n        }\r\n\r\n        var canvas = this.canvas;\r\n        var context = this.context;\r\n\r\n        var cursorX = 0,\r\n            cursorY = 0;\r\n\r\n        var plainText, curProp, curStyle;\r\n        var match = this.parser.splitText(text),\r\n            result, wrapLines;\r\n        for (var i = 0, len = match.length; i < len; i++) {\r\n            result = this.parser.tagTextToProp(match[i], curProp);\r\n            plainText = result.plainText;\r\n            curProp = result.prop;\r\n\r\n            if (curProp.img) { // Image tag                \r\n                var imgWidth = this.imageManager.getOuterWidth(curProp.img);\r\n                if ((wrapWidth > 0) && (wrapMode !== NO_WRAP)) {  // Wrap mode\r\n                    if (wrapWidth < (cursorX + imgWidth)) {\r\n                        penManager.addNewLinePen();\r\n                        cursorY += lineHeight;\r\n                        cursorX = 0;\r\n                    }\r\n                }\r\n                penManager.addImagePen(cursorX, cursorY, imgWidth, Clone(curProp));\r\n                cursorX += imgWidth;\r\n\r\n            } else if (plainText !== '') {\r\n                // wrap text to lines\r\n                // Save the current context.\r\n                this.context.save();\r\n                curStyle = this.parser.propToContextStyle(\r\n                    this.defatultStyle,\r\n                    curProp\r\n                );\r\n                curStyle.buildFont();\r\n                curStyle.syncFont(canvas, context);\r\n                curStyle.syncStyle(canvas, context);\r\n                wrapLines = WrapText(plainText, this.getTextWidth, wrapMode, wrapWidth, cursorX);\r\n\r\n                // add pens\r\n                var n;\r\n                for (var j = 0, jLen = wrapLines.length; j < jLen; j++) {\r\n                    n = wrapLines[j];\r\n                    penManager.addTextPen(n.text, cursorX, cursorY, n.width, Clone(curProp), n.newLineMode);\r\n\r\n                    if (n.newLineMode !== NO_NEWLINE) {\r\n                        cursorX = 0;\r\n                        cursorY += lineHeight;\r\n                    } else {\r\n                        cursorX += n.width;\r\n                    }\r\n\r\n                }\r\n                this.context.restore();\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return penManager;\r\n    }\r\n\r\n    get startXOffset() {\r\n        var defatultStyle = this.defatultStyle;\r\n        return (defatultStyle.strokeThickness / 2);\r\n    }\r\n\r\n    get startYOffset() {\r\n        var defatultStyle = this.defatultStyle;\r\n        return (defatultStyle.strokeThickness / 2) + defatultStyle.metrics.ascent;\r\n    }\r\n\r\n    get lines() {\r\n        return this.penManager.lines;\r\n    }\r\n\r\n    get desplayLinesCount() {\r\n        var linesCount = this.penManager.linesCount,\r\n            maxLines = this.defatultStyle.maxLines;\r\n        if ((maxLines > 0) && (linesCount > maxLines)) {\r\n            linesCount = maxLines;\r\n        }\r\n        return linesCount;\r\n    }\r\n\r\n    get linesWidth() {\r\n        return this.penManager.getMaxLineWidth();\r\n    }\r\n\r\n    get linesHeight() {\r\n        var linesCount = this.desplayLinesCount;\r\n        var linesHeight = (this.defatultStyle.lineHeight * linesCount);\r\n        if (linesCount > 0) {\r\n            linesHeight -= this.defatultStyle.lineSpacing;\r\n        }\r\n        return linesHeight;\r\n    }\r\n\r\n    get imageManager() {\r\n        return this.parent.imageManager;\r\n    }\r\n\r\n    newPenManager() {\r\n        return new PenManager({\r\n            pensPool: this.pensPool,\r\n            tagToText: this.parser.propToTagText,\r\n            tagToTextScope: this.parser\r\n        });\r\n    }\r\n\r\n    get tmpPenManager() {\r\n        if (this._tmpPenManager === null) {\r\n            this._tmpPenManager = this.newPenManager();\r\n        }\r\n        return this._tmpPenManager;\r\n    }\r\n\r\n    getPlainText(text, start, end) {\r\n        var plainText;\r\n        if (text == null) {\r\n            plainText = this.penManager.plainText;\r\n        } else {\r\n            var m, match = this.parser.splitText(text, 1); // PLAINTEXTONLY_MODE\r\n            plainText = \"\";\r\n            for (var i = 0, len = match.length; i < len; i++) {\r\n                plainText += match[i];\r\n            }\r\n        }\r\n\r\n        if ((start != null) || (end != null)) {\r\n            if (start == null) {\r\n                start = 0;\r\n            }\r\n            if (end == null) {\r\n                end = plainText.length;\r\n            }\r\n            plainText = plainText.substring(start, end);\r\n        }\r\n\r\n        return plainText;\r\n    }\r\n\r\n    getPenManager(text, retPenManager) {\r\n        if (text === undefined) {\r\n            return this.copyPenManager(retPenManager, this.penManager);\r\n        }\r\n\r\n        if (retPenManager === undefined) {\r\n            retPenManager = this.newPenManager();\r\n        }\r\n\r\n        var defatultStyle = this.defatultStyle;\r\n        this.updatePenManager(\r\n            text,\r\n            defatultStyle.wrapMode,\r\n            defatultStyle.wrapWidth,\r\n            defatultStyle.lineHeight,\r\n            retPenManager\r\n        );\r\n        return retPenManager;\r\n    }\r\n\r\n    getText(text, start, end, wrap) {\r\n        if (text == null) {\r\n            return this.penManager.getSliceTagText(start, end, wrap);\r\n        }\r\n\r\n        var penManager = this.tmpPenManager;\r\n        var defatultStyle = this.defatultStyle;\r\n        this.updatePenManager(\r\n            text,\r\n            defatultStyle.wrapMode,\r\n            defatultStyle.wrapWidth,\r\n            defatultStyle.lineHeight,\r\n            penManager\r\n        );\r\n\r\n        return penManager.getSliceTagText(start, end, wrap);\r\n    }\r\n\r\n    copyPenManager(ret, src) {\r\n        if (src === undefined) {\r\n            src = this.penManager;\r\n        }\r\n        return src.copy(ret);\r\n    }\r\n\r\n    getTextWidth(penManager) {\r\n        if (penManager === undefined) {\r\n            penManager = this.penManager;\r\n        }\r\n\r\n        return penManager.getMaxLineWidth();\r\n    }\r\n\r\n    getLastPen(penManager) {\r\n        if (penManager === undefined) {\r\n            penManager = this.penManager;\r\n        }\r\n\r\n        return penManager.lastPen;\r\n    }\r\n};\r\n\r\nvar methods = {\r\n    setInteractive: SetInteractive,\r\n}\r\n\r\nObject.assign(\r\n    CanvasText.prototype,\r\n    DrawMethods,\r\n    methods\r\n);\r\n\r\nexport default CanvasText;","const GetValue = Phaser.Utils.Objects.GetValue;\r\n\r\nclass ImageManager {\r\n    constructor(textureManager) {\r\n        this.textureManager = textureManager;\r\n        this.images = {};\r\n    }\r\n\r\n    add(key, config) {\r\n        if (typeof (key) === 'string') {\r\n            this._add(key, config);\r\n        } else if (Array.isArray(key)) {\r\n            var data = key;\r\n            for (var i = 0, cnt = data.length; i < cnt; i++) {\r\n                this._add(data[i]);\r\n            }\r\n        } else {\r\n            var data = key;\r\n            for (var key in data) {\r\n                this._add(key, data[key]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    _add(key, config) {\r\n        if (config === undefined) {\r\n            config = {\r\n                key: key\r\n            }\r\n        }\r\n\r\n        var textureKey = config.key, frameKey = config.frame;\r\n        var width = config.width, height = config.height;\r\n\r\n        if ((width === undefined) || (height === undefined)) {\r\n            var frame = this.textureManager.getFrame(textureKey, frameKey);\r\n            var frameWidth = (frame) ? frame.cutWidth : 0;\r\n            var frameHeight = (frame) ? frame.cutHeight : 0;\r\n            if ((width === undefined) && (height === undefined)) {\r\n                width = frameWidth;\r\n                height = frameHeight;\r\n            } else if (width === undefined) {\r\n                width = frameWidth * (height / frameHeight);\r\n            } else if (height === undefined) {\r\n                height = frameHeight * (width / frameWidth);\r\n            }\r\n        }\r\n\r\n        this.images[key] = {\r\n            key: textureKey,\r\n            frame: frameKey,\r\n            width: width,\r\n            height: height,\r\n            y: GetValue(config, 'y', 0),\r\n            left: GetValue(config, 'left', 0),\r\n            right: GetValue(config, 'right', 0)\r\n        }\r\n    }\r\n\r\n    remove(key) {\r\n        if (this.images.hasOwnProperty(key)) {\r\n            delete this.images[key];\r\n        }\r\n        return this;\r\n    }\r\n\r\n    get(key) {\r\n        if (!this.images.hasOwnProperty(key)) {\r\n            if (this.textureManager.exists(key)) {\r\n                this.add(key);\r\n            }\r\n        }\r\n        return this.images[key];\r\n    }\r\n\r\n    getOuterWidth(key) {\r\n        var data = this.get(key);\r\n        return (data) ? (data.width + data.left + data.right) : 0;\r\n    }\r\n\r\n    getFrame(key) {\r\n        var data = this.get(key);\r\n        return (data) ? this.textureManager.getFrame(data.key, data.frame) : undefined;\r\n    }\r\n\r\n    hasTexture(key) {\r\n        return !!this.getFrame(key);\r\n    }\r\n}\r\nexport default ImageManager;","import ImageManager from './ImageManager.js';\r\n\r\nvar globImageManager;\r\n\r\nexport default function(textureManager) {\r\n    if (globImageManager === undefined) {\r\n        globImageManager = new ImageManager(textureManager);\r\n    }\r\n    return globImageManager;\r\n}","import Render from './render/Render.js';\r\nimport TextStyle from './textstyle/TextStyle.js'; // extended\r\nimport CanvasTextKlass from './canvastext/CanvasText.js';\r\nimport Pool from '../../../pool.js';\r\nimport CONST from './const.js';\r\nimport GetGlobImageManager from './imagemanager/GetGlobImageManager.js';\r\n\r\nconst AddToDOM = Phaser.DOM.AddToDOM;\r\nconst CanvasPool = Phaser.Display.Canvas.CanvasPool;\r\nconst GameObject = Phaser.GameObjects.GameObject;\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\nconst RemoveFromDOM = Phaser.DOM.RemoveFromDOM;\r\nconst SPLITREGEXP = CONST.SPLITREGEXP;\r\n\r\nvar PensPools = {};\r\n\r\nclass Text extends GameObject {\r\n    constructor(scene, x, y, text, style, type, parser) {\r\n        if (x === undefined) {\r\n            x = 0;\r\n        }\r\n        if (y === undefined) {\r\n            y = 0;\r\n        }\r\n\r\n        super(scene, type);\r\n\r\n        this.renderer = scene.sys.game.renderer;\r\n\r\n        this.setPosition(x, y);\r\n        this.setOrigin(0, 0);\r\n        this.initPipeline();\r\n\r\n        this.canvas = CanvasPool.create(this);\r\n\r\n        this.context = this.canvas.getContext('2d');\r\n\r\n        if (style) {\r\n            // Override align\r\n            if (style.hasOwnProperty('align')) {\r\n                var halign = style.align;\r\n                delete style.align;\r\n                style.halign = halign;\r\n            }\r\n            // Has Stroke color but stroke thinkness, set stroke thinkness to 1\r\n            if (style.hasOwnProperty('stroke') && !style.hasOwnProperty('strokeThickness')) {\r\n                style.strokeThickness = 1;\r\n            }\r\n        }\r\n        this.style = new TextStyle(this, style);\r\n\r\n        this.autoRound = true;\r\n\r\n        this._text = undefined;\r\n\r\n        this.padding = {\r\n            left: 0,\r\n            right: 0,\r\n            top: 0,\r\n            bottom: 0\r\n        };\r\n\r\n        this.width = 1;\r\n\r\n        this.height = 1;\r\n\r\n        this.dirty = false;\r\n\r\n        //  If resolution wasn't set, then we get it from the game config\r\n        if (this.style.resolution === 0) {\r\n            this.style.resolution = scene.sys.game.config.resolution;\r\n        }\r\n\r\n        this._crop = this.resetCropObject();\r\n\r\n        //  Create a Texture for this Text object\r\n        this.texture = scene.sys.textures.addCanvas(null, this.canvas, true);\r\n\r\n        //  Get the frame\r\n        this.frame = this.texture.get();\r\n\r\n        //  Set the resolution\r\n        this.frame.source.resolution = this.style.resolution;\r\n\r\n        if (this.renderer.gl) {\r\n            //  Clear the default 1x1 glTexture, as we override it later\r\n\r\n            this.renderer.deleteTexture(this.frame.source.glTexture);\r\n\r\n            this.frame.source.glTexture = null;\r\n        }\r\n\r\n        if (!PensPools.hasOwnProperty(type)) {\r\n            PensPools[type] = new Pool();\r\n        }\r\n        this.canvasText = new CanvasTextKlass({\r\n            parent: this,\r\n            context: this.context,\r\n            parser: parser,\r\n            style: this.style,\r\n            pensPool: PensPools[type]\r\n        });\r\n\r\n        //this.initRTL();\r\n\r\n        if (style && style.padding) {\r\n            this.setPadding(style.padding);\r\n        }\r\n\r\n        this.setText(text);\r\n\r\n        scene.sys.game.events.on('contextrestored', function () {\r\n            this.dirty = true;\r\n        }, this);\r\n    }\r\n\r\n    set text(value) {\r\n        this.setText(value);\r\n    }\r\n    get text() {\r\n        return this._text;\r\n    }\r\n\r\n    initRTL() {\r\n        if (!this.style.rtl) {\r\n            return;\r\n        }\r\n\r\n        //  Here is where the crazy starts.\r\n        //\r\n        //  Due to browser implementation issues, you cannot fillText BiDi text to a canvas\r\n        //  that is not part of the DOM. It just completely ignores the direction property.\r\n\r\n        this.canvas.dir = 'rtl';\r\n\r\n        //  Experimental atm, but one day ...\r\n        this.context.direction = 'rtl';\r\n\r\n        //  Add it to the DOM, but hidden within the parent canvas.\r\n        this.canvas.style.display = 'none';\r\n\r\n        AddToDOM(this.canvas, this.scene.sys.canvas);\r\n\r\n        //  And finally we set the x origin\r\n        this.originX = 1;\r\n    }\r\n\r\n    setText(value) {\r\n        if (!value && value !== 0) {\r\n            value = '';\r\n        }\r\n\r\n        if (Array.isArray(value)) {\r\n            value = value.join('\\n');\r\n        }\r\n\r\n        if (value !== this._text) {\r\n            this._text = value.toString();\r\n\r\n            this.updateText();\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    setStyle(style) {\r\n        return this.style.setStyle(style);\r\n    }\r\n\r\n    setFont(font) {\r\n        return this.style.setFont(font);\r\n    }\r\n\r\n    setFontFamily(family) {\r\n        return this.style.setFontFamily(family);\r\n    }\r\n\r\n    setFontSize(size) {\r\n        return this.style.setFontSize(size);\r\n    }\r\n\r\n    setFontStyle(style) {\r\n        return this.style.setFontStyle(style);\r\n    }\r\n\r\n    setFixedSize(width, height) {\r\n        return this.style.setFixedSize(width, height);\r\n    }\r\n\r\n    setBackgroundColor(color) {\r\n        return this.style.setBackgroundColor(color);\r\n    }\r\n\r\n    setFill(color) {\r\n        return this.style.setFill(color);\r\n    }\r\n\r\n    setColor(color) {\r\n        return this.style.setColor(color);\r\n    }\r\n\r\n    setStroke(color, thickness) {\r\n        return this.style.setStroke(color, thickness);\r\n    }\r\n\r\n    setShadow(x, y, color, blur, shadowStroke, shadowFill) {\r\n        return this.style.setShadow(x, y, color, blur, shadowStroke, shadowFill);\r\n    }\r\n\r\n    setShadowOffset(x, y) {\r\n        return this.style.setShadowOffset(x, y);\r\n    }\r\n\r\n    setShadowColor(color) {\r\n        return this.style.setShadowColor(color);\r\n    }\r\n\r\n    setShadowBlur(blur) {\r\n        return this.style.setShadowBlur(blur);\r\n    }\r\n\r\n    setShadowStroke(enabled) {\r\n        return this.style.setShadowStroke(enabled);\r\n    }\r\n\r\n    setShadowFill(enabled) {\r\n        return this.style.setShadowFill(enabled);\r\n    }\r\n\r\n    setWrapMode(mode) {\r\n        return this.style.setWrapMode(mode);\r\n    }\r\n\r\n    setWrapWidth(width) {\r\n        return this.style.setWrapWidth(width);\r\n    }\r\n\r\n    setAlign(align) {\r\n        return this.style.setHAlign(align);\r\n    }\r\n\r\n    setLineSpacing(value) {\r\n        return this.style.setLineSpacing(value);\r\n    }\r\n\r\n    setPadding(left, top, right, bottom) {\r\n        if (typeof left === 'object') {\r\n            var config = left;\r\n\r\n            //  If they specify x and/or y this applies to all\r\n            var x = GetValue(config, 'x', null);\r\n\r\n            if (x !== null) {\r\n                left = x;\r\n                right = x;\r\n            } else {\r\n                left = GetValue(config, 'left', 0);\r\n                right = GetValue(config, 'right', left);\r\n            }\r\n\r\n            var y = GetValue(config, 'y', null);\r\n\r\n            if (y !== null) {\r\n                top = y;\r\n                bottom = y;\r\n            } else {\r\n                top = GetValue(config, 'top', 0);\r\n                bottom = GetValue(config, 'bottom', top);\r\n            }\r\n        } else {\r\n            if (left === undefined) {\r\n                left = 0;\r\n            }\r\n            if (top === undefined) {\r\n                top = left;\r\n            }\r\n            if (right === undefined) {\r\n                right = left;\r\n            }\r\n            if (bottom === undefined) {\r\n                bottom = top;\r\n            }\r\n        }\r\n\r\n        this.padding.left = left;\r\n        this.padding.top = top;\r\n        this.padding.right = right;\r\n        this.padding.bottom = bottom;\r\n\r\n        return this.updateText(false);\r\n    }\r\n\r\n    setResolution(value) {\r\n        return this.style.setResolution(value);\r\n    }\r\n\r\n    setMaxLines(max) {\r\n        return this.style.setMaxLines(max);\r\n    }\r\n\r\n    updateText(runWrap) {\r\n        if (runWrap === undefined) {\r\n            runWrap = true;\r\n        }\r\n        var canvasText = this.canvasText;\r\n\r\n        // wrap text to pens\r\n        var style = this.style;\r\n        if (runWrap) {\r\n            canvasText.updatePenManager(\r\n                this._text,\r\n                style.wrapMode,\r\n                style.wrapWidth,\r\n                style.lineHeight\r\n            );\r\n        }\r\n\r\n        // resize\r\n        var padding = this.padding;\r\n        var textWidth, textHeight;\r\n        if (style.fixedWidth === 0) {\r\n            this.width = canvasText.linesWidth + padding.left + padding.right;\r\n            textWidth = canvasText.linesWidth;\r\n        }\r\n        else {\r\n            this.width = style.fixedWidth;\r\n            textWidth = this.width - padding.left - padding.right;\r\n            if (textWidth < canvasText.linesWidth) {\r\n                textWidth = canvasText.linesWidth;\r\n            }\r\n        }\r\n        if (style.fixedHeight === 0) {\r\n            this.height = canvasText.linesHeight + padding.top + padding.bottom;\r\n            textHeight = canvasText.linesHeight;\r\n        }\r\n        else {\r\n            this.height = style.fixedHeight;\r\n            textHeight = this.height - padding.top - padding.bottom;\r\n            if (textHeight < canvasText.linesHeight) {\r\n                textHeight = canvasText.linesHeight;\r\n            }\r\n        }\r\n\r\n        var w = this.width;\r\n        var h = this.height;\r\n\r\n        this.updateDisplayOrigin();\r\n\r\n        var resolution = style.resolution;\r\n        w *= resolution;\r\n        h *= resolution;\r\n\r\n        w = Math.max(Math.ceil(w), 1);\r\n        h = Math.max(Math.ceil(h), 1);\r\n\r\n        var canvas = this.canvas;\r\n        var context = this.context;\r\n        if (canvas.width !== w || canvas.height !== h) {\r\n            canvas.width = w;\r\n            canvas.height = h;\r\n            this.frame.setSize(w, h);\r\n        } else {\r\n            context.clearRect(0, 0, w, h);\r\n        }\r\n\r\n        context.save();\r\n        context.scale(resolution, resolution);\r\n\r\n        // draw\r\n        canvasText.draw(\r\n            padding.left,\r\n            padding.top,\r\n            textWidth,\r\n            textHeight\r\n        );\r\n\r\n        context.restore();\r\n\r\n        if (this.renderer.gl) {\r\n            this.frame.source.glTexture = this.renderer.canvasToTexture(canvas, this.frame.source.glTexture, true);\r\n            this.frame.glTexture = this.frame.source.glTexture;\r\n        }\r\n\r\n        this.dirty = true;\r\n\r\n        var input = this.input;\r\n\r\n        if (input && !input.customHitArea) {\r\n            input.hitArea.width = this.width;\r\n            input.hitArea.height = this.height;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    getTextMetrics() {\r\n        return this.style.getTextMetrics();\r\n    }\r\n\r\n    toJSON() {\r\n        var out = Components.ToJSON(this);\r\n\r\n        //  Extra Text data is added here\r\n\r\n        var data = {\r\n            autoRound: this.autoRound,\r\n            text: this._text,\r\n            style: this.style.toJSON(),\r\n            resolution: this.resolution,\r\n            padding: {\r\n                left: this.padding.left,\r\n                right: this.padding.right,\r\n                top: this.padding.top,\r\n                bottom: this.padding.bottom\r\n            }\r\n        };\r\n\r\n        out.data = data;\r\n\r\n        return out;\r\n    }\r\n\r\n    preDestroy() {\r\n        if (this.style.rtl) {\r\n            RemoveFromDOM(this.canvas);\r\n        }\r\n\r\n        CanvasPool.remove(this.canvas);\r\n        this.canvasText.destroy();\r\n    }\r\n\r\n    setInteractive(shape, callback, dropZone) {\r\n        GameObject.prototype.setInteractive.call(this, shape, callback, dropZone);\r\n        this.canvasText.setInteractive();\r\n        return this;\r\n    }\r\n\r\n    getWrappedText(text, start, end) {\r\n        text = this.canvasText.getText(text, start, end, true);\r\n        return text.split(SPLITREGEXP);\r\n    }\r\n\r\n    getPlainText(text, start, end) {\r\n        return this.canvasText.getPlainText(text, start, end);\r\n    }\r\n\r\n    getText(text, start, end) {\r\n        return this.canvasText.getText(text, start, end, false);\r\n    }\r\n\r\n    getSubString(text, start, end) {\r\n        return this.getText(text, start, end);\r\n    }\r\n\r\n    copyPenManager(penManager) {\r\n        return this.canvasText.copyPenManager(penManager);\r\n    }\r\n\r\n    getPenManager(text, penManager) {\r\n        return this.canvasText.getPenManager(text, penManager);\r\n    }\r\n\r\n    setSize(width, height) {\r\n        return this.setFixedSize(width, height);\r\n    }\r\n\r\n    resize(width, height) {\r\n        return this.setFixedSize(width, height);\r\n    }\r\n\r\n    set lineSpacing(value) {\r\n        this.setLineSpacing(value);\r\n    }\r\n    get lineSpacing() {\r\n        return this.style.lineSpacing;\r\n    }\r\n\r\n    get imageManager() {\r\n        return GetGlobImageManager(this.scene.textures);\r\n    }\r\n\r\n    addImage(key, config) {\r\n        this.imageManager.add(key, config);\r\n        return this;\r\n    }\r\n\r\n    drawAreaBounds(graphics, color) {\r\n        this.canvasText.hitAreaManager.drawBounds(graphics, color, this);\r\n        return this;\r\n    }\r\n}\r\n\r\nconst Components = Phaser.GameObjects.Components;\r\nPhaser.Class.mixin(Text,\r\n    [\r\n        Components.Alpha,\r\n        Components.BlendMode,\r\n        Components.ComputedSize,\r\n        Components.Crop,\r\n        Components.Depth,\r\n        Components.Flip,\r\n        Components.GetBounds,\r\n        Components.Mask,\r\n        Components.Origin,\r\n        Components.Pipeline,\r\n        Components.ScrollFactor,\r\n        Components.Tint,\r\n        Components.Transform,\r\n        Components.Visible,\r\n        Render\r\n    ]\r\n);\r\n\r\nexport default Text;","import TextStyle from '../textbase/textstyle/TextStyle.js';\r\n\r\nvar GETPROP_RESULT = {\r\n    plainText: null,\r\n    prevProp: null\r\n};\r\n\r\nvar STYLE_RESULT = new TextStyle();\r\nvar PROPLIST = [];\r\n\r\nclass parser {\r\n    constructor(tags) {\r\n        if (tags === undefined) {\r\n            tags = {};\r\n        }\r\n        this.tags = tags;\r\n    }\r\n\r\n    addTag(name, prop) {\r\n        this.tags[name] = prop;\r\n    }\r\n\r\n    splitText(text, mode) {\r\n        var result = [];\r\n        var arr, m, charIdx = 0,\r\n            totalLen = text.length,\r\n            matchStart = totalLen;\r\n        var innerMatch;\r\n        while (true) {\r\n            arr = RE_SPLITTEXT.exec(text);\r\n            if (!arr) {\r\n                break;\r\n            }\r\n\r\n            m = arr[0];\r\n            matchStart = RE_SPLITTEXT.lastIndex - m.length;\r\n\r\n            if (charIdx < matchStart) {\r\n                result.push(text.substring(charIdx, matchStart));\r\n            }\r\n            if (mode === undefined) {\r\n                result.push(m);\r\n            } else if (mode === 1) { // RAWTEXTONLY_MODE\r\n                if (RE_CLASS_HEADER.test(m)) {\r\n                    innerMatch = m.match(RE_CLASS);\r\n                    result.push(innerMatch[2]);\r\n                } else if (RE_STYLE_HEADER.test(m)) {\r\n                    innerMatch = m.match(RE_STYLE);\r\n                    result.push(innerMatch[2]);\r\n                }\r\n            }\r\n\r\n            charIdx = RE_SPLITTEXT.lastIndex;\r\n        }\r\n\r\n\r\n        if (charIdx < totalLen) {\r\n            result.push(text.substring(charIdx, totalLen));\r\n        }\r\n        return result; // [text,...]\r\n    }\r\n\r\n    tagTextToProp(text, prevProp) {\r\n        var plainText, propOut;\r\n        if (RE_CLASS_HEADER.test(text)) {\r\n            var innerMatch = text.match(RE_CLASS);\r\n            if (innerMatch != null) {\r\n                var name = innerMatch[1];\r\n                var tags = this.tags;\r\n                if (tags.hasOwnProperty(name)) {\r\n                    propOut = tags[name];\r\n                } else {\r\n                    propOut = {};\r\n                }\r\n                propOut._class = name;\r\n                plainText = innerMatch[2];\r\n            }\r\n        } else if (RE_STYLE_HEADER.test(text)) {\r\n            var innerMatch = text.match(RE_STYLE);\r\n            if (innerMatch != null) {\r\n                var style = innerMatch[1];\r\n                propOut = styleToProp(style);\r\n                propOut._style = style;\r\n                plainText = innerMatch[2];\r\n            }\r\n        }\r\n\r\n        if (plainText == null) {\r\n            plainText = text;\r\n        }\r\n\r\n        if (propOut == null) {\r\n            propOut = {};\r\n        }\r\n\r\n        var result = GETPROP_RESULT;\r\n        result.plainText = plainText;\r\n        result.prop = propOut;\r\n        return result;\r\n    }\r\n\r\n    propToContextStyle(defaultStyle, prop) {\r\n        var result = STYLE_RESULT;\r\n        if (!prop.hasOwnProperty('img')) {\r\n            result.image = null;\r\n\r\n            if (prop.hasOwnProperty('family') || prop.hasOwnProperty('fontFamily') || prop.hasOwnProperty('font-family')) {\r\n                var family = (prop.hasOwnProperty('family')) ? prop.family :\r\n                    (prop.hasOwnProperty('fontFamily')) ? prop.fontFamily :\r\n                    prop['font-family'];\r\n                result.fontFamily = family;\r\n            } else {\r\n                result.fontFamily = defaultStyle.fontFamily;\r\n            }\r\n\r\n            if (prop.hasOwnProperty('size') || prop.hasOwnProperty('fontSize') || prop.hasOwnProperty('font-size')) {\r\n                var size = (prop.hasOwnProperty('size')) ? prop.size :\r\n                    (prop.hasOwnProperty('fontSize')) ? prop.fontSize :\r\n                    prop['font-size'];\r\n                if (typeof (size) === 'number') {\r\n                    size = size.toString() + 'px';\r\n                }\r\n                result.fontSize = size;\r\n            } else {\r\n                result.fontSize = defaultStyle.fontSize;\r\n            }\r\n\r\n            if (prop.hasOwnProperty('style') || prop.hasOwnProperty('fontStyle') || prop.hasOwnProperty('font-style')) {\r\n                var fontStyle = (prop.hasOwnProperty('style')) ? prop.style :\r\n                    (prop.hasOwnProperty('fontStyle')) ? prop.fontStyle :\r\n                    prop['font-style'];\r\n                result.fontStyle = fontStyle;\r\n            } else {\r\n                result.fontStyle = defaultStyle.fontStyle;\r\n            }\r\n\r\n            if (prop.hasOwnProperty('color') || prop.hasOwnProperty('font-color')) {\r\n                var color = (prop.hasOwnProperty('color')) ? prop.color : prop['font-color'];\r\n                result.color = color;\r\n            } else {\r\n                result.color = defaultStyle.color;\r\n            }\r\n\r\n            if (prop.hasOwnProperty('stroke')) {\r\n                var stroke = prop.stroke; // {color, thinkness}\r\n                result.stroke = (stroke.hasOwnProperty('color')) ? stroke.color : defaultStyle.stroke;\r\n                result.strokeThickness = (stroke.hasOwnProperty('thinkness')) ? stroke.thinkness : defaultStyle.strokeThickness;\r\n            } else {\r\n                result.stroke = defaultStyle.stroke;\r\n                result.strokeThickness = defaultStyle.strokeThickness;\r\n            }\r\n        } else {\r\n            result.image = prop.img;\r\n        }\r\n\r\n        if (prop.hasOwnProperty('shadow')) {\r\n            var shadow = prop.shadow; // {color, offsetX, offsetY, blur}\r\n            result.shadowColor = (shadow.hasOwnProperty('color')) ? shadow.color : defaultStyle.shadowColor;\r\n            result.shadowOffsetX = (shadow.hasOwnProperty('offsetX')) ? shadow.offsetX : defaultStyle.shadowOffsetX;\r\n            result.shadowOffsetY = (shadow.hasOwnProperty('offsetY')) ? shadow.offsetY : defaultStyle.shadowOffsetY;\r\n            result.shadowBlur = (shadow.hasOwnProperty('blur')) ? shadow.blur : defaultStyle.shadowBlur;\r\n            result.shadowStroke = true;\r\n            result.shadowFill = true;\r\n        } else {\r\n            result.shadowColor = defaultStyle.shadowColor;\r\n            result.shadowOffsetX = defaultStyle.shadowOffsetX;\r\n            result.shadowOffsetY = defaultStyle.shadowOffsetY;\r\n            result.shadowBlur = defaultStyle.shadowBlur;\r\n            result.shadowStroke = defaultStyle.shadowStroke;\r\n            result.shadowFill = defaultStyle.shadowFill;\r\n        }\r\n\r\n        if (prop.hasOwnProperty('u') || prop.hasOwnProperty('underline')) {\r\n            var u = (prop.hasOwnProperty('u')) ? prop.u : prop.underline; // {color, thinkness, offset}\r\n            result.underlineColor = (u.hasOwnProperty('color')) ? u.color : defaultStyle.underlineColor;\r\n            result.underlineThickness = (u.hasOwnProperty('thinkness')) ? u.thinkness : defaultStyle.underlineThickness;\r\n            result.underlineOffset = (u.hasOwnProperty('offset')) ? u.offset : defaultStyle.underlineOffset;\r\n        } else {\r\n            result.underlineColor = defaultStyle.underlineColor;\r\n            result.underlineThickness = defaultStyle.underlineThickness;\r\n            result.underlineOffset = defaultStyle.underlineOffset;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    propToTagText(text, prop, prevProp) {\r\n        if (prop.hasOwnProperty('_class')) { // class mode\r\n            if (text === '') {\r\n                if (this.isTextTag(prop._class)) {\r\n                    return '';\r\n                }\r\n            }\r\n            return \"<class='\" + prop._class + \"'>\" + text + \"</class>\";\r\n        } else if (prop.hasOwnProperty('_style')) { // class mode\r\n            return \"<style='\" + prop._style + \"'>\" + text + \"</style>\";\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.tags = undefined;\r\n    }\r\n\r\n    isTextTag(tagName) {\r\n        var tag = this.tags[tagName];\r\n        if (tag) {\r\n            return (tag.img == null);\r\n        } else { // tag not found\r\n            return false;\r\n        }\r\n    }\r\n};\r\n\r\nvar styleToProp = function (s) {\r\n    s = s.split(\";\");\r\n\r\n    var result = {},\r\n        prop, k, v;\r\n    for (var i = 0, slen = s.length; i < slen; i++) {\r\n        prop = s[i].split(\":\");\r\n        k = prop[0], v = prop[1];\r\n        if (isEmpty(k) || isEmpty(v)) {\r\n            continue;\r\n        }\r\n\r\n        switch (k) {\r\n            case 'stroke':\r\n                var stroke = v.split(' '); // stroke:blue 1px\r\n                var len = stroke.length;\r\n                v = {};\r\n                if (len >= 1) {\r\n                    v.color = stroke[0];\r\n                }\r\n                if (len >= 2) {\r\n                    v.thinkness = parseInt(stroke[1].replace('px', ''));\r\n                }\r\n                break;\r\n            case 'shadow':\r\n                var shadow = v.split(' '); // shadow:blue 2px 2px 2px\r\n                var len = shadow.length;\r\n                v = {};\r\n                if (len >= 1) {\r\n                    v.color = shadow[0];\r\n                }\r\n                if (len >= 2) {\r\n                    v.offsetX = parseInt(shadow[1].replace('px', ''));\r\n                }\r\n                if (len >= 3) {\r\n                    v.offsetY = parseInt(shadow[2].replace('px', ''));\r\n                }\r\n                if (len >= 4) {\r\n                    v.blur = parseInt(shadow[3].replace('px', ''));\r\n                }\r\n                break;\r\n            case 'u':\r\n            case 'underline': // underline:blue 3px -1px\r\n                var u = v.split(' ');\r\n                var len = u.length;\r\n                v = {};\r\n                if (len >= 1) {\r\n                    v.color = u[0];\r\n                }\r\n                if (len >= 2) {\r\n                    v.thinkness = parseInt(u[1].replace('px', ''));\r\n                }\r\n                if (len >= 3) {\r\n                    v.offset = parseInt(u[2].replace('px', ''));\r\n                }\r\n                break;\r\n        }\r\n        result[k] = v;\r\n    }\r\n    return result;\r\n};\r\n\r\nvar isEmpty = function (s) {\r\n    // Remove white spaces.\r\n    s = s.replace(RE_SPACE, '');\r\n    return (s.length === 0);\r\n};\r\n\r\nvar RE_SPLITTEXT = /<\\s*class=[\"|']([^\"|']+)[\"|']\\s*\\>([\\s\\S]*?)<\\s*\\/class\\s*\\>|<\\s*style=[\"|']([^\"|']+)[\"|']\\s*\\>([\\s\\S]*?)<\\s*\\/style\\s*\\>/g;\r\nvar RE_CLASS_HEADER = /<\\s*class=/i;\r\nvar RE_CLASS = /<\\s*class=[\"|']([^\"|']+)[\"|']\\s*\\>([\\s\\S]*?)<\\s*\\/class\\s*\\>/;\r\nvar RE_STYLE_HEADER = /<\\s*style=/i;\r\nvar RE_STYLE = /<\\s*style=[\"|']([^\"|']+)[\"|']\\s*\\>([\\s\\S]*?)<\\s*\\/style\\s*\\>/;\r\nvar RE_SPACE = /^\\s+|\\s+$/;\r\n\r\nexport default parser;","import Text from '../textbase/Text.js';\r\nimport ParserKlass from './Parser.js';\r\n\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\n\r\nclass TagText extends Text {\r\n    constructor(scene, x, y, text, style) {\r\n        var tags = GetValue(style, 'tags', undefined);\r\n        var parser = new ParserKlass(tags);\r\n        super(scene, x, y, text, style, 'rexTagText', parser);\r\n        this.parser = parser;\r\n    }\r\n\r\n    addTag(name, prop) {\r\n        this.parser.addTag(name, prop);\r\n        return this.updateText(true);\r\n    }\r\n\r\n    addTags(tags) {\r\n        for(var name in tags){\r\n            this.parser.addTag(name, tags[name]);\r\n        }\r\n        return this.updateText(true);\r\n    }\r\n\r\n    preDestroy() {\r\n        super.preDestroy();\r\n        this.parser.destroy();\r\n        this.parser = undefined;\r\n    }\r\n}\r\n\r\nexport default TagText;","import TagText from './TagText.js';\r\n\r\nconst GetAdvancedValue = Phaser.Utils.Objects.GetAdvancedValue;\r\nconst BuildGameObject = Phaser.GameObjects.BuildGameObject;\r\n\r\nexport default function (config, addToScene) {\r\n    // style Object = {\r\n    //     font: [ 'font', '16px Courier' ],\r\n    //     backgroundColor: [ 'backgroundColor', null ],\r\n    //     fill: [ 'fill', '#fff' ],\r\n    //     stroke: [ 'stroke', '#fff' ],\r\n    //     strokeThickness: [ 'strokeThickness', 0 ],\r\n    //     shadowOffsetX: [ 'shadow.offsetX', 0 ],\r\n    //     shadowOffsetY: [ 'shadow.offsetY', 0 ],\r\n    //     shadowColor: [ 'shadow.color', '#000' ],\r\n    //     shadowBlur: [ 'shadow.blur', 0 ],\r\n    //     shadowStroke: [ 'shadow.stroke', false ],\r\n    //     shadowFill: [ 'shadow.fill', false ],\r\n    //     align: [ 'align', 'left' ],\r\n    //     maxLines: [ 'maxLines', 0 ],\r\n    //     fixedWidth: [ 'fixedWidth', false ],\r\n    //     fixedHeight: [ 'fixedHeight', false ]\r\n    // }\r\n\r\n    var content = GetAdvancedValue(config, 'text', '');\r\n    var style = GetAdvancedValue(config, 'style', null);\r\n\r\n    //  Padding\r\n    //      { padding: 2 }\r\n    //      { padding: { x: , y: }}\r\n    //      { padding: { left: , top: }}\r\n    //      { padding: { left: , right: , top: , bottom: }}  \r\n\r\n    var padding = GetAdvancedValue(config, 'padding', null);\r\n\r\n    if (padding !== null) {\r\n        style.padding = padding;\r\n    }\r\n\r\n    if (addToScene !== undefined) {\r\n        config.add = addToScene;\r\n    }\r\n\r\n    var gameObject = new TagText(this.scene, 0, 0, content, style);\r\n    BuildGameObject(this.scene, gameObject, config);\r\n\r\n    //  Text specific config options:\r\n\r\n    gameObject.autoRound = GetAdvancedValue(config, 'autoRound', true);\r\n    gameObject.resolution = GetAdvancedValue(config, 'resolution', 1);\r\n\r\n    return gameObject;\r\n};","import Factory from './gameobjects/text/tagtext/Factory.js';\r\nimport Creator from './gameobjects/text/tagtext/Creator.js';\r\nimport TagText from './gameobjects/text/tagtext/TagText.js';\r\n\r\nPhaser.GameObjects.GameObjectFactory.register('rexTagText', Factory);\r\nPhaser.GameObjects.GameObjectCreator.register('rexTagText', Creator);\r\n\r\nexport default TagText;","import TagText from './TagText.js';\r\n\r\nexport default function (x, y, text, style) {\r\n    var gameObject = new TagText(this.scene, x, y, text, style);\r\n    this.scene.add.existing(gameObject);\r\n    return gameObject;\r\n}","export default {\r\n    setEventEmitter(eventEmitter, EventEmitterClass) {\r\n        if (EventEmitterClass === undefined) {\r\n            EventEmitterClass = Phaser.Events.EventEmitter; // Use built-in EventEmitter class by default\r\n        }\r\n        this._privateEE = (eventEmitter === undefined);\r\n        this._eventEmitter = (this._privateEE) ? (new EventEmitterClass()) : eventEmitter;\r\n        return this;\r\n    },\r\n\r\n    destroyEventEmitter() {\r\n        if (this._eventEmitter && this._privateEE) {\r\n            this._eventEmitter.shutdown();\r\n        }\r\n        return this;\r\n    },\r\n\r\n    getEventEmitter() {\r\n        return this._eventEmitter;\r\n    },\r\n\r\n    on: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.on.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    once: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.once.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    off: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.off.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    emit: function (event) {\r\n        if (this._eventEmitter && event) {\r\n            this._eventEmitter.emit.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    addListener: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.addListener.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    removeListener: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.removeListener.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    removeAllListeners: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.removeAllListeners.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    listenerCount: function () {\r\n        if (this._eventEmitter) {\r\n            return this._eventEmitter.listenerCount.apply(this._eventEmitter, arguments);\r\n        }\r\n        return 0;\r\n    },\r\n\r\n    listeners: function () {\r\n        if (this._eventEmitter) {\r\n            return this._eventEmitter.listeners.apply(this._eventEmitter, arguments);\r\n        }\r\n        return [];\r\n    }\r\n};","const SceneClass = Phaser.Scene;\r\nvar IsSceneObject = function (object) {\r\n    return (object instanceof SceneClass);\r\n}\r\nexport default IsSceneObject;","import IsSceneObject from './IsSceneObject.js';\r\n\r\nvar GetSceneObject = function (object) {\r\n    if (IsSceneObject(object)) { // object = scene\r\n        return object;\r\n    } else if (object.scene && IsSceneObject(object.scene)) { // object = game object\r\n        return object.scene;\r\n    } else if (object.parent && object.parent.scene && IsSceneObject(object.parent.scene)) { // parent = bob object\r\n        return object.parent.scene;\r\n    }\r\n}\r\n\r\nexport default GetSceneObject;","import EventEmitterMethods from '../../utils/eventemitter/EventEmitterMethods.js';\r\nimport GetSceneObject from '../../utils/system/GetSceneObject.js';\r\n\r\nconst GetFastValue = Phaser.Utils.Objects.GetFastValue;\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\n\r\nclass TextTyping {\r\n    constructor(gameObject, config) {\r\n        this.gameObject = gameObject;\r\n        this.scene = GetSceneObject(gameObject);        \r\n        this.setEventEmitter(GetValue(config, 'eventEmitter', undefined));\r\n        \r\n        this.timer = null;\r\n        this.resetFromJSON(config);\r\n        this.boot();\r\n    }\r\n\r\n    /**\r\n     * Reset status by JSON object\r\n     * @param {object} o JSON object\r\n     * @returns {object} this object\r\n     */\r\n    resetFromJSON(o) {\r\n        this.setTypeMode(GetValue(o, 'typeMode', 0));\r\n        this.setTypeSpeed(GetValue(o, 'speed', 333));\r\n        this.setTextCallback = GetFastValue(o, 'setTextCallback', null);\r\n        this.setTextCallbackScope = GetFastValue(o, 'setTextCallbackScope', null);\r\n\r\n        this.typingIdx = GetFastValue(o, 'typingIdx', 0);\r\n        this.text = transferText(GetFastValue(o, 'text', ''));\r\n        this.textLen = GetFastValue(o, 'textLen', 0);\r\n        this.insertIdx = GetFastValue(o, 'insertIdx', null);\r\n\r\n        var elapsed = GetFastValue(o, 'elapsed', null);\r\n        if (elapsed !== null) {\r\n            this.start(undefined, undefined, this.typingIdx, elapsed);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Return status in JSON object\r\n     * @returns JSON object\r\n     */\r\n    toJSON() {\r\n        var elapsed;\r\n        var timer = this.getTimer();\r\n        if (timer) {\r\n            elapsed = timer.elapsed;\r\n        } else {\r\n            elapsed = null;\r\n        }\r\n\r\n        return {\r\n            typeMode: this.typeMode,\r\n            speed: this.speed,\r\n            setTextCallback: this.setTextCallback,\r\n            setTextCallbackScope: this.setTextCallbackScope,\r\n\r\n            typingIdx: this.typingIdx,\r\n            text: this.text,\r\n            textLen: this.textLen,\r\n            insertIdx: this.insertIdx,\r\n            elapsed: elapsed\r\n        };\r\n    }\r\n\r\n    boot() {\r\n        if (this.gameObject.once) { // oops, bob object does not have event emitter\r\n            this.gameObject.on('destroy', this.destroy, this);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    shutdown() {\r\n        this.destroyEventEmitter();\r\n        this.freeTimer();\r\n        this.gameObject = undefined;\r\n        this.scene = undefined;\r\n        return this;\r\n    }\r\n\r\n    destroy() {\r\n        this.shutdown();\r\n        return this;\r\n    }\r\n\r\n    setTypeMode(m) {\r\n        if (typeof (m) === 'string') {\r\n            m = TYPEMODE[m];\r\n        }\r\n        this.typeMode = m;\r\n        return this;\r\n    }\r\n\r\n    setTypeSpeed(speed) {\r\n        this.speed = speed;\r\n        return this;\r\n    }\r\n\r\n    get isTyping() {\r\n        return (this.getTimer() !== null);\r\n    }\r\n\r\n    get isLastChar() {\r\n        return (this.typingIdx === this.textLen);\r\n    }\r\n\r\n    start(text, speed, startIdx, timerStartAt) {\r\n        if (text !== undefined) {\r\n            this.setTypingContent(text);\r\n        }\r\n        if (speed !== undefined) {\r\n            this.speed = speed;\r\n        }\r\n        if (startIdx === undefined) {\r\n            startIdx = 0;\r\n        }\r\n\r\n        this.typingIdx = startIdx + 1;\r\n        if (this.speed === 0) {\r\n            this.stop(true);\r\n        } else {\r\n            this.startTimer(timerStartAt);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    appendText(text) {\r\n        var newText = this.text.concat(transferText(text));\r\n        if (this.isTyping) {\r\n            this.setTypingContent(newText);\r\n        } else {\r\n            this.start(newText, undefined, this.textLen);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    stop(showAllText) {\r\n        var timer = this.getTimer();\r\n        if (timer) {\r\n            this.freeTimer();\r\n        }\r\n        if (showAllText) {\r\n            this.typingIdx = this.textLen;\r\n            this.setText(this.text);\r\n            this.emit('type');\r\n            this.emit('complete', this, this.gameObject);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    pause() {\r\n        var timer = this.getTimer();\r\n        if (timer) {\r\n            timer.paused = true;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    resume() {\r\n        var timer = this.getTimer();\r\n        if (timer) {\r\n            timer.paused = false;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    setTypingContent(text) {\r\n        this.text = transferText(text);\r\n        this.textLen = this.getTextLength(this.text);\r\n        return this;\r\n    }\r\n\r\n    onTyping() {\r\n        var newText = this.getTypingString(this.text, this.typingIdx, this.textLen, this.typeMode);\r\n        this.setText(newText);\r\n        this.emit('type');\r\n\r\n        if (this.isLastChar) {\r\n            this.freeTimer();\r\n            this.emit('complete', this, this.gameObject);\r\n        } else {\r\n            this.timer.delay = this.speed; // delay of next typing            \r\n            this.typingIdx++;\r\n        }\r\n    }\r\n\r\n    getTypingString(text, typeIdx, textLen, typeMode) {\r\n        var result;\r\n        if (typeMode === 0) { //left-to-right\r\n            var startIdx = 0;\r\n            var endIdx = typeIdx;\r\n            this.insertIdx = endIdx;\r\n            result = this.getSubString(text, startIdx, endIdx);\r\n\r\n        } else if (typeMode === 1) { //right-to-left\r\n            var endIdx = textLen;\r\n            var startIdx = endIdx - typeIdx;\r\n            this.insertIdx = 0;\r\n            result = this.getSubString(text, startIdx, endIdx);\r\n\r\n        } else if (typeMode === 2) { //middle-to-sides\r\n            var midIdx = textLen / 2;\r\n            var startIdx = Math.floor(midIdx - (typeIdx / 2));\r\n            var endIdx = startIdx + typeIdx;\r\n            this.insertIdx = (typeIdx % 2) ? typeIdx : 0;\r\n            result = this.getSubString(text, startIdx, endIdx);\r\n\r\n        } else if (typeMode === 3) { //sides-to-middle\r\n            var lowerLen = Math.floor(typeIdx / 2);\r\n            var lowerResult;\r\n            if (lowerLen > 0) {\r\n                var endIdx = textLen;\r\n                var startIdx = endIdx - lowerLen;\r\n                lowerResult = this.getSubString(text, startIdx, endIdx);\r\n            } else {\r\n                lowerResult = \"\";\r\n            }\r\n\r\n            var upperLen = typeIdx - lowerLen;\r\n            var upperResult;\r\n            if (upperLen > 0) {\r\n                var startIdx = 0;\r\n                var endIdx = startIdx + upperLen;\r\n                this.insertIdx = endIdx;\r\n                upperResult = this.getSubString(text, startIdx, endIdx);\r\n            } else {\r\n                upperResult = \"\";\r\n                this.insertIdx = 0;\r\n            }\r\n            result = upperResult + lowerResult;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    startTimer(timerStartAt) {\r\n        if (this.timer) {\r\n            this.freeTimer();\r\n        }\r\n        var delay, startAt;\r\n        if (timerStartAt === undefined) {\r\n            delay = 0;\r\n            startAt = 0;\r\n        } else {\r\n            delay = this.speed;\r\n            startAt = timerStartAt;\r\n        }\r\n\r\n        this.timer = this.scene.time.addEvent({\r\n            delay: 0,\r\n            startAt: startAt,\r\n            loop: true,\r\n            callback: this.onTyping,\r\n            callbackScope: this\r\n        });\r\n        return this;\r\n    }\r\n\r\n    getTimer() {\r\n        return this.timer;\r\n    }\r\n\r\n    freeTimer() {\r\n        if (this.timer) {\r\n            this.timer.remove();\r\n            this.timer = null;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    setText(text) {\r\n        if (this.setTextCallback) {\r\n            if (this.setTextCallbackScope) {\r\n                text = this.setTextCallback.call(this.setTextCallbackScope, text, this.isLastChar, this.insertIdx);\r\n            } else {\r\n                text = this.setTextCallback(text, this.isLastChar, this.insertIdx);\r\n            }\r\n        }\r\n        this.gameObject.setText(text);\r\n    }\r\n\r\n    getTextLength(text) {\r\n        var gameObject = this.gameObject;\r\n        var len;\r\n        if (gameObject.getPlainText) {\r\n            len = gameObject.getPlainText(text).length;\r\n        } else {\r\n            len = text.length;\r\n        }\r\n\r\n        return len;\r\n    }\r\n\r\n    getSubString(text, startIdx, endIdx) {\r\n        var gameObject = this.gameObject;\r\n        var result;\r\n        if (gameObject.getSubString) {\r\n            result = gameObject.getSubString(text, startIdx, endIdx);\r\n        } else {\r\n            result = text.slice(startIdx, endIdx);\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nObject.assign(\r\n    TextTyping.prototype,\r\n    EventEmitterMethods\r\n);\r\n\r\nvar transferText = function (text) {\r\n    if (Array.isArray(text)) {\r\n        text = text.join('\\n');\r\n    } else if (typeof (text) === 'number') {\r\n        text = text.toString();\r\n    }\r\n    return text;\r\n}\r\n\r\n/** @private */\r\nconst TYPEMODE = {\r\n    'left-to-right': 0,\r\n    'right-to-left': 1,\r\n    'middle-to-sides': 2,\r\n    'sides-to-middle': 3\r\n};\r\n\r\n\r\nexport default TextTyping;","import TextTyping from './behaviors/texttyping/TextTyping.js';\r\nexport default TextTyping;","export default {\r\n    None: 0,\r\n    EasyWin: 1,\r\n    Hard: 2\r\n};","export default {\r\n    Active: 0,\r\n    Destroyed: 1\r\n};","import LevelManifest from \"./LevelManifest\";\r\nimport TileGenerationBehavior from \"./TileGenerationBehavior\";\r\nimport Tile from \"./Tile\";\r\n\r\nexport default [\r\n\r\n    // 0\r\n    {\r\n        score: 100,\r\n        timer: 0,\r\n        behavior: TileGenerationBehavior.None\r\n    },\r\n\r\n    // 1\r\n    {\r\n        score: 200,\r\n        timer: 120,\r\n        behavior: TileGenerationBehavior.None\r\n    },\r\n\r\n    // 2\r\n    {\r\n        score: 300,\r\n        timer: 30,\r\n        behavior: TileGenerationBehavior.Hard\r\n    },\r\n\r\n    // 3\r\n    {\r\n        score: 300,\r\n        timer: 120,\r\n        behavior: TileGenerationBehavior.EasyWin\r\n    },\r\n\r\n    // 4\r\n    {\r\n        score: 400,\r\n        timer: 300,\r\n        behavior: TileGenerationBehavior.EasyWin,\r\n        handler: (state) => {\r\n            if(state.tileGrid.TileGenerationBehavior !== TileGenerationBehavior.Hard && state.score > (LevelManifest[state.level]/2))\r\n            {\r\n                state.tileGrid.tileGenerationBehavior = TileGenerationBehavior.Hard;\r\n            }\r\n        }\r\n    },\r\n\r\n    // 5\r\n    {\r\n        score: 1000,\r\n        timer: 300,\r\n        behavior: TileGenerationBehavior.Hard\r\n    },\r\n\r\n    // 6\r\n    {\r\n        score: 1000,\r\n        timer: 300,\r\n        behavior: TileGenerationBehavior.Hard\r\n    },\r\n\r\n    // 7\r\n    {\r\n        score: 1000,\r\n        timer: 300,\r\n        behavior: TileGenerationBehavior.EasyWin\r\n    },\r\n\r\n    // 8\r\n    {\r\n        score: 1000,\r\n        timer: 300,\r\n        behavior: TileGenerationBehavior.None\r\n    }\r\n];","// Source: https://stackoverflow.com/questions/5915096/get-random-item-from-javascript-array\r\nconst getRandomItem = (items) => {\r\n    return items[Math.floor(Math.random() * items.length)];\r\n}\r\n\r\nexport {\r\n    getRandomItem\r\n}","export default [\r\n    { name: 'Blue', imageKey: 'tile_01' },\r\n    { name: 'Green', imageKey: 'tile_02' },\r\n    { name: 'Red', imageKey: 'tile_03' },\r\n    { name: 'Yellow', imageKey: 'tile_04' }\r\n];","import { getRandomItem } from './Utility';\r\nimport Tile from './Tile';\r\nimport TileGenerationBehavior from './TileGenerationBehavior';\r\nimport TileState from './TileState';\r\nimport TileType from './TileType';\r\n\r\nexport default class {\r\n\r\n    constructor(tileGridWidth, tileGridHeight, tileSize, offsetX, offsetY, onTileSelect, onTileMatch, tileGenerationBehavior, queue)\r\n    {\r\n        this.isBlocked = false;\r\n\r\n        this.offsetX = offsetX;\r\n        this.offsetY = offsetY;\r\n        this.tileSize = tileSize;\r\n        this.tileGridHeight = tileGridHeight;\r\n        this.tileGridWidth = tileGridWidth;\r\n        this.tileGrid = [];\r\n        this.tileImageContainer = null;\r\n        this.playAreaOffset = (this.tileGridHeight * this.tileSize);\r\n\r\n        this.onTileSelect = onTileSelect;\r\n        this.onTileMatch = onTileMatch;\r\n\r\n        this.tileGenerationBehavior = tileGenerationBehavior;\r\n\r\n        this.queue = queue;\r\n\r\n        // We're going to generate a grid that's twice the height of\r\n        // the desired tile grid height since we'll use the hidden, upper\r\n        // region to stage the bricks that will fall into the play area\r\n        for(let y = 0; y < tileGridHeight * 2; y++)\r\n        {\r\n            this.tileGrid[y] = [];\r\n            for(let x = 0; x < tileGridWidth; x++)\r\n            {\r\n                this.tileGrid[y][x] = (y < tileGridHeight)\r\n                    ? null\r\n                    : this.createTile(this.getTileType(x, y, TileGenerationBehavior.None), x, y);\r\n\r\n                // When we're generating the grid, we start with the default tile generation\r\n                // behavior since the \"Easy Win\" behavior will create a grid with identical\r\n                // tiles\r\n            }\r\n        }\r\n    }\r\n\r\n    create(context)\r\n    {\r\n        this.tileImageContainer = context.add.container();\r\n\r\n        // Create all of the tiles\r\n        this.forEachTile(tile => {\r\n\r\n            if(tile === null)\r\n            {\r\n                return;\r\n            }\r\n\r\n            tile.create(context);\r\n            this.tileImageContainer.add(tile.image);\r\n\r\n        });\r\n\r\n        // Create a mask to only show the play area\r\n        const maskShape = context.make.graphics();\r\n        maskShape.fillStyle(0xffffff, 1);\r\n        maskShape.fillRect(this.offsetX - (this.tileSize/2), this.offsetY + (this.tileGridHeight * this.tileSize) - (this.tileSize/2), this.tileGridWidth * this.tileSize, this.tileGridHeight * this.tileSize);\r\n        \r\n        this.tileImageContainer.mask = new Phaser.Display.Masks.GeometryMask(context, maskShape);\r\n    }\r\n\r\n    update(context)\r\n    {\r\n        const self = this;\r\n\r\n        if(self.queue.length > 0)\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Detect and destroy any matches\r\n        const matchedTiles = self.getMatches();\r\n\r\n        if(matchedTiles.length > 0)\r\n        {\r\n            self.onTileMatch(context, matchedTiles);\r\n        }\r\n\r\n        let destroys = [];\r\n        matchedTiles.forEach(t => { destroys.push(t.destroy(context, this.tileImageContainer)); });\r\n\r\n        if(destroys.length > 0)\r\n        {\r\n            self.queue.push(() => { return Promise.all(destroys); });\r\n        }\r\n\r\n        // Remove any destroyed tiles\r\n        self.forEachTile((tile, x, y) => {\r\n\r\n            if(tile === null)\r\n            {\r\n                return;\r\n            }\r\n\r\n            if(tile.state === TileState.Destroyed)\r\n            {\r\n                self.tileGrid[y][x] = null;\r\n            }\r\n\r\n        });\r\n\r\n        // Shift all of the tiles downward to fill empty spots\r\n        let drops = [];\r\n        for(let x = 0; x < this.tileGridWidth; x++)\r\n        {\r\n            let y = (this.tileGridHeight * 2) - 1;\r\n            while(y >= 0)\r\n            {\r\n                // If the tile is null...\r\n                if(self.tileGrid[y][x] === null)\r\n                {\r\n                    // ...find the closest tile that's not null...\r\n                    let closestY = y - 1;\r\n                    while(closestY >= 0)\r\n                    {\r\n                        let closestTile = self.tileGrid[closestY][x];\r\n                        if(closestTile !== null)\r\n                        {\r\n                            // ...and shift it downward\r\n                            self.tileGrid[y][x] = closestTile;\r\n                            self.tileGrid[closestY][x] = null;\r\n                            drops.push(this.getTileDrop(context, closestTile, x, y));\r\n                            y--;\r\n                        }\r\n                        closestY--;\r\n                    }\r\n                }\r\n\r\n                y--;\r\n            }\r\n        }\r\n\r\n        // Fill in all of the empty tiles\r\n        self.forEachPlayableTile((tile, x, y) => {\r\n            if(tile === null)\r\n            {\r\n                const adjustedY = y - self.tileGridHeight;\r\n\r\n                const tile = self.createTile(self.getTileType(x, y, self.tileGenerationBehavior), x, adjustedY);\r\n                self.tileGrid[adjustedY][x] = tile;\r\n                tile.create(context);\r\n                self.tileImageContainer.add(tile.image);\r\n            }\r\n        });\r\n\r\n        if(drops.length > 0)\r\n        {\r\n            self.queue.push(() => { return Promise.all(drops); });\r\n        }\r\n    }\r\n\r\n    swapTiles(context, firstTile, secondTile)\r\n    {\r\n        let self = this;\r\n\r\n        self.queue.push(() => {\r\n            \r\n            let firstTileX = firstTile.x;\r\n            let firstTileY = firstTile.y;\r\n            let firstTileGridX = firstTile.tileGridX;\r\n            let firstTileGridY = firstTile.tileGridY;\r\n    \r\n            let secondTileX = secondTile.x;\r\n            let secondTileY = secondTile.y;\r\n            let secondTileGridX = secondTile.tileGridX;\r\n            let secondTileGridY = secondTile.tileGridY;\r\n    \r\n            let firstSwap = secondTile.updatePosition(context, firstTileX, firstTileY, firstTileGridX, firstTileGridY);\r\n            self.tileGrid[firstTileGridY][firstTileGridX] = secondTile;\r\n    \r\n            let secondSwap = firstTile.updatePosition(context, secondTileX, secondTileY, secondTileGridX, secondTileGridY);\r\n            self.tileGrid[secondTileGridY][secondTileGridX] = firstTile;\r\n\r\n            return Promise.all([firstSwap, secondSwap]);\r\n\r\n        });\r\n    }\r\n\r\n    hasMatches(targetGridX, targetGridY)\r\n    {\r\n        return this.getMatches(targetGridX, targetGridY).length > 0;\r\n    }\r\n\r\n    getMatches(targetGridX, targetGridY)\r\n    {\r\n        const self = this;\r\n        const matchedTiles = [];\r\n\r\n        self.forEachTile((tile, x, y) => {\r\n\r\n            if(\r\n                (typeof targetGridX !== 'undefined' && x !== targetGridX) &&\r\n                (typeof targetGridY !== 'undefined' && y !== targetGridY)\r\n              )\r\n            {\r\n                return;\r\n            }\r\n\r\n            if(!this.isPlayable(tile))\r\n            {\r\n                return;\r\n            }\r\n\r\n            const targetTileType = tile.tileType;\r\n            const matchedXTiles = [];\r\n            const matchedYTiles = [];\r\n\r\n            // Check for matches to the right\r\n            let currX = (x + 1);\r\n            while(currX < self.tileGridWidth)\r\n            {\r\n                const currTile = self.tileGrid[y][currX];\r\n\r\n                if(currTile != null && targetTileType.name === currTile.tileType.name)\r\n                {\r\n                    matchedXTiles.push(currTile);\r\n                }\r\n                else\r\n                {\r\n                    break;\r\n                }\r\n\r\n                currX++;\r\n            }\r\n\r\n            // Check for matches to the left\r\n            currX = (x - 1);\r\n            while(currX > 0)\r\n            {\r\n                const currTile = self.tileGrid[y][currX];\r\n\r\n                if(currTile != null && targetTileType.name === currTile.tileType.name)\r\n                {\r\n                    matchedXTiles.push(currTile);\r\n                }\r\n                else\r\n                {\r\n                    break;\r\n                }\r\n\r\n                currX--;\r\n            }\r\n\r\n            // Check matches downwards\r\n            let currY = (y + 1);\r\n            while(currY < self.tileGridHeight)\r\n            {\r\n                const currTile = self.tileGrid[currY][x];\r\n\r\n                if(currTile != null && targetTileType.name === currTile.tileType.name)\r\n                {\r\n                    matchedYTiles.push(currTile);\r\n                }\r\n                else\r\n                {\r\n                    break;\r\n                }\r\n\r\n                currY++;\r\n            }\r\n\r\n            // Check matches upwards\r\n            currY = (y - 1);\r\n            while(currY > 0)\r\n            {\r\n                const currTile = self.tileGrid[currY][x];\r\n\r\n                if(currTile != null && targetTileType === currTile.tileType)\r\n                {\r\n                    matchedYTiles.push(currTile);\r\n                }\r\n                else\r\n                {\r\n                    break;\r\n                }\r\n\r\n                currY--;\r\n            }\r\n            \r\n            if(matchedYTiles.length > 1)\r\n            {\r\n                matchedTiles.push(...matchedYTiles);\r\n            }\r\n            \r\n            if(matchedXTiles.length > 1)\r\n            {\r\n                matchedTiles.push(...matchedXTiles);\r\n            }\r\n\r\n            if(matchedYTiles.length > 1 || matchedXTiles.length > 1)\r\n            {\r\n                matchedTiles.push(tile);\r\n            }\r\n        });\r\n\r\n        return matchedTiles;\r\n    }\r\n\r\n    forEachTile(callback)\r\n    {\r\n        for(let y = 0; y < this.tileGridHeight * 2; y++)\r\n        {\r\n            for(let x = 0; x < this.tileGridWidth; x++)\r\n            {\r\n                callback(this.tileGrid[y][x], x, y);\r\n            }\r\n        }\r\n    }\r\n\r\n    forEachPlayableTile(callback)\r\n    {\r\n        for(let y = this.tileGridHeight; y < this.tileGridHeight * 2; y++)\r\n        {\r\n            for(let x = 0; x < this.tileGridWidth; x++)\r\n            {\r\n                callback(this.tileGrid[y][x], x, y);\r\n            }\r\n        }\r\n    }\r\n\r\n    createTile(tileType, x, y)\r\n    {\r\n        return new Tile(tileType, this.getTileX(x), this.getTileY(y), x, y, this.onTileSelect);\r\n    }\r\n\r\n    getTileDrop(context, tile, x, y)\r\n    {\r\n        return tile.updatePosition(context, this.getTileX(x), this.getTileY(y), x, y);\r\n    }\r\n\r\n    getTileX(x)\r\n    {\r\n        return this.offsetX + (this.tileSize * x);\r\n    }\r\n\r\n    getTileY(y)\r\n    {\r\n        return this.offsetY + (this.tileSize * y);\r\n    }\r\n\r\n    canSelect(tile)\r\n    {\r\n        return this.isPlayable(tile);\r\n    }\r\n\r\n    isPlayable(tile)\r\n    {\r\n        return (tile != null) && (tile.tileGridY > (this.tileGridHeight - 1));\r\n    }\r\n\r\n    getTileType(x, y, behavior)\r\n    {\r\n        const aboveTile = (y < 1) ? null : this.tileGrid[y - 1][x];\r\n        const belowTile = (y > self.tileGridHeight - 1 || !this.tileGrid[y + 1]) ? null : this.tileGrid[y + 1][x];\r\n\r\n        const leftTile = (x < 1) ? null : this.tileGrid[y][x - 1];\r\n        const rightTile = (x > self.tileGridWidth - 1) ? null : this.tileGrid[y][x + 1];\r\n\r\n        if(behavior === TileGenerationBehavior.EasyWin && (aboveTile != null || belowTile != null || leftTile != null || rightTile != null))\r\n        {\r\n            return getRandomItem([aboveTile, belowTile, leftTile, rightTile].filter(t => t != null).map(t => t.tileType));\r\n        }\r\n        \r\n        if(behavior === TileGenerationBehavior.Hard)\r\n        {\r\n            return getRandomItem(TileType.filter(t =>\r\n                (belowTile === null || t.name !== belowTile.tileType.name) &&\r\n                (rightTile === null || t.name !== rightTile.tileType.name) &&\r\n                (leftTile === null || t.name !== leftTile.tileType.name)\r\n            ));\r\n        }\r\n\r\n        return getRandomItem(TileType.filter(t =>\r\n            (aboveTile === null || t.name !== aboveTile.tileType.name) &&\r\n            (leftTile === null || t.name !== leftTile.tileType.name)\r\n        ));\r\n    }\r\n\r\n    block(context)\r\n    {\r\n        this.isBlocked = true;\r\n        this.forEachTile(tile => tile && tile.block(context));\r\n    }\r\n\r\n    unblock(context)\r\n    {\r\n        this.isBlocked = false;\r\n        this.forEachTile(tile => tile && tile.unblock(context));\r\n    }\r\n}","import TileState from './TileState';\r\n\r\nexport default class {\r\n\r\n    constructor(tileType, x, y, tileGridX, tileGridY, onTileSelect)\r\n    {\r\n        this.tileType = tileType;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.tileGridX = tileGridX;\r\n        this.tileGridY = tileGridY;\r\n        this.onTileSelect = onTileSelect;\r\n        this.image = null;\r\n        this.state = TileState.Active;\r\n        this.isActivated = false;\r\n        this.isDestroying = false;\r\n    }\r\n\r\n    create(context)\r\n    {\r\n        this.image = context.add.image(this.x, this.y, this.tileType.imageKey);\r\n        this.image.setInteractive();\r\n        this.image.on('pointerdown', () => { this.onTileSelect(context, this); });\r\n    }\r\n\r\n    activate()\r\n    {\r\n        this.isActivated = true;\r\n        this.image.setTintFill(0xffffff);\r\n    }\r\n\r\n    deactivate()\r\n    {\r\n        this.isActivated = false;\r\n        this.image.clearTint();\r\n    }\r\n\r\n    updatePosition(context, x, y, tileGridX, tileGridY)\r\n    {\r\n        let self = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            self.x = x;\r\n            self.y = y;\r\n            self.tileGridX = tileGridX;\r\n            self.tileGridY = tileGridY;\r\n\r\n            context.tweens.add({\r\n                targets: self.image,\r\n                x: x,\r\n                y: y,\r\n                ease: 'Power1',\r\n                duration: 500,\r\n                onComplete: () => { resolve() }\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n    destroy(context, container)\r\n    {\r\n        let self = this;\r\n        \r\n        if(self.isDestroying)\r\n        {\r\n            return;\r\n        }\r\n\r\n        self.isDestroying = true;\r\n\r\n        // Create cover for fading the shape to white\r\n        const fadeOutCover = context.add.image(self.x, self.y, self.tileType.imageKey);\r\n        fadeOutCover.setTintFill(0xffffff);\r\n        fadeOutCover.alpha = 0;\r\n\r\n        // Create particles for \"explosion\" effect\r\n        const particleGraphics = [];\r\n        for(let i=0; i<4; i++)\r\n        {\r\n            const explodeParticleGraphics = context.add.graphics({ fillStyle: { color: 0xffffff }, alpha: 0 });\r\n            const explodeParticle = new Phaser.Geom.Circle(this.x, this.y, Phaser.Math.Between(0, 10));\r\n            explodeParticleGraphics.fillCircleShape(explodeParticle);\r\n            particleGraphics.push(explodeParticleGraphics);\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n           context.tweens.add({\r\n               targets: fadeOutCover,\r\n               alpha: 1,\r\n               duration: 200,\r\n               onComplete: () => {\r\n\r\n                    // Remove the tile image\r\n                    container.remove(self.image);\r\n                    self.image.destroy();\r\n                    self.state = TileState.Destroyed;\r\n\r\n                    // Remove the fade out cover\r\n                    container.remove(fadeOutCover);\r\n                    fadeOutCover.destroy();\r\n\r\n                    // Remove the particles\r\n                    particleGraphics.forEach((graphics) => {\r\n                        container.remove(graphics);\r\n                        graphics.destroy();\r\n                    });\r\n\r\n                    resolve();\r\n               }\r\n           });\r\n\r\n           particleGraphics.forEach((graphics, index) => {\r\n\r\n                let xSign = '';\r\n                let ySign = '';\r\n               \r\n                switch(index)\r\n                {\r\n                    case 1:\r\n                        xSign = '-';\r\n                        ySign = '-';\r\n                        break;\r\n\r\n                    case 2:\r\n                        xSign = '+';\r\n                        ySign = '+';\r\n                        break;\r\n\r\n                    case 3:\r\n                        xSign = '+';\r\n                        ySign = '-';\r\n                        break;\r\n\r\n                    case 4:\r\n                        xSign = '-';\r\n                        ySign = '+';\r\n                        break;\r\n                }\r\n\r\n                context.tweens.add({\r\n                    targets: graphics,\r\n                    x: xSign + '=35',\r\n                    y: ySign + '=35',\r\n                    alpha: 1,\r\n                    duration: 200,\r\n                    ease: 'Cubic.easeOut'\r\n                });\r\n           });\r\n\r\n        });\r\n    }\r\n\r\n    block(context)\r\n    {\r\n        this.isBlocked = true;\r\n\r\n        context.tweens.add({\r\n            targets: this.image,\r\n            alpha: 0.5,\r\n            duration: 100\r\n        });\r\n    }\r\n\r\n    unblock(context)\r\n    {\r\n        this.isBlocked = false;\r\n\r\n        context.tweens.add({\r\n            targets: this.image,\r\n            alpha: 1,\r\n            duration: 100\r\n        });\r\n    }\r\n}","import ActionQueue from '../ActionQueue';\r\nimport DialogManager from '../DialogManager';\r\nimport Guide from '../Guide';\r\nimport LevelManifest from '../LevelManifest';\r\nimport ScoreDisplay from '../ScoreDisplay';\r\nimport TileGrid from '../TileGrid';\r\nimport Timer from '../Timer';\r\nimport TileGenerationBehavior from '../TileGenerationBehavior';\r\n\r\nexport default class extends Phaser.Scene {\r\n\r\n    constructor()\r\n    {\r\n        super('RoundScene');\r\n\r\n        this.isAwaitingRoundTransition = false;\r\n\r\n        this.score = null;\r\n        this.queue = null;\r\n        this.selectedTiles = null;\r\n        this.tileGrid = null;\r\n        this.scoreDisplay = null;\r\n        this.timer = null;\r\n \r\n        this.guide = null;\r\n        this.level = null;\r\n\r\n        this.comboCount = null;\r\n        this.totalMatches = null;\r\n    }\r\n\r\n    preload()\r\n    {\r\n        // Images: Tiles\r\n        this.load.image('tile_01', 'assets/tile_01.png');\r\n        this.load.image('tile_02', 'assets/tile_02.png');\r\n        this.load.image('tile_03', 'assets/tile_03.png');\r\n        this.load.image('tile_04', 'assets/tile_04.png');\r\n\r\n        // Images: Guide\r\n        this.load.image('guide_character', 'assets/guide.png');\r\n\r\n        // Images: Background\r\n        this.load.image('background', 'assets/background.png');\r\n    }\r\n\r\n    init(data)\r\n    {\r\n        this.level = data.level || 0;\r\n    }\r\n\r\n    create()\r\n    {\r\n        this.isAwaitingRoundTransition = false;\r\n\r\n        this.score = 0;\r\n        this.comboCount = 0;\r\n        this.totalMatches = 0;\r\n\r\n        this.queue = new ActionQueue();\r\n\r\n        this.add.image(400, 400, 'background');\r\n\r\n        const tileGenerationBehavior = LevelManifest[this.level].behavior;\r\n\r\n        this.selectedTiles = [];\r\n        this.tileGrid = new TileGrid(6, 6, 80, 325, -265, this.onTileSelect, this.onTileMatch, tileGenerationBehavior, this.queue);\r\n        this.scoreDisplay = new ScoreDisplay(110, 585);\r\n\r\n        const timerSeconds = LevelManifest[this.level].timer;\r\n        this.timer = (timerSeconds > 0) ? new Timer(5, 570, timerSeconds) : null;\r\n\r\n        const dialogManager = new DialogManager();\r\n        const script = dialogManager.getScript(this.level);\r\n        this.guide = new Guide(20, 20, script);\r\n\r\n        this.tileGrid.create(this);\r\n        this.scoreDisplay.create(this);\r\n        this.timer && this.timer.create(this);\r\n        this.guide.create(this);\r\n\r\n        const self = this;\r\n        this.input.on('pointerdown', () => { self.guide.progressDialogue(); });\r\n    }\r\n\r\n    update()\r\n    {\r\n        // If gameplay is currently blocked, make sure the tile grid reflects that\r\n        if(this.guide.isBlockingGameplay && !this.tileGrid.isBlocked)\r\n        {\r\n            this.tileGrid.block(this);\r\n        }\r\n        else if(!this.guide.isBlockingGameplay && this.tileGrid.isBlocked)\r\n        {\r\n            this.tileGrid.unblock(this);\r\n        }\r\n\r\n        if(this.isAwaitingRoundTransition)\r\n        {\r\n            if(!this.guide.isBlockingGameplay)\r\n            {\r\n                this.scene.start('RoundTransitionScene', { nextLevel: (this.level + 1) });\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        this.handleSpecialLevelBehavior();\r\n        \r\n        // Start the timer if the guide has stopped talking\r\n        if(!this.guide.isBlockingGameplay && this.timer && this.timer.isPaused)\r\n        {\r\n            this.timer.start();\r\n        }\r\n\r\n        // Have we run out of time?\r\n        if(this.timer != null && this.timer.seconds <= 0)\r\n        {\r\n            this.guide.displayGameOverMessage();\r\n            this.isAwaitingRoundTransition = true;\r\n            return;\r\n        }\r\n\r\n        if(this.isLevelComplete())\r\n        {\r\n            this.scene.start('RoundTransitionScene', { nextLevel: (this.level + 1) });\r\n            return;\r\n        }\r\n\r\n        // Are we currently executing a queued action?\r\n        if(this.queue.isActionRunning())\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Do we have any queued actions on the stack?\r\n        if(this.queue.hasActions())\r\n        {\r\n            this.queue.next();\r\n            return;\r\n        }\r\n\r\n        // If nothing's left in the queue, we can move the game's state forward\r\n        this.tileGrid.update(this);\r\n    }\r\n\r\n    onTileSelect(context, tile)\r\n    {\r\n        // Are we currently executing a queued action?\r\n        if(context.queue.isActionRunning())\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Is the guide currently blocking gameplay?\r\n        if(context.guide.isBlockingGameplay)\r\n        {\r\n            return;\r\n        }\r\n    \r\n        // Can we select this tile?\r\n        if(!context.tileGrid.canSelect(tile))\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Is this tile already selected?\r\n        if(tile.isActivated)\r\n        {\r\n            context.selectedTiles = [];\r\n            tile.deactivate();\r\n            return;\r\n        }\r\n    \r\n        if(context.selectedTiles.length === 0)\r\n        {\r\n            context.selectedTiles.push(tile);\r\n            tile.activate();\r\n            return;\r\n        }\r\n    \r\n        if(context.selectedTiles.length === 1)\r\n        {\r\n            const selectedTile = context.selectedTiles[0];\r\n            const xDiff = Math.abs(selectedTile.tileGridX - tile.tileGridX);\r\n            const yDiff = Math.abs(selectedTile.tileGridY - tile.tileGridY);\r\n    \r\n            if((xDiff === 1 && yDiff === 0) || (xDiff === 0 && yDiff === 1))\r\n            {\r\n                context.selectedTiles.push(tile);\r\n    \r\n                let firstSelectedTile = context.selectedTiles[0];\r\n                let secondSelectedTile = context.selectedTiles[1];\r\n    \r\n                context.tileGrid.swapTiles(context, firstSelectedTile, secondSelectedTile);\r\n    \r\n                context.queue.push(() => {\r\n    \r\n                    // If there are no matches, swap the tiles back\r\n                    if(\r\n                        !context.tileGrid.hasMatches(firstSelectedTile.tileGridX, firstSelectedTile.tileGridY) &&\r\n                        !context.tileGrid.hasMatches(secondSelectedTile.tileGridX, secondSelectedTile.tileGridY)\r\n                    )\r\n                    {\r\n                        context.tileGrid.swapTiles(context, firstSelectedTile, secondSelectedTile);\r\n                    }\r\n    \r\n                    return Promise.resolve();\r\n    \r\n                });\r\n    \r\n                context.selectedTiles.forEach((tile) => { tile.deactivate(); });\r\n                context.selectedTiles = [];\r\n                \r\n                context.comboCount = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    onTileMatch(context, matchedTiles)\r\n    {\r\n        context.comboCount++;\r\n        context.totalMatches++;\r\n\r\n        context.score += (matchedTiles.length * context.comboCount);\r\n        context.scoreDisplay.updateScore(context.score);\r\n\r\n        if(context.comboCount > 1)\r\n        {\r\n            context.scoreDisplay.updateCombo(`${context.comboCount}x multiplier!`);\r\n        }\r\n        else\r\n        {\r\n            context.scoreDisplay.updateCombo('');\r\n        }\r\n    }\r\n\r\n    isLevelComplete()\r\n    {\r\n        return this.score >= LevelManifest[this.level].score;\r\n    }\r\n\r\n    handleSpecialLevelBehavior()\r\n    {\r\n        const handler = LevelManifest[this.level].handler;\r\n        handler && handler({\r\n            tileGrid: this.tileGrid,\r\n            score: this.score,\r\n            level: this.level\r\n        });\r\n    }\r\n    \r\n}","export default class {\r\n\r\n    constructor()\r\n    {\r\n        this.queuedActions = [];\r\n        this.currentAction = null;\r\n    }\r\n\r\n    isActionRunning()\r\n    {\r\n        return this.currentAction != null;\r\n    }\r\n\r\n    hasActions()\r\n    {\r\n        return this.queuedActions.length > 0;\r\n    }\r\n\r\n    next()\r\n    {\r\n        this.currentAction = this.queuedActions.shift();\r\n        this.currentAction();\r\n    }\r\n\r\n    push(action)\r\n    {\r\n        var self = this;\r\n        self.queuedActions.push(() => { action().then(() => { self.currentAction = null; }) });\r\n    }\r\n\r\n}","export default class {\r\n\r\n    constructor(x, y)\r\n    {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.scoreText = null;\r\n        this.comboText = null;\r\n        this.score = 0;\r\n    }\r\n\r\n    create(context)\r\n    {\r\n        const scoreBackgroundGraphics = context.add.graphics({ fillStyle: { color: 0xdbf0ff } }).setAlpha(0.5);\r\n        scoreBackgroundGraphics.fillRoundedRect(this.x - 150, this.y - 10, 300, 80, 10);\r\n\r\n        const scoreTextStyle = {\r\n            color: '#000',\r\n            fontFamily: '\"Baloo Thambi 2\"',\r\n            fontStyle: 'bold',\r\n            fontSize: '30px'\r\n        };\r\n\r\n        this.scoreText = context.add.text(this.x, this.y, this.score, scoreTextStyle);\r\n        this.updateScore(this.score);\r\n\r\n        this.comboText = context.add.text(this.x, this.y + 20, '');\r\n    }\r\n\r\n    updateScore(score)\r\n    {\r\n        this.score = score;\r\n        this.scoreText.setText(score + ' drops');\r\n    }\r\n\r\n    updateCombo(text)\r\n    {\r\n        this.comboText.setText(text);\r\n    }\r\n}","export default class {\r\n\r\n    constructor(x, y, seconds)\r\n    {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.text = null;\r\n        this.seconds = seconds;\r\n        this.isPaused = true;\r\n    }\r\n\r\n    create(context)\r\n    {\r\n        this.text = context.add.text(this.x, this.y, this.score);\r\n        \r\n        this.tick();\r\n        context.time.addEvent({ delay: 1000, callback: this.tick, callbackScope: this, loop: true })\r\n    }\r\n\r\n    tick()\r\n    {\r\n        if(this.seconds <= 0 || this.isPaused)\r\n        {\r\n            return;\r\n        }\r\n\r\n        this.seconds--;\r\n\r\n        // Display the remaining time\r\n        const minutes = Math.floor(this.seconds / 60);\r\n\r\n        let seconds = (this.seconds % 60);\r\n        if(seconds < 10)\r\n        {\r\n            seconds = '0' + seconds;\r\n        }\r\n\r\n        this.text.setText(`${minutes}:${seconds}`);\r\n    }\r\n\r\n    start()\r\n    {\r\n        this.isPaused = false;\r\n    }\r\n}","import DialogScript from \"./DialogScript\";\r\n\r\nexport default class {\r\n\r\n    getScript(level)\r\n    {\r\n        const script = new DialogScript();\r\n\r\n        switch(level)\r\n        {\r\n            // Level 0 (Intro)\r\n            case 0:\r\n\r\n                script.introMessages = [\r\n                    `*Oh, doozle, you made it!* You're here! (Click or tap anywhere!)`,\r\n                    `The Dew Drop Kingdom is in trouble!`,\r\n                    `We lost all of our dew drops and now we'll starve!`,\r\n                    `But you can help us by collecting as many dew drops as you can!`,\r\n                    \"If you match three or more dew drops of the same color, we can collect them!\",\r\n                    \"To make a match, select two dew drops and swap their places!\"\r\n                ];\r\n\r\n                script.getDisplayTileMatchMessages = (data) => {\r\n\r\n                    if(data.totalMatches === 1)\r\n                    {\r\n                        return [\r\n                            \"You got it! That's it!\",\r\n                            \"You collect extra dew drops when you chain together matches in a combo!\",\r\n                            \"See if you can collect 100 dew drops!\"\r\n                        ];\r\n                    }\r\n\r\n                };\r\n\r\n                break;\r\n\r\n            // Level 1 (Timer Intro)\r\n            case 1:\r\n\r\n                script.introMessages = [\r\n                    \"*Oh, doozle!* You're so good at this!\",\r\n                    \"But, we'll have to hurry this time!\",\r\n                    \"We only have two minutes before the sun dries up all the dew drops!\",\r\n                    \"Collect at least 200 dew drops in two minutes!\"\r\n                ];\r\n\r\n                break;\r\n\r\n            // Level 2 (Breaking the Fourth Wall)\r\n            case 2:\r\n\r\n                script.introMessages = [\r\n                    \"Wow, we're so proud of you!\",\r\n                    \"This round you'll only have 30 seconds to collect at least 300 dew drops!\"\r\n                ];\r\n\r\n                script.getGameOverMessages = () => {\r\n                    return [\r\n                        \"Wait, wait, sorry, hold on.\",\r\n                        \"It's too early for the *\\\"Lose in a Panic\\\"* scenario.\",\r\n                        \"So sorry about that.\",\r\n                        \"You've been really great so far, honestly.\",\r\n                        \"You know, what, let's just go to the next round and we'll take it from the top.\"\r\n                    ];\r\n                };\r\n\r\n                break;\r\n\r\n            // Level 3 (Easy Win)\r\n            case 3:\r\n\r\n                script.introMessages = [\r\n                    \"Alright, I think we've got everything figured out.\",\r\n                    \"Okay, for this next round, let me set you up:\",\r\n                    \"Remember, you've been winning the last few rounds and you're gaining confidence.\",\r\n                    \"In this round, it's going to be easy for you to get combos.\",\r\n                    \"So the idea here is that you're going to get a little *too* confident, right?\",\r\n                    \"Like a little full of yourself, alright?\",\r\n                    \"Okay, great! Let's do this:\",\r\n                    \"...\",\r\n                    \"*Oh doozle woozle!*\",\r\n                    \"You're so amazing!\",\r\n                    \"You have two minutes again, but this time you'll have to collect 300 dew drops.\",\r\n                    \"Can you do it?\",\r\n                    \"Who am I kidding? Of course you can!\"\r\n                ];\r\n\r\n                break;\r\n\r\n            // Level 4 (Losing Confidence)\r\n            case 4:\r\n\r\n                script.introMessages = [\r\n                    \"Okay, okay, great stuff.\",\r\n                    \"For this round, you're bringing all of that pride, all of that hubris.\",\r\n                    \"And, when the round starts, things are still going your way.\",\r\n                    \"But guess what?\",\r\n                    \"Halfway through this round, things start getting a little harder.\",\r\n                    \"So this is where we begin to chip away at your pride as the player.\",\r\n                    \"Alright, that's your set up: now let me get into the right headspace.\",\r\n                    \"...oh doozle woo-\",\r\n                    \"...no, no, it's doozy-woozy here...\",\r\n                    \"...yeah, doozy-woozy, you're our hero, blah, blah...\",\r\n                    \"Alright! Got it!\",\r\n                    \"...\",\r\n                    \"*Doozy-woozy!*\",\r\n                    \"You're our hero!\",\r\n                    \"You've done so much for us, but we still need your help!\",\r\n                    \"We need you to collect 500 dew drops in five minutes!\" \r\n                ];\r\n\r\n                break;\r\n\r\n            // Level 5 (Fall From Grace)\r\n            case 5:\r\n\r\n                script.introMessages = [\r\n                    \"Wow, such moving work.\",\r\n                    \"It really feels so authentic.\",\r\n                    \"It's been a joy working with you.\",\r\n                    \"Okay, here we go, this is a pivotal scene:\",\r\n                    \"This round will not go your way at all. At all.\",\r\n                    \"This is your fall from grace.\",\r\n                    \"(Ahem)\",\r\n                    \"...\",\r\n                    \"*Doozle!*\",\r\n                    \"*Woozle!*\",\r\n                    \"I can't believe you did it!\",\r\n                    \"We've got a bigger challenge ahead, but I know you can do it!\",\r\n                    \"You can do anything!\",\r\n                    \"We need you to collect 1000 dew drops in five minutes!\"\r\n                ];\r\n\r\n                break;\r\n\r\n            // Level 6 (Wallowing)\r\n            case 6:\r\n\r\n                script.introMessages = [\r\n                    \"Okay, let's move right into the next scene:\",\r\n                    \"Here, you are wallowing, right?\",\r\n                    \"You are in the pit of despair and you can't see a way out.\",\r\n                    \"This round won't be particularly hard, but you can't seem to find any matches.\",\r\n                    \"Got it?\",\r\n                    \"Alright, great: let me find my place here...\",\r\n                    \"Yes, okay, I believed in you, but now my faith is faltering...\",\r\n                    \"I'm keeping a brave face, but I'm really starting to lose confidence...\",\r\n                    \"Okay, I'm ready!\",\r\n                    \"...\",\r\n                    \"Oh no!\",\r\n                    \"*Whoopsie whoozle!*\",\r\n                    \"Don't worry, that was a tough one!\",\r\n                    \"Let's try again! I know you can do it!\",\r\n                    \"We need you to collect 1000 dew drops in five minutes!\"\r\n                ];\r\n\r\n                script.getDisplayTileMatchMessages = (data) => {\r\n\r\n                    return [\r\n                        \"(Oh, hey: remember, you're not going to find any matches this round)\"\r\n                    ];\r\n\r\n                };\r\n\r\n                break;\r\n\r\n            // Level 7 (Pheonix Rises)\r\n            case 7:\r\n\r\n                script.introMessages = [\r\n                    \"Now, you've been wallowing. You've feeling really low.\",\r\n                    \"You're in such despair, that in this round...\",\r\n                    \"There's an obvious combo.\",\r\n                    \"Right there, right in front of your face.\",\r\n                    \"But you can't see it through the despair.\",\r\n                    \"But then, in the last ten seconds of the round, you see it.\",\r\n                    \"Boom, it's the perfect match.\",\r\n                    \"And the pheonix rises once again!\"\r\n                ];\r\n\r\n                break;\r\n\r\n            // Level 8 (Victory Lap)\r\n            case 8:\r\n\r\n                script.introMessages = [\r\n                    \"Our hero is back!\",\r\n                    \"This final scene is our victory lap.\",\r\n                    \"However, we don't want too many combos in this round, right?\",\r\n                    \"This is a round the player wins on their own.\",\r\n                    \"No assistance from the game.\",\r\n                    \"A true hero's victory!\",\r\n                    \"Alright, let's do this: I've got an appointment after this.\"\r\n                ];\r\n\r\n                break;\r\n\r\n        }\r\n\r\n        return script;\r\n    }\r\n\r\n}","export default class {\r\n\r\n    constructor()\r\n    {\r\n        this.introMessages = [];\r\n        this.getDisplayTileMatchMessages = () => {};\r\n    }\r\n}","import TagText from 'phaser3-rex-plugins/plugins/tagtext.js';\r\nimport TextTyping from 'phaser3-rex-plugins/plugins/texttyping.js';\r\n\r\nexport default class {\r\n\r\n    constructor(x, y, script)\r\n    {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.script = script;\r\n\r\n        this.queuedMessages = null;\r\n        this.isPaused = false;\r\n        this.isBlockingGameplay = false;\r\n\r\n        this.endDialogueMarkerGraphics = null;\r\n    }\r\n\r\n    create(context)\r\n    {\r\n        const self = this;\r\n\r\n        const speechBubbleWidth = 760;\r\n        const speechBubbleHeight = 130;\r\n\r\n        const endDialogueMarkerRadius = 10;\r\n        \r\n        const characterWidth = 250;\r\n        const characterHeight = 500;\r\n\r\n        const speechBubbleIntroOffset = 40;\r\n\r\n        // Speech Bubble\r\n        const speechBubbleGraphics = context.add.graphics({ fillStyle: { color: 0xffffff } }).setAlpha(0);\r\n        speechBubbleGraphics.fillRoundedRect(this.x, this.y - speechBubbleIntroOffset, speechBubbleWidth, speechBubbleHeight, 10);\r\n        speechBubbleGraphics.fillTriangle(\r\n            this.x + 120, this.y + speechBubbleHeight + 20 - speechBubbleIntroOffset,\r\n            this.x + 105, this.y + speechBubbleHeight - speechBubbleIntroOffset,\r\n            this.x + 135, this.y + speechBubbleHeight - speechBubbleIntroOffset\r\n        );\r\n\r\n        // End Dialogue Marker\r\n        this.endDialogueMarkerGraphics = context.add.graphics({ fillStyle: { color: 0xcccccc } });\r\n        this.hideEndDialogueMarker();\r\n        const endDialogueMarker = new Phaser.Geom.Circle(\r\n            this.x + speechBubbleWidth - endDialogueMarkerRadius - 15,\r\n            this.y + speechBubbleHeight - endDialogueMarkerRadius - 15,\r\n            endDialogueMarkerRadius);\r\n        this.endDialogueMarkerGraphics.fillCircleShape(endDialogueMarker);\r\n\r\n        context.tweens.add({\r\n            targets: this.endDialogueMarkerGraphics,\r\n            alpha: 0,\r\n            duration: 500,\r\n            repeat: -1,\r\n            yoyo: true\r\n        });\r\n\r\n        // Speech Bubble Text\r\n        const speechBubbleTextStyle = {\r\n            color: '#000',\r\n            fontFamily: '\"Baloo Thambi 2\"',\r\n            fontSize: '30px',\r\n            wrap: {\r\n                mode: 'word',\r\n                width: speechBubbleWidth\r\n            },\r\n            tags: {\r\n                exclamation: {\r\n                    fontStyle: 'bold'\r\n                }\r\n            }\r\n        };\r\n        \r\n        this.speechBubbleText = new TagText(context, this.x + 15, this.y + 15, '', speechBubbleTextStyle);\r\n        context.add.existing(this.speechBubbleText);\r\n\r\n        // Speech Bubble Text Typing\r\n        this.speechBubbleTextTyping = new TextTyping(this.speechBubbleText, { speed: 30 }); \r\n        this.speechBubbleTextTyping.on('complete', () => { self.onMessageComplete.call(self) });\r\n\r\n        // Character\r\n        const characterImage = context.add.image(this.x - characterWidth, this.y + speechBubbleHeight + 230, 'guide_character');\r\n\r\n        // this.x + (characterWidth/2)\r\n\r\n        // Intro Timeline\r\n        const introTimeline = context.tweens.createTimeline();\r\n\r\n        // Slide in the character\r\n        introTimeline.add({\r\n            delay: 200,\r\n            targets: characterImage,\r\n            x: (this.x + characterWidth/2),\r\n            duration: 400,\r\n            angle: 15,\r\n            ease: 'Power1'\r\n        });\r\n\r\n        // Sway backwards\r\n        introTimeline.add({\r\n            targets: characterImage,\r\n            duration: 400,\r\n            angle: -7,\r\n            ease: 'Power1'\r\n        });\r\n\r\n        // Sway into position\r\n        introTimeline.add({\r\n            targets: characterImage,\r\n            duration: 400,\r\n            angle: 0,\r\n            ease: 'Power1'\r\n        });\r\n\r\n        // Speech Bubble Intro Animation\r\n        introTimeline.add({\r\n            offset: '-=300',\r\n            targets: speechBubbleGraphics,\r\n            props: {\r\n                y: { value: `+=${speechBubbleIntroOffset}`, duration: 500, ease: 'Bounce.easeOut' },\r\n                alpha: { value: 1, duration: 300, ease: 'Linear' }\r\n            },\r\n            onComplete: () => {\r\n                self.queueMessages(context, this.script.introMessages);\r\n            }\r\n        });\r\n\r\n        introTimeline.play();\r\n\r\n    }\r\n\r\n    queueMessages(context, messages)\r\n    {\r\n        if(!messages)\r\n        {\r\n            return;\r\n        }\r\n\r\n        const self = this;\r\n\r\n        if(self.queuedMessages === null)\r\n        {\r\n            self.queuedMessages = [];\r\n        }\r\n\r\n        self.queuedMessages.push(...messages);\r\n\r\n        if(self.speechBubbleTextTyping.isTyping)\r\n        {\r\n            return;\r\n        }\r\n\r\n        self.isBlockingGameplay = true;\r\n        self.progressDialogue();\r\n    }\r\n\r\n    onMessageComplete()\r\n    {\r\n        this.showEndDialogueMarker();\r\n        if(this.queuedMessages.length === 0)\r\n        {\r\n            this.isBlockingGameplay = false;\r\n            return;\r\n        }\r\n    }\r\n\r\n    displayTileMatchMessage(context, data)\r\n    {\r\n        const messages = this.script.getDisplayTileMatchMessages(data);\r\n        this.queueMessages(context, messages);\r\n    }\r\n\r\n    displayGameOverMessage(context)\r\n    {\r\n        const messages = this.script.getGameOverMessages();\r\n\r\n        // Push in a placeholder message to force players to confirm the last\r\n        // message in the \"Game Over\" queue\r\n        messages.push(' ');\r\n\r\n        this.queueMessages(context, messages);\r\n    }\r\n\r\n    progressDialogue()\r\n    {\r\n        this.hideEndDialogueMarker();\r\n        if(this.queuedMessages.length > 0)\r\n        {\r\n            const message = this.convertDialogToTagText(this.queuedMessages.shift());\r\n            this.speechBubbleTextTyping.start(message);\r\n        }\r\n    }\r\n\r\n    showEndDialogueMarker()\r\n    {\r\n        this.endDialogueMarkerGraphics.setVisible(true);\r\n    }\r\n\r\n    hideEndDialogueMarker()\r\n    {\r\n        this.endDialogueMarkerGraphics.setVisible(false);\r\n    }\r\n\r\n    convertDialogToTagText(input)\r\n    {\r\n        const styles = [\r\n            { token: '*', className: 'exclamation' },\r\n            { token: '_', className: 'underline'}\r\n        ];    \r\n\r\n        let output = '';\r\n        let currClass = '';\r\n    \r\n        for(let i=0; i<input.length; i++)\r\n        {\r\n            const currChar = input[i];\r\n            const isStyleToken = styles.some(style => style.token === currChar);\r\n    \r\n            // If the first character isn't a style token, then\r\n            // we need to open a \"normal\" class tag\r\n            if(i === 0 && !isStyleToken)\r\n            {\r\n                output += '<class=\"normal\">';\r\n                currClass = 'normal';\r\n            }\r\n    \r\n            // If the last character is a style token, we ignore it\r\n            // since we'll always end with a closing class tag anyway\r\n            if(i === input.length - 1 && isStyleToken)\r\n            {\r\n                continue;\r\n            }\r\n    \r\n            if(isStyleToken)\r\n            {\r\n                const targetStyle = styles.find(style => style.token === currChar);\r\n    \r\n                // If we've encountered a token of the class we already have open,\r\n                // that means we need to close the class\r\n                if(currClass === targetStyle.className)\r\n                {\r\n                    output += '</class>';\r\n                    output += '<class=\"normal\">';\r\n                    currClass = 'normal';\r\n                }\r\n    \r\n                // Otherwise, we need to close the existing the class and\r\n                // open the new class\r\n                else\r\n                {\r\n                    if(i !== 0)\r\n                    {\r\n                        output += '</class>';\r\n                    }\r\n    \r\n                    output += `<class=\"${targetStyle.className}\">`;\r\n                    currClass = targetStyle.className;\r\n                }\r\n            }\r\n            else\r\n            {\r\n                output += input[i];\r\n            }\r\n        }\r\n    \r\n        output += '</class>';\r\n        return output;\r\n    }\r\n}","export default class extends Phaser.Scene {\r\n\r\n    constructor()\r\n    {\r\n        super('RoundTransitionScene');\r\n\r\n        this.nextLevel = 0;\r\n    }\r\n\r\n    init(data)\r\n    {\r\n        this.nextLevel = data.nextLevel;\r\n    }\r\n\r\n    create()\r\n    {\r\n        const self = this;\r\n\r\n        // Title\r\n        this.add.text(50, 50, `Round ${self.nextLevel}`);\r\n\r\n        this.time.addEvent({ delay: 1000, callback: function() { self.scene.start('RoundScene', { level: self.nextLevel }) }, callbackScope: this })\r\n    }\r\n    \r\n}","import TitleScene from './scenes/TitleScene';\r\nimport RoundScene from './scenes/RoundScene';\r\nimport RoundTransitionScene from './scenes/RoundTransitionScene';\r\n\r\nconst config = {\r\n    type: Phaser.AUTO,\r\n    width: 800,\r\n    height: 700,\r\n    scene: [TitleScene, RoundScene, RoundTransitionScene]\r\n};\r\n\r\nconst game = new Phaser.Game(config);"],"sourceRoot":""}