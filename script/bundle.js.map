{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/render/WebGLRenderer.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/render/CanvasRenderer.js","webpack:///./script/scenes/TitleScene.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/object/NOOP.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/render/Render.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/textstyle/MeasureText.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/const.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/textstyle/TextStyle.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/canvastext/DrawMethods.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/struct/Stack.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/pool.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/penmanger/Pen.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/object/Clear.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/object/Clone.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/penmanger/PenManager.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/hitareamanager/HitAreaManager.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/canvastext/SetInteractive.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/canvastext/WrapText.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/canvastext/CanvasText.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/imagemanager/ImageManager.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/imagemanager/GetGlobImageManager.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/textbase/Text.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/tagtext/Parser.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/tagtext/TagText.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/tagtext/Creator.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/tagtext.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/gameobjects/text/tagtext/Factory.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/eventemitter/EventEmitterMethods.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/system/IsSceneObject.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/utils/system/GetSceneObject.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/behaviors/texttyping/TextTyping.js","webpack:///./node_modules/phaser3-rex-plugins/plugins/texttyping.js","webpack:///./script/Utility.js","webpack:///./script/TileState.js","webpack:///./script/TileGenerationBehavior.js","webpack:///./script/TileType.js","webpack:///./script/TileGrid.js","webpack:///./script/Tile.js","webpack:///./script/scenes/RoundScene.js","webpack:///./script/ActionQueue.js","webpack:///./script/ScoreDisplay.js","webpack:///./script/Timer.js","webpack:///./script/DialogManager.js","webpack:///./script/DialogScript.js","webpack:///./script/Guide.js","webpack:///./script/scenes/RoundTransitionScene.js","webpack:///./script/scenes/GameOverScene.js","webpack:///./script/main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Utils","Phaser","Renderer","WebGL","renderer","src","interpolationPercentage","camera","parentMatrix","width","height","frame","getTint","getTintAppendFloatAlpha","this","pipeline","batchTexture","glTexture","x","y","style","resolution","scaleX","scaleY","rotation","flipX","flipY","scrollFactorX","scrollFactorY","displayOriginX","displayOriginY","_tintTL","alpha","_alphaTL","_tintTR","_alphaTR","_tintBL","_alphaBL","_tintBR","_alphaBR","_isTinted","tintFill","batchSprite","super","self","add","text","startBtn","setInteractive","on","scene","start","level","renderWebGL","renderCanvas","CanvasPool","Display","Canvas","textStyle","canvas","context","getContext","syncFont","Math","ceil","measureText","testString","baselineX","baseline","baselineY","fillStyle","fillRect","font","_font","textBaseline","fillText","output","ascent","descent","fontSize","getImageData","remove","j","imagedata","data","pixels","length","line","idx","stop","NO_NEWLINE","RAW_NEWLINE","WRAPPED_NEWLINE","NO_WRAP","WORD_WRAP","CHAR_WRAP","SPLITREGEXP","GetAdvancedValue","Objects","GetValue","propertyMap","backgroundColor","fontFamily","fontStyle","color","stroke","strokeThickness","shadowOffsetX","shadowOffsetY","shadowColor","shadowBlur","shadowStroke","shadowFill","underlineColor","underlineThickness","underlineOffset","halign","valign","maxLines","fixedWidth","fixedHeight","lineSpacing","rtl","wrapMode","wrapWidth","WRAPMODE","none","word","char","character","parent","setStyle","metrics","updateText","undefined","wrap","toString","fill","update","strokeStyle","lineWidth","lineCap","lineJoin","enabled","recalculateMetrics","newFont","family","size","string","thickness","blur","offset","toLowerCase","max","getTextMetrics","startX","startY","boxWidth","boxHeight","penManager","hitAreaManager","clear","save","drawBackground","defatultStyle","startXOffset","startYOffset","drawLinesNum","drawLineStartIdx","drawLineEndIdx","offsetX","offsetY","lineHeight","lines","totalLinesNum","floor","lineIdx","getLineWidth","pens","penIdx","pensLen","drawPen","restore","pen","curStyle","parser","propToContextStyle","prop","buildFont","syncStyle","drawUnderline","isTextPen","drawText","isImagePen","drawImage","img","hasAreaMarker","area","clearRect","autoRound","round","savedLineCap","beginPath","moveTo","lineTo","syncShadow","strokeText","imgKey","imageManager","imgData","getFrame","left","source","image","cutX","cutY","cutWidth","cutHeight","items","pop","push","arr","apply","config","resetFromJSON","newLineMode","startIndex","txt","len","rawTextLength","obj","Array","isArray","out","objIsArray","GetFastValue","PensPool","LinesPool","maxLinesWidth","tagToText","tagToTextScope","freePens","pushMultiple","PEN_CONFIG","addPen","addTextPen","previousPen","lastPen","lastX","endIndex","lastLine","targetPenManager","li","llen","pi","plen","getLineEndIndex","hasLastPen","w","maxW","result","plainText","end","penTxt","penStartIdx","penEndIdx","currentProp","previousProp","wrapText","substring","Rectangle","Geom","RectanglePool","hitAreas","rectangle","setTo","hitArea","cnt","contains","graphics","scaleCanvas","rotateCanvas","translateCanvas","lineStyle","strokeRect","FireEvent","eventName","pointer","localX","localY","emit","event","splitRegExp","WRAP_RESULT","newline","getTextWidth","retLines","remainWidth","split","linesLen","tokenArray","token","textWidth","currLineWidth","curLineText","lineText","tokenLen","pensPool","newPenManager","_tmpPenManager","destroy","curProp","wrapLines","cursorX","cursorY","match","splitText","tagTextToProp","imgWidth","getOuterWidth","addNewLinePen","addImagePen","jLen","linesCount","getMaxLineWidth","desplayLinesCount","linesHeight","propToTagText","retPenManager","copyPenManager","updatePenManager","getSliceTagText","tmpPenManager","ret","copy","methods","assign","DrawMethods","globImageManager","textureManager","images","_add","textureKey","frameKey","frameWidth","frameHeight","right","exists","AddToDOM","DOM","GameObject","GameObjects","RemoveFromDOM","PensPools","type","sys","game","setPosition","setOrigin","initPipeline","align","_text","padding","top","bottom","dirty","_crop","resetCropObject","texture","textures","addCanvas","gl","deleteTexture","canvasText","setPadding","setText","events","dir","direction","display","originX","join","setFont","setFontFamily","setFontSize","setFontStyle","setFixedSize","setBackgroundColor","setFill","setColor","setStroke","setShadow","setShadowOffset","setShadowColor","setShadowBlur","setShadowStroke","setShadowFill","setWrapMode","setWrapWidth","setHAlign","setLineSpacing","setResolution","setMaxLines","runWrap","textHeight","linesWidth","h","updateDisplayOrigin","setSize","scale","draw","canvasToTexture","input","customHitArea","Components","ToJSON","toJSON","shape","callback","dropZone","getText","getPlainText","getPenManager","drawBounds","Class","mixin","Alpha","BlendMode","ComputedSize","Crop","Depth","Flip","GetBounds","Mask","Origin","Pipeline","ScrollFactor","Tint","Transform","Visible","Render","GETPROP_RESULT","prevProp","STYLE_RESULT","styleToProp","k","v","slen","isEmpty","thinkness","parseInt","replace","shadow","u","RE_SPACE","RE_SPLITTEXT","RE_CLASS_HEADER","RE_CLASS","RE_STYLE_HEADER","RE_STYLE","tags","innerMatch","charIdx","totalLen","matchStart","exec","lastIndex","test","propOut","_class","_style","defaultStyle","underline","isTextTag","tagName","tag","Parser","addTag","preDestroy","BuildGameObject","GameObjectFactory","register","gameObject","existing","GameObjectCreator","content","addToScene","eventEmitter","EventEmitterClass","Events","EventEmitter","_privateEE","_eventEmitter","shutdown","arguments","once","off","addListener","removeListener","removeAllListeners","listenerCount","listeners","SceneClass","Scene","setEventEmitter","timer","boot","setTypeMode","setTypeSpeed","setTextCallback","setTextCallbackScope","typingIdx","transferText","textLen","insertIdx","elapsed","getTimer","typeMode","speed","destroyEventEmitter","freeTimer","TYPEMODE","startIdx","timerStartAt","setTypingContent","startTimer","newText","concat","isTyping","showAllText","paused","getTextLength","getTypingString","isLastChar","delay","typeIdx","endIdx","getSubString","midIdx","lowerResult","lowerLen","upperResult","upperLen","startAt","time","addEvent","loop","onTyping","callbackScope","slice","EventEmitterMethods","getRandomItem","random","imageKey","tileGridWidth","tileGridHeight","tileSize","onTileSelect","onTileMatch","queue","tileGrid","tileImageContainer","playAreaOffset","tileGenerationBehavior","TileGenerationBehavior","createTile","getTileType","container","forEachTile","tile","maskShape","make","mask","Masks","GeometryMask","matchedTiles","getMatches","destroys","forEach","Promise","all","state","TileState","drops","closestY","closestTile","getTileDrop","forEachPlayableTile","adjustedY","firstTile","secondTile","firstTileX","firstTileY","firstTileGridX","tileGridX","firstTileGridY","tileGridY","secondTileX","secondTileY","secondTileGridX","secondTileGridY","firstSwap","updatePosition","secondSwap","targetGridX","targetGridY","isPlayable","targetTileType","tileType","matchedXTiles","matchedYTiles","currX","currTile","currY","isActivated","setTintFill","clearTint","resolve","reject","tweens","targets","ease","duration","onComplete","getTileX","getTileY","behavior","aboveTile","belowTile","leftTile","rightTile","TileType","filter","map","isAwaitingRoundTransition","score","selectedTiles","scoreDisplay","guide","comboCount","totalMatches","load","queuedActions","currentAction","shift","action","then","TileGrid","scoreText","comboText","updateScore","timerSeconds","getTimerSeconds","seconds","tick","minutes","script","introMessages","getDisplayTileMatchMessages","getGameOverMessages","getScript","queuedMessages","isPaused","isBlockingGameplay","endDialogueMarkerGraphics","speechBubbleGraphics","fillRoundedRect","fillTriangle","hideEndDialogueMarker","endDialogueMarker","Circle","fillCircleShape","repeat","yoyo","speechBubbleTextStyle","exclamation","speechBubbleText","speechBubbleTextTyping","onMessageComplete","queueMessages","messages","progressDialogue","showEndDialogueMarker","message","convertDialogToTagText","setVisible","styles","className","currClass","currChar","isStyleToken","some","targetStyle","find","displayGameOverMessage","isLevelComplete","nextLevel","isActionRunning","hasActions","next","canSelect","deactivate","activate","selectedTile","xDiff","abs","yDiff","firstSelectedTile","secondSelectedTile","swapTiles","hasMatches","displayTileMatchMessage","updateCombo","finalScore","startOverBtn","AUTO","TitleScene","RoundScene","RoundTransitionScene","GameOverScene","Game"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Utils = Phaser.Renderer.WebGL.Utils;\r\n\r\n/**\r\n * Renders this Game Object with the WebGL Renderer to the given Camera.\r\n * The object will not render if any of its renderFlags are set or it is being actively filtered out by the Camera.\r\n * This method should not be called directly. It is a utility function of the Render module.\r\n *\r\n * @method Phaser.GameObjects.Text#renderWebGL\r\n * @since 3.0.0\r\n * @private\r\n *\r\n * @param {Phaser.Renderer.WebGL.WebGLRenderer} renderer - A reference to the current active WebGL renderer.\r\n * @param {Phaser.GameObjects.Text} src - The Game Object being rendered in this call.\r\n * @param {number} interpolationPercentage - Reserved for future use and custom pipelines.\r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The Camera that is rendering the Game Object.\r\n * @param {Phaser.GameObjects.Components.TransformMatrix} parentMatrix - This transform matrix is defined if the game object is nested\r\n */\r\nvar TextWebGLRenderer = function (renderer, src, interpolationPercentage, camera, parentMatrix) {\r\n    if ((src.width === 0) || (src.height === 0)) {\r\n        return;\r\n    }\r\n\r\n    var frame = src.frame;\r\n    var width = frame.width;\r\n    var height = frame.height;\r\n    var getTint = Utils.getTintAppendFloatAlpha;\r\n\r\n    this.pipeline.batchTexture(\r\n        src,\r\n        frame.glTexture,\r\n        width, height,\r\n        src.x, src.y,\r\n        width / src.style.resolution, height / src.style.resolution,\r\n        src.scaleX, src.scaleY,\r\n        src.rotation,\r\n        src.flipX, src.flipY,\r\n        src.scrollFactorX, src.scrollFactorY,\r\n        src.displayOriginX, src.displayOriginY,\r\n        0, 0, width, height,\r\n        getTint(src._tintTL, camera.alpha * src._alphaTL),\r\n        getTint(src._tintTR, camera.alpha * src._alphaTR),\r\n        getTint(src._tintBL, camera.alpha * src._alphaBL),\r\n        getTint(src._tintBR, camera.alpha * src._alphaBR),\r\n        (src._isTinted && src.tintFill),\r\n        0, 0,\r\n        camera,\r\n        parentMatrix\r\n    );\r\n};\r\n\r\nmodule.exports = TextWebGLRenderer;\r\n","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Renders this Game Object with the Canvas Renderer to the given Camera.\r\n * The object will not render if any of its renderFlags are set or it is being actively filtered out by the Camera.\r\n * This method should not be called directly. It is a utility function of the Render module.\r\n *\r\n * @method Phaser.GameObjects.Text#renderCanvas\r\n * @since 3.0.0\r\n * @private\r\n *\r\n * @param {Phaser.Renderer.Canvas.CanvasRenderer} renderer - A reference to the current active Canvas renderer.\r\n * @param {Phaser.GameObjects.Text} src - The Game Object being rendered in this call.\r\n * @param {number} interpolationPercentage - Reserved for future use and custom pipelines.\r\n * @param {Phaser.Cameras.Scene2D.Camera} camera - The Camera that is rendering the Game Object.\r\n * @param {Phaser.GameObjects.Components.TransformMatrix} parentMatrix - This transform matrix is defined if the game object is nested\r\n */\r\nvar TextCanvasRenderer = function (renderer, src, interpolationPercentage, camera, parentMatrix) {\r\n    if ((src.width === 0) || (src.height === 0)) {\r\n        return;\r\n    }\r\n\r\n    renderer.batchSprite(src, src.frame, camera, parentMatrix);\r\n};\r\n\r\nmodule.exports = TextCanvasRenderer;\r\n","export default class extends Phaser.Scene {\r\n\r\n    constructor()\r\n    {\r\n        super('TitleScene');\r\n    }\r\n\r\n    create()\r\n    {\r\n        const self = this;\r\n\r\n        // Title\r\n        this.add.text(50, 50, 'Match Three!');\r\n\r\n        // \"Start\" Button\r\n        const startBtn = this.add.text(50, 70, 'Start Game');\r\n        startBtn.setInteractive();\r\n        startBtn.on('pointerdown', () => { self.scene.start('RoundScene', { level: 0 }); });\r\n    }\r\n    \r\n}","var NOOP = function () {\r\n    //  NOOP\r\n};\r\n\r\nexport default NOOP;","import WebGLRenderer from './WebGLRenderer.js';\r\nimport CanvasRenderer from './CanvasRenderer.js';\r\nimport NOOP from '../../../../utils/object/NOOP';\r\n\r\nvar renderWebGL = NOOP;\r\nvar renderCanvas = NOOP;\r\n\r\nif (WEBGL_RENDERER) {\r\n    renderWebGL = WebGLRenderer;\r\n}\r\n\r\nif (CANVAS_RENDERER) {\r\n    renderCanvas = CanvasRenderer;\r\n}\r\n\r\nexport default {\r\n    renderWebGL: renderWebGL,\r\n    renderCanvas: renderCanvas\r\n\r\n};","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nconst CanvasPool = Phaser.Display.Canvas.CanvasPool;\r\n\r\n/**\r\n * Calculates the ascent, descent and fontSize of a given font style.\r\n *\r\n * @function Phaser.GameObjects.Text.MeasureText\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.GameObjects.Text.TextStyle} textStyle - The TextStyle object to measure.\r\n *\r\n * @return {object} An object containing the ascent, descent and fontSize of the TextStyle.\r\n */\r\nvar MeasureText = function (textStyle) {\r\n    // @property {HTMLCanvasElement} canvas - The canvas element that the text is rendered.\r\n    var canvas = CanvasPool.create(this);\r\n\r\n    // @property {HTMLCanvasElement} context - The context of the canvas element that the text is rendered to.\r\n    var context = canvas.getContext('2d');\r\n\r\n    textStyle.syncFont(canvas, context);\r\n\r\n    var width = Math.ceil(context.measureText(textStyle.testString).width * textStyle.baselineX);\r\n    var baseline = width;\r\n    var height = 2 * baseline;\r\n\r\n    baseline = baseline * textStyle.baselineY | 0;\r\n\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n\r\n    context.fillStyle = '#f00';\r\n    context.fillRect(0, 0, width, height);\r\n\r\n    context.font = textStyle._font;\r\n\r\n    context.textBaseline = 'alphabetic';\r\n    context.fillStyle = '#000';\r\n    context.fillText(textStyle.testString, 0, baseline);\r\n\r\n    var output = {\r\n        ascent: 0,\r\n        descent: 0,\r\n        fontSize: 0\r\n    };\r\n\r\n    if (!context.getImageData(0, 0, width, height)) {\r\n        output.ascent = baseline;\r\n        output.descent = baseline + 6;\r\n        output.fontSize = output.ascent + output.descent;\r\n\r\n        CanvasPool.remove(canvas);\r\n\r\n        return output;\r\n    }\r\n\r\n    var imagedata = context.getImageData(0, 0, width, height).data;\r\n    var pixels = imagedata.length;\r\n    var line = width * 4;\r\n    var i;\r\n    var j;\r\n    var idx = 0;\r\n    var stop = false;\r\n\r\n    // ascent. scan from top to bottom until we find a non red pixel\r\n    for (i = 0; i < baseline; i++) {\r\n        for (j = 0; j < line; j += 4) {\r\n            if (imagedata[idx + j] !== 255) {\r\n                stop = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!stop) {\r\n            idx += line;\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n\r\n    output.ascent = baseline - i;\r\n\r\n    idx = pixels - line;\r\n    stop = false;\r\n\r\n    // descent. scan from bottom to top until we find a non red pixel\r\n    for (i = height; i > baseline; i--) {\r\n        for (j = 0; j < line; j += 4) {\r\n            if (imagedata[idx + j] !== 255) {\r\n                stop = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!stop) {\r\n            idx -= line;\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n\r\n    output.descent = (i - baseline);\r\n    output.fontSize = output.ascent + output.descent;\r\n\r\n    CanvasPool.remove(canvas);\r\n\r\n    return output;\r\n};\r\n\r\nexport default MeasureText;","var CONST = {\r\n    // new line mode\r\n    NO_NEWLINE: 0,\r\n    RAW_NEWLINE: 1,\r\n    WRAPPED_NEWLINE: 2,\r\n\r\n    // wrap mode\r\n    NO_WRAP: 0,\r\n    WORD_WRAP: 1,\r\n    CHAR_WRAP: 2,\r\n\r\n    // split lines\r\n    SPLITREGEXP: /(?:\\r\\n|\\r|\\n)/\r\n};\r\n\r\nexport default CONST;","/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nimport MeasureText from './MeasureText.js';\r\nimport CONST from '../const.js';\r\n\r\nconst GetAdvancedValue = Phaser.Utils.Objects.GetAdvancedValue;\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\n\r\n//  Key: [ Object Key, Default Value ]\r\n\r\n/**\r\n * A custom function that will be responsible for wrapping the text.\r\n * @callback TextStyleWordWrapCallback\r\n *\r\n * @param {string} text - The string to wrap.\r\n * @param {Phaser.GameObjects.Text} textObject - The Text instance.\r\n *\r\n * @return {(string|string[])} Should return the wrapped lines either as an array of lines or as a string with\r\n * newline characters in place to indicate where breaks should happen.\r\n */\r\n\r\nvar propertyMap = {\r\n    // background\r\n    backgroundColor: ['backgroundColor', null],\r\n\r\n    // font\r\n    fontFamily: ['fontFamily', 'Courier'],\r\n    fontSize: ['fontSize', '16px'],\r\n    fontStyle: ['fontStyle', ''],\r\n    color: ['color', '#fff'],\r\n    stroke: ['stroke', '#fff'],\r\n    strokeThickness: ['strokeThickness', 0],\r\n    shadowOffsetX: ['shadow.offsetX', 0],\r\n    shadowOffsetY: ['shadow.offsetY', 0],\r\n    shadowColor: ['shadow.color', '#000'],\r\n    shadowBlur: ['shadow.blur', 0],\r\n    shadowStroke: ['shadow.stroke', false],\r\n    shadowFill: ['shadow.fill', false],\r\n\r\n    // underline\r\n    underlineColor: ['underline.color', '#000'],\r\n    underlineThickness: ['underline.thickness', 0],\r\n    underlineOffset: ['underline.offset', 0],\r\n\r\n    // align\r\n    halign: ['halign', 'left'],\r\n    valign: ['valign', 'top'],\r\n\r\n    // size\r\n    maxLines: ['maxLines', 0],\r\n    fixedWidth: ['fixedWidth', 0],\r\n    fixedHeight: ['fixedHeight', 0],\r\n    resolution: ['resolution', 0],\r\n    lineSpacing: ['lineSpacing', 0],\r\n\r\n    rtl: ['rtl', false],\r\n    testString: ['testString', '|MÃ‰qgy'],\r\n    baselineX: ['baselineX', 1.2],\r\n    baselineY: ['baselineY', 1.4],\r\n\r\n    // wrap\r\n    wrapMode: ['wrap.mode', 1],\r\n    wrapWidth: ['wrap.width', 0]\r\n    //wrapCallback: ['wrap.callback', null],\r\n    //wrapCallbackScope: ['wrap.callbackScope', null]\r\n};\r\n\r\nclass TextStyle {\r\n    constructor(text, style) {\r\n        this.parent = text;\r\n\r\n        this.backgroundColor;\r\n\r\n        this.fontFamily;\r\n        this.fontSize;\r\n        this.fontStyle;\r\n        this.color;\r\n        this.stroke;\r\n        this.strokeThickness;\r\n        this.shadowOffsetX;\r\n        this.shadowOffsetY;\r\n        this.shadowColor;\r\n        this.shadowBlur;\r\n        this.shadowStroke;\r\n        this.shadowFill;\r\n\r\n        this.underlineColor;\r\n        this.underlineThickness;\r\n        this.underlineOffset;\r\n\r\n        this.halign;\r\n        this.valign;\r\n\r\n        this.maxLines;\r\n        this.fixedWidth;\r\n        this.fixedHeight;\r\n        this.resolution;\r\n        this.lineSpacing;\r\n\r\n        this.rtl;\r\n        this.testString;\r\n\r\n\r\n        this.baselineX;\r\n        this.baselineY;\r\n\r\n        this._font;\r\n\r\n        //  Set to defaults + user style\r\n        this.setStyle(style, false);\r\n\r\n        var metrics = GetValue(style, 'metrics', false);\r\n\r\n        //  Provide optional TextMetrics in the style object to avoid the canvas look-up / scanning\r\n        //  Doing this is reset if you then change the font of this TextStyle after creation\r\n        if (metrics) {\r\n            this.metrics = {\r\n                ascent: GetValue(metrics, 'ascent', 0),\r\n                descent: GetValue(metrics, 'descent', 0),\r\n                fontSize: GetValue(metrics, 'fontSize', 0)\r\n            };\r\n        } else {\r\n            this.metrics = MeasureText(this);\r\n        }\r\n    }\r\n\r\n    setStyle(style, updateText) {\r\n        if (updateText === undefined) {\r\n            updateText = true;\r\n        }\r\n\r\n        if (style && style.hasOwnProperty('wrap')) {\r\n            var wrap = style.wrap;\r\n            if (wrap.hasOwnProperty('mode')) {\r\n                var mode = wrap.mode;\r\n                if (typeof mode === 'string') {\r\n                    wrap.mode = WRAPMODE[mode];\r\n                }\r\n            } else {\r\n                if (wrap.hasOwnProperty('width')) {\r\n                    wrap.mode = 1;\r\n                }\r\n            }\r\n        }\r\n\r\n        //  Avoid type mutation\r\n        if (style && style.hasOwnProperty('fontSize') && typeof style.fontSize === 'number') {\r\n            style.fontSize = style.fontSize.toString() + 'px';\r\n        }\r\n\r\n        for (var key in propertyMap) {\r\n            if (key === 'wrapCallback' || key === 'wrapCallbackScope') {\r\n                // Callback & scope should be set without processing the values\r\n                this[key] = GetValue(style, propertyMap[key][0], propertyMap[key][1]);\r\n            } else {\r\n                this[key] = GetAdvancedValue(style, propertyMap[key][0], propertyMap[key][1]);\r\n            }\r\n        }\r\n\r\n        //  Allow for 'font' override\r\n        var font = GetValue(style, 'font', null);\r\n\r\n        if (font === null) {\r\n            this._font = this.fontStyle + ' ' + this.fontSize + ' ' + this.fontFamily;\r\n        } else {\r\n            this._font = font;\r\n        }\r\n\r\n        //  Allow for 'fill' to be used in place of 'color'\r\n        var fill = GetValue(style, 'fill', null);\r\n\r\n        if (fill !== null) {\r\n            this.color = fill;\r\n        }\r\n\r\n        if (updateText) {\r\n            return this.update(true);\r\n        } else {\r\n            return this.parent;\r\n        }\r\n    }\r\n\r\n    syncFont(canvas, context) {\r\n        context.font = this._font;\r\n    }\r\n\r\n    syncStyle(canvas, context) {\r\n        context.textBaseline = 'alphabetic';\r\n\r\n        context.fillStyle = this.color;\r\n        context.strokeStyle = this.stroke;\r\n\r\n        context.lineWidth = this.strokeThickness;\r\n        context.lineCap = 'round';\r\n        context.lineJoin = 'round';\r\n    }\r\n\r\n    syncShadow(context, enabled) {\r\n        if (enabled) {\r\n            context.shadowOffsetX = this.shadowOffsetX;\r\n            context.shadowOffsetY = this.shadowOffsetY;\r\n            context.shadowColor = this.shadowColor;\r\n            context.shadowBlur = this.shadowBlur;\r\n        } else {\r\n            context.shadowOffsetX = 0;\r\n            context.shadowOffsetY = 0;\r\n            context.shadowColor = 0;\r\n            context.shadowBlur = 0;\r\n        }\r\n    }\r\n\r\n    update(recalculateMetrics) {\r\n        if (recalculateMetrics) {\r\n            this._font = this.fontStyle + ' ' + this.fontSize + ' ' + this.fontFamily;\r\n\r\n            this.metrics = MeasureText(this);\r\n        }\r\n\r\n        return this.parent.updateText(recalculateMetrics);\r\n    }\r\n\r\n    buildFont() {\r\n        var newFont = this.fontStyle + ' ' + this.fontSize + ' ' + this.fontFamily;\r\n        if (newFont !== this._font) {\r\n            this._font = newFont;\r\n            //this.metrics = MeasureText(this);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    setFont(font) {\r\n        if (typeof font === 'string') {\r\n            this.fontFamily = font;\r\n            this.fontSize = '';\r\n            this.fontStyle = '';\r\n        } else {\r\n            this.fontFamily = GetValue(font, 'fontFamily', 'Courier');\r\n            this.fontSize = GetValue(font, 'fontSize', '16px');\r\n            this.fontStyle = GetValue(font, 'fontStyle', '');\r\n        }\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setFontFamily(family) {\r\n        this.fontFamily = family;\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setFontStyle(style) {\r\n        this.fontStyle = style;\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setFontSize(size) {\r\n        if (typeof size === 'number') {\r\n            size = size.toString() + 'px';\r\n        }\r\n\r\n        this.fontSize = size;\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setTestString(string) {\r\n        this.testString = string;\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setFixedSize(width, height) {\r\n        this.fixedWidth = width;\r\n        this.fixedHeight = height;\r\n\r\n        if (width) {\r\n            this.parent.width = width;\r\n        }\r\n\r\n        if (height) {\r\n            this.parent.height = height;\r\n        }\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setResolution(value) {\r\n        this.resolution = value;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setLineSpacing(value) {\r\n        this.lineSpacing = value;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setBackgroundColor(color) {\r\n        this.backgroundColor = color;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setFill(color) {\r\n        this.color = color;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setColor(color) {\r\n        this.color = color;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setStroke(color, thickness) {\r\n        if (color === undefined) {\r\n            //  Reset the stroke to zero (disabling it)\r\n            this.strokeThickness = 0;\r\n        } else {\r\n            if (thickness === undefined) {\r\n                thickness = this.strokeThickness;\r\n            }\r\n\r\n            this.stroke = color;\r\n            this.strokeThickness = thickness;\r\n        }\r\n\r\n        return this.update(true);\r\n    }\r\n\r\n    setShadow(x, y, color, blur, shadowStroke, shadowFill) {\r\n        if (x === undefined) {\r\n            x = 0;\r\n        }\r\n        if (y === undefined) {\r\n            y = 0;\r\n        }\r\n        if (color === undefined) {\r\n            color = '#000';\r\n        }\r\n        if (blur === undefined) {\r\n            blur = 0;\r\n        }\r\n        if (shadowStroke === undefined) {\r\n            shadowStroke = false;\r\n        }\r\n        if (shadowFill === undefined) {\r\n            shadowFill = true;\r\n        }\r\n\r\n        this.shadowOffsetX = x;\r\n        this.shadowOffsetY = y;\r\n        this.shadowColor = color;\r\n        this.shadowBlur = blur;\r\n        this.shadowStroke = shadowStroke;\r\n        this.shadowFill = shadowFill;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setShadowOffset(x, y) {\r\n        if (x === undefined) {\r\n            x = 0;\r\n        }\r\n        if (y === undefined) {\r\n            y = x;\r\n        }\r\n\r\n        this.shadowOffsetX = x;\r\n        this.shadowOffsetY = y;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setShadowColor(color) {\r\n        if (color === undefined) {\r\n            color = '#000';\r\n        }\r\n\r\n        this.shadowColor = color;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setShadowBlur(blur) {\r\n        if (blur === undefined) {\r\n            blur = 0;\r\n        }\r\n\r\n        this.shadowBlur = blur;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setShadowStroke(enabled) {\r\n        this.shadowStroke = enabled;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setShadowFill(enabled) {\r\n        this.shadowFill = enabled;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setUnderline(color, thickness, offset) {\r\n        if (color === undefined) {\r\n            color = '#000';\r\n        }\r\n        if (thickness === undefined) {\r\n            thickness = 0;\r\n        }\r\n        if (offset === undefined) {\r\n            offset = 0;\r\n        }\r\n\r\n        this.underlineColor = color;\r\n        this.underlineThickness = thickness;\r\n        this.underlineOffset = offset;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setUnderlineColor(color) {\r\n        if (color === undefined) {\r\n            color = '#000';\r\n        }\r\n\r\n        this.underlineColor = color;\r\n        return this.update(false);\r\n    }\r\n\r\n    setUnderlineThickness(thickness) {\r\n        if (thickness === undefined) {\r\n            thickness = 0;\r\n        }\r\n\r\n        this.underlineThickness = thickness;\r\n        return this.update(false);\r\n    }\r\n\r\n    setUnderlineOffset(offset) {\r\n        if (offset === undefined) {\r\n            offset = 0;\r\n        }\r\n\r\n        this.underlineOffset = offset;\r\n        return this.update(false);\r\n    }\r\n\r\n    setWrapMode(mode) {\r\n        if (typeof mode === 'string') {\r\n            mode = WRAPMODE[mode.toLowerCase()] || 0;\r\n        }\r\n        this.wrapMode = mode;\r\n        return this.update(true);\r\n    }\r\n\r\n    setWrapWidth(width) {\r\n        this.wrapWidth = width;\r\n        return this.update(false);\r\n    }\r\n\r\n    setAlign(halign, valign) {\r\n        if (halign === undefined) {\r\n            halign = 'left';\r\n        }\r\n        if (valign === undefined) {\r\n            valign = 'top';\r\n        }\r\n        this.halign = halign;\r\n        this.valign = valign;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setHAlign(halign) {\r\n        if (halign === undefined) {\r\n            halign = 'left';\r\n        }\r\n        this.halign = halign;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setVAlign(valign) {\r\n        if (valign === undefined) {\r\n            valign = 'top';\r\n        }\r\n        this.valign = valign;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    setMaxLines(max) {\r\n        if (max === undefined) {\r\n            max = 0;\r\n        }\r\n\r\n        this.maxLines = max;\r\n\r\n        return this.update(false);\r\n    }\r\n\r\n    getTextMetrics() {\r\n        var metrics = this.metrics;\r\n\r\n        return {\r\n            ascent: metrics.ascent,\r\n            descent: metrics.descent,\r\n            fontSize: metrics.fontSize\r\n        };\r\n    }\r\n\r\n    get lineHeight() {\r\n        return this.metrics.fontSize + this.strokeThickness + this.lineSpacing;\r\n    }\r\n\r\n    toJSON() {\r\n        var output = {};\r\n\r\n        for (var key in propertyMap) {\r\n            output[key] = this[key];\r\n        }\r\n\r\n        output.metrics = this.getTextMetrics();\r\n\r\n        return output;\r\n    }\r\n\r\n    destroy() {\r\n        this.parent = undefined;\r\n    }\r\n\r\n}\r\n\r\nconst HALIGNMODE = {\r\n    left: CONST.hleft,\r\n    center: CONST.hcenter,\r\n    right: CONST.hright,\r\n};\r\nconst VALIGNMODE = {\r\n    top: CONST.vtop,\r\n    center: CONST.vcenter,\r\n    bottom: CONST.vbottom,\r\n};\r\nconst WRAPMODE = {\r\n    none: CONST.NO_WRAP,\r\n    word: CONST.WORD_WRAP,\r\n    char: CONST.CHAR_WRAP,\r\n    character: CONST.CHAR_WRAP\r\n};\r\n\r\nexport default TextStyle;","import CONST from '../const.js';\r\n\r\nexport default {\r\n    draw(startX, startY, boxWidth, boxHeight) {\r\n        var penManager = this.penManager;\r\n        this.hitAreaManager.clear();\r\n\r\n        var context = this.context;\r\n        context.save();\r\n\r\n        // this.clear();\r\n        this.drawBackground(this.defatultStyle.backgroundColor);\r\n\r\n        // draw lines\r\n        var defatultStyle = this.defatultStyle;\r\n        startX += this.startXOffset;\r\n        startY += this.startYOffset;\r\n        var halign = defatultStyle.halign,\r\n            valign = defatultStyle.valign;\r\n\r\n        var lineWidth, lineHeight = defatultStyle.lineHeight;\r\n        var lines = penManager.lines;\r\n        var totalLinesNum = lines.length,\r\n            maxLines = defatultStyle.maxLines;\r\n        var drawLinesNum, drawLineStartIdx, drawLineEndIdx;\r\n        if ((maxLines > 0) && (totalLinesNum > maxLines)) {\r\n            drawLinesNum = maxLines;\r\n            if (valign === 'center') { // center\r\n                drawLineStartIdx = Math.floor((totalLinesNum - drawLinesNum) / 2);\r\n            } else if (valign === 'bottom') { // bottom\r\n                drawLineStartIdx = totalLinesNum - drawLinesNum;\r\n            } else {\r\n                drawLineStartIdx = 0;\r\n            }\r\n        } else {\r\n            drawLinesNum = totalLinesNum;\r\n            drawLineStartIdx = 0;\r\n        }\r\n        drawLineEndIdx = drawLineStartIdx + drawLinesNum;\r\n\r\n        var offsetX, offsetY;\r\n        if (valign === 'center') { // center\r\n            offsetY = Math.max((boxHeight - (drawLinesNum * lineHeight)) / 2, 0);\r\n        } else if (valign === 'bottom') { // bottom\r\n            offsetY = Math.max(boxHeight - (drawLinesNum * lineHeight) - 2, 0);\r\n        } else {\r\n            offsetY = 0;\r\n        }\r\n        offsetY += startY;\r\n        for (var lineIdx = drawLineStartIdx; lineIdx < drawLineEndIdx; lineIdx++) {\r\n            lineWidth = penManager.getLineWidth(lineIdx);\r\n            if (lineWidth === 0) {\r\n                continue;\r\n            }\r\n\r\n            if (halign === 'center') { // center\r\n                offsetX = (boxWidth - lineWidth) / 2;\r\n            } else if (halign === 'right') { // right\r\n                offsetX = boxWidth - lineWidth;\r\n            } else {\r\n                offsetX = 0;\r\n            }\r\n            offsetX += startX;\r\n\r\n            var pens = lines[lineIdx];\r\n            for (var penIdx = 0, pensLen = pens.length; penIdx < pensLen; penIdx++) {\r\n                this.drawPen(pens[penIdx], offsetX, offsetY);\r\n            }\r\n        }\r\n\r\n        context.restore();\r\n    },\r\n\r\n    drawPen(pen, offsetX, offsetY) {\r\n        offsetX += pen.x;\r\n        offsetY += pen.y;\r\n\r\n        var canvas = this.canvas;\r\n        var context = this.context;\r\n        context.save();\r\n\r\n        var curStyle = this.parser.propToContextStyle(\r\n            this.defatultStyle,\r\n            pen.prop\r\n        );\r\n        curStyle.buildFont();\r\n        curStyle.syncFont(canvas, context);\r\n        curStyle.syncStyle(canvas, context);\r\n\r\n        // Underline\r\n        if ((curStyle.underlineThickness > 0) && (pen.width > 0)) {\r\n            this.drawUnderline(offsetX, offsetY, pen.width, curStyle);\r\n        }\r\n\r\n        // Text\r\n        if (pen.isTextPen) {\r\n            this.drawText(offsetX, offsetY, pen.text, curStyle);\r\n        }\r\n\r\n        // Image\r\n        if (pen.isImagePen) {\r\n            this.drawImage(offsetX, offsetY, pen.prop.img, curStyle);\r\n        }\r\n\r\n        context.restore();\r\n\r\n        if (pen.hasAreaMarker && (pen.width > 0)) {\r\n            this.hitAreaManager.add(\r\n                pen.prop.area,\r\n                offsetX, (offsetY - this.startYOffset),\r\n                pen.width, this.defatultStyle.lineHeight);\r\n        }\r\n    },\r\n\r\n    clear() {\r\n        var canvas = this.canvas;\r\n        this.context.clearRect(0, 0, canvas.width, canvas.height);\r\n    },\r\n\r\n    drawBackground(color) {\r\n        if (color === null) {\r\n            return;\r\n        }\r\n        this.context.fillStyle = color;\r\n        this.context.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n    },\r\n\r\n    drawUnderline(x, y, width, style) {\r\n        y += style.underlineOffset - (style.underlineThickness / 2);\r\n        if (this.autoRound) {\r\n            x = Math.round(x);\r\n            y = Math.round(y);\r\n        }\r\n\r\n        var context = this.context;\r\n        var savedLineCap = context.lineCap;\r\n        context.lineCap = 'butt';\r\n        context.beginPath();\r\n        context.strokeStyle = style.underlineColor;\r\n        context.lineWidth = style.underlineThickness;\r\n        context.moveTo(x, y);\r\n        context.lineTo((x + width), y);\r\n        context.stroke();\r\n        context.lineCap = savedLineCap;\r\n    },\r\n\r\n    drawText(x, y, text, style) {\r\n        if (this.autoRound) {\r\n            x = Math.round(x);\r\n            y = Math.round(y);\r\n        }\r\n\r\n        var context = this.context;\r\n        if (style.strokeThickness) {\r\n            style.syncShadow(context, style.shadowStroke);\r\n            context.strokeText(text, x, y);\r\n        }\r\n\r\n        if (style.color && (style.color !== 'none')) {\r\n            style.syncShadow(context, style.shadowFill);\r\n            context.fillText(text, x, y);\r\n        }\r\n    },\r\n\r\n    drawImage(x, y, imgKey, style) {\r\n        var imageManager = this.parent.imageManager;\r\n        var imgData = imageManager.get(imgKey);\r\n        var frame = imageManager.getFrame(imgKey);\r\n\r\n        x += imgData.left;\r\n        y += - this.startYOffset + imgData.y;\r\n        if (this.autoRound) {\r\n            x = Math.round(x);\r\n            y = Math.round(y);\r\n        }\r\n\r\n        var context = this.context;\r\n        context.drawImage(\r\n            frame.source.image,\r\n            frame.cutX, frame.cutY, frame.cutWidth, frame.cutHeight,\r\n            x, y, imgData.width, imgData.height\r\n        );\r\n    }\r\n\r\n}","class Stack {\r\n    constructor() {\r\n        this.items = [];\r\n    }\r\n\r\n    destroy() {\r\n        this.items.length = 0;\r\n        this.items = undefined;\r\n    }\r\n\r\n    pop() {\r\n        return (this.items.length > 0) ? this.items.pop() : null;\r\n    }\r\n\r\n    push(l) {\r\n        this.items.push(l);\r\n        return this;\r\n    }\r\n\r\n    pushMultiple(arr) {\r\n        this.items.push.apply(this.items, arr);\r\n        arr.length = 0;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport default Stack;","import Pool from './utils/struct/Stack.js';\r\nexport default Pool;","import CONST from '../const.js';\r\n\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\nconst NO_NEWLINE = CONST.NO_NEWLINE;\r\nconst RAW_NEWLINE = CONST.RAW_NEWLINE;\r\n\r\nclass Pen {\r\n    constructor(config) {\r\n        this.prop = {};\r\n        this.resetFromJSON(config);\r\n    }\r\n\r\n    resetFromJSON(o) { // (txt, x, y, width, prop, newLineMode, startIndex)\r\n        this.text = GetValue(o, 'text', '');\r\n        this.x = GetValue(o, 'x', 0);\r\n        this.y = GetValue(o, 'y', 0);\r\n        this.width = GetValue(o, 'width', 0);\r\n\r\n        var prop = GetValue(o, 'prop', null);\r\n        if (prop === null) {\r\n            prop = {};\r\n        }\r\n        this.prop = prop;\r\n        this.newLineMode = GetValue(o, 'newLineMode', 0);\r\n        this.startIndex = GetValue(o, 'startIndex', 0);\r\n    }\r\n\r\n    get plainText() {\r\n        var txt = this.text\r\n        if (this.newLineMode === RAW_NEWLINE) {\r\n            txt += \"\\n\";\r\n        }\r\n\r\n        return txt;\r\n    }\r\n\r\n    get wrapText() {\r\n        var txt = this.text;\r\n        if (this.newLineMode !== NO_NEWLINE) {\r\n            txt += \"\\n\";\r\n        }\r\n\r\n        return txt;\r\n    }\r\n\r\n    get rawTextLength() {\r\n        var len = this.text.length;\r\n        if (this.newLineMode === RAW_NEWLINE) {\r\n            len += 1;\r\n        }\r\n        return len;\r\n    }\r\n\r\n    get endIndex() {\r\n        return this.startIndex + this.rawTextLength;\r\n    }\r\n\r\n    get lastX() {\r\n        return this.x + this.width;\r\n    }\r\n\r\n    get isTextPen() {\r\n        return (this.text !== '');\r\n    }\r\n\r\n    get isImagePen() {\r\n        return !!this.prop.img;\r\n    }\r\n\r\n    get hasAreaMarker() {\r\n        return !!this.prop.area;\r\n    }\r\n};\r\n\r\nexport default Pen;","var Clear = function (obj) {\r\n    if (Array.isArray(obj)) {\r\n        obj.length = 0;\r\n    } else {\r\n        for (var key in obj) {\r\n            delete obj[key];\r\n        }\r\n    }\r\n}\r\nexport default Clear;","import Clear from './Clear.js';\r\n\r\n/**\r\n * Shallow Object Clone. Will not out nested objects.\r\n * @param {object} obj JSON object\r\n * @param {object} ret JSON object to return, set null to return a new object\r\n * @returns {object} this object\r\n */\r\nvar Clone = function (obj, out) {\r\n    var objIsArray = Array.isArray(obj);\r\n\r\n    if (out === undefined) {\r\n        out = (objIsArray) ? [] : {};\r\n    } else {\r\n        Clear(out);\r\n    }\r\n\r\n    if (objIsArray) {\r\n        out.length = obj.length;\r\n    }\r\n    for (var key in obj) {\r\n        out[key] = obj[key];\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nexport default Clone;\r\n","import Pool from '../../../../pool.js';\r\nimport Pen from './Pen.js';\r\nimport CONST from '../const.js';\r\nimport Clone from '../../../../utils/object/Clone.js';\r\nimport NOOP from '../../../../utils/object/NOOP.js';\r\n\r\nconst GetFastValue = Phaser.Utils.Objects.GetFastValue;\r\nconst NO_NEWLINE = CONST.NO_NEWLINE;\r\nconst WRAPPED_NEWLINE = CONST.WRAPPED_NEWLINE;\r\n\r\nvar PensPool = new Pool(); // default pens pool\r\nvar LinesPool = new Pool(); // default lines pool\r\nclass PenManager {\r\n    constructor(config) {\r\n        this.pens = []; // all pens\r\n        this.lines = []; // pens in lines [ [],[],[],.. ]\r\n        this.maxLinesWidth = undefined;\r\n\r\n        this.PensPool = GetFastValue(config, 'pensPool', PensPool);\r\n        this.LinesPool = GetFastValue(config, 'linesPool', LinesPool);\r\n        this.tagToText = GetFastValue(config, 'tagToText', NOOP);\r\n        this.tagToTextScope = GetFastValue(config, 'tagToTextScope', undefined);\r\n    }\r\n\r\n    destroy() {\r\n        this.freePens();\r\n        this.tagToText = undefined;\r\n        this.tagToTextScope = undefined;\r\n    }\r\n\r\n    freePens() {\r\n        for (var i = 0, len = this.lines.length; i < len; i++)\r\n            this.lines[i].length = 0;\r\n\r\n        this.PensPool.pushMultiple(this.pens);\r\n        this.LinesPool.pushMultiple(this.lines);\r\n        this.maxLinesWidth = undefined;\r\n    }\r\n\r\n    addTextPen(text, x, y, width, prop, newLineMode) {\r\n        var pen = this.PensPool.pop();\r\n        if (pen == null) {\r\n            pen = new Pen();\r\n        }\r\n        PEN_CONFIG.text = text;\r\n        PEN_CONFIG.x = x;\r\n        PEN_CONFIG.y = y;\r\n        PEN_CONFIG.width = width;\r\n        PEN_CONFIG.prop = prop;\r\n        PEN_CONFIG.newLineMode = newLineMode;\r\n        pen.resetFromJSON(PEN_CONFIG);\r\n        this.addPen(pen);\r\n        return this;\r\n    }\r\n\r\n    addImagePen(x, y, width, prop) {\r\n        this.addTextPen('', x, y, width, prop, NO_NEWLINE);\r\n        return this;\r\n    }\r\n\r\n    addNewLinePen() {\r\n        var previousPen = this.lastPen;\r\n        var x = (previousPen) ? previousPen.lastX : 0;\r\n        var y = (previousPen) ? previousPen.y : 0;\r\n        var prop = (previousPen) ? Clone(previousPen.prop) : null;\r\n        this.addTextPen('', x, y, 0, prop, WRAPPED_NEWLINE);\r\n        return this;\r\n    }\r\n\r\n    addPen(pen) {\r\n        var previousPen = this.lastPen;\r\n        if (previousPen == null) {\r\n            pen.startIndex = 0;\r\n        } else {\r\n            pen.startIndex = previousPen.endIndex;\r\n        }\r\n        this.pens.push(pen);\r\n\r\n        // maintan lines\r\n        var line = this.lastLine;\r\n        if (line == null) {\r\n            line = this.LinesPool.pop() || [];\r\n            this.lines.push(line);\r\n        }\r\n        line.push(pen);\r\n\r\n        // new line, add an empty line\r\n        if (pen.newLineMode !== NO_NEWLINE) {\r\n            line = this.LinesPool.pop() || [];\r\n            this.lines.push(line);\r\n        }\r\n        this.maxLinesWidth = undefined;\r\n    }\r\n\r\n    clone(targetPenManager) {\r\n        if (targetPenManager == null)\r\n            targetPenManager = new PenManager();\r\n\r\n        targetPenManager.freePens();\r\n\r\n        for (var li = 0, llen = this.lines.length; li < llen; li++) {\r\n            var pens = this.lines[li];\r\n            for (var pi = 0, plen = pens.length; pi < plen; pi++) {\r\n                var pen = pens[pi];\r\n                targetPenManager.addPen(\r\n                    pen.text,\r\n                    pen.x,\r\n                    pen.y,\r\n                    pen.width,\r\n                    Clone(pen.prop),\r\n                    pen.newLineMode\r\n                );\r\n            }\r\n        }\r\n\r\n        return targetPenManager;\r\n    }\r\n\r\n    get lastPen() {\r\n        return this.pens[this.pens.length - 1];\r\n    }\r\n\r\n    get lastLine() {\r\n        return this.lines[this.lines.length - 1];\r\n    }\r\n\r\n    getLineStartIndex(i) {\r\n        if (i >= this.lines.length) {\r\n            return this.getLineEndIndex(i);\r\n        } else {\r\n            var line = this.lines[i];\r\n            return (line && line[0]) ? line[0].startIndex : 0;\r\n        }\r\n    }\r\n\r\n    getLineEndIndex(i) {\r\n        if (i >= this.lines.length) {\r\n            i = this.lines.length - 1;\r\n        }\r\n        var li, hasLastPen = false,\r\n            line;\r\n        for (li = i; li >= 0; li--) {\r\n            line = this.lines[li];\r\n            hasLastPen = (line != null) && (line.length > 0);\r\n            if (hasLastPen) {\r\n                break;\r\n            }\r\n        }\r\n        if (!hasLastPen) {\r\n            return 0;\r\n        }\r\n\r\n        var lastPen = line[line.length - 1];\r\n        return lastPen.endIndex;\r\n    }\r\n\r\n    getLineWidth(i) {\r\n        var line = this.lines[i];\r\n        if (!line) {\r\n            return 0;\r\n        }\r\n\r\n        var lastPen = line[line.length - 1];\r\n        if (lastPen == null) {\r\n            return 0;\r\n        }\r\n\r\n        var lineWidth = lastPen.lastX; // start from 0\r\n        return lineWidth;\r\n    }\r\n\r\n    getMaxLineWidth() {\r\n        if (this.maxLinesWidth !== undefined) {\r\n            return this.maxLinesWidth;\r\n        }\r\n        var w, maxW = 0;\r\n        for (var i = 0, len = this.lines.length; i < len; i++) {\r\n            w = this.getLineWidth(i);\r\n            if (w > maxW) {\r\n                maxW = w;\r\n            }\r\n        }\r\n        this.maxLinesWidth = maxW;\r\n        return maxW;\r\n    }\r\n\r\n    getLineWidths() {\r\n        var result = [];\r\n        for (var i = 0, len = this.lines.length; i < len; i++) {\r\n            result.push(this.getLineWidth(i));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    get linesCount() {\r\n        return this.lines.length;\r\n    }\r\n\r\n    get plainText() {\r\n        var txt = \"\",\r\n            pens = this.pens;\r\n        for (var i = 0, len = pens.length; i < len; i++) {\r\n            txt += pens[i].plainText;\r\n        }\r\n\r\n        return txt;\r\n    }\r\n\r\n    get rawTextLength() {\r\n        var l = 0,\r\n            pens = this.pens;\r\n        for (var i = 0, len = this.pens.length; i < len; i++) {\r\n            l += pens[i].rawTextLength;\r\n        }\r\n\r\n        return l;\r\n    }\r\n\r\n    getSliceTagText(start, end, wrap) {\r\n        if (start === undefined) {\r\n            start = 0;\r\n        }\r\n        if (end === undefined) {\r\n            var lastPen = this.lastPen;\r\n            if (lastPen == null) {\r\n                return \"\";\r\n            }\r\n\r\n            end = lastPen.endIndex;\r\n        }\r\n        if (wrap === undefined) {\r\n            wrap = false;\r\n        }\r\n\r\n        var txt = \"\",\r\n            formatTxt,\r\n            pen, penTxt, penStartIdx, penEndIdx, isInRange;\r\n        var currentProp, previousProp;\r\n        for (var i = 0, len = this.pens.length; i < len; i++) {\r\n            pen = this.pens[i];\r\n            penEndIdx = pen.endIndex;\r\n            if (penEndIdx <= start) {\r\n                continue;\r\n            }\r\n            pen = this.pens[i];\r\n            penTxt = (!wrap) ? pen.plainText : pen.wrapText;\r\n            currentProp = pen.prop;\r\n            penStartIdx = pen.startIndex;\r\n\r\n            isInRange = (penStartIdx >= start) && (penEndIdx <= end);\r\n            if (!isInRange) {\r\n                penTxt = penTxt.substring(start - penStartIdx, end - penStartIdx);\r\n            }\r\n\r\n            if (this.tagToTextScope) {\r\n                txt += this.tagToText.call(this.tagToTextScope, penTxt, currentProp, previousProp);\r\n            } else {\r\n                txt += this.tagToText(penTxt, currentProp, previousProp);\r\n            }\r\n\r\n            previousProp = currentProp;\r\n            if (penEndIdx >= end) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return txt;\r\n    }\r\n};\r\n\r\nvar PEN_CONFIG = {};\r\n\r\nexport default PenManager;","import Pool from '../../../../pool.js';\r\n\r\nconst Rectangle = Phaser.Geom.Rectangle;\r\n\r\nvar RectanglePool = new Pool();\r\nclass HitAreaManager {\r\n    constructor() {\r\n        this.hitAreas = [];\r\n    }\r\n\r\n    destroy() {\r\n        this.clear();\r\n    }\r\n\r\n    clear() {\r\n        RectanglePool.pushMultiple(this.hitAreas);\r\n        return this;\r\n    }\r\n\r\n    add(key, x, y, width, height) {\r\n        var rectangle = RectanglePool.pop();\r\n        if (rectangle === null) {\r\n            rectangle = new Rectangle(x, y, width, height);\r\n        } else {\r\n            rectangle.setTo(x, y, width, height);\r\n        }\r\n        rectangle.key = key;\r\n        this.hitAreas.push(rectangle);\r\n        return this;\r\n    }\r\n\r\n    contains(x, y) {\r\n        var hitAreas = this.hitAreas, hitArea;\r\n        for (var i = 0, cnt = hitAreas.length; i < cnt; i++) {\r\n            hitArea = hitAreas[i];\r\n            if (hitArea.contains(x, y)) {\r\n                return hitArea.key;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    drawBounds(graphics, color, parent) {\r\n        if (color === undefined) {\r\n            color = 0xffffff;\r\n        }\r\n\r\n        if (parent) {\r\n            graphics\r\n                .save()\r\n                .scaleCanvas(parent.scaleX, parent.scaleY)\r\n                .rotateCanvas(parent.rotation)\r\n                .translateCanvas(parent.x, parent.y)\r\n        }\r\n\r\n        var hitAreas = this.hitAreas, hitArea;\r\n        for (var i = 0, cnt = hitAreas.length; i < cnt; i++) {\r\n            hitArea = hitAreas[i];\r\n            graphics.lineStyle(1, color).strokeRect(hitArea.x, hitArea.y, hitArea.width, hitArea.height);\r\n        }\r\n\r\n        if (parent) {\r\n            graphics\r\n                .restore()\r\n        }\r\n        return this;\r\n    }\r\n}\r\nexport default HitAreaManager;","var SetInteractive = function () {\r\n    this.parent\r\n        .on('pointerdown', function (pointer, localX, localY, event) {\r\n            FireEvent.call(this, 'areadown', pointer, localX, localY);\r\n        }, this)\r\n        .on('pointerup', function (pointer, localX, localY, event) {\r\n            FireEvent.call(this, 'areaup', pointer, localX, localY);\r\n        }, this)\r\n}\r\n\r\nvar FireEvent = function (eventName, pointer, localX, localY) {\r\n    var key = this.hitAreaManager.contains(localX, localY);\r\n    if (key === false) {\r\n        return;\r\n    }\r\n    this.parent.emit(`${eventName}-${key}`, pointer, localX, localY)\r\n    this.parent.emit(eventName, key, pointer, localX, localY)\r\n}\r\nexport default SetInteractive;","import Pool from '../../../../pool.js';\r\nimport CONST from '../const.js';\r\n\r\nconst NO_NEWLINE = CONST.NO_NEWLINE;\r\nconst RAW_NEWLINE = CONST.RAW_NEWLINE;\r\nconst WRAPPED_NEWLINE = CONST.WRAPPED_NEWLINE;\r\nconst NO_WRAP = CONST.NO_WRAP;\r\nconst WORD_WRAP = CONST.WORD_WRAP;\r\nconst CHAR_WRAP = CONST.CHAR_WRAP;\r\nconst splitRegExp = CONST.SPLITREGEXP;\r\n\r\nvar WRAP_RESULT = [];\r\nvar WrapText = function (text, getTextWidth, wrapMode, wrapWidth, offset) {\r\n    if (wrapWidth <= 0) {\r\n        wrapMode = NO_WRAP;\r\n    }\r\n\r\n    var retLines = WRAP_RESULT;\r\n    LinesPool.pushMultiple(retLines);\r\n\r\n    if (!text || !text.length) {\r\n        return retLines;\r\n    }\r\n\r\n    var lines = text.split(splitRegExp),\r\n        line, remainWidth, isLaseLine, newLineMode;\r\n    for (var i = 0, linesLen = lines.length; i < linesLen; i++) {\r\n        line = lines[i];\r\n        newLineMode = (i === (linesLen - 1)) ? NO_NEWLINE : RAW_NEWLINE;\r\n\r\n        if (wrapMode === NO_WRAP) {\r\n            var textWidth = getTextWidth(line);\r\n            retLines.push(LinesPool.newline(line, textWidth, newLineMode));\r\n            continue;\r\n        } else {\r\n            if (i === 0) {\r\n                remainWidth = wrapWidth - offset;\r\n            } else {\r\n                remainWidth = wrapWidth;\r\n            }\r\n        }\r\n\r\n        // short string testing\r\n        if (line.length <= 100) {\r\n            var textWidth = getTextWidth(line);\r\n            if (textWidth <= remainWidth) {\r\n                retLines.push(LinesPool.newline(line, textWidth, newLineMode));\r\n                continue;\r\n            }\r\n        }\r\n\r\n        // character mode\r\n        var tokenArray;\r\n        if (wrapMode === WORD_WRAP) {\r\n            // word mode\r\n            tokenArray = line.split(' ');\r\n        } else {\r\n            tokenArray = line;\r\n        }\r\n        var token;\r\n        var curLineText = '',\r\n            lineText = '',\r\n            currLineWidth, lineWidth = 0;\r\n        for (var j = 0, tokenLen = tokenArray.length; j < tokenLen; j++) {\r\n            token = tokenArray[j];\r\n\r\n            if (wrapMode === WORD_WRAP) {\r\n                curLineText += token;\r\n\r\n                if (j < (tokenLen - 1)) {\r\n                    curLineText += ' ';\r\n                }\r\n            } else {\r\n                curLineText += token;\r\n            }\r\n\r\n            currLineWidth = getTextWidth(curLineText);\r\n            if (currLineWidth > remainWidth) {\r\n                // new line\r\n                if (j === 0) {\r\n                    retLines.push(LinesPool.newline('', 0, WRAPPED_NEWLINE));\r\n                } else {\r\n                    retLines.push(LinesPool.newline(lineText, lineWidth, WRAPPED_NEWLINE));\r\n                    curLineText = token;\r\n                    if (wrapMode === WORD_WRAP) {\r\n                        if (j < (tokenLen - 1)) {\r\n                            curLineText += ' ';\r\n                        }\r\n                    }\r\n                    currLineWidth = getTextWidth(curLineText);\r\n                }\r\n\r\n                remainWidth = wrapWidth;\r\n            }\r\n\r\n            lineText = curLineText;\r\n            lineWidth = currLineWidth;\r\n        } // for token in tokenArray\r\n\r\n        // flush remain text\r\n        retLines.push(LinesPool.newline(lineText, lineWidth, newLineMode));\r\n\r\n    } // for each line in lines\r\n\r\n    return retLines;\r\n};\r\n\r\nvar LinesPool = new Pool();\r\nLinesPool.newline = function (text, width, newLineMode) {\r\n    var l = this.pop();\r\n    if (l === null) {\r\n        l = {};\r\n    }\r\n    l.text = text;\r\n    l.width = width;\r\n    l.newLineMode = newLineMode;\r\n    return l;\r\n};\r\n\r\nexport default WrapText;","import DrawMethods from './DrawMethods.js';\r\nimport PenManager from '../penmanger/PenManager.js';\r\nimport HitAreaManager from '../hitareamanager/HitAreaManager.js';\r\nimport SetInteractive from './SetInteractive.js';\r\nimport CONST from '../const.js';\r\nimport WrapText from './WrapText.js';\r\nimport Clone from '../../../../utils/object/Clone.js';\r\n\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\nconst NO_WRAP = CONST.NO_WRAP;\r\nconst NO_NEWLINE = CONST.NO_NEWLINE;\r\n\r\nclass CanvasText {\r\n    constructor(config) {\r\n        this.parent = config.parent;\r\n        this.context = GetValue(config, 'context', null);\r\n        this.canvas = this.context.canvas;\r\n        this.parser = GetValue(config, 'parser', null);\r\n        this.defatultStyle = GetValue(config, 'style', null);\r\n        this.autoRound = true;\r\n\r\n        this.pensPool = GetValue(config, 'pensPool', null);\r\n        this.penManager = this.newPenManager();\r\n        this._tmpPenManager = null;\r\n\r\n        this.hitAreaManager = new HitAreaManager();\r\n\r\n        var context = this.context;\r\n        this.getTextWidth = function (text) {\r\n            return context.measureText(text).width;\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.context = undefined;\r\n        this.canvas = undefined;\r\n        this.parser = undefined;\r\n        this.defatultStyle = undefined;\r\n\r\n        if (this.penManager) {\r\n            this.penManager.destroy();\r\n            this.penManager = undefined;\r\n        }\r\n        if (this._tmpPenManager) {\r\n            this._tmpPenManager.destroy();\r\n            this._tmpPenManager = undefined;\r\n        }\r\n        if (this.hitAreaManager) {\r\n            this.hitAreaManager.destroy();\r\n            this.hitAreaManager = undefined;\r\n        }\r\n    }\r\n\r\n    updatePenManager(text, wrapMode, wrapWidth, lineHeight, penManager) {\r\n        if (penManager === undefined) {\r\n            penManager = this.penManager;\r\n        }\r\n        penManager.freePens();\r\n        if (text === \"\") {\r\n            return penManager;\r\n        }\r\n\r\n        var canvas = this.canvas;\r\n        var context = this.context;\r\n\r\n        var cursorX = 0,\r\n            cursorY = 0;\r\n\r\n        var plainText, curProp, curStyle;\r\n        var match = this.parser.splitText(text),\r\n            result, wrapLines;\r\n        for (var i = 0, len = match.length; i < len; i++) {\r\n            result = this.parser.tagTextToProp(match[i], curProp);\r\n            plainText = result.plainText;\r\n            curProp = result.prop;\r\n\r\n            if (curProp.img) { // Image tag                \r\n                var imgWidth = this.imageManager.getOuterWidth(curProp.img);\r\n                if ((wrapWidth > 0) && (wrapMode !== NO_WRAP)) {  // Wrap mode\r\n                    if (wrapWidth < (cursorX + imgWidth)) {\r\n                        penManager.addNewLinePen();\r\n                        cursorY += lineHeight;\r\n                        cursorX = 0;\r\n                    }\r\n                }\r\n                penManager.addImagePen(cursorX, cursorY, imgWidth, Clone(curProp));\r\n                cursorX += imgWidth;\r\n\r\n            } else if (plainText !== '') {\r\n                // wrap text to lines\r\n                // Save the current context.\r\n                this.context.save();\r\n                curStyle = this.parser.propToContextStyle(\r\n                    this.defatultStyle,\r\n                    curProp\r\n                );\r\n                curStyle.buildFont();\r\n                curStyle.syncFont(canvas, context);\r\n                curStyle.syncStyle(canvas, context);\r\n                wrapLines = WrapText(plainText, this.getTextWidth, wrapMode, wrapWidth, cursorX);\r\n\r\n                // add pens\r\n                var n;\r\n                for (var j = 0, jLen = wrapLines.length; j < jLen; j++) {\r\n                    n = wrapLines[j];\r\n                    penManager.addTextPen(n.text, cursorX, cursorY, n.width, Clone(curProp), n.newLineMode);\r\n\r\n                    if (n.newLineMode !== NO_NEWLINE) {\r\n                        cursorX = 0;\r\n                        cursorY += lineHeight;\r\n                    } else {\r\n                        cursorX += n.width;\r\n                    }\r\n\r\n                }\r\n                this.context.restore();\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return penManager;\r\n    }\r\n\r\n    get startXOffset() {\r\n        var defatultStyle = this.defatultStyle;\r\n        return (defatultStyle.strokeThickness / 2);\r\n    }\r\n\r\n    get startYOffset() {\r\n        var defatultStyle = this.defatultStyle;\r\n        return (defatultStyle.strokeThickness / 2) + defatultStyle.metrics.ascent;\r\n    }\r\n\r\n    get lines() {\r\n        return this.penManager.lines;\r\n    }\r\n\r\n    get desplayLinesCount() {\r\n        var linesCount = this.penManager.linesCount,\r\n            maxLines = this.defatultStyle.maxLines;\r\n        if ((maxLines > 0) && (linesCount > maxLines)) {\r\n            linesCount = maxLines;\r\n        }\r\n        return linesCount;\r\n    }\r\n\r\n    get linesWidth() {\r\n        return this.penManager.getMaxLineWidth();\r\n    }\r\n\r\n    get linesHeight() {\r\n        var linesCount = this.desplayLinesCount;\r\n        var linesHeight = (this.defatultStyle.lineHeight * linesCount);\r\n        if (linesCount > 0) {\r\n            linesHeight -= this.defatultStyle.lineSpacing;\r\n        }\r\n        return linesHeight;\r\n    }\r\n\r\n    get imageManager() {\r\n        return this.parent.imageManager;\r\n    }\r\n\r\n    newPenManager() {\r\n        return new PenManager({\r\n            pensPool: this.pensPool,\r\n            tagToText: this.parser.propToTagText,\r\n            tagToTextScope: this.parser\r\n        });\r\n    }\r\n\r\n    get tmpPenManager() {\r\n        if (this._tmpPenManager === null) {\r\n            this._tmpPenManager = this.newPenManager();\r\n        }\r\n        return this._tmpPenManager;\r\n    }\r\n\r\n    getPlainText(text, start, end) {\r\n        var plainText;\r\n        if (text == null) {\r\n            plainText = this.penManager.plainText;\r\n        } else {\r\n            var m, match = this.parser.splitText(text, 1); // PLAINTEXTONLY_MODE\r\n            plainText = \"\";\r\n            for (var i = 0, len = match.length; i < len; i++) {\r\n                plainText += match[i];\r\n            }\r\n        }\r\n\r\n        if ((start != null) || (end != null)) {\r\n            if (start == null) {\r\n                start = 0;\r\n            }\r\n            if (end == null) {\r\n                end = plainText.length;\r\n            }\r\n            plainText = plainText.substring(start, end);\r\n        }\r\n\r\n        return plainText;\r\n    }\r\n\r\n    getPenManager(text, retPenManager) {\r\n        if (text === undefined) {\r\n            return this.copyPenManager(retPenManager, this.penManager);\r\n        }\r\n\r\n        if (retPenManager === undefined) {\r\n            retPenManager = this.newPenManager();\r\n        }\r\n\r\n        var defatultStyle = this.defatultStyle;\r\n        this.updatePenManager(\r\n            text,\r\n            defatultStyle.wrapMode,\r\n            defatultStyle.wrapWidth,\r\n            defatultStyle.lineHeight,\r\n            retPenManager\r\n        );\r\n        return retPenManager;\r\n    }\r\n\r\n    getText(text, start, end, wrap) {\r\n        if (text == null) {\r\n            return this.penManager.getSliceTagText(start, end, wrap);\r\n        }\r\n\r\n        var penManager = this.tmpPenManager;\r\n        var defatultStyle = this.defatultStyle;\r\n        this.updatePenManager(\r\n            text,\r\n            defatultStyle.wrapMode,\r\n            defatultStyle.wrapWidth,\r\n            defatultStyle.lineHeight,\r\n            penManager\r\n        );\r\n\r\n        return penManager.getSliceTagText(start, end, wrap);\r\n    }\r\n\r\n    copyPenManager(ret, src) {\r\n        if (src === undefined) {\r\n            src = this.penManager;\r\n        }\r\n        return src.copy(ret);\r\n    }\r\n\r\n    getTextWidth(penManager) {\r\n        if (penManager === undefined) {\r\n            penManager = this.penManager;\r\n        }\r\n\r\n        return penManager.getMaxLineWidth();\r\n    }\r\n\r\n    getLastPen(penManager) {\r\n        if (penManager === undefined) {\r\n            penManager = this.penManager;\r\n        }\r\n\r\n        return penManager.lastPen;\r\n    }\r\n};\r\n\r\nvar methods = {\r\n    setInteractive: SetInteractive,\r\n}\r\n\r\nObject.assign(\r\n    CanvasText.prototype,\r\n    DrawMethods,\r\n    methods\r\n);\r\n\r\nexport default CanvasText;","const GetValue = Phaser.Utils.Objects.GetValue;\r\n\r\nclass ImageManager {\r\n    constructor(textureManager) {\r\n        this.textureManager = textureManager;\r\n        this.images = {};\r\n    }\r\n\r\n    add(key, config) {\r\n        if (typeof (key) === 'string') {\r\n            this._add(key, config);\r\n        } else if (Array.isArray(key)) {\r\n            var data = key;\r\n            for (var i = 0, cnt = data.length; i < cnt; i++) {\r\n                this._add(data[i]);\r\n            }\r\n        } else {\r\n            var data = key;\r\n            for (var key in data) {\r\n                this._add(key, data[key]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    _add(key, config) {\r\n        if (config === undefined) {\r\n            config = {\r\n                key: key\r\n            }\r\n        }\r\n\r\n        var textureKey = config.key, frameKey = config.frame;\r\n        var width = config.width, height = config.height;\r\n\r\n        if ((width === undefined) || (height === undefined)) {\r\n            var frame = this.textureManager.getFrame(textureKey, frameKey);\r\n            var frameWidth = (frame) ? frame.cutWidth : 0;\r\n            var frameHeight = (frame) ? frame.cutHeight : 0;\r\n            if ((width === undefined) && (height === undefined)) {\r\n                width = frameWidth;\r\n                height = frameHeight;\r\n            } else if (width === undefined) {\r\n                width = frameWidth * (height / frameHeight);\r\n            } else if (height === undefined) {\r\n                height = frameHeight * (width / frameWidth);\r\n            }\r\n        }\r\n\r\n        this.images[key] = {\r\n            key: textureKey,\r\n            frame: frameKey,\r\n            width: width,\r\n            height: height,\r\n            y: GetValue(config, 'y', 0),\r\n            left: GetValue(config, 'left', 0),\r\n            right: GetValue(config, 'right', 0)\r\n        }\r\n    }\r\n\r\n    remove(key) {\r\n        if (this.images.hasOwnProperty(key)) {\r\n            delete this.images[key];\r\n        }\r\n        return this;\r\n    }\r\n\r\n    get(key) {\r\n        if (!this.images.hasOwnProperty(key)) {\r\n            if (this.textureManager.exists(key)) {\r\n                this.add(key);\r\n            }\r\n        }\r\n        return this.images[key];\r\n    }\r\n\r\n    getOuterWidth(key) {\r\n        var data = this.get(key);\r\n        return (data) ? (data.width + data.left + data.right) : 0;\r\n    }\r\n\r\n    getFrame(key) {\r\n        var data = this.get(key);\r\n        return (data) ? this.textureManager.getFrame(data.key, data.frame) : undefined;\r\n    }\r\n\r\n    hasTexture(key) {\r\n        return !!this.getFrame(key);\r\n    }\r\n}\r\nexport default ImageManager;","import ImageManager from './ImageManager.js';\r\n\r\nvar globImageManager;\r\n\r\nexport default function(textureManager) {\r\n    if (globImageManager === undefined) {\r\n        globImageManager = new ImageManager(textureManager);\r\n    }\r\n    return globImageManager;\r\n}","import Render from './render/Render.js';\r\nimport TextStyle from './textstyle/TextStyle.js'; // extended\r\nimport CanvasTextKlass from './canvastext/CanvasText.js';\r\nimport Pool from '../../../pool.js';\r\nimport CONST from './const.js';\r\nimport GetGlobImageManager from './imagemanager/GetGlobImageManager.js';\r\n\r\nconst AddToDOM = Phaser.DOM.AddToDOM;\r\nconst CanvasPool = Phaser.Display.Canvas.CanvasPool;\r\nconst GameObject = Phaser.GameObjects.GameObject;\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\nconst RemoveFromDOM = Phaser.DOM.RemoveFromDOM;\r\nconst SPLITREGEXP = CONST.SPLITREGEXP;\r\n\r\nvar PensPools = {};\r\n\r\nclass Text extends GameObject {\r\n    constructor(scene, x, y, text, style, type, parser) {\r\n        if (x === undefined) {\r\n            x = 0;\r\n        }\r\n        if (y === undefined) {\r\n            y = 0;\r\n        }\r\n\r\n        super(scene, type);\r\n\r\n        this.renderer = scene.sys.game.renderer;\r\n\r\n        this.setPosition(x, y);\r\n        this.setOrigin(0, 0);\r\n        this.initPipeline();\r\n\r\n        this.canvas = CanvasPool.create(this);\r\n\r\n        this.context = this.canvas.getContext('2d');\r\n\r\n        if (style) {\r\n            // Override align\r\n            if (style.hasOwnProperty('align')) {\r\n                var halign = style.align;\r\n                delete style.align;\r\n                style.halign = halign;\r\n            }\r\n        }\r\n        this.style = new TextStyle(this, style);\r\n\r\n        this.autoRound = true;\r\n\r\n        this._text = undefined;\r\n\r\n        this.padding = {\r\n            left: 0,\r\n            right: 0,\r\n            top: 0,\r\n            bottom: 0\r\n        };\r\n\r\n        this.width = 1;\r\n\r\n        this.height = 1;\r\n\r\n        this.dirty = false;\r\n\r\n        //  If resolution wasn't set, then we get it from the game config\r\n        if (this.style.resolution === 0) {\r\n            this.style.resolution = scene.sys.game.config.resolution;\r\n        }\r\n\r\n        this._crop = this.resetCropObject();\r\n\r\n        //  Create a Texture for this Text object\r\n        this.texture = scene.sys.textures.addCanvas(null, this.canvas, true);\r\n\r\n        //  Get the frame\r\n        this.frame = this.texture.get();\r\n\r\n        //  Set the resolution\r\n        this.frame.source.resolution = this.style.resolution;\r\n\r\n        if (this.renderer && this.renderer.gl) {\r\n            //  Clear the default 1x1 glTexture, as we override it later\r\n\r\n            this.renderer.deleteTexture(this.frame.source.glTexture);\r\n\r\n            this.frame.source.glTexture = null;\r\n        }\r\n\r\n        if (!PensPools.hasOwnProperty(type)) {\r\n            PensPools[type] = new Pool();\r\n        }\r\n        this.canvasText = new CanvasTextKlass({\r\n            parent: this,\r\n            context: this.context,\r\n            parser: parser,\r\n            style: this.style,\r\n            pensPool: PensPools[type]\r\n        });\r\n\r\n        //this.initRTL();\r\n\r\n        if (style && style.padding) {\r\n            this.setPadding(style.padding);\r\n        }\r\n\r\n        this.setText(text);\r\n\r\n        scene.sys.game.events.on('contextrestored', function () {\r\n            this.dirty = true;\r\n        }, this);\r\n    }\r\n\r\n    set text(value) {\r\n        this.setText(value);\r\n    }\r\n    get text() {\r\n        return this._text;\r\n    }\r\n\r\n    initRTL() {\r\n        if (!this.style.rtl) {\r\n            return;\r\n        }\r\n\r\n        //  Here is where the crazy starts.\r\n        //\r\n        //  Due to browser implementation issues, you cannot fillText BiDi text to a canvas\r\n        //  that is not part of the DOM. It just completely ignores the direction property.\r\n\r\n        this.canvas.dir = 'rtl';\r\n\r\n        //  Experimental atm, but one day ...\r\n        this.context.direction = 'rtl';\r\n\r\n        //  Add it to the DOM, but hidden within the parent canvas.\r\n        this.canvas.style.display = 'none';\r\n\r\n        AddToDOM(this.canvas, this.scene.sys.canvas);\r\n\r\n        //  And finally we set the x origin\r\n        this.originX = 1;\r\n    }\r\n\r\n    setText(value) {\r\n        if (!value && value !== 0) {\r\n            value = '';\r\n        }\r\n\r\n        if (Array.isArray(value)) {\r\n            value = value.join('\\n');\r\n        }\r\n\r\n        if (value !== this._text) {\r\n            this._text = value.toString();\r\n\r\n            this.updateText();\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    setStyle(style) {\r\n        return this.style.setStyle(style);\r\n    }\r\n\r\n    setFont(font) {\r\n        return this.style.setFont(font);\r\n    }\r\n\r\n    setFontFamily(family) {\r\n        return this.style.setFontFamily(family);\r\n    }\r\n\r\n    setFontSize(size) {\r\n        return this.style.setFontSize(size);\r\n    }\r\n\r\n    setFontStyle(style) {\r\n        return this.style.setFontStyle(style);\r\n    }\r\n\r\n    setFixedSize(width, height) {\r\n        return this.style.setFixedSize(width, height);\r\n    }\r\n\r\n    setBackgroundColor(color) {\r\n        return this.style.setBackgroundColor(color);\r\n    }\r\n\r\n    setFill(color) {\r\n        return this.style.setFill(color);\r\n    }\r\n\r\n    setColor(color) {\r\n        return this.style.setColor(color);\r\n    }\r\n\r\n    setStroke(color, thickness) {\r\n        return this.style.setStroke(color, thickness);\r\n    }\r\n\r\n    setShadow(x, y, color, blur, shadowStroke, shadowFill) {\r\n        return this.style.setShadow(x, y, color, blur, shadowStroke, shadowFill);\r\n    }\r\n\r\n    setShadowOffset(x, y) {\r\n        return this.style.setShadowOffset(x, y);\r\n    }\r\n\r\n    setShadowColor(color) {\r\n        return this.style.setShadowColor(color);\r\n    }\r\n\r\n    setShadowBlur(blur) {\r\n        return this.style.setShadowBlur(blur);\r\n    }\r\n\r\n    setShadowStroke(enabled) {\r\n        return this.style.setShadowStroke(enabled);\r\n    }\r\n\r\n    setShadowFill(enabled) {\r\n        return this.style.setShadowFill(enabled);\r\n    }\r\n\r\n    setWrapMode(mode) {\r\n        return this.style.setWrapMode(mode);\r\n    }\r\n\r\n    setWrapWidth(width) {\r\n        return this.style.setWrapWidth(width);\r\n    }\r\n\r\n    setAlign(align) {\r\n        return this.style.setHAlign(align);\r\n    }\r\n\r\n    setLineSpacing(value) {\r\n        return this.style.setLineSpacing(value);\r\n    }\r\n\r\n    setPadding(left, top, right, bottom) {\r\n        if (typeof left === 'object') {\r\n            var config = left;\r\n\r\n            //  If they specify x and/or y this applies to all\r\n            var x = GetValue(config, 'x', null);\r\n\r\n            if (x !== null) {\r\n                left = x;\r\n                right = x;\r\n            } else {\r\n                left = GetValue(config, 'left', 0);\r\n                right = GetValue(config, 'right', left);\r\n            }\r\n\r\n            var y = GetValue(config, 'y', null);\r\n\r\n            if (y !== null) {\r\n                top = y;\r\n                bottom = y;\r\n            } else {\r\n                top = GetValue(config, 'top', 0);\r\n                bottom = GetValue(config, 'bottom', top);\r\n            }\r\n        } else {\r\n            if (left === undefined) {\r\n                left = 0;\r\n            }\r\n            if (top === undefined) {\r\n                top = left;\r\n            }\r\n            if (right === undefined) {\r\n                right = left;\r\n            }\r\n            if (bottom === undefined) {\r\n                bottom = top;\r\n            }\r\n        }\r\n\r\n        this.padding.left = left;\r\n        this.padding.top = top;\r\n        this.padding.right = right;\r\n        this.padding.bottom = bottom;\r\n\r\n        return this.updateText(false);\r\n    }\r\n\r\n    setResolution(value) {\r\n        return this.style.setResolution(value);\r\n    }\r\n\r\n    setMaxLines(max) {\r\n        return this.style.setMaxLines(max);\r\n    }\r\n\r\n    updateText(runWrap) {\r\n        if (runWrap === undefined) {\r\n            runWrap = true;\r\n        }\r\n        var canvasText = this.canvasText;\r\n\r\n        // wrap text to pens\r\n        var style = this.style;\r\n        if (runWrap) {\r\n            canvasText.updatePenManager(\r\n                this._text,\r\n                style.wrapMode,\r\n                style.wrapWidth,\r\n                style.lineHeight\r\n            );\r\n        }\r\n\r\n        // resize\r\n        var padding = this.padding;\r\n        var textWidth, textHeight;\r\n        if (style.fixedWidth === 0) {\r\n            this.width = canvasText.linesWidth + padding.left + padding.right;\r\n            textWidth = canvasText.linesWidth;\r\n        }\r\n        else {\r\n            this.width = style.fixedWidth;\r\n            textWidth = this.width - padding.left - padding.right;\r\n            if (textWidth < canvasText.linesWidth) {\r\n                textWidth = canvasText.linesWidth;\r\n            }\r\n        }\r\n        if (style.fixedHeight === 0) {\r\n            this.height = canvasText.linesHeight + padding.top + padding.bottom;\r\n            textHeight = canvasText.linesHeight;\r\n        }\r\n        else {\r\n            this.height = style.fixedHeight;\r\n            textHeight = this.height - padding.top - padding.bottom;\r\n            if (textHeight < canvasText.linesHeight) {\r\n                textHeight = canvasText.linesHeight;\r\n            }\r\n        }\r\n\r\n        var w = this.width;\r\n        var h = this.height;\r\n\r\n        this.updateDisplayOrigin();\r\n\r\n        var resolution = style.resolution;\r\n        w *= resolution;\r\n        h *= resolution;\r\n\r\n        w = Math.max(Math.ceil(w), 1);\r\n        h = Math.max(Math.ceil(h), 1);\r\n\r\n        var canvas = this.canvas;\r\n        var context = this.context;\r\n        if (canvas.width !== w || canvas.height !== h) {\r\n            canvas.width = w;\r\n            canvas.height = h;\r\n            this.frame.setSize(w, h);\r\n        } else {\r\n            context.clearRect(0, 0, w, h);\r\n        }\r\n\r\n        context.save();\r\n        context.scale(resolution, resolution);\r\n\r\n        // draw\r\n        canvasText.draw(\r\n            padding.left,\r\n            padding.top,\r\n            textWidth,\r\n            textHeight\r\n        );\r\n\r\n        context.restore();\r\n\r\n        if (this.renderer.gl) {\r\n            this.frame.source.glTexture = this.renderer.canvasToTexture(canvas, this.frame.source.glTexture, true);\r\n            this.frame.glTexture = this.frame.source.glTexture;\r\n        }\r\n\r\n        this.dirty = true;\r\n\r\n        var input = this.input;\r\n\r\n        if (input && !input.customHitArea) {\r\n            input.hitArea.width = this.width;\r\n            input.hitArea.height = this.height;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    getTextMetrics() {\r\n        return this.style.getTextMetrics();\r\n    }\r\n\r\n    toJSON() {\r\n        var out = Components.ToJSON(this);\r\n\r\n        //  Extra Text data is added here\r\n\r\n        var data = {\r\n            autoRound: this.autoRound,\r\n            text: this._text,\r\n            style: this.style.toJSON(),\r\n            resolution: this.resolution,\r\n            padding: {\r\n                left: this.padding.left,\r\n                right: this.padding.right,\r\n                top: this.padding.top,\r\n                bottom: this.padding.bottom\r\n            }\r\n        };\r\n\r\n        out.data = data;\r\n\r\n        return out;\r\n    }\r\n\r\n    preDestroy() {\r\n        if (this.style.rtl) {\r\n            RemoveFromDOM(this.canvas);\r\n        }\r\n\r\n        CanvasPool.remove(this.canvas);\r\n        this.canvasText.destroy();\r\n    }\r\n\r\n    setInteractive(shape, callback, dropZone) {\r\n        GameObject.prototype.setInteractive.call(this, shape, callback, dropZone);\r\n        this.canvasText.setInteractive();\r\n        return this;\r\n    }\r\n\r\n    getWrappedText(text, start, end) {\r\n        text = this.canvasText.getText(text, start, end, true);\r\n        return text.split(SPLITREGEXP);\r\n    }\r\n\r\n    getPlainText(text, start, end) {\r\n        return this.canvasText.getPlainText(text, start, end);\r\n    }\r\n\r\n    getText(text, start, end) {\r\n        return this.canvasText.getText(text, start, end, false);\r\n    }\r\n\r\n    getSubString(text, start, end) {\r\n        return this.getText(text, start, end);\r\n    }\r\n\r\n    copyPenManager(penManager) {\r\n        return this.canvasText.copyPenManager(penManager);\r\n    }\r\n\r\n    getPenManager(text, penManager) {\r\n        return this.canvasText.getPenManager(text, penManager);\r\n    }\r\n\r\n    setSize(width, height) {\r\n        return this.setFixedSize(width, height);\r\n    }\r\n\r\n    resize(width, height) {\r\n        return this.setFixedSize(width, height);\r\n    }\r\n\r\n    set lineSpacing(value) {\r\n        this.setLineSpacing(value);\r\n    }\r\n    get lineSpacing() {\r\n        return this.style.lineSpacing;\r\n    }\r\n\r\n    get imageManager() {\r\n        return GetGlobImageManager(this.scene.textures);\r\n    }\r\n\r\n    addImage(key, config) {\r\n        this.imageManager.add(key, config);\r\n        return this;\r\n    }\r\n\r\n    drawAreaBounds(graphics, color) {\r\n        this.canvasText.hitAreaManager.drawBounds(graphics, color, this);\r\n        return this;\r\n    }\r\n}\r\n\r\nconst Components = Phaser.GameObjects.Components;\r\nPhaser.Class.mixin(Text,\r\n    [\r\n        Components.Alpha,\r\n        Components.BlendMode,\r\n        Components.ComputedSize,\r\n        Components.Crop,\r\n        Components.Depth,\r\n        Components.Flip,\r\n        Components.GetBounds,\r\n        Components.Mask,\r\n        Components.Origin,\r\n        Components.Pipeline,\r\n        Components.ScrollFactor,\r\n        Components.Tint,\r\n        Components.Transform,\r\n        Components.Visible,\r\n        Render\r\n    ]\r\n);\r\n\r\nexport default Text;","import TextStyle from '../textbase/textstyle/TextStyle.js';\r\n\r\nvar GETPROP_RESULT = {\r\n    plainText: null,\r\n    prevProp: null\r\n};\r\n\r\nvar STYLE_RESULT = new TextStyle();\r\nvar PROPLIST = [];\r\n\r\nclass parser {\r\n    constructor(tags) {\r\n        if (tags === undefined) {\r\n            tags = {};\r\n        }\r\n        this.tags = tags;\r\n    }\r\n\r\n    addTag(name, prop) {\r\n        this.tags[name] = prop;\r\n    }\r\n\r\n    splitText(text, mode) {\r\n        var result = [];\r\n        var arr, m, charIdx = 0,\r\n            totalLen = text.length,\r\n            matchStart = totalLen;\r\n        var innerMatch;\r\n        while (true) {\r\n            arr = RE_SPLITTEXT.exec(text);\r\n            if (!arr) {\r\n                break;\r\n            }\r\n\r\n            m = arr[0];\r\n            matchStart = RE_SPLITTEXT.lastIndex - m.length;\r\n\r\n            if (charIdx < matchStart) {\r\n                result.push(text.substring(charIdx, matchStart));\r\n            }\r\n            if (mode === undefined) {\r\n                result.push(m);\r\n            } else if (mode === 1) { // RAWTEXTONLY_MODE\r\n                if (RE_CLASS_HEADER.test(m)) {\r\n                    innerMatch = m.match(RE_CLASS);\r\n                    result.push(innerMatch[2]);\r\n                } else if (RE_STYLE_HEADER.test(m)) {\r\n                    innerMatch = m.match(RE_STYLE);\r\n                    result.push(innerMatch[2]);\r\n                }\r\n            }\r\n\r\n            charIdx = RE_SPLITTEXT.lastIndex;\r\n        }\r\n\r\n\r\n        if (charIdx < totalLen) {\r\n            result.push(text.substring(charIdx, totalLen));\r\n        }\r\n        return result; // [text,...]\r\n    }\r\n\r\n    tagTextToProp(text, prevProp) {\r\n        var plainText, propOut;\r\n        if (RE_CLASS_HEADER.test(text)) {\r\n            var innerMatch = text.match(RE_CLASS);\r\n            if (innerMatch != null) {\r\n                var name = innerMatch[1];\r\n                var tags = this.tags;\r\n                if (tags.hasOwnProperty(name)) {\r\n                    propOut = tags[name];\r\n                } else {\r\n                    propOut = {};\r\n                }\r\n                propOut._class = name;\r\n                plainText = innerMatch[2];\r\n            }\r\n        } else if (RE_STYLE_HEADER.test(text)) {\r\n            var innerMatch = text.match(RE_STYLE);\r\n            if (innerMatch != null) {\r\n                var style = innerMatch[1];\r\n                propOut = styleToProp(style);\r\n                propOut._style = style;\r\n                plainText = innerMatch[2];\r\n            }\r\n        }\r\n\r\n        if (plainText == null) {\r\n            plainText = text;\r\n        }\r\n\r\n        if (propOut == null) {\r\n            propOut = {};\r\n        }\r\n\r\n        var result = GETPROP_RESULT;\r\n        result.plainText = plainText;\r\n        result.prop = propOut;\r\n        return result;\r\n    }\r\n\r\n    propToContextStyle(defaultStyle, prop) {\r\n        var result = STYLE_RESULT;\r\n        if (!prop.hasOwnProperty('img')) {\r\n            result.image = null;\r\n\r\n            if (prop.hasOwnProperty('family') || prop.hasOwnProperty('fontFamily') || prop.hasOwnProperty('font-family')) {\r\n                var family = (prop.hasOwnProperty('family')) ? prop.family :\r\n                    (prop.hasOwnProperty('fontFamily')) ? prop.fontFamily :\r\n                    prop['font-family'];\r\n                result.fontFamily = family;\r\n            } else {\r\n                result.fontFamily = defaultStyle.fontFamily;\r\n            }\r\n\r\n            if (prop.hasOwnProperty('size') || prop.hasOwnProperty('fontSize') || prop.hasOwnProperty('font-size')) {\r\n                var size = (prop.hasOwnProperty('size')) ? prop.size :\r\n                    (prop.hasOwnProperty('fontSize')) ? prop.fontSize :\r\n                    prop['font-size'];\r\n                if (typeof (size) === 'number') {\r\n                    size = size.toString() + 'px';\r\n                }\r\n                result.fontSize = size;\r\n            } else {\r\n                result.fontSize = defaultStyle.fontSize;\r\n            }\r\n\r\n            if (prop.hasOwnProperty('style') || prop.hasOwnProperty('fontStyle') || prop.hasOwnProperty('font-style')) {\r\n                var fontStyle = (prop.hasOwnProperty('style')) ? prop.style :\r\n                    (prop.hasOwnProperty('fontStyle')) ? prop.fontStyle :\r\n                    prop['font-style'];\r\n                result.fontStyle = fontStyle;\r\n            } else {\r\n                result.fontStyle = defaultStyle.fontStyle;\r\n            }\r\n\r\n            if (prop.hasOwnProperty('color') || prop.hasOwnProperty('font-color')) {\r\n                var color = (prop.hasOwnProperty('color')) ? prop.color : prop['font-color'];\r\n                result.color = prop.color;\r\n            } else {\r\n                result.color = defaultStyle.color;\r\n            }\r\n\r\n            if (prop.hasOwnProperty('stroke')) {\r\n                var stroke = prop.stroke; // {color, thinkness}\r\n                result.stroke = (stroke.hasOwnProperty('color')) ? stroke.color : defaultStyle.stroke;\r\n                result.strokeThickness = (stroke.hasOwnProperty('thinkness')) ? stroke.thinkness : defaultStyle.strokeThickness;\r\n            } else {\r\n                result.stroke = defaultStyle.stroke;\r\n                result.strokeThickness = defaultStyle.strokeThickness;\r\n            }\r\n        } else {\r\n            result.image = prop.img;\r\n        }\r\n\r\n        if (prop.hasOwnProperty('shadow')) {\r\n            var shadow = prop.shadow; // {color, offsetX, offsetY, blur}\r\n            result.shadowColor = (shadow.hasOwnProperty('color')) ? shadow.color : defaultStyle.shadowColor;\r\n            result.shadowOffsetX = (shadow.hasOwnProperty('offsetX')) ? shadow.offsetX : defaultStyle.shadowOffsetX;\r\n            result.shadowOffsetY = (shadow.hasOwnProperty('offsetY')) ? shadow.offsetY : defaultStyle.shadowOffsetY;\r\n            result.shadowBlur = (shadow.hasOwnProperty('blur')) ? shadow.blur : defaultStyle.shadowBlur;\r\n            result.shadowStroke = true;\r\n            result.shadowFill = true;\r\n        } else {\r\n            result.shadowColor = defaultStyle.shadowColor;\r\n            result.shadowOffsetX = defaultStyle.shadowOffsetX;\r\n            result.shadowOffsetY = defaultStyle.shadowOffsetY;\r\n            result.shadowBlur = defaultStyle.shadowBlur;\r\n            result.shadowStroke = defaultStyle.shadowStroke;\r\n            result.shadowFill = defaultStyle.shadowFill;\r\n        }\r\n\r\n        if (prop.hasOwnProperty('u') || prop.hasOwnProperty('underline')) {\r\n            var u = (prop.hasOwnProperty('u')) ? prop.u : prop.underline; // {color, thinkness, offset}\r\n            result.underlineColor = (u.hasOwnProperty('color')) ? u.color : defaultStyle.underlineColor;\r\n            result.underlineThickness = (u.hasOwnProperty('thinkness')) ? u.thinkness : defaultStyle.underlineThickness;\r\n            result.underlineOffset = (u.hasOwnProperty('offset')) ? u.offset : defaultStyle.underlineOffset;\r\n        } else {\r\n            result.underlineColor = defaultStyle.underlineColor;\r\n            result.underlineThickness = defaultStyle.underlineThickness;\r\n            result.underlineOffset = defaultStyle.underlineOffset;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    propToTagText(text, prop, prevProp) {\r\n        if (prop.hasOwnProperty('_class')) { // class mode\r\n            if (text === '') {\r\n                if (this.isTextTag(prop._class)) {\r\n                    return '';\r\n                }\r\n            }\r\n            return \"<class='\" + prop._class + \"'>\" + text + \"</class>\";\r\n        } else if (prop.hasOwnProperty('_style')) { // class mode\r\n            return \"<style='\" + prop._style + \"'>\" + text + \"</style>\";\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.tags = undefined;\r\n    }\r\n\r\n    isTextTag(tagName) {\r\n        var tag = this.tags[tagName];\r\n        if (tag) {\r\n            return (tag.img == null);\r\n        } else { // tag not found\r\n            return false;\r\n        }\r\n    }\r\n};\r\n\r\nvar styleToProp = function (s) {\r\n    s = s.split(\";\");\r\n\r\n    var result = {},\r\n        prop, k, v;\r\n    for (var i = 0, slen = s.length; i < slen; i++) {\r\n        prop = s[i].split(\":\");\r\n        k = prop[0], v = prop[1];\r\n        if (isEmpty(k) || isEmpty(v)) {\r\n            continue;\r\n        }\r\n\r\n        switch (k) {\r\n            case 'stroke':\r\n                var stroke = v.split(' '); // stroke:blue 1px\r\n                var len = stroke.length;\r\n                v = {};\r\n                if (len >= 1) {\r\n                    v.color = stroke[0];\r\n                }\r\n                if (len >= 2) {\r\n                    v.thinkness = parseInt(stroke[1].replace('px', ''));\r\n                }\r\n                break;\r\n            case 'shadow':\r\n                var shadow = v.split(' '); // shadow:blue 2px 2px 2px\r\n                var len = shadow.length;\r\n                v = {};\r\n                if (len >= 1) {\r\n                    v.color = shadow[0];\r\n                }\r\n                if (len >= 2) {\r\n                    v.offsetX = parseInt(shadow[1].replace('px', ''));\r\n                }\r\n                if (len >= 3) {\r\n                    v.offsetY = parseInt(shadow[2].replace('px', ''));\r\n                }\r\n                if (len >= 4) {\r\n                    v.blur = parseInt(shadow[3].replace('px', ''));\r\n                }\r\n                break;\r\n            case 'u':\r\n            case 'underline': // underline:blue 3px -1px\r\n                var u = v.split(' ');\r\n                var len = u.length;\r\n                v = {};\r\n                if (len >= 1) {\r\n                    v.color = u[0];\r\n                }\r\n                if (len >= 2) {\r\n                    v.thinkness = parseInt(u[1].replace('px', ''));\r\n                }\r\n                if (len >= 3) {\r\n                    v.offset = parseInt(u[2].replace('px', ''));\r\n                }\r\n                break;\r\n        }\r\n        result[k] = v;\r\n    }\r\n    return result;\r\n};\r\n\r\nvar isEmpty = function (s) {\r\n    // Remove white spaces.\r\n    s = s.replace(RE_SPACE, '');\r\n    return (s.length === 0);\r\n};\r\n\r\nvar RE_SPLITTEXT = /<\\s*class=[\"|']([^\"|']+)[\"|']\\s*\\>([\\s\\S]*?)<\\s*\\/class\\s*\\>|<\\s*style=[\"|']([^\"|']+)[\"|']\\s*\\>([\\s\\S]*?)<\\s*\\/style\\s*\\>/g;\r\nvar RE_CLASS_HEADER = /<\\s*class=/i;\r\nvar RE_CLASS = /<\\s*class=[\"|']([^\"|']+)[\"|']\\s*\\>([\\s\\S]*?)<\\s*\\/class\\s*\\>/;\r\nvar RE_STYLE_HEADER = /<\\s*style=/i;\r\nvar RE_STYLE = /<\\s*style=[\"|']([^\"|']+)[\"|']\\s*\\>([\\s\\S]*?)<\\s*\\/style\\s*\\>/;\r\nvar RE_SPACE = /^\\s+|\\s+$/;\r\n\r\nexport default parser;","import Text from '../textbase/Text.js';\r\nimport ParserKlass from './Parser.js';\r\n\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\n\r\nclass TagText extends Text {\r\n    constructor(scene, x, y, text, style) {\r\n        var tags = GetValue(style, 'tags', undefined);\r\n        var parser = new ParserKlass(tags);\r\n        super(scene, x, y, text, style, 'rexTagText', parser);\r\n        this.parser = parser;\r\n    }\r\n\r\n    addTag(name, prop) {\r\n        this.parser.addTag(name, prop);\r\n        return this.updateText(true);\r\n    }\r\n\r\n    addTags(tags) {\r\n        for(var name in tags){\r\n            this.parser.addTag(name, tags[name]);\r\n        }\r\n        return this.updateText(true);\r\n    }\r\n\r\n    preDestroy() {\r\n        super.preDestroy();\r\n        this.parser.destroy();\r\n        this.parser = undefined;\r\n    }\r\n}\r\n\r\nexport default TagText;","import TagText from './TagText.js';\r\n\r\nconst GetAdvancedValue = Phaser.Utils.Objects.GetAdvancedValue;\r\nconst BuildGameObject = Phaser.GameObjects.BuildGameObject;\r\n\r\nexport default function (config, addToScene) {\r\n    // style Object = {\r\n    //     font: [ 'font', '16px Courier' ],\r\n    //     backgroundColor: [ 'backgroundColor', null ],\r\n    //     fill: [ 'fill', '#fff' ],\r\n    //     stroke: [ 'stroke', '#fff' ],\r\n    //     strokeThickness: [ 'strokeThickness', 0 ],\r\n    //     shadowOffsetX: [ 'shadow.offsetX', 0 ],\r\n    //     shadowOffsetY: [ 'shadow.offsetY', 0 ],\r\n    //     shadowColor: [ 'shadow.color', '#000' ],\r\n    //     shadowBlur: [ 'shadow.blur', 0 ],\r\n    //     shadowStroke: [ 'shadow.stroke', false ],\r\n    //     shadowFill: [ 'shadow.fill', false ],\r\n    //     align: [ 'align', 'left' ],\r\n    //     maxLines: [ 'maxLines', 0 ],\r\n    //     fixedWidth: [ 'fixedWidth', false ],\r\n    //     fixedHeight: [ 'fixedHeight', false ]\r\n    // }\r\n\r\n    var content = GetAdvancedValue(config, 'text', '');\r\n    var style = GetAdvancedValue(config, 'style', null);\r\n\r\n    //  Padding\r\n    //      { padding: 2 }\r\n    //      { padding: { x: , y: }}\r\n    //      { padding: { left: , top: }}\r\n    //      { padding: { left: , right: , top: , bottom: }}  \r\n\r\n    var padding = GetAdvancedValue(config, 'padding', null);\r\n\r\n    if (padding !== null) {\r\n        style.padding = padding;\r\n    }\r\n\r\n    if (addToScene !== undefined) {\r\n        config.add = addToScene;\r\n    }\r\n\r\n    var gameObject = new TagText(this.scene, 0, 0, content, style);\r\n    BuildGameObject(this.scene, gameObject, config);\r\n\r\n    //  Text specific config options:\r\n\r\n    gameObject.autoRound = GetAdvancedValue(config, 'autoRound', true);\r\n    gameObject.resolution = GetAdvancedValue(config, 'resolution', 1);\r\n\r\n    return gameObject;\r\n};","import Factory from './gameobjects/text/tagtext/Factory.js';\r\nimport Creator from './gameobjects/text/tagtext/Creator.js';\r\nimport TagText from './gameobjects/text/tagtext/TagText.js';\r\n\r\nPhaser.GameObjects.GameObjectFactory.register('rexTagText', Factory);\r\nPhaser.GameObjects.GameObjectCreator.register('rexTagText', Creator);\r\n\r\nexport default TagText;","import TagText from './TagText.js';\r\n\r\nexport default function (x, y, text, style) {\r\n    var gameObject = new TagText(this.scene, x, y, text, style);\r\n    this.scene.add.existing(gameObject);\r\n    return gameObject;\r\n}","export default {\r\n    setEventEmitter(eventEmitter, EventEmitterClass) {\r\n        if (EventEmitterClass === undefined) {\r\n            EventEmitterClass = Phaser.Events.EventEmitter; // Use built-in EventEmitter class by default\r\n        }\r\n        this._privateEE = (eventEmitter === undefined);\r\n        this._eventEmitter = (this._privateEE) ? (new EventEmitterClass()) : eventEmitter;\r\n        return this;\r\n    },\r\n\r\n    destroyEventEmitter() {\r\n        if (this._eventEmitter && this._privateEE) {\r\n            this._eventEmitter.shutdown();\r\n        }\r\n        return this;\r\n    },\r\n\r\n    getEventEmitter() {\r\n        return this._eventEmitter;\r\n    },\r\n\r\n    on: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.on.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    once: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.once.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    off: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.off.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    emit: function (event) {\r\n        if (this._eventEmitter && event) {\r\n            this._eventEmitter.emit.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    addListener: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.addListener.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    removeListener: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.removeListener.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    removeAllListeners: function () {\r\n        if (this._eventEmitter) {\r\n            this._eventEmitter.removeAllListeners.apply(this._eventEmitter, arguments);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    listenerCount: function () {\r\n        if (this._eventEmitter) {\r\n            return this._eventEmitter.listenerCount.apply(this._eventEmitter, arguments);\r\n        }\r\n        return 0;\r\n    },\r\n\r\n    listeners: function () {\r\n        if (this._eventEmitter) {\r\n            return this._eventEmitter.listeners.apply(this._eventEmitter, arguments);\r\n        }\r\n        return [];\r\n    }\r\n};","const SceneClass = Phaser.Scene;\r\nvar IsSceneObject = function (object) {\r\n    return (object instanceof SceneClass);\r\n}\r\nexport default IsSceneObject;","import IsSceneObject from './IsSceneObject.js';\r\n\r\nvar GetSceneObject = function (object) {\r\n    if (IsSceneObject(object)) { // object = scene\r\n        return object;\r\n    } else if (object.scene && IsSceneObject(object.scene)) { // object = game object\r\n        return object.scene;\r\n    } else if (object.parent && object.parent.scene && IsSceneObject(object.parent.scene)) { // parent = bob object\r\n        return object.parent.scene;\r\n    }\r\n}\r\n\r\nexport default GetSceneObject;","import EventEmitterMethods from '../../utils/eventemitter/EventEmitterMethods.js';\r\nimport GetSceneObject from '../../utils/system/GetSceneObject.js';\r\n\r\nconst GetFastValue = Phaser.Utils.Objects.GetFastValue;\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\n\r\nclass TextTyping {\r\n    constructor(gameObject, config) {\r\n        this.gameObject = gameObject;\r\n        this.scene = GetSceneObject(gameObject);        \r\n        this.setEventEmitter(GetValue(config, 'eventEmitter', undefined));\r\n        \r\n        this.timer = null;\r\n        this.resetFromJSON(config);\r\n        this.boot();\r\n    }\r\n\r\n    /**\r\n     * Reset status by JSON object\r\n     * @param {object} o JSON object\r\n     * @returns {object} this object\r\n     */\r\n    resetFromJSON(o) {\r\n        this.setTypeMode(GetValue(o, 'typeMode', 0));\r\n        this.setTypeSpeed(GetValue(o, 'speed', 333));\r\n        this.setTextCallback = GetFastValue(o, 'setTextCallback', null);\r\n        this.setTextCallbackScope = GetFastValue(o, 'setTextCallbackScope', null);\r\n\r\n        this.typingIdx = GetFastValue(o, 'typingIdx', 0);\r\n        this.text = transferText(GetFastValue(o, 'text', ''));\r\n        this.textLen = GetFastValue(o, 'textLen', 0);\r\n        this.insertIdx = GetFastValue(o, 'insertIdx', null);\r\n\r\n        var elapsed = GetFastValue(o, 'elapsed', null);\r\n        if (elapsed !== null) {\r\n            this.start(undefined, undefined, this.typingIdx, elapsed);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Return status in JSON object\r\n     * @returns JSON object\r\n     */\r\n    toJSON() {\r\n        var elapsed;\r\n        var timer = this.getTimer();\r\n        if (timer) {\r\n            elapsed = timer.elapsed;\r\n        } else {\r\n            elapsed = null;\r\n        }\r\n\r\n        return {\r\n            typeMode: this.typeMode,\r\n            speed: this.speed,\r\n            setTextCallback: this.setTextCallback,\r\n            setTextCallbackScope: this.setTextCallbackScope,\r\n\r\n            typingIdx: this.typingIdx,\r\n            text: this.text,\r\n            textLen: this.textLen,\r\n            insertIdx: this.insertIdx,\r\n            elapsed: elapsed\r\n        };\r\n    }\r\n\r\n    boot() {\r\n        if (this.gameObject.once) { // oops, bob object does not have event emitter\r\n            this.gameObject.once('destroy', this.destroy, this);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    shutdown() {\r\n        this.destroyEventEmitter();\r\n        this.freeTimer();\r\n        this.gameObject = undefined;\r\n        this.scene = undefined;\r\n        return this;\r\n    }\r\n\r\n    destroy() {\r\n        this.shutdown();\r\n        return this;\r\n    }\r\n\r\n    setTypeMode(m) {\r\n        if (typeof (m) === 'string') {\r\n            m = TYPEMODE[m];\r\n        }\r\n        this.typeMode = m;\r\n        return this;\r\n    }\r\n\r\n    setTypeSpeed(speed) {\r\n        this.speed = speed;\r\n        return this;\r\n    }\r\n\r\n    get isTyping() {\r\n        return (this.getTimer() !== null);\r\n    }\r\n\r\n    get isLastChar() {\r\n        return (this.typingIdx === this.textLen);\r\n    }\r\n\r\n    start(text, speed, startIdx, timerStartAt) {\r\n        if (text !== undefined) {\r\n            this.setTypingContent(text);\r\n        }\r\n        if (speed !== undefined) {\r\n            this.speed = speed;\r\n        }\r\n        if (startIdx === undefined) {\r\n            startIdx = 0;\r\n        }\r\n\r\n        this.typingIdx = startIdx + 1;\r\n        if (this.speed === 0) {\r\n            this.stop(true);\r\n        } else {\r\n            this.startTimer(timerStartAt);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    appendText(text) {\r\n        var newText = this.text.concat(transferText(text));\r\n        if (this.isTyping) {\r\n            this.setTypingContent(newText);\r\n        } else {\r\n            this.start(newText, undefined, this.textLen);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    stop(showAllText) {\r\n        var timer = this.getTimer();\r\n        if (timer) {\r\n            this.freeTimer();\r\n        }\r\n        if (showAllText) {\r\n            this.typingIdx = this.textLen;\r\n            this.setText(this.text);\r\n            this.emit('type');\r\n            this.emit('complete', this, this.gameObject);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    pause() {\r\n        var timer = this.getTimer();\r\n        if (timer) {\r\n            timer.paused = true;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    resume() {\r\n        var timer = this.getTimer();\r\n        if (timer) {\r\n            timer.paused = false;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    setTypingContent(text) {\r\n        this.text = transferText(text);\r\n        this.textLen = this.getTextLength(this.text);\r\n        return this;\r\n    }\r\n\r\n    onTyping() {\r\n        var newText = this.getTypingString(this.text, this.typingIdx, this.textLen, this.typeMode);\r\n        this.setText(newText);\r\n        this.emit('type');\r\n\r\n        if (this.isLastChar) {\r\n            this.freeTimer();\r\n            this.emit('complete', this, this.gameObject);\r\n        } else {\r\n            this.timer.delay = this.speed; // delay of next typing            \r\n            this.typingIdx++;\r\n        }\r\n    }\r\n\r\n    getTypingString(text, typeIdx, textLen, typeMode) {\r\n        var result;\r\n        if (typeMode === 0) { //left-to-right\r\n            var startIdx = 0;\r\n            var endIdx = typeIdx;\r\n            this.insertIdx = endIdx;\r\n            result = this.getSubString(text, startIdx, endIdx);\r\n\r\n        } else if (typeMode === 1) { //right-to-left\r\n            var endIdx = textLen;\r\n            var startIdx = endIdx - typeIdx;\r\n            this.insertIdx = 0;\r\n            result = this.getSubString(text, startIdx, endIdx);\r\n\r\n        } else if (typeMode === 2) { //middle-to-sides\r\n            var midIdx = textLen / 2;\r\n            var startIdx = Math.floor(midIdx - (typeIdx / 2));\r\n            var endIdx = startIdx + typeIdx;\r\n            this.insertIdx = (typeIdx % 2) ? typeIdx : 0;\r\n            result = this.getSubString(text, startIdx, endIdx);\r\n\r\n        } else if (typeMode === 3) { //sides-to-middle\r\n            var lowerLen = Math.floor(typeIdx / 2);\r\n            var lowerResult;\r\n            if (lowerLen > 0) {\r\n                var endIdx = textLen;\r\n                var startIdx = endIdx - lowerLen;\r\n                lowerResult = this.getSubString(text, startIdx, endIdx);\r\n            } else {\r\n                lowerResult = \"\";\r\n            }\r\n\r\n            var upperLen = typeIdx - lowerLen;\r\n            var upperResult;\r\n            if (upperLen > 0) {\r\n                var startIdx = 0;\r\n                var endIdx = startIdx + upperLen;\r\n                this.insertIdx = endIdx;\r\n                upperResult = this.getSubString(text, startIdx, endIdx);\r\n            } else {\r\n                upperResult = \"\";\r\n                this.insertIdx = 0;\r\n            }\r\n            result = upperResult + lowerResult;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    startTimer(timerStartAt) {\r\n        if (this.timer) {\r\n            this.freeTimer();\r\n        }\r\n        var delay, startAt;\r\n        if (timerStartAt === undefined) {\r\n            delay = 0;\r\n            startAt = 0;\r\n        } else {\r\n            delay = this.speed;\r\n            startAt = timerStartAt;\r\n        }\r\n\r\n        this.timer = this.scene.time.addEvent({\r\n            delay: 0,\r\n            startAt: startAt,\r\n            loop: true,\r\n            callback: this.onTyping,\r\n            callbackScope: this\r\n        });\r\n        return this;\r\n    }\r\n\r\n    getTimer() {\r\n        return this.timer;\r\n    }\r\n\r\n    freeTimer() {\r\n        if (this.timer) {\r\n            this.timer.remove();\r\n            this.timer = null;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    setText(text) {\r\n        if (this.setTextCallback) {\r\n            if (this.setTextCallbackScope) {\r\n                text = this.setTextCallback.call(this.setTextCallbackScope, text, this.isLastChar, this.insertIdx);\r\n            } else {\r\n                text = this.setTextCallback(text, this.isLastChar, this.insertIdx);\r\n            }\r\n        }\r\n        this.gameObject.setText(text);\r\n    }\r\n\r\n    getTextLength(text) {\r\n        var gameObject = this.gameObject;\r\n        var len;\r\n        if (gameObject.getPlainText) {\r\n            len = gameObject.getPlainText(text).length;\r\n        } else {\r\n            len = text.length;\r\n        }\r\n\r\n        return len;\r\n    }\r\n\r\n    getSubString(text, startIdx, endIdx) {\r\n        var gameObject = this.gameObject;\r\n        var result;\r\n        if (gameObject.getSubString) {\r\n            result = gameObject.getSubString(text, startIdx, endIdx);\r\n        } else {\r\n            result = text.slice(startIdx, endIdx);\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nObject.assign(\r\n    TextTyping.prototype,\r\n    EventEmitterMethods\r\n);\r\n\r\nvar transferText = function (text) {\r\n    if (Array.isArray(text)) {\r\n        text = text.join('\\n');\r\n    } else if (typeof (text) === 'number') {\r\n        text = text.toString();\r\n    }\r\n    return text;\r\n}\r\n\r\n/** @private */\r\nconst TYPEMODE = {\r\n    'left-to-right': 0,\r\n    'right-to-left': 1,\r\n    'middle-to-sides': 2,\r\n    'sides-to-middle': 3\r\n};\r\n\r\n\r\nexport default TextTyping;","import TextTyping from './behaviors/texttyping/TextTyping.js';\r\nexport default TextTyping;","// Source: https://stackoverflow.com/questions/5915096/get-random-item-from-javascript-array\r\nconst getRandomItem = (items) => {\r\n    return items[Math.floor(Math.random() * items.length)];\r\n}\r\n\r\nexport {\r\n    getRandomItem\r\n}","export default {\r\n    Active: 0,\r\n    Destroyed: 1\r\n};","export default {\r\n    None: 0,\r\n    EasyWin: 1\r\n};","export default [\r\n    { name: 'Blue', imageKey: 'tile_01' },\r\n    { name: 'Green', imageKey: 'tile_02' },\r\n    { name: 'Red', imageKey: 'tile_03' },\r\n    { name: 'Yellow', imageKey: 'tile_04' }\r\n];","import { getRandomItem } from './Utility';\r\nimport Tile from './Tile';\r\nimport TileGenerationBehavior from './TileGenerationBehavior';\r\nimport TileState from './TileState';\r\nimport TileType from './TileType';\r\n\r\nexport default class {\r\n\r\n    constructor(tileGridWidth, tileGridHeight, tileSize, offsetX, offsetY, onTileSelect, onTileMatch, queue)\r\n    {\r\n        this.offsetX = offsetX;\r\n        this.offsetY = offsetY;\r\n        this.tileSize = tileSize;\r\n        this.tileGridHeight = tileGridHeight;\r\n        this.tileGridWidth = tileGridWidth;\r\n        this.tileGrid = [];\r\n        this.tileImageContainer = null;\r\n        this.playAreaOffset = (this.tileGridHeight * this.tileSize);\r\n\r\n        this.onTileSelect = onTileSelect;\r\n        this.onTileMatch = onTileMatch;\r\n\r\n        this.tileGenerationBehavior = TileGenerationBehavior.None;\r\n\r\n        this.queue = queue;\r\n\r\n        // We're going to generate a grid that's twice the height of\r\n        // the desired tile grid height since we'll use the hidden, upper\r\n        // region to stage the bricks that will fall into the play area\r\n        for(let y = 0; y < tileGridHeight * 2; y++)\r\n        {\r\n            this.tileGrid[y] = [];\r\n            for(let x = 0; x < tileGridWidth; x++)\r\n            {\r\n                this.tileGrid[y][x] = (y < tileGridHeight)\r\n                    ? null\r\n                    : this.createTile(this.getTileType(x, y, this.tileGenerationBehavior), x, y);\r\n            }\r\n        }\r\n    }\r\n\r\n    create(context)\r\n    {\r\n        this.tileImageContainer = context.add.container();\r\n\r\n        // Create all of the tiles\r\n        this.forEachTile(tile => {\r\n\r\n            if(tile === null)\r\n            {\r\n                return;\r\n            }\r\n\r\n            tile.create(context);\r\n            this.tileImageContainer.add(tile.image);\r\n\r\n        });\r\n\r\n        // Create a mask to only show the play area\r\n        const maskShape = context.make.graphics();\r\n        maskShape.fillStyle(0xffffff, 1);\r\n        maskShape.fillRect(this.offsetX - (this.tileSize/2), this.offsetY + (this.tileGridHeight * this.tileSize) - (this.tileSize/2), this.tileGridWidth * this.tileSize, this.tileGridHeight * this.tileSize);\r\n        \r\n        this.tileImageContainer.mask = new Phaser.Display.Masks.GeometryMask(context, maskShape);\r\n    }\r\n\r\n    update(context)\r\n    {\r\n        const self = this;\r\n\r\n        if(self.queue.length > 0)\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Detect and destroy any matches\r\n        const matchedTiles = self.getMatches();\r\n\r\n        if(matchedTiles.length > 0)\r\n        {\r\n            self.onTileMatch(context, matchedTiles);\r\n        }\r\n\r\n        let destroys = [];\r\n        matchedTiles.forEach(t => { destroys.push(t.destroy(context, this.tileImageContainer)); });\r\n\r\n        if(destroys.length > 0)\r\n        {\r\n            self.queue.push(() => { return Promise.all(destroys); });\r\n        }\r\n\r\n        // Remove any destroyed tiles\r\n        self.forEachTile((tile, x, y) => {\r\n\r\n            if(tile === null)\r\n            {\r\n                return;\r\n            }\r\n\r\n            if(tile.state === TileState.Destroyed)\r\n            {\r\n                self.tileGrid[y][x] = null;\r\n            }\r\n\r\n        });\r\n\r\n        // Shift all of the tiles downward to fill empty spots\r\n        let drops = [];\r\n        for(let x = 0; x < this.tileGridWidth; x++)\r\n        {\r\n            let y = (this.tileGridHeight * 2) - 1;\r\n            while(y >= 0)\r\n            {\r\n                // If the tile is null...\r\n                if(self.tileGrid[y][x] === null)\r\n                {\r\n                    // ...find the closest tile that's not null...\r\n                    let closestY = y - 1;\r\n                    while(closestY >= 0)\r\n                    {\r\n                        let closestTile = self.tileGrid[closestY][x];\r\n                        if(closestTile !== null)\r\n                        {\r\n                            // ...and shift it downward\r\n                            self.tileGrid[y][x] = closestTile;\r\n                            self.tileGrid[closestY][x] = null;\r\n                            drops.push(this.getTileDrop(context, closestTile, x, y));\r\n                            y--;\r\n                        }\r\n                        closestY--;\r\n                    }\r\n                }\r\n\r\n                y--;\r\n            }\r\n        }\r\n\r\n        // Fill in all of the empty tiles\r\n        self.forEachPlayableTile((tile, x, y) => {\r\n            if(tile === null)\r\n            {\r\n                const adjustedY = y - self.tileGridHeight;\r\n\r\n                const tile = self.createTile(self.getTileType(x, y, self.tileGenerationBehavior), x, adjustedY);\r\n                self.tileGrid[adjustedY][x] = tile;\r\n                tile.create(context);\r\n                self.tileImageContainer.add(tile.image);\r\n            }\r\n        });\r\n\r\n        if(drops.length > 0)\r\n        {\r\n            self.queue.push(() => { return Promise.all(drops); });\r\n        }\r\n    }\r\n\r\n    swapTiles(context, firstTile, secondTile)\r\n    {\r\n        let self = this;\r\n\r\n        self.queue.push(() => {\r\n            \r\n            let firstTileX = firstTile.x;\r\n            let firstTileY = firstTile.y;\r\n            let firstTileGridX = firstTile.tileGridX;\r\n            let firstTileGridY = firstTile.tileGridY;\r\n    \r\n            let secondTileX = secondTile.x;\r\n            let secondTileY = secondTile.y;\r\n            let secondTileGridX = secondTile.tileGridX;\r\n            let secondTileGridY = secondTile.tileGridY;\r\n    \r\n            let firstSwap = secondTile.updatePosition(context, firstTileX, firstTileY, firstTileGridX, firstTileGridY);\r\n            self.tileGrid[firstTileGridY][firstTileGridX] = secondTile;\r\n    \r\n            let secondSwap = firstTile.updatePosition(context, secondTileX, secondTileY, secondTileGridX, secondTileGridY);\r\n            self.tileGrid[secondTileGridY][secondTileGridX] = firstTile;\r\n\r\n            return Promise.all([firstSwap, secondSwap]);\r\n\r\n        });\r\n    }\r\n\r\n    hasMatches(targetGridX, targetGridY)\r\n    {\r\n        return this.getMatches(targetGridX, targetGridY).length > 0;\r\n    }\r\n\r\n    getMatches(targetGridX, targetGridY)\r\n    {\r\n        const self = this;\r\n        const matchedTiles = [];\r\n\r\n        self.forEachTile((tile, x, y) => {\r\n\r\n            if(\r\n                (typeof targetGridX !== 'undefined' && x !== targetGridX) &&\r\n                (typeof targetGridY !== 'undefined' && y !== targetGridY)\r\n              )\r\n            {\r\n                return;\r\n            }\r\n\r\n            if(!this.isPlayable(tile))\r\n            {\r\n                return;\r\n            }\r\n\r\n            const targetTileType = tile.tileType;\r\n            const matchedXTiles = [];\r\n            const matchedYTiles = [];\r\n\r\n            // Check for matches to the right\r\n            let currX = (x + 1);\r\n            while(currX < self.tileGridWidth)\r\n            {\r\n                const currTile = self.tileGrid[y][currX];\r\n\r\n                if(currTile != null && targetTileType.name === currTile.tileType.name)\r\n                {\r\n                    matchedXTiles.push(currTile);\r\n                }\r\n                else\r\n                {\r\n                    break;\r\n                }\r\n\r\n                currX++;\r\n            }\r\n\r\n            // Check for matches to the left\r\n            currX = (x - 1);\r\n            while(currX > 0)\r\n            {\r\n                const currTile = self.tileGrid[y][currX];\r\n\r\n                if(currTile != null && targetTileType.name === currTile.tileType.name)\r\n                {\r\n                    matchedXTiles.push(currTile);\r\n                }\r\n                else\r\n                {\r\n                    break;\r\n                }\r\n\r\n                currX--;\r\n            }\r\n\r\n            // Check matches downwards\r\n            let currY = (y + 1);\r\n            while(currY < self.tileGridHeight)\r\n            {\r\n                const currTile = self.tileGrid[currY][x];\r\n\r\n                if(currTile != null && targetTileType.name === currTile.tileType.name)\r\n                {\r\n                    matchedYTiles.push(currTile);\r\n                }\r\n                else\r\n                {\r\n                    break;\r\n                }\r\n\r\n                currY++;\r\n            }\r\n\r\n            // Check matches upwards\r\n            currY = (y - 1);\r\n            while(currY > 0)\r\n            {\r\n                const currTile = self.tileGrid[currY][x];\r\n\r\n                if(currTile != null && targetTileType === currTile.tileType)\r\n                {\r\n                    matchedYTiles.push(currTile);\r\n                }\r\n                else\r\n                {\r\n                    break;\r\n                }\r\n\r\n                currY--;\r\n            }\r\n            \r\n            if(matchedYTiles.length > 1)\r\n            {\r\n                matchedTiles.push(...matchedYTiles);\r\n            }\r\n            \r\n            if(matchedXTiles.length > 1)\r\n            {\r\n                matchedTiles.push(...matchedXTiles);\r\n            }\r\n\r\n            if(matchedYTiles.length > 1 || matchedXTiles.length > 1)\r\n            {\r\n                matchedTiles.push(tile);\r\n            }\r\n        });\r\n\r\n        return matchedTiles;\r\n    }\r\n\r\n    forEachTile(callback)\r\n    {\r\n        for(let y = 0; y < this.tileGridHeight * 2; y++)\r\n        {\r\n            for(let x = 0; x < this.tileGridWidth; x++)\r\n            {\r\n                callback(this.tileGrid[y][x], x, y);\r\n            }\r\n        }\r\n    }\r\n\r\n    forEachPlayableTile(callback)\r\n    {\r\n        for(let y = this.tileGridHeight; y < this.tileGridHeight * 2; y++)\r\n        {\r\n            for(let x = 0; x < this.tileGridWidth; x++)\r\n            {\r\n                callback(this.tileGrid[y][x], x, y);\r\n            }\r\n        }\r\n    }\r\n\r\n    createTile(tileType, x, y)\r\n    {\r\n        return new Tile(tileType, this.getTileX(x), this.getTileY(y), x, y, this.onTileSelect);\r\n    }\r\n\r\n    getTileDrop(context, tile, x, y)\r\n    {\r\n        return tile.updatePosition(context, this.getTileX(x), this.getTileY(y), x, y);\r\n    }\r\n\r\n    getTileX(x)\r\n    {\r\n        return this.offsetX + (this.tileSize * x);\r\n    }\r\n\r\n    getTileY(y)\r\n    {\r\n        return this.offsetY + (this.tileSize * y);\r\n    }\r\n\r\n    canSelect(tile)\r\n    {\r\n        return this.isPlayable(tile);\r\n    }\r\n\r\n    isPlayable(tile)\r\n    {\r\n        return (tile != null) && (tile.tileGridY > (this.tileGridHeight - 1));\r\n    }\r\n\r\n    getTileType(x, y, behavior)\r\n    {\r\n        const aboveTile = (y < 1) ? null : this.tileGrid[y - 1][x];\r\n        const belowTile = (y > self.tileGridHeight - 1 || !this.tileGrid[y + 1]) ? null : this.tileGrid[y + 1][x];\r\n\r\n        const leftTile = (x < 1) ? null : this.tileGrid[y][x - 1];\r\n        const rightTile = (x > self.tileGridWidth - 1) ? null : this.tileGrid[y][x + 1];\r\n\r\n        if(behavior == TileGenerationBehavior.EasyWin && (aboveTile != null || belowTile != null || leftTile != null || rightTile != null))\r\n        {\r\n            return getRandomItem([aboveTile, belowTile, leftTile, rightTile].filter(t => t != null).map(t => t.tileType));\r\n        }\r\n        else\r\n        {\r\n            return getRandomItem(TileType.filter(t =>\r\n                (aboveTile === null || t.name !== aboveTile.tileType.name) &&\r\n                (leftTile === null || t.name !== leftTile.tileType.name)\r\n            ));\r\n        }\r\n    }\r\n}","import TileState from './TileState';\r\n\r\nexport default class {\r\n\r\n    constructor(tileType, x, y, tileGridX, tileGridY, onTileSelect)\r\n    {\r\n        this.tileType = tileType;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.tileGridX = tileGridX;\r\n        this.tileGridY = tileGridY;\r\n        this.onTileSelect = onTileSelect;\r\n        this.image = null;\r\n        this.state = TileState.Active;\r\n        this.isActivated = false;\r\n    }\r\n\r\n    create(context)\r\n    {\r\n        this.image = context.add.image(this.x, this.y, this.tileType.imageKey);\r\n        this.image.setInteractive();\r\n        this.image.on('pointerdown', () => { this.onTileSelect(context, this); });\r\n    }\r\n\r\n    activate()\r\n    {\r\n        this.isActivated = true;\r\n        this.image.setTintFill(0xffffff);\r\n    }\r\n\r\n    deactivate()\r\n    {\r\n        this.isActivated = false;\r\n        this.image.clearTint();\r\n    }\r\n\r\n    updatePosition(context, x, y, tileGridX, tileGridY)\r\n    {\r\n        let self = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            self.x = x;\r\n            self.y = y;\r\n            self.tileGridX = tileGridX;\r\n            self.tileGridY = tileGridY;\r\n\r\n            context.tweens.add({\r\n                targets: self.image,\r\n                x: x,\r\n                y: y,\r\n                ease: 'Power1',\r\n                duration: 500,\r\n                onComplete: () => { resolve() }\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n    destroy(context, container)\r\n    {\r\n        let self = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            context.tweens.add({\r\n                targets: self.image,\r\n                alpha: 0,\r\n                ease: 'Power1',\r\n                duration: 500,\r\n                onComplete: () => {\r\n\r\n                    container.remove(self.image);\r\n                    self.image.destroy();\r\n                    self.state = TileState.Destroyed;\r\n                    resolve();\r\n\r\n                }\r\n            });\r\n\r\n        });\r\n    }\r\n}","import ActionQueue from '../ActionQueue';\r\nimport DialogManager from '../DialogManager';\r\nimport Guide from '../Guide';\r\nimport ScoreDisplay from '../ScoreDisplay';\r\nimport TileGrid from '../TileGrid';\r\nimport Timer from '../Timer';\r\n\r\nexport default class extends Phaser.Scene {\r\n\r\n    constructor()\r\n    {\r\n        super('RoundScene');\r\n\r\n        this.isAwaitingRoundTransition = false;\r\n\r\n        this.score = null;\r\n        this.queue = null;\r\n        this.selectedTiles = null;\r\n        this.tileGrid = null;\r\n        this.scoreDisplay = null;\r\n        this.timer = null;\r\n \r\n        this.guide = null;\r\n        this.level = null;\r\n\r\n        this.comboCount = null;\r\n        this.totalMatches = null;\r\n    }\r\n\r\n    preload()\r\n    {\r\n        // Images: Tiles\r\n        this.load.image('tile_01', 'assets/tile_01.png');\r\n        this.load.image('tile_02', 'assets/tile_02.png');\r\n        this.load.image('tile_03', 'assets/tile_03.png');\r\n        this.load.image('tile_04', 'assets/tile_04.png');\r\n\r\n        // Images: Guide\r\n        this.load.image('guide_character', 'assets/guide.png');\r\n\r\n        // Images: Background\r\n        this.load.image('background', 'assets/background.png');\r\n    }\r\n\r\n    init(data)\r\n    {\r\n        this.level = data.level;\r\n    }\r\n\r\n    create()\r\n    {\r\n        this.score = 0;\r\n        this.comboCount = 0;\r\n        this.totalMatches = 0;\r\n\r\n        this.queue = new ActionQueue();\r\n\r\n        this.add.image(400, 400, 'background');\r\n\r\n        this.selectedTiles = [];\r\n        this.tileGrid = new TileGrid(6, 6, 80, 325, -265, this.onTileSelect, this.onTileMatch, this.queue);\r\n        this.scoreDisplay = new ScoreDisplay(100, 580);\r\n\r\n        const timerSeconds = this.getTimerSeconds(this.level);\r\n        this.timer = (timerSeconds > 0) ? new Timer(5, 570, timerSeconds) : null;\r\n\r\n        const dialogManager = new DialogManager();\r\n        const script = dialogManager.getScript(this.level);\r\n        this.guide = new Guide(20, 20, script);\r\n\r\n        this.tileGrid.create(this);\r\n        this.scoreDisplay.create(this);\r\n        this.timer && this.timer.create(this);\r\n        this.guide.create(this);\r\n\r\n        const self = this;\r\n        this.input.on('pointerdown', () => { self.guide.progressDialogue(); });\r\n    }\r\n\r\n    update()\r\n    {\r\n        if(this.isAwaitingRoundTransition)\r\n        {\r\n            if(!this.guide.isBlockingGameplay)\r\n            {\r\n                this.scene.start('RoundTransitionScene', { nextLevel: (this.level + 1) });\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        // Have we run out of time?\r\n        if(this.timer != null && this.timer.seconds <= 0)\r\n        {\r\n            this.guide.displayGameOverMessage();\r\n            this.isAwaitingRoundTransition = true;\r\n            return;\r\n        }\r\n\r\n        if(this.isLevelComplete())\r\n        {\r\n            this.scene.start('RoundTransitionScene', { nextLevel: (this.level + 1) });\r\n            return;\r\n        }\r\n\r\n        // Are we currently executing a queued action?\r\n        if(this.queue.isActionRunning())\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Do we have any queued actions on the stack?\r\n        if(this.queue.hasActions())\r\n        {\r\n            this.queue.next();\r\n            return;\r\n        }\r\n\r\n        // If nothing's left in the queue, we can move the game's state forward\r\n        this.tileGrid.update(this);\r\n    }\r\n\r\n    onTileSelect(context, tile)\r\n    {\r\n        // Are we currently executing a queued action?\r\n        if(context.queue.isActionRunning())\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Is the guide currently blocking gameplay?\r\n        if(context.guide.isBlockingGameplay)\r\n        {\r\n            return;\r\n        }\r\n    \r\n        // Can we select this tile?\r\n        if(!context.tileGrid.canSelect(tile))\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Is this tile already selected?\r\n        if(tile.isActivated)\r\n        {\r\n            context.selectedTiles = [];\r\n            tile.deactivate();\r\n            return;\r\n        }\r\n    \r\n        if(context.selectedTiles.length === 0)\r\n        {\r\n            context.selectedTiles.push(tile);\r\n            tile.activate();\r\n            return;\r\n        }\r\n    \r\n        if(context.selectedTiles.length === 1)\r\n        {\r\n            const selectedTile = context.selectedTiles[0];\r\n            const xDiff = Math.abs(selectedTile.tileGridX - tile.tileGridX);\r\n            const yDiff = Math.abs(selectedTile.tileGridY - tile.tileGridY);\r\n    \r\n            if((xDiff === 1 && yDiff === 0) || (xDiff === 0 && yDiff === 1))\r\n            {\r\n                context.selectedTiles.push(tile);\r\n    \r\n                let firstSelectedTile = context.selectedTiles[0];\r\n                let secondSelectedTile = context.selectedTiles[1];\r\n    \r\n                context.tileGrid.swapTiles(context, firstSelectedTile, secondSelectedTile);\r\n    \r\n                context.queue.push(() => {\r\n    \r\n                    // If there are no matches, swap the tiles back\r\n                    if(\r\n                        !context.tileGrid.hasMatches(firstSelectedTile.tileGridX, firstSelectedTile.tileGridY) &&\r\n                        !context.tileGrid.hasMatches(secondSelectedTile.tileGridX, secondSelectedTile.tileGridY)\r\n                    )\r\n                    {\r\n                        context.tileGrid.swapTiles(context, firstSelectedTile, secondSelectedTile);\r\n                    }\r\n    \r\n                    return Promise.resolve();\r\n    \r\n                });\r\n    \r\n                context.selectedTiles.forEach((tile) => { tile.deactivate(); });\r\n                context.selectedTiles = [];\r\n                \r\n                context.comboCount = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    onTileMatch(context, matchedTiles)\r\n    {\r\n        context.comboCount++;\r\n        context.totalMatches++;\r\n\r\n        context.score += (matchedTiles.length * context.comboCount);\r\n        context.scoreDisplay.updateScore(context.score);\r\n\r\n        context.guide.displayTileMatchMessage(context, {\r\n            comboCount: context.comboCount,\r\n            totalMatches: context.totalMatches\r\n        });\r\n\r\n        if(context.comboCount > 1)\r\n        {\r\n            context.scoreDisplay.updateCombo(`${context.comboCount}x multiplier!`);\r\n        }\r\n        else\r\n        {\r\n            context.scoreDisplay.updateCombo('');\r\n        }\r\n    }\r\n\r\n    isLevelComplete()\r\n    {\r\n        if(this.level === 0 && this.score >= 100)\r\n        {\r\n            return true;\r\n        }\r\n\r\n        if(this.level === 1 && this.score >= 200)\r\n        {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getTimerSeconds(level)\r\n    {\r\n        switch(level)\r\n        {\r\n            case 1:\r\n                return 120;\r\n    \r\n            case 2:\r\n                return 30;\r\n\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n    \r\n}","export default class {\r\n\r\n    constructor()\r\n    {\r\n        this.queuedActions = [];\r\n        this.currentAction = null;\r\n    }\r\n\r\n    isActionRunning()\r\n    {\r\n        return this.currentAction != null;\r\n    }\r\n\r\n    hasActions()\r\n    {\r\n        return this.queuedActions.length > 0;\r\n    }\r\n\r\n    next()\r\n    {\r\n        this.currentAction = this.queuedActions.shift();\r\n        this.currentAction();\r\n    }\r\n\r\n    push(action)\r\n    {\r\n        var self = this;\r\n        self.queuedActions.push(() => { action().then(() => { self.currentAction = null; }) });\r\n    }\r\n\r\n}","export default class {\r\n\r\n    constructor(x, y)\r\n    {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.scoreText = null;\r\n        this.comboText = null;\r\n        this.score = 0;\r\n    }\r\n\r\n    create(context)\r\n    {\r\n        this.scoreText = context.add.text(this.x, this.y, this.score);\r\n        this.updateScore(this.score);\r\n\r\n        this.comboText = context.add.text(this.x, this.y + 20, '');\r\n    }\r\n\r\n    updateScore(score)\r\n    {\r\n        this.score = score;\r\n        this.scoreText.setText(score + ' dew drops');\r\n    }\r\n\r\n    updateCombo(text)\r\n    {\r\n        this.comboText.setText(text);\r\n    }\r\n}","export default class {\r\n\r\n    constructor(x, y, seconds)\r\n    {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.text = null;\r\n        this.seconds = seconds;\r\n    }\r\n\r\n    create(context)\r\n    {\r\n        this.text = context.add.text(this.x, this.y, this.score);\r\n        \r\n        this.tick();\r\n        context.time.addEvent({ delay: 1000, callback: this.tick, callbackScope: this, loop: true })\r\n    }\r\n\r\n    tick()\r\n    {\r\n        if(this.seconds <= 0)\r\n        {\r\n            return;\r\n        }\r\n\r\n        this.seconds--;\r\n\r\n        // Display the remaining time\r\n        const minutes = Math.floor(this.seconds / 60);\r\n\r\n        let seconds = (this.seconds % 60);\r\n        if(seconds < 10)\r\n        {\r\n            seconds = '0' + seconds;\r\n        }\r\n\r\n        this.text.setText(`${minutes}:${seconds}`);\r\n    }\r\n}","import DialogScript from \"./DialogScript\";\r\n\r\nexport default class {\r\n\r\n    getScript(level)\r\n    {\r\n        const script = new DialogScript();\r\n\r\n        switch(level)\r\n        {\r\n            // Level 0 (Intro)\r\n            case 0:\r\n\r\n                script.introMessages = [\r\n                    `*Oh, doozle, you made it!* You're here! (Click or tap anywhere!)`,\r\n                    `The Dew Drop Kingdom is in trouble!`,\r\n                    `We lost all of our dew drops and now we'll starve!`,\r\n                    `But you can help us by collecting as many dew drops as you can!`,\r\n                    \"If you match three or more dew drops of the same color, we can collect them!\",\r\n                    \"To make a match, select two dew drops and swap their places!\"\r\n                ];\r\n\r\n                script.getDisplayTileMatchMessages = (data) => {\r\n\r\n                    if(data.totalMatches === 1)\r\n                    {\r\n                        return [\r\n                            \"You got it! That's it!\",\r\n                            \"You collect extra dew drops when you chain together matches in a combo!\",\r\n                            \"See if you can collect 100 dew drops!\"\r\n                        ];\r\n                    }\r\n\r\n                };\r\n\r\n                break;\r\n\r\n            // Level 1 (Timer Intro)\r\n            case 1:\r\n\r\n                script.introMessages = [\r\n                    \"*Oh, doozle!* You're so good at this!\",\r\n                    \"But, we'll have to hurry this time!\",\r\n                    \"We only have two minutes before the sun dries up all the dew drops!\",\r\n                    \"Collect at least 200 dew drops in two minutes!\"\r\n                ];\r\n\r\n                break;\r\n\r\n            // Level 2 (Breaking the Fourth Wall)\r\n            case 2:\r\n\r\n                script.introMessages = [\r\n                    \"Wow, we're so proud of you!\",\r\n                    \"This round you'll only have 30 seconds to collect at least 300 dew drops!\"\r\n                ];\r\n\r\n                script.getGameOverMessages = () => {\r\n                    return [\r\n                        \"Wait, wait, sorry, hold on.\",\r\n                        \"It's too early for the *\\\"Lose in a Panic\\\"* scenario.\",\r\n                        \"So sorry about that.\",\r\n                        \"You've been really great so far, honestly.\",\r\n                        \"You know, what, let's just go to the next round and we'll take it from the top.\"\r\n                    ];\r\n                };\r\n\r\n                break;\r\n\r\n            // Level 3 (Easy Win)\r\n            case 3:\r\n\r\n                script.introMessages = [\r\n                    \"Alright, I think we've got everything figured out.\",\r\n                    \"Okay, for this next round, let me set you up:\",\r\n                    \"Remember, you've been winnig the last few rounds and you're gaining confidence.\",\r\n                    \"In this round, it's going to be easy for you to get combos.\",\r\n                    \"So the idea here is that you're going to get a little too confident, right?\",\r\n                    \"Like a little full of yourself, alright?\",\r\n                    \"Okay, great! Let's do this:\"\r\n                ];\r\n\r\n                break;\r\n\r\n            // Level 4 (Losing Confidence)\r\n            case 4:\r\n\r\n                script.introMessages = [\r\n                    \"Okay, okay, great stuff.\",\r\n                    \"For this round, you're bringing all of that pride, all of that hubris.\",\r\n                    \"And, when the round starts, things are still going your way.\",\r\n                    \"But guess what?\",\r\n                    \"Halfway through this round, things start getting a little harder.\",\r\n                    \"This is where we to start your chip away at your pride as the player.\"\r\n                ];\r\n\r\n                break;\r\n\r\n            // Level 5 (Fall From Grace)\r\n            case 5:\r\n\r\n                script.introMessages = [\r\n                    \"Wow, really moving work. It feels so authentic.\",\r\n                    \"It's been a joy working with you.\",\r\n                    \"Okay, here we go, this is a pivotal scene:\",\r\n                    \"This round will not go your way at all. At all.\",\r\n                    \"This is your fall from grace.\",\r\n                ];\r\n\r\n                break;\r\n\r\n            // Level 6 (Wallowing)\r\n            case 6:\r\n\r\n                script.introMessages = [\r\n                    \"Okay, let's move right into the next scene:\",\r\n                    \"Here, you are wallowing, right?\",\r\n                    \"You are in the pit of despair and you can't see a way out.\",\r\n                    \"This round won't be particularly hard, but you can't seem to find any matches.\"\r\n                ];\r\n\r\n                break;\r\n\r\n            // Level 7 (Pheonix Rises)\r\n            case 7:\r\n\r\n                script.introMessages = [\r\n                    \"Now, you've been wallowing. You've feeling really low.\",\r\n                    \"You're in such despair, that in this round...\",\r\n                    \"There's an obvious combo.\",\r\n                    \"Right there, right in front of your face.\",\r\n                    \"But you can't see it through the despair.\",\r\n                    \"But then, in the last ten seconds of the round, you see it.\",\r\n                    \"Boom, it's the perfect match.\",\r\n                    \"And the pheonix rises once again!\"\r\n                ];\r\n\r\n                break;\r\n\r\n            // Level 8 (Victory Lap)\r\n            case 8:\r\n\r\n                script.introMessages = [\r\n                    \"Our hero is back!\",\r\n                    \"This final scene is our victory lap.\",\r\n                    \"However, we don't want too many combos in this round, right?\",\r\n                    \"This is a round the player wins on their own.\",\r\n                    \"No assistance from the game.\",\r\n                    \"A true hero's victory!\",\r\n                    \"Alright, let's do this: I've got an appointment after this.\"\r\n                ];\r\n\r\n                break;\r\n\r\n        }\r\n\r\n        return script;\r\n    }\r\n\r\n}","export default class {\r\n\r\n    constructor()\r\n    {\r\n        this.introMessages = [];\r\n        this.getDisplayTileMatchMessages = () => {};\r\n    }\r\n}","import TagText from 'phaser3-rex-plugins/plugins/tagtext.js';\r\nimport TextTyping from 'phaser3-rex-plugins/plugins/texttyping.js';\r\n\r\nexport default class {\r\n\r\n    constructor(x, y, script)\r\n    {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.script = script;\r\n\r\n        this.queuedMessages = null;\r\n        this.isPaused = false;\r\n        this.isBlockingGameplay = false;\r\n\r\n        this.endDialogueMarkerGraphics = null;\r\n    }\r\n\r\n    create(context)\r\n    {\r\n        const self = this;\r\n\r\n        const speechBubbleWidth = 760;\r\n        const speechBubbleHeight = 130;\r\n\r\n        const endDialogueMarkerRadius = 10;\r\n        \r\n        const characterWidth = 250;\r\n        const characterHeight = 500;\r\n\r\n        // Speech Bubble\r\n        const speechBubbleGraphics = context.add.graphics({ fillStyle: { color: 0xffffff } });\r\n        speechBubbleGraphics.fillRoundedRect(this.x, this.y, speechBubbleWidth, speechBubbleHeight, 10);\r\n        speechBubbleGraphics.fillTriangle(\r\n            this.x + 120, this.y + speechBubbleHeight + 20,\r\n            this.x + 105, this.y + speechBubbleHeight,\r\n            this.x + 135, this.y + speechBubbleHeight\r\n        );\r\n\r\n        // End Dialogue Marker\r\n        this.endDialogueMarkerGraphics = context.add.graphics({ fillStyle: { color: 0xcccccc } });\r\n        this.hideEndDialogueMarker();\r\n        const endDialogueMarker = new Phaser.Geom.Circle(\r\n            this.x + speechBubbleWidth - endDialogueMarkerRadius - 15,\r\n            this.y + speechBubbleHeight - endDialogueMarkerRadius - 15,\r\n            endDialogueMarkerRadius);\r\n        this.endDialogueMarkerGraphics.fillCircleShape(endDialogueMarker);\r\n\r\n        context.tweens.add({\r\n            targets: this.endDialogueMarkerGraphics,\r\n            alpha: 0,\r\n            duration: 500,\r\n            repeat: -1,\r\n            yoyo: true\r\n        });\r\n\r\n        // Speech Bubble Text\r\n        const speechBubbleTextStyle = {\r\n            color: '#000',\r\n            wrap: {\r\n                mode: 'word',\r\n                width: speechBubbleWidth\r\n            },\r\n            tags: {\r\n                exclamation: {\r\n                    fontStyle: 'bold'\r\n                }\r\n            }\r\n        };\r\n        \r\n        this.speechBubbleText = new TagText(context, this.x + 15, this.y + 15, '', speechBubbleTextStyle);\r\n        context.add.existing(this.speechBubbleText);\r\n\r\n        // Speech Bubble Text Typing\r\n        this.speechBubbleTextTyping = new TextTyping(this.speechBubbleText, { speed: 30 }); \r\n        this.speechBubbleTextTyping.on('complete', () => { self.onMessageComplete.call(self) });\r\n\r\n        // Character\r\n        context.add.image(this.x + (characterWidth/2), this.y + speechBubbleHeight + 230, 'guide_character');\r\n\r\n        self.queueMessages(context, this.script.introMessages);\r\n    }\r\n\r\n    queueMessages(context, messages)\r\n    {\r\n        if(!messages)\r\n        {\r\n            return;\r\n        }\r\n\r\n        const self = this;\r\n\r\n        if(self.queuedMessages === null)\r\n        {\r\n            self.queuedMessages = [];\r\n        }\r\n\r\n        self.queuedMessages.push(...messages);\r\n\r\n        if(self.speechBubbleTextTyping.isTyping)\r\n        {\r\n            return;\r\n        }\r\n\r\n        self.isBlockingGameplay = true;\r\n        self.progressDialogue();\r\n    }\r\n\r\n    onMessageComplete()\r\n    {\r\n        this.showEndDialogueMarker();\r\n        if(this.queuedMessages.length === 0)\r\n        {\r\n            this.isBlockingGameplay = false;\r\n            return;\r\n        }\r\n    }\r\n\r\n    displayTileMatchMessage(context, data)\r\n    {\r\n        const messages = this.script.getDisplayTileMatchMessages(data);\r\n        this.queueMessages(context, messages);\r\n    }\r\n\r\n    displayGameOverMessage(context)\r\n    {\r\n        const messages = this.script.getGameOverMessages();\r\n        this.queueMessages(context, messages);\r\n    }\r\n\r\n    progressDialogue()\r\n    {\r\n        this.hideEndDialogueMarker();\r\n        if(this.queuedMessages.length > 0)\r\n        {\r\n            const message = this.convertDialogToTagText(this.queuedMessages.shift());\r\n            this.speechBubbleTextTyping.start(message);\r\n        }\r\n    }\r\n\r\n    showEndDialogueMarker()\r\n    {\r\n        this.endDialogueMarkerGraphics.setVisible(true);\r\n    }\r\n\r\n    hideEndDialogueMarker()\r\n    {\r\n        this.endDialogueMarkerGraphics.setVisible(false);\r\n    }\r\n\r\n    convertDialogToTagText(input)\r\n    {\r\n        const styles = [\r\n            { token: '*', className: 'exclamation' },\r\n            { token: '_', className: 'underline'}\r\n        ];    \r\n\r\n        let output = '';\r\n        let currClass = '';\r\n    \r\n        for(let i=0; i<input.length; i++)\r\n        {\r\n            const currChar = input[i];\r\n            const isStyleToken = styles.some(style => style.token === currChar);\r\n    \r\n            // If the first character isn't a style token, then\r\n            // we need to open a \"normal\" class tag\r\n            if(i === 0 && !isStyleToken)\r\n            {\r\n                output += '<class=\"normal\">';\r\n                currClass = 'normal';\r\n            }\r\n    \r\n            // If the last character is a style token, we ignore it\r\n            // since we'll always end with a closing class tag anyway\r\n            if(i === input.length - 1 && isStyleToken)\r\n            {\r\n                continue;\r\n            }\r\n    \r\n            if(isStyleToken)\r\n            {\r\n                const targetStyle = styles.find(style => style.token === currChar);\r\n    \r\n                // If we've encountered a token of the class we already have open,\r\n                // that means we need to close the class\r\n                if(currClass === targetStyle.className)\r\n                {\r\n                    output += '</class>';\r\n                    output += '<class=\"normal\">';\r\n                    currClass = 'normal';\r\n                }\r\n    \r\n                // Otherwise, we need to close the existing the class and\r\n                // open the new class\r\n                else\r\n                {\r\n                    if(i !== 0)\r\n                    {\r\n                        output += '</class>';\r\n                    }\r\n    \r\n                    output += `<class=\"${targetStyle.className}\">`;\r\n                    currClass = targetStyle.className;\r\n                }\r\n            }\r\n            else\r\n            {\r\n                output += input[i];\r\n            }\r\n        }\r\n    \r\n        output += '</class>';\r\n        return output;\r\n    }\r\n}","export default class extends Phaser.Scene {\r\n\r\n    constructor()\r\n    {\r\n        super('RoundTransitionScene');\r\n\r\n        this.nextLevel = 0;\r\n    }\r\n\r\n    init(data)\r\n    {\r\n        this.nextLevel = data.nextLevel;\r\n    }\r\n\r\n    create()\r\n    {\r\n        const self = this;\r\n\r\n        // Title\r\n        this.add.text(50, 50, `Round ${self.nextLevel}`);\r\n\r\n        this.time.addEvent({ delay: 1000, callback: function() { self.scene.start('RoundScene', { level: self.nextLevel }) }, callbackScope: this })\r\n    }\r\n    \r\n}","export default class extends Phaser.Scene {\r\n\r\n    constructor()\r\n    {\r\n        super('GameOverScene');\r\n\r\n        this.finalScore = 0;\r\n    }\r\n\r\n    init(data)\r\n    {\r\n        this.finalScore = data.score;\r\n    }\r\n\r\n    create()\r\n    {\r\n        const self = this;\r\n\r\n        // Title\r\n        this.add.text(50, 50, 'Game Over!');\r\n\r\n        // Score\r\n        this.add.text(50, 100, `Final Score: ${this.finalScore}`);\r\n\r\n        // \"Return to Main Menu\" Button\r\n        const startOverBtn = this.add.text(50, 150, 'Return to Main Menu');\r\n        startOverBtn.setInteractive();\r\n        startOverBtn.on('pointerdown', () => { self.scene.start('TitleScene'); });\r\n    }\r\n    \r\n}","import TitleScene from './scenes/TitleScene';\r\nimport RoundScene from './scenes/RoundScene';\r\nimport RoundTransitionScene from './scenes/RoundTransitionScene';\r\nimport GameOverScene from './scenes/GameOverScene';\r\n\r\nconst config = {\r\n    type: Phaser.AUTO,\r\n    width: 800,\r\n    height: 800,\r\n    scene: [TitleScene, RoundScene, RoundTransitionScene, GameOverScene]\r\n};\r\n\r\nconst game = new Phaser.Game(config);"],"sourceRoot":""}