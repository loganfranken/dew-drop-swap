{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./script/Utility.js","webpack:///./script/Tile.js","webpack:///./script/TileType.js","webpack:///./script/main.js","webpack:///./script/TileGrid.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getRandomItem","items","Math","floor","random","length","Tile","[object Object]","tileType","x","y","this","context","add","image","imageKey","TileType","config","type","Phaser","AUTO","width","height","scene","preload","load","tileGrid","update","Game","tileWidth","tileHeight","offsetX","offsetY"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","// Source: https://stackoverflow.com/questions/5915096/get-random-item-from-javascript-array\r\nconst getRandomItem = (items) => {\r\n    return items[Math.floor(Math.random() * items.length)];\r\n}\r\n\r\nexport {\r\n    getRandomItem\r\n}","export default class {\r\n\r\n    constructor(tileType, x, y)\r\n    {\r\n        this.tileType = tileType;\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    create(context)\r\n    {\r\n        context.add.image(this.x, this.y, this.tileType.imageKey);\r\n    }\r\n\r\n}","export default [\r\n    { imageKey: 'tile_01' },\r\n    { imageKey: 'tile_02' },\r\n    { imageKey: 'tile_03' },\r\n    { imageKey: 'tile_04' }\r\n];","import TileGrid from './TileGrid';\r\n\r\nconst config = {\r\n    type: Phaser.AUTO,\r\n    width: 800,\r\n    height: 600,\r\n    scene: {\r\n        preload: preload,\r\n        create: create,\r\n        update: update\r\n    }\r\n};\r\n\r\nconst game = new Phaser.Game(config);\r\nconst tileGrid = new TileGrid(10, 10, 50, 50);\r\n\r\nfunction preload()\r\n{\r\n    this.load.image('tile_01', 'assets/tile_01.png');\r\n    this.load.image('tile_02', 'assets/tile_02.png');\r\n    this.load.image('tile_03', 'assets/tile_03.png');\r\n    this.load.image('tile_04', 'assets/tile_04.png');\r\n}\r\n\r\nfunction create()\r\n{\r\n    tileGrid.create(this);\r\n}\r\n\r\nfunction update() {\r\n}","import { getRandomItem } from './Utility';\r\nimport Tile from './Tile';\r\nimport TileType from './TileType';\r\n\r\nexport default class {\r\n\r\n    constructor(tileWidth, tileHeight, offsetX, offsetY)\r\n    {\r\n        this.offsetX = offsetX;\r\n        this.offsetY = offsetY;\r\n        this.tileHeight = tileHeight;\r\n        this.tileWidth = tileWidth;\r\n        this.tileGrid = [];\r\n\r\n        for(let y = 0; y < tileHeight; y++)\r\n        {\r\n            this.tileGrid[y] = [];\r\n            for(let x = 0; x < tileWidth; x++)\r\n            {\r\n                this.tileGrid[y][x] = new Tile(getRandomItem(TileType), this.offsetX + (50 * x), this.offsetY + (50 * y));\r\n            }\r\n        }\r\n    }\r\n\r\n    create(context)\r\n    {\r\n        for(let y = 0; y < this.tileHeight; y++)\r\n        {\r\n            for(let x = 0; x < this.tileWidth; x++)\r\n            {\r\n                this.tileGrid[y][x].create(context);            \r\n            }\r\n        }\r\n    }\r\n}"],"sourceRoot":""}