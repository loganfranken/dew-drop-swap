!function(e){var t={};function i(l){if(t[l])return t[l].exports;var s=t[l]={i:l,l:!1,exports:{}};return e[l].call(s.exports,s,s.exports,i),s.l=!0,s.exports}i.m=e,i.c=t,i.d=function(e,t,l){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:l})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var l=Object.create(null);if(i.r(l),Object.defineProperty(l,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)i.d(l,s,function(t){return e[t]}.bind(null,s));return l},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=0)}([function(e,t,i){"use strict";i.r(t);const l=e=>e[Math.floor(Math.random()*e.length)];var s=0,r=1,n=[{name:"Blue",imageKey:"tile_01"},{name:"Green",imageKey:"tile_02"},{name:"Red",imageKey:"tile_03"},{name:"Yellow",imageKey:"tile_04"}];const a={type:Phaser.AUTO,width:800,height:600,scene:{preload:function(){this.load.image("tile_01","assets/tile_01.png"),this.load.image("tile_02","assets/tile_02.png"),this.load.image("tile_03","assets/tile_03.png"),this.load.image("tile_04","assets/tile_04.png")},create:function(){u.create(this)},update:function(){if(o.isActionRunning())return;if(o.hasActions())return void o.next();u.update(this)}}},o=(new Phaser.Game(a),new class{constructor(){this.queuedActions=[],this.currentAction=null}isActionRunning(){return null!=this.currentAction}hasActions(){return this.queuedActions.length>0}next(){this.currentAction=this.queuedActions.shift(),this.currentAction()}push(e){var t=this;t.queuedActions.push(()=>{e().then(()=>{t.currentAction=null})})}});let h=[];const u=new class{constructor(e,t,i,s,r,a,o){this.offsetX=s,this.offsetY=r,this.tileSize=i,this.tileGridHeight=t,this.tileGridWidth=e,this.tileGrid=[],this.tileImageContainer=null,this.playAreaOffset=this.tileGridHeight*this.tileSize,this.onTileSelect=a,this.queue=o;for(let i=0;i<2*t;i++){this.tileGrid[i]=[];for(let t=0;t<e;t++){const e=i<1?null:this.tileGrid[i-1][t],s=t<1?null:this.tileGrid[i][t-1],r=l(n.filter(t=>!(null!==e&&t.name===e.tileType.name||null!==s&&t.name===s.tileType.name)));this.tileGrid[i][t]=this.createTile(r,t,i)}}}create(e){this.tileImageContainer=e.add.container(),this.forEachTile(t=>{t.create(e),this.tileImageContainer.add(t.image)});const t=e.make.graphics();t.fillStyle(16777215,1),t.fillRect(this.offsetX/2,this.offsetY/2,this.tileGridWidth*this.tileSize,this.tileGridHeight*this.tileSize),this.tileImageContainer.mask=new Phaser.Display.Masks.GeometryMask(e,t)}update(e){const t=this,i=t.getMatches();let l=[];i.forEach(t=>{l.push(t.destroy(e,this.tileImageContainer))}),l.length>0&&t.queue.push(()=>Promise.all(l));let s=[];t.forEachTile((e,i,l)=>{if(t.tileGrid[l][i].state===r){t.tileGrid[l][i]=null;let e=s.find(e=>e.x===i);void 0===e?s.push({x:i,y:l}):e.y=l}});let n=[];s.forEach(({x:i,y:l})=>{let s=null,r=l;for(;r>=0&&null==(s=t.tileGrid[r][i]);)r--;if(null!=s){let a=l;for(;r>=0;)null!==s?(t.tileGrid[r][i]=null,t.tileGrid[a][i]=s,n.push(this.getTileDrop(e,s,i,a)),a--,--r>=0&&(s=t.tileGrid[r][i])):(a--,r--)}}),n.length>0&&t.queue.push(()=>Promise.all(n))}swapTiles(e,t,i){let l=this;l.queue.push(()=>{let s=t.x,r=t.y,n=t.tileGridX,a=t.tileGridY,o=i.x,h=i.y,u=i.tileGridX,d=i.tileGridY,c=i.updatePosition(e,s,r,n,a);l.tileGrid[a][n]=i;let f=t.updatePosition(e,o,h,u,d);return l.tileGrid[d][u]=t,Promise.all([c,f])})}hasMatches(e,t){return this.getMatches(e,t).length>0}getMatches(e,t){const i=this,l=[];return i.forEachTile((s,r,n)=>{if(void 0!==e&&r!==e&&void 0!==t&&n!==t)return;const a=s.tileType,o=[],h=[];let u=r+1;for(;u<i.tileGridWidth;){const e=i.tileGrid[n][u];if(null==e||a.name!==e.tileType.name)break;o.push(e),u++}for(u=r-1;u>0;){const e=i.tileGrid[n][u];if(null==e||a.name!==e.tileType.name)break;o.push(e),u--}let d=n+1;for(;d<i.tileGridHeight;){const e=i.tileGrid[d][r];if(null==e||a.name!==e.tileType.name)break;h.push(e),d++}for(d=n-1;d>0;){const e=i.tileGrid[d][r];if(null==e||a!==e.tileType)break;h.push(e),d--}h.length>1&&l.push(...h),o.length>1&&l.push(...o),(h.length>1||o.length>1)&&l.push(s)}),l}forEachTile(e){for(let t=0;t<2*this.tileGridHeight;t++)for(let i=0;i<this.tileGridWidth;i++)null!=this.tileGrid[t][i]&&e(this.tileGrid[t][i],i,t)}createTile(e,t,i){return new class{constructor(e,t,i,l,r,n){this.tileType=e,this.x=t,this.y=i,this.tileGridX=l,this.tileGridY=r,this.onTileSelect=n,this.image=null,this.state=s}create(e){this.image=e.add.image(this.x,this.y,this.tileType.imageKey),this.image.setInteractive(),this.image.on("pointerdown",()=>{this.onTileSelect(e,this)})}activate(){this.image.setTintFill(16777215)}deactivate(){this.image.clearTint()}updatePosition(e,t,i,l,s){let r=this;return new Promise((n,a)=>{r.x=t,r.y=i,r.tileGridX=l,r.tileGridY=s,e.tweens.add({targets:r.image,x:t,y:i,ease:"Power1",duration:500,onComplete:()=>{n()}})})}destroy(e,t){let i=this;return new Promise((l,s)=>{e.tweens.add({targets:i.image,alpha:0,ease:"Power1",duration:500,onComplete:()=>{t.remove(i.image),i.image.destroy(),i.state=r,l()}})})}}(e,this.getTileX(t),this.getTileY(i),t,i,this.onTileSelect)}getTileDrop(e,t,i,l){return t.updatePosition(e,this.getTileX(i),this.getTileY(l),i,l)}getTileX(e){return this.offsetX+this.tileSize*e}getTileY(e){return this.offsetY+this.tileSize*e-this.playAreaOffset}}(10,10,50,50,50,function(e,t){if(o.isActionRunning())return;if(0===h.length)return h.push(t),void t.activate();if(1===h.length){const i=h[0],l=Math.abs(i.tileGridX-t.tileGridX),s=Math.abs(i.tileGridY-t.tileGridY);if(1===l&&0===s||0===l&&1===s){h.push(t);let i=h[0],l=h[1];u.swapTiles(e,i,l),o.push(()=>(u.hasMatches(i.tileGridX,i.tileGridY)||u.hasMatches(l.tileGridX,l.tileGridY)||u.swapTiles(e,i,l),Promise.resolve())),h.forEach(e=>{e.deactivate()}),h=[]}}},o)}]);
//# sourceMappingURL=bundle.js.map