!function(e){var t={};function i(l){if(t[l])return t[l].exports;var r=t[l]={i:l,l:!1,exports:{}};return e[l].call(r.exports,r,r.exports,i),r.l=!0,r.exports}i.m=e,i.c=t,i.d=function(e,t,l){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:l})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var l=Object.create(null);if(i.r(l),Object.defineProperty(l,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)i.d(l,r,function(t){return e[t]}.bind(null,r));return l},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=0)}([function(e,t,i){"use strict";i.r(t);const l=e=>e[Math.floor(Math.random()*e.length)];var r=0,n=1,s=[{name:"Blue",imageKey:"tile_01"},{name:"Green",imageKey:"tile_02"},{name:"Red",imageKey:"tile_03"},{name:"Yellow",imageKey:"tile_04"}];const a={type:Phaser.AUTO,width:800,height:600,scene:{preload:function(){this.load.image("tile_01","assets/tile_01.png"),this.load.image("tile_02","assets/tile_02.png"),this.load.image("tile_03","assets/tile_03.png"),this.load.image("tile_04","assets/tile_04.png")},create:function(){u.create(this)},update:function(){if(o.isActionRunning())return;if(o.hasActions())return void o.next();u.update(this)}}},o=(new Phaser.Game(a),new class{constructor(){this.queuedActions=[],this.currentAction=null}isActionRunning(){return null!=this.currentAction}hasActions(){return this.queuedActions.length>0}next(){this.currentAction=this.queuedActions.shift(),this.currentAction()}push(e){var t=this;t.queuedActions.push(()=>{e().then(()=>{t.currentAction=null})})}});let h=[];const u=new class{constructor(e,t,i,r,n,a,o){this.offsetX=r,this.offsetY=n,this.tileSize=i,this.tileGridHeight=t,this.tileGridWidth=e,this.tileGrid=[],this.playAreaOffset=this.tileGridHeight*this.tileSize,this.onTileSelect=a,this.queue=o;for(let i=0;i<2*t;i++){this.tileGrid[i]=[];for(let t=0;t<e;t++){const e=i<1?null:this.tileGrid[i-1][t],r=t<1?null:this.tileGrid[i][t-1],n=l(s.filter(t=>!(null!==e&&t.name===e.tileType.name||null!==r&&t.name===r.tileType.name)));this.tileGrid[i][t]=this.createTile(n,t,i)}}}create(e){this.forEachTile(t=>t.create(e))}update(e){const t=this,i=t.getMatches();let l=[];i.forEach(t=>{l.push(t.destroy(e))}),l.length>0&&t.queue.push(()=>Promise.all(l));let r=[];t.forEachTile((e,i,l)=>{if(t.tileGrid[l][i].state===n){t.tileGrid[l][i]=null;let e=r.find(e=>e.x===i);void 0===e?r.push({x:i,y:l}):e.y=l}});let s=[];r.forEach(({x:i,y:l})=>{let r=null,n=l;for(;n>=0&&null==(r=t.tileGrid[n][i]);)n--;if(null!=r){let a=l;for(;n>=0;)null!==r?(t.tileGrid[n][i]=null,t.tileGrid[a][i]=r,s.push(this.getTileDrop(e,r,i,a)),a--,--n>=0&&(r=t.tileGrid[n][i])):(a--,n--)}}),s.length>0&&t.queue.push(()=>Promise.all(s))}swapTiles(e,t,i){let l=this;l.queue.push(()=>{let r=t.x,n=t.y,s=t.tileGridX,a=t.tileGridY,o=i.x,h=i.y,u=i.tileGridX,d=i.tileGridY,c=i.updatePosition(e,r,n,s,a);l.tileGrid[a][s]=i;let f=t.updatePosition(e,o,h,u,d);return l.tileGrid[d][u]=t,Promise.all([c,f])})}hasMatches(e,t){return this.getMatches(e,t).length>0}getMatches(e,t){const i=this,l=[];return i.forEachTile((r,n,s)=>{if(void 0!==e&&n!==e&&void 0!==t&&s!==t)return;const a=r.tileType,o=[],h=[];let u=n+1;for(;u<i.tileGridWidth;){const e=i.tileGrid[s][u];if(null==e||a.name!==e.tileType.name)break;o.push(e),u++}for(u=n-1;u>0;){const e=i.tileGrid[s][u];if(null==e||a.name!==e.tileType.name)break;o.push(e),u--}let d=s+1;for(;d<i.tileGridHeight;){const e=i.tileGrid[d][n];if(null==e||a.name!==e.tileType.name)break;h.push(e),d++}for(d=s-1;d>0;){const e=i.tileGrid[d][n];if(null==e||a!==e.tileType)break;h.push(e),d--}h.length>1&&l.push(...h),o.length>1&&l.push(...o),(h.length>1||o.length>1)&&l.push(r)}),l}forEachTile(e){for(let t=0;t<2*this.tileGridHeight;t++)for(let i=0;i<this.tileGridWidth;i++)null!=this.tileGrid[t][i]&&e(this.tileGrid[t][i],i,t)}createTile(e,t,i){return new class{constructor(e,t,i,l,n,s){this.tileType=e,this.x=t,this.y=i,this.tileGridX=l,this.tileGridY=n,this.onTileSelect=s,this.image=null,this.state=r}create(e){this.image=e.add.image(this.x,this.y,this.tileType.imageKey),this.image.setInteractive(),this.image.on("pointerdown",()=>{this.onTileSelect(e,this)})}activate(){this.image.setTintFill(16777215)}deactivate(){this.image.clearTint()}updatePosition(e,t,i,l,r){let n=this;return new Promise((s,a)=>{n.x=t,n.y=i,n.tileGridX=l,n.tileGridY=r,e.tweens.add({targets:n.image,x:t,y:i,ease:"Power1",duration:500,onComplete:()=>{s()}})})}destroy(e){let t=this;return new Promise((i,l)=>{e.tweens.add({targets:t.image,alpha:0,ease:"Power1",duration:500,onComplete:()=>{t.image.destroy(),t.state=n,i()}})})}}(e,this.getTileX(t),this.getTileY(i),t,i,this.onTileSelect)}getTileDrop(e,t,i,l){return t.updatePosition(e,this.getTileX(i),this.getTileY(l),i,l)}getTileX(e){return this.offsetX+this.tileSize*e}getTileY(e){return this.offsetY+this.tileSize*e-this.playAreaOffset}}(10,10,50,50,50,function(e,t){if(o.isActionRunning())return;if(0===h.length)return h.push(t),void t.activate();if(1===h.length){const i=h[0],l=Math.abs(i.tileGridX-t.tileGridX),r=Math.abs(i.tileGridY-t.tileGridY);if(1===l&&0===r||0===l&&1===r){h.push(t);let i=h[0],l=h[1];u.swapTiles(e,i,l),o.push(()=>(u.hasMatches(i.tileGridX,i.tileGridY)||u.hasMatches(l.tileGridX,l.tileGridY)||u.swapTiles(e,i,l),Promise.resolve())),h.forEach(e=>{e.deactivate()}),h=[]}}},o)}]);
//# sourceMappingURL=bundle.js.map