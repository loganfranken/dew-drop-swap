!function(t){var e={};function i(l){if(e[l])return e[l].exports;var s=e[l]={i:l,l:!1,exports:{}};return t[l].call(s.exports,s,s.exports,i),s.l=!0,s.exports}i.m=t,i.c=e,i.d=function(t,e,l){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:l})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var l=Object.create(null);if(i.r(l),Object.defineProperty(l,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)i.d(l,s,function(e){return t[e]}.bind(null,s));return l},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=0)}([function(t,e,i){"use strict";i.r(e);const l=t=>t[Math.floor(Math.random()*t.length)];var s=class{constructor(t,e,i,l,s,r){this.tileType=t,this.x=e,this.y=i,this.tileGridX=l,this.tileGridY=s,this.onTileSelect=r,this.image=null}create(t){this.image=t.add.image(this.x,this.y,this.tileType.imageKey),this.image.setInteractive(),this.image.on("pointerdown",()=>{this.onTileSelect(this)})}activate(){this.image.setTintFill(16777215)}deactivate(){this.image.clearTint()}updatePosition(t,e,i,l){this.x=t,this.y=e,this.tileGridX=i,this.tileGridY=l,this.image.x=t,this.image.y=e}},r=[{imageKey:"tile_01"},{imageKey:"tile_02"},{imageKey:"tile_03"},{imageKey:"tile_04"}];const n={type:Phaser.AUTO,width:800,height:600,scene:{preload:function(){this.load.image("tile_01","assets/tile_01.png"),this.load.image("tile_02","assets/tile_02.png"),this.load.image("tile_03","assets/tile_03.png"),this.load.image("tile_04","assets/tile_04.png")},create:function(){o.create(this)},update:function(){}}},o=(new Phaser.Game(n),new class{constructor(t,e,i,n,o){this.offsetX=i,this.offsetY=n,this.tileHeight=e,this.tileWidth=t,this.tileGrid=[],this.onTileSelect=o;for(let i=0;i<e;i++){this.tileGrid[i]=[];for(let e=0;e<t;e++)this.tileGrid[i][e]=new s(l(r),this.offsetX+50*e,this.offsetY+50*i,e,i,this.onTileSelect)}}create(t){this.forEachTile(e=>e.create(t))}swapTiles(t,e){let i=t.x,l=t.y,s=t.tileGridX,r=t.tileGridY,n=e.x,o=e.y,a=e.tileGridX,h=e.tileGridY;e.updatePosition(i,l,s,r),this.tileGrid[r][s]=e,t.updatePosition(n,o,a,h),this.tileGrid[h][a]=t}getMatches(){const t=this,e=[];return t.forEachTile((i,l,s)=>{const r=i.tileType,n=[],o=[];let a=l+1;for(;a<t.tileWidth&&r===t.tileGrid[s][a].tileType;)n.push(t.tileGrid[s][a]),a++;for(a=l-1;a>0&&r===t.tileGrid[s][a].tileType;)n.push(t.tileGrid[s][a]),a--;let h=s+1;for(;h<t.tileHeight&&r===t.tileGrid[h][l].tileType;)o.push(t.tileGrid[h][l]),h++;for(h=s-1;h>0&&r===t.tileGrid[h][l].tileType;)o.push(t.tileGrid[h][l]),h--;o.length>1&&e.push(...o),n.length>1&&e.push(...n),(o.length>1||n.length>1)&&e.push(i)}),e}forEachTile(t){for(let e=0;e<this.tileHeight;e++)for(let i=0;i<this.tileWidth;i++)t(this.tileGrid[e][i],i,e)}}(10,10,50,50,function(t){if(a.push(t),2===a.length){o.swapTiles(...a),a.forEach(t=>{t.deactivate()}),a=[];const t=o.getMatches();t.forEach(t=>t.activate())}}));let a=[]}]);
//# sourceMappingURL=bundle.js.map