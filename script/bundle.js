!function(e){var t={};function i(l){if(t[l])return t[l].exports;var n=t[l]={i:l,l:!1,exports:{}};return e[l].call(n.exports,n,n.exports,i),n.l=!0,n.exports}i.m=e,i.c=t,i.d=function(e,t,l){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:l})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var l=Object.create(null);if(i.r(l),Object.defineProperty(l,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)i.d(l,n,function(t){return e[t]}.bind(null,n));return l},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=0)}([function(e,t,i){"use strict";i.r(t);const l=e=>e[Math.floor(Math.random()*e.length)];var n=0,s=1,r=class{constructor(e,t,i,l,s,r){this.tileType=e,this.x=t,this.y=i,this.tileGridX=l,this.tileGridY=s,this.onTileSelect=r,this.image=null,this.state=n}create(e){this.image=e.add.image(this.x,this.y,this.tileType.imageKey),this.image.setInteractive(),this.image.on("pointerdown",()=>{this.onTileSelect(e,this)})}activate(){this.image.setTintFill(16777215)}deactivate(){this.image.clearTint()}updatePosition(e,t,i,l,n){let s=this;return new Promise((r,a)=>{s.x=t,s.y=i,s.tileGridX=l,s.tileGridY=n,e.tweens.add({targets:s.image,x:t,y:i,ease:"Power1",duration:5e3,onComplete:()=>{r()}})})}destroy(){this.image.destroy(),this.state=s}},a=[{name:"Blue",imageKey:"tile_01"},{name:"Green",imageKey:"tile_02"},{name:"Red",imageKey:"tile_03"},{name:"Yellow",imageKey:"tile_04"}];const o={type:Phaser.AUTO,width:800,height:600,scene:{preload:function(){this.load.image("tile_01","assets/tile_01.png"),this.load.image("tile_02","assets/tile_02.png"),this.load.image("tile_03","assets/tile_03.png"),this.load.image("tile_04","assets/tile_04.png")},create:function(){c.create(this)},update:function(){if(null!=u)return void console.log("Letting something finish...");if(h.length>0)return void(u=h.shift())().then(()=>{u=null});c.update(this)}}},h=(new Phaser.Game(o),[]);let u=null,d=[];const c=new class{constructor(e,t,i,n,s){this.offsetX=i,this.offsetY=n,this.tileHeight=t,this.tileWidth=e,this.tileGrid=[],this.onTileSelect=s;for(let i=0;i<t;i++){this.tileGrid[i]=[];for(let t=0;t<e;t++){const e=i<1?null:this.tileGrid[i-1][t],n=t<1?null:this.tileGrid[i][t-1],s=l(a.filter(t=>!(null!==e&&t.name===e.tileType.name||null!==n&&t.name===n.tileType.name)));this.tileGrid[i][t]=new r(s,this.offsetX+50*t,this.offsetY+50*i,t,i,this.onTileSelect)}}}create(e){this.forEachTile(t=>t.create(e))}update(e){const t=this;t.getMatches().forEach(e=>e.destroy())}swapTiles(e,t,i){let l=this;return new Promise((n,s)=>{let r=t.x,a=t.y,o=t.tileGridX,h=t.tileGridY,u=i.x,d=i.y,c=i.tileGridX,f=i.tileGridY,p=i.updatePosition(e,r,a,o,h);l.tileGrid[h][o]=i;let g=t.updatePosition(e,u,d,c,f);l.tileGrid[f][c]=t,Promise.all([p,g]).then(n)})}hasMatches(e,t){return this.getMatches(e,t).length>0}getMatches(e,t){const i=this,l=[];return i.forEachTile((n,s,r)=>{if(void 0!==e&&s!==e&&void 0!==t&&r!==t)return;const a=n.tileType,o=[],h=[];let u=s+1;for(;u<i.tileWidth;){const e=i.tileGrid[r][u];if(null==e||a.name!==e.tileType.name)break;o.push(e),u++}for(u=s-1;u>0;){const e=i.tileGrid[r][u];if(null==e||a.name!==e.tileType.name)break;o.push(e),u--}let d=r+1;for(;d<i.tileHeight;){const e=i.tileGrid[d][s];if(null==e||a.name!==e.tileType.name)break;h.push(e),d++}for(d=r-1;d>0;){const e=i.tileGrid[d][s];if(null==e||a!==e.tileType)break;h.push(e),d--}h.length>1&&l.push(...h),o.length>1&&l.push(...o),(h.length>1||o.length>1)&&l.push(n)}),l}forEachTile(e){for(let t=0;t<this.tileHeight;t++)for(let i=0;i<this.tileWidth;i++)null!=this.tileGrid[t][i]&&e(this.tileGrid[t][i],i,t)}}(10,10,50,50,function(e,t){if(0===d.length)return d.push(t),void t.activate();if(1===d.length){const i=d[0],l=Math.abs(i.tileGridX-t.tileGridX),n=Math.abs(i.tileGridY-t.tileGridY);if(1===l&&0===n||0===l&&1===n){d.push(t);let i=d[0],l=d[1];h.push(()=>c.swapTiles(e,i,l)),d.forEach(e=>{e.deactivate()}),d=[]}}})}]);
//# sourceMappingURL=bundle.js.map